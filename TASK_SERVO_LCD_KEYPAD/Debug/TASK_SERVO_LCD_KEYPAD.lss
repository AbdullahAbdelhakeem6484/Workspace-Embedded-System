
TASK_SERVO_LCD_KEYPAD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000049d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000049d2  00004a46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000029f4  00000000  00000000  00004a68  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000adf  00000000  00000000  0000745c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00007f3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  0000809b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  0000822a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  0000a26f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  0000b370  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000c2f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000c474  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000c736  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000cfc4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ed       	ldi	r30, 0xD2	; 210
      68:	f9 e4       	ldi	r31, 0x49	; 73
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 38       	cpi	r26, 0x80	; 128
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <main>
      7a:	0c 94 e7 24 	jmp	0x49ce	; 0x49ce <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b0 24 	jmp	0x4960	; 0x4960 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a7 e7       	ldi	r26, 0x77	; 119
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 cc 24 	jmp	0x4998	; 0x4998 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b0 24 	jmp	0x4960	; 0x4960 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	87 e7       	ldi	r24, 0x77	; 119
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 cc 24 	jmp	0x4998	; 0x4998 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 b8 24 	jmp	0x4970	; 0x4970 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	67 e7       	ldi	r22, 0x77	; 119
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 d4 24 	jmp	0x49a8	; 0x49a8 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 bc 24 	jmp	0x4978	; 0x4978 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 c0 24 	jmp	0x4980	; 0x4980 <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 dc 24 	jmp	0x49b8	; 0x49b8 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <DIO_voidSetPinDir>:




void DIO_voidSetPinDir(u8 Port,u8 Pin,u8 Dir)
{
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	00 d0       	rcall	.+0      	; 0xc94 <DIO_voidSetPinDir+0x6>
     c94:	00 d0       	rcall	.+0      	; 0xc96 <DIO_voidSetPinDir+0x8>
     c96:	0f 92       	push	r0
     c98:	cd b7       	in	r28, 0x3d	; 61
     c9a:	de b7       	in	r29, 0x3e	; 62
     c9c:	89 83       	std	Y+1, r24	; 0x01
     c9e:	6a 83       	std	Y+2, r22	; 0x02
     ca0:	4b 83       	std	Y+3, r20	; 0x03

switch(Port)
     ca2:	89 81       	ldd	r24, Y+1	; 0x01
     ca4:	28 2f       	mov	r18, r24
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	3d 83       	std	Y+5, r19	; 0x05
     caa:	2c 83       	std	Y+4, r18	; 0x04
     cac:	8c 81       	ldd	r24, Y+4	; 0x04
     cae:	9d 81       	ldd	r25, Y+5	; 0x05
     cb0:	81 30       	cpi	r24, 0x01	; 1
     cb2:	91 05       	cpc	r25, r1
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <DIO_voidSetPinDir+0x2a>
     cb6:	43 c0       	rjmp	.+134    	; 0xd3e <DIO_voidSetPinDir+0xb0>
     cb8:	2c 81       	ldd	r18, Y+4	; 0x04
     cba:	3d 81       	ldd	r19, Y+5	; 0x05
     cbc:	22 30       	cpi	r18, 0x02	; 2
     cbe:	31 05       	cpc	r19, r1
     cc0:	2c f4       	brge	.+10     	; 0xccc <DIO_voidSetPinDir+0x3e>
     cc2:	8c 81       	ldd	r24, Y+4	; 0x04
     cc4:	9d 81       	ldd	r25, Y+5	; 0x05
     cc6:	00 97       	sbiw	r24, 0x00	; 0
     cc8:	71 f0       	breq	.+28     	; 0xce6 <DIO_voidSetPinDir+0x58>
     cca:	bc c0       	rjmp	.+376    	; 0xe44 <DIO_voidSetPinDir+0x1b6>
     ccc:	2c 81       	ldd	r18, Y+4	; 0x04
     cce:	3d 81       	ldd	r19, Y+5	; 0x05
     cd0:	22 30       	cpi	r18, 0x02	; 2
     cd2:	31 05       	cpc	r19, r1
     cd4:	09 f4       	brne	.+2      	; 0xcd8 <DIO_voidSetPinDir+0x4a>
     cd6:	5f c0       	rjmp	.+190    	; 0xd96 <DIO_voidSetPinDir+0x108>
     cd8:	8c 81       	ldd	r24, Y+4	; 0x04
     cda:	9d 81       	ldd	r25, Y+5	; 0x05
     cdc:	83 30       	cpi	r24, 0x03	; 3
     cde:	91 05       	cpc	r25, r1
     ce0:	09 f4       	brne	.+2      	; 0xce4 <DIO_voidSetPinDir+0x56>
     ce2:	85 c0       	rjmp	.+266    	; 0xdee <DIO_voidSetPinDir+0x160>
     ce4:	af c0       	rjmp	.+350    	; 0xe44 <DIO_voidSetPinDir+0x1b6>
{
	case 0:
		if(Dir==0)
     ce6:	8b 81       	ldd	r24, Y+3	; 0x03
     ce8:	88 23       	and	r24, r24
     cea:	a9 f4       	brne	.+42     	; 0xd16 <DIO_voidSetPinDir+0x88>
		{
			CLEAR_BIT(DDRA,Pin);
     cec:	aa e3       	ldi	r26, 0x3A	; 58
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	ea e3       	ldi	r30, 0x3A	; 58
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	48 2f       	mov	r20, r24
     cf8:	8a 81       	ldd	r24, Y+2	; 0x02
     cfa:	28 2f       	mov	r18, r24
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	02 2e       	mov	r0, r18
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <DIO_voidSetPinDir+0x7c>
     d06:	88 0f       	add	r24, r24
     d08:	99 1f       	adc	r25, r25
     d0a:	0a 94       	dec	r0
     d0c:	e2 f7       	brpl	.-8      	; 0xd06 <DIO_voidSetPinDir+0x78>
     d0e:	80 95       	com	r24
     d10:	84 23       	and	r24, r20
     d12:	8c 93       	st	X, r24
     d14:	97 c0       	rjmp	.+302    	; 0xe44 <DIO_voidSetPinDir+0x1b6>

		}
		else
		{
			SET_BIT(DDRA,Pin);
     d16:	aa e3       	ldi	r26, 0x3A	; 58
     d18:	b0 e0       	ldi	r27, 0x00	; 0
     d1a:	ea e3       	ldi	r30, 0x3A	; 58
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	80 81       	ld	r24, Z
     d20:	48 2f       	mov	r20, r24
     d22:	8a 81       	ldd	r24, Y+2	; 0x02
     d24:	28 2f       	mov	r18, r24
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	02 2e       	mov	r0, r18
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <DIO_voidSetPinDir+0xa6>
     d30:	88 0f       	add	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	0a 94       	dec	r0
     d36:	e2 f7       	brpl	.-8      	; 0xd30 <DIO_voidSetPinDir+0xa2>
     d38:	84 2b       	or	r24, r20
     d3a:	8c 93       	st	X, r24
     d3c:	83 c0       	rjmp	.+262    	; 0xe44 <DIO_voidSetPinDir+0x1b6>



		break;
	case 1:
		if(Dir==0)
     d3e:	8b 81       	ldd	r24, Y+3	; 0x03
     d40:	88 23       	and	r24, r24
     d42:	a9 f4       	brne	.+42     	; 0xd6e <DIO_voidSetPinDir+0xe0>
				{
					CLEAR_BIT(DDRB,Pin);
     d44:	a7 e3       	ldi	r26, 0x37	; 55
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e7 e3       	ldi	r30, 0x37	; 55
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	48 2f       	mov	r20, r24
     d50:	8a 81       	ldd	r24, Y+2	; 0x02
     d52:	28 2f       	mov	r18, r24
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	02 2e       	mov	r0, r18
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <DIO_voidSetPinDir+0xd4>
     d5e:	88 0f       	add	r24, r24
     d60:	99 1f       	adc	r25, r25
     d62:	0a 94       	dec	r0
     d64:	e2 f7       	brpl	.-8      	; 0xd5e <DIO_voidSetPinDir+0xd0>
     d66:	80 95       	com	r24
     d68:	84 23       	and	r24, r20
     d6a:	8c 93       	st	X, r24
     d6c:	6b c0       	rjmp	.+214    	; 0xe44 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRB,Pin);
     d6e:	a7 e3       	ldi	r26, 0x37	; 55
     d70:	b0 e0       	ldi	r27, 0x00	; 0
     d72:	e7 e3       	ldi	r30, 0x37	; 55
     d74:	f0 e0       	ldi	r31, 0x00	; 0
     d76:	80 81       	ld	r24, Z
     d78:	48 2f       	mov	r20, r24
     d7a:	8a 81       	ldd	r24, Y+2	; 0x02
     d7c:	28 2f       	mov	r18, r24
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	02 2e       	mov	r0, r18
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <DIO_voidSetPinDir+0xfe>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	0a 94       	dec	r0
     d8e:	e2 f7       	brpl	.-8      	; 0xd88 <DIO_voidSetPinDir+0xfa>
     d90:	84 2b       	or	r24, r20
     d92:	8c 93       	st	X, r24
     d94:	57 c0       	rjmp	.+174    	; 0xe44 <DIO_voidSetPinDir+0x1b6>
				}


		break;
	case 2:
		if(Dir==0)
     d96:	8b 81       	ldd	r24, Y+3	; 0x03
     d98:	88 23       	and	r24, r24
     d9a:	a9 f4       	brne	.+42     	; 0xdc6 <DIO_voidSetPinDir+0x138>
				{
					CLEAR_BIT(DDRC,Pin);
     d9c:	a4 e3       	ldi	r26, 0x34	; 52
     d9e:	b0 e0       	ldi	r27, 0x00	; 0
     da0:	e4 e3       	ldi	r30, 0x34	; 52
     da2:	f0 e0       	ldi	r31, 0x00	; 0
     da4:	80 81       	ld	r24, Z
     da6:	48 2f       	mov	r20, r24
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	28 2f       	mov	r18, r24
     dac:	30 e0       	ldi	r19, 0x00	; 0
     dae:	81 e0       	ldi	r24, 0x01	; 1
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	02 2e       	mov	r0, r18
     db4:	02 c0       	rjmp	.+4      	; 0xdba <DIO_voidSetPinDir+0x12c>
     db6:	88 0f       	add	r24, r24
     db8:	99 1f       	adc	r25, r25
     dba:	0a 94       	dec	r0
     dbc:	e2 f7       	brpl	.-8      	; 0xdb6 <DIO_voidSetPinDir+0x128>
     dbe:	80 95       	com	r24
     dc0:	84 23       	and	r24, r20
     dc2:	8c 93       	st	X, r24
     dc4:	3f c0       	rjmp	.+126    	; 0xe44 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRC,Pin);
     dc6:	a4 e3       	ldi	r26, 0x34	; 52
     dc8:	b0 e0       	ldi	r27, 0x00	; 0
     dca:	e4 e3       	ldi	r30, 0x34	; 52
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	48 2f       	mov	r20, r24
     dd2:	8a 81       	ldd	r24, Y+2	; 0x02
     dd4:	28 2f       	mov	r18, r24
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	02 2e       	mov	r0, r18
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <DIO_voidSetPinDir+0x156>
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	0a 94       	dec	r0
     de6:	e2 f7       	brpl	.-8      	; 0xde0 <DIO_voidSetPinDir+0x152>
     de8:	84 2b       	or	r24, r20
     dea:	8c 93       	st	X, r24
     dec:	2b c0       	rjmp	.+86     	; 0xe44 <DIO_voidSetPinDir+0x1b6>


		break;

	case 3:
		if(Dir==0)
     dee:	8b 81       	ldd	r24, Y+3	; 0x03
     df0:	88 23       	and	r24, r24
     df2:	a9 f4       	brne	.+42     	; 0xe1e <DIO_voidSetPinDir+0x190>
				{
					CLEAR_BIT(DDRD,Pin);
     df4:	a1 e3       	ldi	r26, 0x31	; 49
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	e1 e3       	ldi	r30, 0x31	; 49
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	48 2f       	mov	r20, r24
     e00:	8a 81       	ldd	r24, Y+2	; 0x02
     e02:	28 2f       	mov	r18, r24
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	02 2e       	mov	r0, r18
     e0c:	02 c0       	rjmp	.+4      	; 0xe12 <DIO_voidSetPinDir+0x184>
     e0e:	88 0f       	add	r24, r24
     e10:	99 1f       	adc	r25, r25
     e12:	0a 94       	dec	r0
     e14:	e2 f7       	brpl	.-8      	; 0xe0e <DIO_voidSetPinDir+0x180>
     e16:	80 95       	com	r24
     e18:	84 23       	and	r24, r20
     e1a:	8c 93       	st	X, r24
     e1c:	13 c0       	rjmp	.+38     	; 0xe44 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRD,Pin);
     e1e:	a1 e3       	ldi	r26, 0x31	; 49
     e20:	b0 e0       	ldi	r27, 0x00	; 0
     e22:	e1 e3       	ldi	r30, 0x31	; 49
     e24:	f0 e0       	ldi	r31, 0x00	; 0
     e26:	80 81       	ld	r24, Z
     e28:	48 2f       	mov	r20, r24
     e2a:	8a 81       	ldd	r24, Y+2	; 0x02
     e2c:	28 2f       	mov	r18, r24
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	02 2e       	mov	r0, r18
     e36:	02 c0       	rjmp	.+4      	; 0xe3c <DIO_voidSetPinDir+0x1ae>
     e38:	88 0f       	add	r24, r24
     e3a:	99 1f       	adc	r25, r25
     e3c:	0a 94       	dec	r0
     e3e:	e2 f7       	brpl	.-8      	; 0xe38 <DIO_voidSetPinDir+0x1aa>
     e40:	84 2b       	or	r24, r20
     e42:	8c 93       	st	X, r24

		break;
}


}
     e44:	0f 90       	pop	r0
     e46:	0f 90       	pop	r0
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	0f 90       	pop	r0
     e4e:	cf 91       	pop	r28
     e50:	df 91       	pop	r29
     e52:	08 95       	ret

00000e54 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Port,u8 Pin,u8 Value)
{
     e54:	df 93       	push	r29
     e56:	cf 93       	push	r28
     e58:	00 d0       	rcall	.+0      	; 0xe5a <DIO_voidSetPinValue+0x6>
     e5a:	00 d0       	rcall	.+0      	; 0xe5c <DIO_voidSetPinValue+0x8>
     e5c:	0f 92       	push	r0
     e5e:	cd b7       	in	r28, 0x3d	; 61
     e60:	de b7       	in	r29, 0x3e	; 62
     e62:	89 83       	std	Y+1, r24	; 0x01
     e64:	6a 83       	std	Y+2, r22	; 0x02
     e66:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
     e68:	89 81       	ldd	r24, Y+1	; 0x01
     e6a:	28 2f       	mov	r18, r24
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	3d 83       	std	Y+5, r19	; 0x05
     e70:	2c 83       	std	Y+4, r18	; 0x04
     e72:	8c 81       	ldd	r24, Y+4	; 0x04
     e74:	9d 81       	ldd	r25, Y+5	; 0x05
     e76:	81 30       	cpi	r24, 0x01	; 1
     e78:	91 05       	cpc	r25, r1
     e7a:	09 f4       	brne	.+2      	; 0xe7e <DIO_voidSetPinValue+0x2a>
     e7c:	43 c0       	rjmp	.+134    	; 0xf04 <DIO_voidSetPinValue+0xb0>
     e7e:	2c 81       	ldd	r18, Y+4	; 0x04
     e80:	3d 81       	ldd	r19, Y+5	; 0x05
     e82:	22 30       	cpi	r18, 0x02	; 2
     e84:	31 05       	cpc	r19, r1
     e86:	2c f4       	brge	.+10     	; 0xe92 <DIO_voidSetPinValue+0x3e>
     e88:	8c 81       	ldd	r24, Y+4	; 0x04
     e8a:	9d 81       	ldd	r25, Y+5	; 0x05
     e8c:	00 97       	sbiw	r24, 0x00	; 0
     e8e:	71 f0       	breq	.+28     	; 0xeac <DIO_voidSetPinValue+0x58>
     e90:	bc c0       	rjmp	.+376    	; 0x100a <DIO_voidSetPinValue+0x1b6>
     e92:	2c 81       	ldd	r18, Y+4	; 0x04
     e94:	3d 81       	ldd	r19, Y+5	; 0x05
     e96:	22 30       	cpi	r18, 0x02	; 2
     e98:	31 05       	cpc	r19, r1
     e9a:	09 f4       	brne	.+2      	; 0xe9e <DIO_voidSetPinValue+0x4a>
     e9c:	5f c0       	rjmp	.+190    	; 0xf5c <DIO_voidSetPinValue+0x108>
     e9e:	8c 81       	ldd	r24, Y+4	; 0x04
     ea0:	9d 81       	ldd	r25, Y+5	; 0x05
     ea2:	83 30       	cpi	r24, 0x03	; 3
     ea4:	91 05       	cpc	r25, r1
     ea6:	09 f4       	brne	.+2      	; 0xeaa <DIO_voidSetPinValue+0x56>
     ea8:	85 c0       	rjmp	.+266    	; 0xfb4 <DIO_voidSetPinValue+0x160>
     eaa:	af c0       	rjmp	.+350    	; 0x100a <DIO_voidSetPinValue+0x1b6>
	{
		case 0:
			if(Value==0)
     eac:	8b 81       	ldd	r24, Y+3	; 0x03
     eae:	88 23       	and	r24, r24
     eb0:	a9 f4       	brne	.+42     	; 0xedc <DIO_voidSetPinValue+0x88>
					{
						CLEAR_BIT(PORTA,Pin);
     eb2:	ab e3       	ldi	r26, 0x3B	; 59
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	eb e3       	ldi	r30, 0x3B	; 59
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	48 2f       	mov	r20, r24
     ebe:	8a 81       	ldd	r24, Y+2	; 0x02
     ec0:	28 2f       	mov	r18, r24
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	02 2e       	mov	r0, r18
     eca:	02 c0       	rjmp	.+4      	; 0xed0 <DIO_voidSetPinValue+0x7c>
     ecc:	88 0f       	add	r24, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	0a 94       	dec	r0
     ed2:	e2 f7       	brpl	.-8      	; 0xecc <DIO_voidSetPinValue+0x78>
     ed4:	80 95       	com	r24
     ed6:	84 23       	and	r24, r20
     ed8:	8c 93       	st	X, r24
     eda:	97 c0       	rjmp	.+302    	; 0x100a <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTA,Pin);
     edc:	ab e3       	ldi	r26, 0x3B	; 59
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	eb e3       	ldi	r30, 0x3B	; 59
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	48 2f       	mov	r20, r24
     ee8:	8a 81       	ldd	r24, Y+2	; 0x02
     eea:	28 2f       	mov	r18, r24
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	81 e0       	ldi	r24, 0x01	; 1
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	02 2e       	mov	r0, r18
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <DIO_voidSetPinValue+0xa6>
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	0a 94       	dec	r0
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <DIO_voidSetPinValue+0xa2>
     efe:	84 2b       	or	r24, r20
     f00:	8c 93       	st	X, r24
     f02:	83 c0       	rjmp	.+262    	; 0x100a <DIO_voidSetPinValue+0x1b6>
					}


			break;
		case 1:
			if(Value==0)
     f04:	8b 81       	ldd	r24, Y+3	; 0x03
     f06:	88 23       	and	r24, r24
     f08:	a9 f4       	brne	.+42     	; 0xf34 <DIO_voidSetPinValue+0xe0>
				{
				CLEAR_BIT(PORTB,Pin);
     f0a:	a8 e3       	ldi	r26, 0x38	; 56
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	e8 e3       	ldi	r30, 0x38	; 56
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	80 81       	ld	r24, Z
     f14:	48 2f       	mov	r20, r24
     f16:	8a 81       	ldd	r24, Y+2	; 0x02
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	02 2e       	mov	r0, r18
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <DIO_voidSetPinValue+0xd4>
     f24:	88 0f       	add	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	0a 94       	dec	r0
     f2a:	e2 f7       	brpl	.-8      	; 0xf24 <DIO_voidSetPinValue+0xd0>
     f2c:	80 95       	com	r24
     f2e:	84 23       	and	r24, r20
     f30:	8c 93       	st	X, r24
     f32:	6b c0       	rjmp	.+214    	; 0x100a <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
				SET_BIT(PORTB,Pin);
     f34:	a8 e3       	ldi	r26, 0x38	; 56
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e8 e3       	ldi	r30, 0x38	; 56
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	48 2f       	mov	r20, r24
     f40:	8a 81       	ldd	r24, Y+2	; 0x02
     f42:	28 2f       	mov	r18, r24
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	02 2e       	mov	r0, r18
     f4c:	02 c0       	rjmp	.+4      	; 0xf52 <DIO_voidSetPinValue+0xfe>
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	0a 94       	dec	r0
     f54:	e2 f7       	brpl	.-8      	; 0xf4e <DIO_voidSetPinValue+0xfa>
     f56:	84 2b       	or	r24, r20
     f58:	8c 93       	st	X, r24
     f5a:	57 c0       	rjmp	.+174    	; 0x100a <DIO_voidSetPinValue+0x1b6>
				}

			break;
		case 2:
			if(Value==0)
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	88 23       	and	r24, r24
     f60:	a9 f4       	brne	.+42     	; 0xf8c <DIO_voidSetPinValue+0x138>
				{
				CLEAR_BIT(PORTC,Pin);
     f62:	a5 e3       	ldi	r26, 0x35	; 53
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	e5 e3       	ldi	r30, 0x35	; 53
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	80 81       	ld	r24, Z
     f6c:	48 2f       	mov	r20, r24
     f6e:	8a 81       	ldd	r24, Y+2	; 0x02
     f70:	28 2f       	mov	r18, r24
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	02 2e       	mov	r0, r18
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <DIO_voidSetPinValue+0x12c>
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	0a 94       	dec	r0
     f82:	e2 f7       	brpl	.-8      	; 0xf7c <DIO_voidSetPinValue+0x128>
     f84:	80 95       	com	r24
     f86:	84 23       	and	r24, r20
     f88:	8c 93       	st	X, r24
     f8a:	3f c0       	rjmp	.+126    	; 0x100a <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
					SET_BIT(PORTC,Pin);
     f8c:	a5 e3       	ldi	r26, 0x35	; 53
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	e5 e3       	ldi	r30, 0x35	; 53
     f92:	f0 e0       	ldi	r31, 0x00	; 0
     f94:	80 81       	ld	r24, Z
     f96:	48 2f       	mov	r20, r24
     f98:	8a 81       	ldd	r24, Y+2	; 0x02
     f9a:	28 2f       	mov	r18, r24
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	81 e0       	ldi	r24, 0x01	; 1
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	02 2e       	mov	r0, r18
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <DIO_voidSetPinValue+0x156>
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	0a 94       	dec	r0
     fac:	e2 f7       	brpl	.-8      	; 0xfa6 <DIO_voidSetPinValue+0x152>
     fae:	84 2b       	or	r24, r20
     fb0:	8c 93       	st	X, r24
     fb2:	2b c0       	rjmp	.+86     	; 0x100a <DIO_voidSetPinValue+0x1b6>
				}
			break;

		case 3:
			if(Value==0)
     fb4:	8b 81       	ldd	r24, Y+3	; 0x03
     fb6:	88 23       	and	r24, r24
     fb8:	a9 f4       	brne	.+42     	; 0xfe4 <DIO_voidSetPinValue+0x190>
					{
					CLEAR_BIT(PORTD,Pin);
     fba:	a2 e3       	ldi	r26, 0x32	; 50
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	e2 e3       	ldi	r30, 0x32	; 50
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	80 81       	ld	r24, Z
     fc4:	48 2f       	mov	r20, r24
     fc6:	8a 81       	ldd	r24, Y+2	; 0x02
     fc8:	28 2f       	mov	r18, r24
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	02 2e       	mov	r0, r18
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <DIO_voidSetPinValue+0x184>
     fd4:	88 0f       	add	r24, r24
     fd6:	99 1f       	adc	r25, r25
     fd8:	0a 94       	dec	r0
     fda:	e2 f7       	brpl	.-8      	; 0xfd4 <DIO_voidSetPinValue+0x180>
     fdc:	80 95       	com	r24
     fde:	84 23       	and	r24, r20
     fe0:	8c 93       	st	X, r24
     fe2:	13 c0       	rjmp	.+38     	; 0x100a <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTD,Pin);
     fe4:	a2 e3       	ldi	r26, 0x32	; 50
     fe6:	b0 e0       	ldi	r27, 0x00	; 0
     fe8:	e2 e3       	ldi	r30, 0x32	; 50
     fea:	f0 e0       	ldi	r31, 0x00	; 0
     fec:	80 81       	ld	r24, Z
     fee:	48 2f       	mov	r20, r24
     ff0:	8a 81       	ldd	r24, Y+2	; 0x02
     ff2:	28 2f       	mov	r18, r24
     ff4:	30 e0       	ldi	r19, 0x00	; 0
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	02 2e       	mov	r0, r18
     ffc:	02 c0       	rjmp	.+4      	; 0x1002 <DIO_voidSetPinValue+0x1ae>
     ffe:	88 0f       	add	r24, r24
    1000:	99 1f       	adc	r25, r25
    1002:	0a 94       	dec	r0
    1004:	e2 f7       	brpl	.-8      	; 0xffe <DIO_voidSetPinValue+0x1aa>
    1006:	84 2b       	or	r24, r20
    1008:	8c 93       	st	X, r24

			break;
	}


}
    100a:	0f 90       	pop	r0
    100c:	0f 90       	pop	r0
    100e:	0f 90       	pop	r0
    1010:	0f 90       	pop	r0
    1012:	0f 90       	pop	r0
    1014:	cf 91       	pop	r28
    1016:	df 91       	pop	r29
    1018:	08 95       	ret

0000101a <DIO_voidTogglePinValue>:
void DIO_voidTogglePinValue(u8 Port,u8 Pin)
{
    101a:	df 93       	push	r29
    101c:	cf 93       	push	r28
    101e:	00 d0       	rcall	.+0      	; 0x1020 <DIO_voidTogglePinValue+0x6>
    1020:	00 d0       	rcall	.+0      	; 0x1022 <DIO_voidTogglePinValue+0x8>
    1022:	cd b7       	in	r28, 0x3d	; 61
    1024:	de b7       	in	r29, 0x3e	; 62
    1026:	89 83       	std	Y+1, r24	; 0x01
    1028:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port)
    102a:	89 81       	ldd	r24, Y+1	; 0x01
    102c:	28 2f       	mov	r18, r24
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	3c 83       	std	Y+4, r19	; 0x04
    1032:	2b 83       	std	Y+3, r18	; 0x03
    1034:	8b 81       	ldd	r24, Y+3	; 0x03
    1036:	9c 81       	ldd	r25, Y+4	; 0x04
    1038:	81 30       	cpi	r24, 0x01	; 1
    103a:	91 05       	cpc	r25, r1
    103c:	49 f1       	breq	.+82     	; 0x1090 <DIO_voidTogglePinValue+0x76>
    103e:	2b 81       	ldd	r18, Y+3	; 0x03
    1040:	3c 81       	ldd	r19, Y+4	; 0x04
    1042:	22 30       	cpi	r18, 0x02	; 2
    1044:	31 05       	cpc	r19, r1
    1046:	2c f4       	brge	.+10     	; 0x1052 <DIO_voidTogglePinValue+0x38>
    1048:	8b 81       	ldd	r24, Y+3	; 0x03
    104a:	9c 81       	ldd	r25, Y+4	; 0x04
    104c:	00 97       	sbiw	r24, 0x00	; 0
    104e:	61 f0       	breq	.+24     	; 0x1068 <DIO_voidTogglePinValue+0x4e>
    1050:	5a c0       	rjmp	.+180    	; 0x1106 <DIO_voidTogglePinValue+0xec>
    1052:	2b 81       	ldd	r18, Y+3	; 0x03
    1054:	3c 81       	ldd	r19, Y+4	; 0x04
    1056:	22 30       	cpi	r18, 0x02	; 2
    1058:	31 05       	cpc	r19, r1
    105a:	71 f1       	breq	.+92     	; 0x10b8 <DIO_voidTogglePinValue+0x9e>
    105c:	8b 81       	ldd	r24, Y+3	; 0x03
    105e:	9c 81       	ldd	r25, Y+4	; 0x04
    1060:	83 30       	cpi	r24, 0x03	; 3
    1062:	91 05       	cpc	r25, r1
    1064:	e9 f1       	breq	.+122    	; 0x10e0 <DIO_voidTogglePinValue+0xc6>
    1066:	4f c0       	rjmp	.+158    	; 0x1106 <DIO_voidTogglePinValue+0xec>
	{
	case 0:
		TOGGLE_BIT(PORTA,Pin);
    1068:	ab e3       	ldi	r26, 0x3B	; 59
    106a:	b0 e0       	ldi	r27, 0x00	; 0
    106c:	eb e3       	ldi	r30, 0x3B	; 59
    106e:	f0 e0       	ldi	r31, 0x00	; 0
    1070:	80 81       	ld	r24, Z
    1072:	48 2f       	mov	r20, r24
    1074:	8a 81       	ldd	r24, Y+2	; 0x02
    1076:	28 2f       	mov	r18, r24
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	02 2e       	mov	r0, r18
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <DIO_voidTogglePinValue+0x6c>
    1082:	88 0f       	add	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	0a 94       	dec	r0
    1088:	e2 f7       	brpl	.-8      	; 0x1082 <DIO_voidTogglePinValue+0x68>
    108a:	84 27       	eor	r24, r20
    108c:	8c 93       	st	X, r24
    108e:	3b c0       	rjmp	.+118    	; 0x1106 <DIO_voidTogglePinValue+0xec>

		break;
	case 1:
		TOGGLE_BIT(PORTB,Pin);
    1090:	a8 e3       	ldi	r26, 0x38	; 56
    1092:	b0 e0       	ldi	r27, 0x00	; 0
    1094:	e8 e3       	ldi	r30, 0x38	; 56
    1096:	f0 e0       	ldi	r31, 0x00	; 0
    1098:	80 81       	ld	r24, Z
    109a:	48 2f       	mov	r20, r24
    109c:	8a 81       	ldd	r24, Y+2	; 0x02
    109e:	28 2f       	mov	r18, r24
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	02 2e       	mov	r0, r18
    10a8:	02 c0       	rjmp	.+4      	; 0x10ae <DIO_voidTogglePinValue+0x94>
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	0a 94       	dec	r0
    10b0:	e2 f7       	brpl	.-8      	; 0x10aa <DIO_voidTogglePinValue+0x90>
    10b2:	84 27       	eor	r24, r20
    10b4:	8c 93       	st	X, r24
    10b6:	27 c0       	rjmp	.+78     	; 0x1106 <DIO_voidTogglePinValue+0xec>

		break;
	case 2:
		TOGGLE_BIT(PORTC,Pin);
    10b8:	a5 e3       	ldi	r26, 0x35	; 53
    10ba:	b0 e0       	ldi	r27, 0x00	; 0
    10bc:	e5 e3       	ldi	r30, 0x35	; 53
    10be:	f0 e0       	ldi	r31, 0x00	; 0
    10c0:	80 81       	ld	r24, Z
    10c2:	48 2f       	mov	r20, r24
    10c4:	8a 81       	ldd	r24, Y+2	; 0x02
    10c6:	28 2f       	mov	r18, r24
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	81 e0       	ldi	r24, 0x01	; 1
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	02 2e       	mov	r0, r18
    10d0:	02 c0       	rjmp	.+4      	; 0x10d6 <DIO_voidTogglePinValue+0xbc>
    10d2:	88 0f       	add	r24, r24
    10d4:	99 1f       	adc	r25, r25
    10d6:	0a 94       	dec	r0
    10d8:	e2 f7       	brpl	.-8      	; 0x10d2 <DIO_voidTogglePinValue+0xb8>
    10da:	84 27       	eor	r24, r20
    10dc:	8c 93       	st	X, r24
    10de:	13 c0       	rjmp	.+38     	; 0x1106 <DIO_voidTogglePinValue+0xec>

		break;

	case 3:
		TOGGLE_BIT(PORTD,Pin);
    10e0:	a2 e3       	ldi	r26, 0x32	; 50
    10e2:	b0 e0       	ldi	r27, 0x00	; 0
    10e4:	e2 e3       	ldi	r30, 0x32	; 50
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	48 2f       	mov	r20, r24
    10ec:	8a 81       	ldd	r24, Y+2	; 0x02
    10ee:	28 2f       	mov	r18, r24
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	02 2e       	mov	r0, r18
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <DIO_voidTogglePinValue+0xe4>
    10fa:	88 0f       	add	r24, r24
    10fc:	99 1f       	adc	r25, r25
    10fe:	0a 94       	dec	r0
    1100:	e2 f7       	brpl	.-8      	; 0x10fa <DIO_voidTogglePinValue+0xe0>
    1102:	84 27       	eor	r24, r20
    1104:	8c 93       	st	X, r24

		break;

	}

}
    1106:	0f 90       	pop	r0
    1108:	0f 90       	pop	r0
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	cf 91       	pop	r28
    1110:	df 91       	pop	r29
    1112:	08 95       	ret

00001114 <LCD_voidInit>:
#include "DIO_interface.h"
#include "LCD_interface.h"
#include "LCD_config.h"

void LCD_voidInit(void)
{
    1114:	df 93       	push	r29
    1116:	cf 93       	push	r28
    1118:	cd b7       	in	r28, 0x3d	; 61
    111a:	de b7       	in	r29, 0x3e	; 62
    111c:	aa 97       	sbiw	r28, 0x2a	; 42
    111e:	0f b6       	in	r0, 0x3f	; 63
    1120:	f8 94       	cli
    1122:	de bf       	out	0x3e, r29	; 62
    1124:	0f be       	out	0x3f, r0	; 63
    1126:	cd bf       	out	0x3d, r28	; 61



	DIO_voidSetPinDir(D0_PORT,D0_PIN,OUTPUT);
    1128:	83 e0       	ldi	r24, 0x03	; 3
    112a:	60 e0       	ldi	r22, 0x00	; 0
    112c:	41 e0       	ldi	r20, 0x01	; 1
    112e:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D1_PORT,D1_PIN,OUTPUT);
    1132:	83 e0       	ldi	r24, 0x03	; 3
    1134:	61 e0       	ldi	r22, 0x01	; 1
    1136:	41 e0       	ldi	r20, 0x01	; 1
    1138:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D2_PORT,D2_PIN,OUTPUT);
    113c:	83 e0       	ldi	r24, 0x03	; 3
    113e:	62 e0       	ldi	r22, 0x02	; 2
    1140:	41 e0       	ldi	r20, 0x01	; 1
    1142:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D3_PORT,D3_PIN,OUTPUT);
    1146:	83 e0       	ldi	r24, 0x03	; 3
    1148:	63 e0       	ldi	r22, 0x03	; 3
    114a:	41 e0       	ldi	r20, 0x01	; 1
    114c:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D4_PORT,D4_PIN,OUTPUT);
    1150:	83 e0       	ldi	r24, 0x03	; 3
    1152:	64 e0       	ldi	r22, 0x04	; 4
    1154:	41 e0       	ldi	r20, 0x01	; 1
    1156:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D5_PORT,D5_PIN,OUTPUT);
    115a:	83 e0       	ldi	r24, 0x03	; 3
    115c:	65 e0       	ldi	r22, 0x05	; 5
    115e:	41 e0       	ldi	r20, 0x01	; 1
    1160:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D6_PORT,D6_PIN,OUTPUT);
    1164:	83 e0       	ldi	r24, 0x03	; 3
    1166:	66 e0       	ldi	r22, 0x06	; 6
    1168:	41 e0       	ldi	r20, 0x01	; 1
    116a:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D7_PORT,D7_PIN,OUTPUT);
    116e:	83 e0       	ldi	r24, 0x03	; 3
    1170:	67 e0       	ldi	r22, 0x07	; 7
    1172:	41 e0       	ldi	r20, 0x01	; 1
    1174:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>

	DIO_voidSetPinDir(RS_PORT,RS_PIN,OUTPUT);
    1178:	81 e0       	ldi	r24, 0x01	; 1
    117a:	60 e0       	ldi	r22, 0x00	; 0
    117c:	41 e0       	ldi	r20, 0x01	; 1
    117e:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(RW_PORT,RW_PIN,OUTPUT);
    1182:	81 e0       	ldi	r24, 0x01	; 1
    1184:	61 e0       	ldi	r22, 0x01	; 1
    1186:	41 e0       	ldi	r20, 0x01	; 1
    1188:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(EN_PORT,EN_PIN,OUTPUT);
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	62 e0       	ldi	r22, 0x02	; 2
    1190:	41 e0       	ldi	r20, 0x01	; 1
    1192:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>

	LCD_voidSendCommand(0x38);    //turn on
    1196:	88 e3       	ldi	r24, 0x38	; 56
    1198:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	a0 ea       	ldi	r26, 0xA0	; 160
    11a2:	b0 e4       	ldi	r27, 0x40	; 64
    11a4:	8f a3       	std	Y+39, r24	; 0x27
    11a6:	98 a7       	std	Y+40, r25	; 0x28
    11a8:	a9 a7       	std	Y+41, r26	; 0x29
    11aa:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11ac:	6f a1       	ldd	r22, Y+39	; 0x27
    11ae:	78 a5       	ldd	r23, Y+40	; 0x28
    11b0:	89 a5       	ldd	r24, Y+41	; 0x29
    11b2:	9a a5       	ldd	r25, Y+42	; 0x2a
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	30 e8       	ldi	r19, 0x80	; 128
    11b8:	4b e3       	ldi	r20, 0x3B	; 59
    11ba:	55 e4       	ldi	r21, 0x45	; 69
    11bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11c0:	dc 01       	movw	r26, r24
    11c2:	cb 01       	movw	r24, r22
    11c4:	8b a3       	std	Y+35, r24	; 0x23
    11c6:	9c a3       	std	Y+36, r25	; 0x24
    11c8:	ad a3       	std	Y+37, r26	; 0x25
    11ca:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    11cc:	6b a1       	ldd	r22, Y+35	; 0x23
    11ce:	7c a1       	ldd	r23, Y+36	; 0x24
    11d0:	8d a1       	ldd	r24, Y+37	; 0x25
    11d2:	9e a1       	ldd	r25, Y+38	; 0x26
    11d4:	20 e0       	ldi	r18, 0x00	; 0
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	40 e8       	ldi	r20, 0x80	; 128
    11da:	5f e3       	ldi	r21, 0x3F	; 63
    11dc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    11e0:	88 23       	and	r24, r24
    11e2:	2c f4       	brge	.+10     	; 0x11ee <LCD_voidInit+0xda>
		__ticks = 1;
    11e4:	81 e0       	ldi	r24, 0x01	; 1
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	9a a3       	std	Y+34, r25	; 0x22
    11ea:	89 a3       	std	Y+33, r24	; 0x21
    11ec:	3f c0       	rjmp	.+126    	; 0x126c <LCD_voidInit+0x158>
	else if (__tmp > 65535)
    11ee:	6b a1       	ldd	r22, Y+35	; 0x23
    11f0:	7c a1       	ldd	r23, Y+36	; 0x24
    11f2:	8d a1       	ldd	r24, Y+37	; 0x25
    11f4:	9e a1       	ldd	r25, Y+38	; 0x26
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	3f ef       	ldi	r19, 0xFF	; 255
    11fa:	4f e7       	ldi	r20, 0x7F	; 127
    11fc:	57 e4       	ldi	r21, 0x47	; 71
    11fe:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1202:	18 16       	cp	r1, r24
    1204:	4c f5       	brge	.+82     	; 0x1258 <LCD_voidInit+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1206:	6f a1       	ldd	r22, Y+39	; 0x27
    1208:	78 a5       	ldd	r23, Y+40	; 0x28
    120a:	89 a5       	ldd	r24, Y+41	; 0x29
    120c:	9a a5       	ldd	r25, Y+42	; 0x2a
    120e:	20 e0       	ldi	r18, 0x00	; 0
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	40 e2       	ldi	r20, 0x20	; 32
    1214:	51 e4       	ldi	r21, 0x41	; 65
    1216:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    121a:	dc 01       	movw	r26, r24
    121c:	cb 01       	movw	r24, r22
    121e:	bc 01       	movw	r22, r24
    1220:	cd 01       	movw	r24, r26
    1222:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1226:	dc 01       	movw	r26, r24
    1228:	cb 01       	movw	r24, r22
    122a:	9a a3       	std	Y+34, r25	; 0x22
    122c:	89 a3       	std	Y+33, r24	; 0x21
    122e:	0f c0       	rjmp	.+30     	; 0x124e <LCD_voidInit+0x13a>
    1230:	8c e2       	ldi	r24, 0x2C	; 44
    1232:	91 e0       	ldi	r25, 0x01	; 1
    1234:	98 a3       	std	Y+32, r25	; 0x20
    1236:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1238:	8f 8d       	ldd	r24, Y+31	; 0x1f
    123a:	98 a1       	ldd	r25, Y+32	; 0x20
    123c:	01 97       	sbiw	r24, 0x01	; 1
    123e:	f1 f7       	brne	.-4      	; 0x123c <LCD_voidInit+0x128>
    1240:	98 a3       	std	Y+32, r25	; 0x20
    1242:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1244:	89 a1       	ldd	r24, Y+33	; 0x21
    1246:	9a a1       	ldd	r25, Y+34	; 0x22
    1248:	01 97       	sbiw	r24, 0x01	; 1
    124a:	9a a3       	std	Y+34, r25	; 0x22
    124c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    124e:	89 a1       	ldd	r24, Y+33	; 0x21
    1250:	9a a1       	ldd	r25, Y+34	; 0x22
    1252:	00 97       	sbiw	r24, 0x00	; 0
    1254:	69 f7       	brne	.-38     	; 0x1230 <LCD_voidInit+0x11c>
    1256:	14 c0       	rjmp	.+40     	; 0x1280 <LCD_voidInit+0x16c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1258:	6b a1       	ldd	r22, Y+35	; 0x23
    125a:	7c a1       	ldd	r23, Y+36	; 0x24
    125c:	8d a1       	ldd	r24, Y+37	; 0x25
    125e:	9e a1       	ldd	r25, Y+38	; 0x26
    1260:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1264:	dc 01       	movw	r26, r24
    1266:	cb 01       	movw	r24, r22
    1268:	9a a3       	std	Y+34, r25	; 0x22
    126a:	89 a3       	std	Y+33, r24	; 0x21
    126c:	89 a1       	ldd	r24, Y+33	; 0x21
    126e:	9a a1       	ldd	r25, Y+34	; 0x22
    1270:	9e 8f       	std	Y+30, r25	; 0x1e
    1272:	8d 8f       	std	Y+29, r24	; 0x1d
    1274:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1276:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1278:	01 97       	sbiw	r24, 0x01	; 1
    127a:	f1 f7       	brne	.-4      	; 0x1278 <LCD_voidInit+0x164>
    127c:	9e 8f       	std	Y+30, r25	; 0x1e
    127e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);
	LCD_voidSendCommand(0x0C);   //make cursor invisible
    1280:	8c e0       	ldi	r24, 0x0C	; 12
    1282:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	a0 ea       	ldi	r26, 0xA0	; 160
    128c:	b0 e4       	ldi	r27, 0x40	; 64
    128e:	89 8f       	std	Y+25, r24	; 0x19
    1290:	9a 8f       	std	Y+26, r25	; 0x1a
    1292:	ab 8f       	std	Y+27, r26	; 0x1b
    1294:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1296:	69 8d       	ldd	r22, Y+25	; 0x19
    1298:	7a 8d       	ldd	r23, Y+26	; 0x1a
    129a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    129c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    129e:	20 e0       	ldi	r18, 0x00	; 0
    12a0:	30 e8       	ldi	r19, 0x80	; 128
    12a2:	4b e3       	ldi	r20, 0x3B	; 59
    12a4:	55 e4       	ldi	r21, 0x45	; 69
    12a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12aa:	dc 01       	movw	r26, r24
    12ac:	cb 01       	movw	r24, r22
    12ae:	8d 8b       	std	Y+21, r24	; 0x15
    12b0:	9e 8b       	std	Y+22, r25	; 0x16
    12b2:	af 8b       	std	Y+23, r26	; 0x17
    12b4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    12b6:	6d 89       	ldd	r22, Y+21	; 0x15
    12b8:	7e 89       	ldd	r23, Y+22	; 0x16
    12ba:	8f 89       	ldd	r24, Y+23	; 0x17
    12bc:	98 8d       	ldd	r25, Y+24	; 0x18
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	40 e8       	ldi	r20, 0x80	; 128
    12c4:	5f e3       	ldi	r21, 0x3F	; 63
    12c6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    12ca:	88 23       	and	r24, r24
    12cc:	2c f4       	brge	.+10     	; 0x12d8 <LCD_voidInit+0x1c4>
		__ticks = 1;
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	9c 8b       	std	Y+20, r25	; 0x14
    12d4:	8b 8b       	std	Y+19, r24	; 0x13
    12d6:	3f c0       	rjmp	.+126    	; 0x1356 <LCD_voidInit+0x242>
	else if (__tmp > 65535)
    12d8:	6d 89       	ldd	r22, Y+21	; 0x15
    12da:	7e 89       	ldd	r23, Y+22	; 0x16
    12dc:	8f 89       	ldd	r24, Y+23	; 0x17
    12de:	98 8d       	ldd	r25, Y+24	; 0x18
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	3f ef       	ldi	r19, 0xFF	; 255
    12e4:	4f e7       	ldi	r20, 0x7F	; 127
    12e6:	57 e4       	ldi	r21, 0x47	; 71
    12e8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    12ec:	18 16       	cp	r1, r24
    12ee:	4c f5       	brge	.+82     	; 0x1342 <LCD_voidInit+0x22e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12f0:	69 8d       	ldd	r22, Y+25	; 0x19
    12f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12f8:	20 e0       	ldi	r18, 0x00	; 0
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	40 e2       	ldi	r20, 0x20	; 32
    12fe:	51 e4       	ldi	r21, 0x41	; 65
    1300:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1304:	dc 01       	movw	r26, r24
    1306:	cb 01       	movw	r24, r22
    1308:	bc 01       	movw	r22, r24
    130a:	cd 01       	movw	r24, r26
    130c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1310:	dc 01       	movw	r26, r24
    1312:	cb 01       	movw	r24, r22
    1314:	9c 8b       	std	Y+20, r25	; 0x14
    1316:	8b 8b       	std	Y+19, r24	; 0x13
    1318:	0f c0       	rjmp	.+30     	; 0x1338 <LCD_voidInit+0x224>
    131a:	8c e2       	ldi	r24, 0x2C	; 44
    131c:	91 e0       	ldi	r25, 0x01	; 1
    131e:	9a 8b       	std	Y+18, r25	; 0x12
    1320:	89 8b       	std	Y+17, r24	; 0x11
    1322:	89 89       	ldd	r24, Y+17	; 0x11
    1324:	9a 89       	ldd	r25, Y+18	; 0x12
    1326:	01 97       	sbiw	r24, 0x01	; 1
    1328:	f1 f7       	brne	.-4      	; 0x1326 <LCD_voidInit+0x212>
    132a:	9a 8b       	std	Y+18, r25	; 0x12
    132c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    132e:	8b 89       	ldd	r24, Y+19	; 0x13
    1330:	9c 89       	ldd	r25, Y+20	; 0x14
    1332:	01 97       	sbiw	r24, 0x01	; 1
    1334:	9c 8b       	std	Y+20, r25	; 0x14
    1336:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1338:	8b 89       	ldd	r24, Y+19	; 0x13
    133a:	9c 89       	ldd	r25, Y+20	; 0x14
    133c:	00 97       	sbiw	r24, 0x00	; 0
    133e:	69 f7       	brne	.-38     	; 0x131a <LCD_voidInit+0x206>
    1340:	14 c0       	rjmp	.+40     	; 0x136a <LCD_voidInit+0x256>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1342:	6d 89       	ldd	r22, Y+21	; 0x15
    1344:	7e 89       	ldd	r23, Y+22	; 0x16
    1346:	8f 89       	ldd	r24, Y+23	; 0x17
    1348:	98 8d       	ldd	r25, Y+24	; 0x18
    134a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    134e:	dc 01       	movw	r26, r24
    1350:	cb 01       	movw	r24, r22
    1352:	9c 8b       	std	Y+20, r25	; 0x14
    1354:	8b 8b       	std	Y+19, r24	; 0x13
    1356:	8b 89       	ldd	r24, Y+19	; 0x13
    1358:	9c 89       	ldd	r25, Y+20	; 0x14
    135a:	98 8b       	std	Y+16, r25	; 0x10
    135c:	8f 87       	std	Y+15, r24	; 0x0f
    135e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1360:	98 89       	ldd	r25, Y+16	; 0x10
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	f1 f7       	brne	.-4      	; 0x1362 <LCD_voidInit+0x24e>
    1366:	98 8b       	std	Y+16, r25	; 0x10
    1368:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);

	LCD_voidSendCommand(0x01); //clear screan
    136a:	81 e0       	ldi	r24, 0x01	; 1
    136c:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
    1370:	80 e0       	ldi	r24, 0x00	; 0
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	a0 ea       	ldi	r26, 0xA0	; 160
    1376:	b0 e4       	ldi	r27, 0x40	; 64
    1378:	8b 87       	std	Y+11, r24	; 0x0b
    137a:	9c 87       	std	Y+12, r25	; 0x0c
    137c:	ad 87       	std	Y+13, r26	; 0x0d
    137e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1380:	6b 85       	ldd	r22, Y+11	; 0x0b
    1382:	7c 85       	ldd	r23, Y+12	; 0x0c
    1384:	8d 85       	ldd	r24, Y+13	; 0x0d
    1386:	9e 85       	ldd	r25, Y+14	; 0x0e
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e8       	ldi	r19, 0x80	; 128
    138c:	4b e3       	ldi	r20, 0x3B	; 59
    138e:	55 e4       	ldi	r21, 0x45	; 69
    1390:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1394:	dc 01       	movw	r26, r24
    1396:	cb 01       	movw	r24, r22
    1398:	8f 83       	std	Y+7, r24	; 0x07
    139a:	98 87       	std	Y+8, r25	; 0x08
    139c:	a9 87       	std	Y+9, r26	; 0x09
    139e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13a0:	6f 81       	ldd	r22, Y+7	; 0x07
    13a2:	78 85       	ldd	r23, Y+8	; 0x08
    13a4:	89 85       	ldd	r24, Y+9	; 0x09
    13a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13a8:	20 e0       	ldi	r18, 0x00	; 0
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	40 e8       	ldi	r20, 0x80	; 128
    13ae:	5f e3       	ldi	r21, 0x3F	; 63
    13b0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    13b4:	88 23       	and	r24, r24
    13b6:	2c f4       	brge	.+10     	; 0x13c2 <LCD_voidInit+0x2ae>
		__ticks = 1;
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	9e 83       	std	Y+6, r25	; 0x06
    13be:	8d 83       	std	Y+5, r24	; 0x05
    13c0:	3f c0       	rjmp	.+126    	; 0x1440 <LCD_voidInit+0x32c>
	else if (__tmp > 65535)
    13c2:	6f 81       	ldd	r22, Y+7	; 0x07
    13c4:	78 85       	ldd	r23, Y+8	; 0x08
    13c6:	89 85       	ldd	r24, Y+9	; 0x09
    13c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ca:	20 e0       	ldi	r18, 0x00	; 0
    13cc:	3f ef       	ldi	r19, 0xFF	; 255
    13ce:	4f e7       	ldi	r20, 0x7F	; 127
    13d0:	57 e4       	ldi	r21, 0x47	; 71
    13d2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    13d6:	18 16       	cp	r1, r24
    13d8:	4c f5       	brge	.+82     	; 0x142c <LCD_voidInit+0x318>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13da:	6b 85       	ldd	r22, Y+11	; 0x0b
    13dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    13de:	8d 85       	ldd	r24, Y+13	; 0x0d
    13e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	40 e2       	ldi	r20, 0x20	; 32
    13e8:	51 e4       	ldi	r21, 0x41	; 65
    13ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13ee:	dc 01       	movw	r26, r24
    13f0:	cb 01       	movw	r24, r22
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	9e 83       	std	Y+6, r25	; 0x06
    1400:	8d 83       	std	Y+5, r24	; 0x05
    1402:	0f c0       	rjmp	.+30     	; 0x1422 <LCD_voidInit+0x30e>
    1404:	8c e2       	ldi	r24, 0x2C	; 44
    1406:	91 e0       	ldi	r25, 0x01	; 1
    1408:	9c 83       	std	Y+4, r25	; 0x04
    140a:	8b 83       	std	Y+3, r24	; 0x03
    140c:	8b 81       	ldd	r24, Y+3	; 0x03
    140e:	9c 81       	ldd	r25, Y+4	; 0x04
    1410:	01 97       	sbiw	r24, 0x01	; 1
    1412:	f1 f7       	brne	.-4      	; 0x1410 <LCD_voidInit+0x2fc>
    1414:	9c 83       	std	Y+4, r25	; 0x04
    1416:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1418:	8d 81       	ldd	r24, Y+5	; 0x05
    141a:	9e 81       	ldd	r25, Y+6	; 0x06
    141c:	01 97       	sbiw	r24, 0x01	; 1
    141e:	9e 83       	std	Y+6, r25	; 0x06
    1420:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1422:	8d 81       	ldd	r24, Y+5	; 0x05
    1424:	9e 81       	ldd	r25, Y+6	; 0x06
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	69 f7       	brne	.-38     	; 0x1404 <LCD_voidInit+0x2f0>
    142a:	14 c0       	rjmp	.+40     	; 0x1454 <LCD_voidInit+0x340>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    142c:	6f 81       	ldd	r22, Y+7	; 0x07
    142e:	78 85       	ldd	r23, Y+8	; 0x08
    1430:	89 85       	ldd	r24, Y+9	; 0x09
    1432:	9a 85       	ldd	r25, Y+10	; 0x0a
    1434:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1438:	dc 01       	movw	r26, r24
    143a:	cb 01       	movw	r24, r22
    143c:	9e 83       	std	Y+6, r25	; 0x06
    143e:	8d 83       	std	Y+5, r24	; 0x05
    1440:	8d 81       	ldd	r24, Y+5	; 0x05
    1442:	9e 81       	ldd	r25, Y+6	; 0x06
    1444:	9a 83       	std	Y+2, r25	; 0x02
    1446:	89 83       	std	Y+1, r24	; 0x01
    1448:	89 81       	ldd	r24, Y+1	; 0x01
    144a:	9a 81       	ldd	r25, Y+2	; 0x02
    144c:	01 97       	sbiw	r24, 0x01	; 1
    144e:	f1 f7       	brne	.-4      	; 0x144c <LCD_voidInit+0x338>
    1450:	9a 83       	std	Y+2, r25	; 0x02
    1452:	89 83       	std	Y+1, r24	; 0x01





}
    1454:	aa 96       	adiw	r28, 0x2a	; 42
    1456:	0f b6       	in	r0, 0x3f	; 63
    1458:	f8 94       	cli
    145a:	de bf       	out	0x3e, r29	; 62
    145c:	0f be       	out	0x3f, r0	; 63
    145e:	cd bf       	out	0x3d, r28	; 61
    1460:	cf 91       	pop	r28
    1462:	df 91       	pop	r29
    1464:	08 95       	ret

00001466 <LCD_voidWriteCharacter>:

void LCD_voidWriteCharacter(u8 Character)
{
    1466:	df 93       	push	r29
    1468:	cf 93       	push	r28
    146a:	cd b7       	in	r28, 0x3d	; 61
    146c:	de b7       	in	r29, 0x3e	; 62
    146e:	2f 97       	sbiw	r28, 0x0f	; 15
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	f8 94       	cli
    1474:	de bf       	out	0x3e, r29	; 62
    1476:	0f be       	out	0x3f, r0	; 63
    1478:	cd bf       	out	0x3d, r28	; 61
    147a:	8f 87       	std	Y+15, r24	; 0x0f


	DIO_voidSetPinValue(RS_PORT,RS_PIN,HIGH);
    147c:	81 e0       	ldi	r24, 0x01	; 1
    147e:	60 e0       	ldi	r22, 0x00	; 0
    1480:	41 e0       	ldi	r20, 0x01	; 1
    1482:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(RW_PORT,RW_PIN,LOW);
    1486:	81 e0       	ldi	r24, 0x01	; 1
    1488:	61 e0       	ldi	r22, 0x01	; 1
    148a:	40 e0       	ldi	r20, 0x00	; 0
    148c:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(D0_PORT,D0_PIN,GET_BIT(Character,PIN_0));
    1490:	8f 85       	ldd	r24, Y+15	; 0x0f
    1492:	98 2f       	mov	r25, r24
    1494:	91 70       	andi	r25, 0x01	; 1
    1496:	83 e0       	ldi	r24, 0x03	; 3
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	49 2f       	mov	r20, r25
    149c:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D1_PORT,D1_PIN,GET_BIT(Character,PIN_1));
    14a0:	8f 85       	ldd	r24, Y+15	; 0x0f
    14a2:	86 95       	lsr	r24
    14a4:	98 2f       	mov	r25, r24
    14a6:	91 70       	andi	r25, 0x01	; 1
    14a8:	83 e0       	ldi	r24, 0x03	; 3
    14aa:	61 e0       	ldi	r22, 0x01	; 1
    14ac:	49 2f       	mov	r20, r25
    14ae:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D2_PORT,D2_PIN,GET_BIT(Character,PIN_2));
    14b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    14b4:	86 95       	lsr	r24
    14b6:	86 95       	lsr	r24
    14b8:	98 2f       	mov	r25, r24
    14ba:	91 70       	andi	r25, 0x01	; 1
    14bc:	83 e0       	ldi	r24, 0x03	; 3
    14be:	62 e0       	ldi	r22, 0x02	; 2
    14c0:	49 2f       	mov	r20, r25
    14c2:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D3_PORT,D3_PIN,GET_BIT(Character,PIN_3));
    14c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    14c8:	86 95       	lsr	r24
    14ca:	86 95       	lsr	r24
    14cc:	86 95       	lsr	r24
    14ce:	98 2f       	mov	r25, r24
    14d0:	91 70       	andi	r25, 0x01	; 1
    14d2:	83 e0       	ldi	r24, 0x03	; 3
    14d4:	63 e0       	ldi	r22, 0x03	; 3
    14d6:	49 2f       	mov	r20, r25
    14d8:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D4_PORT,D4_PIN,GET_BIT(Character,PIN_4));
    14dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14de:	82 95       	swap	r24
    14e0:	8f 70       	andi	r24, 0x0F	; 15
    14e2:	98 2f       	mov	r25, r24
    14e4:	91 70       	andi	r25, 0x01	; 1
    14e6:	83 e0       	ldi	r24, 0x03	; 3
    14e8:	64 e0       	ldi	r22, 0x04	; 4
    14ea:	49 2f       	mov	r20, r25
    14ec:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D5_PORT,D5_PIN,GET_BIT(Character,PIN_5));
    14f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    14f2:	82 95       	swap	r24
    14f4:	86 95       	lsr	r24
    14f6:	87 70       	andi	r24, 0x07	; 7
    14f8:	98 2f       	mov	r25, r24
    14fa:	91 70       	andi	r25, 0x01	; 1
    14fc:	83 e0       	ldi	r24, 0x03	; 3
    14fe:	65 e0       	ldi	r22, 0x05	; 5
    1500:	49 2f       	mov	r20, r25
    1502:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D6_PORT,D6_PIN,GET_BIT(Character,PIN_6));
    1506:	8f 85       	ldd	r24, Y+15	; 0x0f
    1508:	82 95       	swap	r24
    150a:	86 95       	lsr	r24
    150c:	86 95       	lsr	r24
    150e:	83 70       	andi	r24, 0x03	; 3
    1510:	98 2f       	mov	r25, r24
    1512:	91 70       	andi	r25, 0x01	; 1
    1514:	83 e0       	ldi	r24, 0x03	; 3
    1516:	66 e0       	ldi	r22, 0x06	; 6
    1518:	49 2f       	mov	r20, r25
    151a:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D7_PORT,D7_PIN,GET_BIT(Character,PIN_7));
    151e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1520:	98 2f       	mov	r25, r24
    1522:	99 1f       	adc	r25, r25
    1524:	99 27       	eor	r25, r25
    1526:	99 1f       	adc	r25, r25
    1528:	83 e0       	ldi	r24, 0x03	; 3
    152a:	67 e0       	ldi	r22, 0x07	; 7
    152c:	49 2f       	mov	r20, r25
    152e:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(EN_PORT,EN_PIN,HIGH);
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	62 e0       	ldi	r22, 0x02	; 2
    1536:	41 e0       	ldi	r20, 0x01	; 1
    1538:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    153c:	80 e0       	ldi	r24, 0x00	; 0
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	a0 e0       	ldi	r26, 0x00	; 0
    1542:	b0 e4       	ldi	r27, 0x40	; 64
    1544:	8b 87       	std	Y+11, r24	; 0x0b
    1546:	9c 87       	std	Y+12, r25	; 0x0c
    1548:	ad 87       	std	Y+13, r26	; 0x0d
    154a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    154c:	6b 85       	ldd	r22, Y+11	; 0x0b
    154e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1550:	8d 85       	ldd	r24, Y+13	; 0x0d
    1552:	9e 85       	ldd	r25, Y+14	; 0x0e
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	30 e8       	ldi	r19, 0x80	; 128
    1558:	4b e3       	ldi	r20, 0x3B	; 59
    155a:	55 e4       	ldi	r21, 0x45	; 69
    155c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1560:	dc 01       	movw	r26, r24
    1562:	cb 01       	movw	r24, r22
    1564:	8f 83       	std	Y+7, r24	; 0x07
    1566:	98 87       	std	Y+8, r25	; 0x08
    1568:	a9 87       	std	Y+9, r26	; 0x09
    156a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    156c:	6f 81       	ldd	r22, Y+7	; 0x07
    156e:	78 85       	ldd	r23, Y+8	; 0x08
    1570:	89 85       	ldd	r24, Y+9	; 0x09
    1572:	9a 85       	ldd	r25, Y+10	; 0x0a
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	30 e0       	ldi	r19, 0x00	; 0
    1578:	40 e8       	ldi	r20, 0x80	; 128
    157a:	5f e3       	ldi	r21, 0x3F	; 63
    157c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1580:	88 23       	and	r24, r24
    1582:	2c f4       	brge	.+10     	; 0x158e <LCD_voidWriteCharacter+0x128>
		__ticks = 1;
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	9e 83       	std	Y+6, r25	; 0x06
    158a:	8d 83       	std	Y+5, r24	; 0x05
    158c:	3f c0       	rjmp	.+126    	; 0x160c <LCD_voidWriteCharacter+0x1a6>
	else if (__tmp > 65535)
    158e:	6f 81       	ldd	r22, Y+7	; 0x07
    1590:	78 85       	ldd	r23, Y+8	; 0x08
    1592:	89 85       	ldd	r24, Y+9	; 0x09
    1594:	9a 85       	ldd	r25, Y+10	; 0x0a
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	3f ef       	ldi	r19, 0xFF	; 255
    159a:	4f e7       	ldi	r20, 0x7F	; 127
    159c:	57 e4       	ldi	r21, 0x47	; 71
    159e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    15a2:	18 16       	cp	r1, r24
    15a4:	4c f5       	brge	.+82     	; 0x15f8 <LCD_voidWriteCharacter+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    15a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    15aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    15ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    15ae:	20 e0       	ldi	r18, 0x00	; 0
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	40 e2       	ldi	r20, 0x20	; 32
    15b4:	51 e4       	ldi	r21, 0x41	; 65
    15b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ba:	dc 01       	movw	r26, r24
    15bc:	cb 01       	movw	r24, r22
    15be:	bc 01       	movw	r22, r24
    15c0:	cd 01       	movw	r24, r26
    15c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c6:	dc 01       	movw	r26, r24
    15c8:	cb 01       	movw	r24, r22
    15ca:	9e 83       	std	Y+6, r25	; 0x06
    15cc:	8d 83       	std	Y+5, r24	; 0x05
    15ce:	0f c0       	rjmp	.+30     	; 0x15ee <LCD_voidWriteCharacter+0x188>
    15d0:	8c e2       	ldi	r24, 0x2C	; 44
    15d2:	91 e0       	ldi	r25, 0x01	; 1
    15d4:	9c 83       	std	Y+4, r25	; 0x04
    15d6:	8b 83       	std	Y+3, r24	; 0x03
    15d8:	8b 81       	ldd	r24, Y+3	; 0x03
    15da:	9c 81       	ldd	r25, Y+4	; 0x04
    15dc:	01 97       	sbiw	r24, 0x01	; 1
    15de:	f1 f7       	brne	.-4      	; 0x15dc <LCD_voidWriteCharacter+0x176>
    15e0:	9c 83       	std	Y+4, r25	; 0x04
    15e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e4:	8d 81       	ldd	r24, Y+5	; 0x05
    15e6:	9e 81       	ldd	r25, Y+6	; 0x06
    15e8:	01 97       	sbiw	r24, 0x01	; 1
    15ea:	9e 83       	std	Y+6, r25	; 0x06
    15ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ee:	8d 81       	ldd	r24, Y+5	; 0x05
    15f0:	9e 81       	ldd	r25, Y+6	; 0x06
    15f2:	00 97       	sbiw	r24, 0x00	; 0
    15f4:	69 f7       	brne	.-38     	; 0x15d0 <LCD_voidWriteCharacter+0x16a>
    15f6:	14 c0       	rjmp	.+40     	; 0x1620 <LCD_voidWriteCharacter+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15f8:	6f 81       	ldd	r22, Y+7	; 0x07
    15fa:	78 85       	ldd	r23, Y+8	; 0x08
    15fc:	89 85       	ldd	r24, Y+9	; 0x09
    15fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1600:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1604:	dc 01       	movw	r26, r24
    1606:	cb 01       	movw	r24, r22
    1608:	9e 83       	std	Y+6, r25	; 0x06
    160a:	8d 83       	std	Y+5, r24	; 0x05
    160c:	8d 81       	ldd	r24, Y+5	; 0x05
    160e:	9e 81       	ldd	r25, Y+6	; 0x06
    1610:	9a 83       	std	Y+2, r25	; 0x02
    1612:	89 83       	std	Y+1, r24	; 0x01
    1614:	89 81       	ldd	r24, Y+1	; 0x01
    1616:	9a 81       	ldd	r25, Y+2	; 0x02
    1618:	01 97       	sbiw	r24, 0x01	; 1
    161a:	f1 f7       	brne	.-4      	; 0x1618 <LCD_voidWriteCharacter+0x1b2>
    161c:	9a 83       	std	Y+2, r25	; 0x02
    161e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_voidSetPinValue(EN_PORT,EN_PIN,LOW);
    1620:	81 e0       	ldi	r24, 0x01	; 1
    1622:	62 e0       	ldi	r22, 0x02	; 2
    1624:	40 e0       	ldi	r20, 0x00	; 0
    1626:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>

}
    162a:	2f 96       	adiw	r28, 0x0f	; 15
    162c:	0f b6       	in	r0, 0x3f	; 63
    162e:	f8 94       	cli
    1630:	de bf       	out	0x3e, r29	; 62
    1632:	0f be       	out	0x3f, r0	; 63
    1634:	cd bf       	out	0x3d, r28	; 61
    1636:	cf 91       	pop	r28
    1638:	df 91       	pop	r29
    163a:	08 95       	ret

0000163c <LCD_voidSendCommand>:

void LCD_voidSendCommand(u8 Command)
{
    163c:	df 93       	push	r29
    163e:	cf 93       	push	r28
    1640:	cd b7       	in	r28, 0x3d	; 61
    1642:	de b7       	in	r29, 0x3e	; 62
    1644:	2f 97       	sbiw	r28, 0x0f	; 15
    1646:	0f b6       	in	r0, 0x3f	; 63
    1648:	f8 94       	cli
    164a:	de bf       	out	0x3e, r29	; 62
    164c:	0f be       	out	0x3f, r0	; 63
    164e:	cd bf       	out	0x3d, r28	; 61
    1650:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(RS_PORT,RS_PIN,LOW);
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	40 e0       	ldi	r20, 0x00	; 0
    1658:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(RW_PORT,RW_PIN,LOW);
    165c:	81 e0       	ldi	r24, 0x01	; 1
    165e:	61 e0       	ldi	r22, 0x01	; 1
    1660:	40 e0       	ldi	r20, 0x00	; 0
    1662:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(D0_PORT,D0_PIN,GET_BIT(Command,PIN_0));
    1666:	8f 85       	ldd	r24, Y+15	; 0x0f
    1668:	98 2f       	mov	r25, r24
    166a:	91 70       	andi	r25, 0x01	; 1
    166c:	83 e0       	ldi	r24, 0x03	; 3
    166e:	60 e0       	ldi	r22, 0x00	; 0
    1670:	49 2f       	mov	r20, r25
    1672:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D1_PORT,D1_PIN,GET_BIT(Command,PIN_1));
    1676:	8f 85       	ldd	r24, Y+15	; 0x0f
    1678:	86 95       	lsr	r24
    167a:	98 2f       	mov	r25, r24
    167c:	91 70       	andi	r25, 0x01	; 1
    167e:	83 e0       	ldi	r24, 0x03	; 3
    1680:	61 e0       	ldi	r22, 0x01	; 1
    1682:	49 2f       	mov	r20, r25
    1684:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D2_PORT,D2_PIN,GET_BIT(Command,PIN_2));
    1688:	8f 85       	ldd	r24, Y+15	; 0x0f
    168a:	86 95       	lsr	r24
    168c:	86 95       	lsr	r24
    168e:	98 2f       	mov	r25, r24
    1690:	91 70       	andi	r25, 0x01	; 1
    1692:	83 e0       	ldi	r24, 0x03	; 3
    1694:	62 e0       	ldi	r22, 0x02	; 2
    1696:	49 2f       	mov	r20, r25
    1698:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D3_PORT,D3_PIN,GET_BIT(Command,PIN_3));
    169c:	8f 85       	ldd	r24, Y+15	; 0x0f
    169e:	86 95       	lsr	r24
    16a0:	86 95       	lsr	r24
    16a2:	86 95       	lsr	r24
    16a4:	98 2f       	mov	r25, r24
    16a6:	91 70       	andi	r25, 0x01	; 1
    16a8:	83 e0       	ldi	r24, 0x03	; 3
    16aa:	63 e0       	ldi	r22, 0x03	; 3
    16ac:	49 2f       	mov	r20, r25
    16ae:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D4_PORT,D4_PIN,GET_BIT(Command,PIN_4));
    16b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    16b4:	82 95       	swap	r24
    16b6:	8f 70       	andi	r24, 0x0F	; 15
    16b8:	98 2f       	mov	r25, r24
    16ba:	91 70       	andi	r25, 0x01	; 1
    16bc:	83 e0       	ldi	r24, 0x03	; 3
    16be:	64 e0       	ldi	r22, 0x04	; 4
    16c0:	49 2f       	mov	r20, r25
    16c2:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D5_PORT,D5_PIN,GET_BIT(Command,PIN_5));
    16c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    16c8:	82 95       	swap	r24
    16ca:	86 95       	lsr	r24
    16cc:	87 70       	andi	r24, 0x07	; 7
    16ce:	98 2f       	mov	r25, r24
    16d0:	91 70       	andi	r25, 0x01	; 1
    16d2:	83 e0       	ldi	r24, 0x03	; 3
    16d4:	65 e0       	ldi	r22, 0x05	; 5
    16d6:	49 2f       	mov	r20, r25
    16d8:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D6_PORT,D6_PIN,GET_BIT(Command,PIN_6));
    16dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    16de:	82 95       	swap	r24
    16e0:	86 95       	lsr	r24
    16e2:	86 95       	lsr	r24
    16e4:	83 70       	andi	r24, 0x03	; 3
    16e6:	98 2f       	mov	r25, r24
    16e8:	91 70       	andi	r25, 0x01	; 1
    16ea:	83 e0       	ldi	r24, 0x03	; 3
    16ec:	66 e0       	ldi	r22, 0x06	; 6
    16ee:	49 2f       	mov	r20, r25
    16f0:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D7_PORT,D7_PIN,GET_BIT(Command,PIN_7));
    16f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    16f6:	98 2f       	mov	r25, r24
    16f8:	99 1f       	adc	r25, r25
    16fa:	99 27       	eor	r25, r25
    16fc:	99 1f       	adc	r25, r25
    16fe:	83 e0       	ldi	r24, 0x03	; 3
    1700:	67 e0       	ldi	r22, 0x07	; 7
    1702:	49 2f       	mov	r20, r25
    1704:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(EN_PORT,EN_PIN,HIGH);
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	62 e0       	ldi	r22, 0x02	; 2
    170c:	41 e0       	ldi	r20, 0x01	; 1
    170e:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    1712:	80 e0       	ldi	r24, 0x00	; 0
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	a0 e0       	ldi	r26, 0x00	; 0
    1718:	b0 e4       	ldi	r27, 0x40	; 64
    171a:	8b 87       	std	Y+11, r24	; 0x0b
    171c:	9c 87       	std	Y+12, r25	; 0x0c
    171e:	ad 87       	std	Y+13, r26	; 0x0d
    1720:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1722:	6b 85       	ldd	r22, Y+11	; 0x0b
    1724:	7c 85       	ldd	r23, Y+12	; 0x0c
    1726:	8d 85       	ldd	r24, Y+13	; 0x0d
    1728:	9e 85       	ldd	r25, Y+14	; 0x0e
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e8       	ldi	r19, 0x80	; 128
    172e:	4b e3       	ldi	r20, 0x3B	; 59
    1730:	55 e4       	ldi	r21, 0x45	; 69
    1732:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1736:	dc 01       	movw	r26, r24
    1738:	cb 01       	movw	r24, r22
    173a:	8f 83       	std	Y+7, r24	; 0x07
    173c:	98 87       	std	Y+8, r25	; 0x08
    173e:	a9 87       	std	Y+9, r26	; 0x09
    1740:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1742:	6f 81       	ldd	r22, Y+7	; 0x07
    1744:	78 85       	ldd	r23, Y+8	; 0x08
    1746:	89 85       	ldd	r24, Y+9	; 0x09
    1748:	9a 85       	ldd	r25, Y+10	; 0x0a
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	40 e8       	ldi	r20, 0x80	; 128
    1750:	5f e3       	ldi	r21, 0x3F	; 63
    1752:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1756:	88 23       	and	r24, r24
    1758:	2c f4       	brge	.+10     	; 0x1764 <LCD_voidSendCommand+0x128>
		__ticks = 1;
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	9e 83       	std	Y+6, r25	; 0x06
    1760:	8d 83       	std	Y+5, r24	; 0x05
    1762:	3f c0       	rjmp	.+126    	; 0x17e2 <LCD_voidSendCommand+0x1a6>
	else if (__tmp > 65535)
    1764:	6f 81       	ldd	r22, Y+7	; 0x07
    1766:	78 85       	ldd	r23, Y+8	; 0x08
    1768:	89 85       	ldd	r24, Y+9	; 0x09
    176a:	9a 85       	ldd	r25, Y+10	; 0x0a
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	3f ef       	ldi	r19, 0xFF	; 255
    1770:	4f e7       	ldi	r20, 0x7F	; 127
    1772:	57 e4       	ldi	r21, 0x47	; 71
    1774:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1778:	18 16       	cp	r1, r24
    177a:	4c f5       	brge	.+82     	; 0x17ce <LCD_voidSendCommand+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    177c:	6b 85       	ldd	r22, Y+11	; 0x0b
    177e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1780:	8d 85       	ldd	r24, Y+13	; 0x0d
    1782:	9e 85       	ldd	r25, Y+14	; 0x0e
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	40 e2       	ldi	r20, 0x20	; 32
    178a:	51 e4       	ldi	r21, 0x41	; 65
    178c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1790:	dc 01       	movw	r26, r24
    1792:	cb 01       	movw	r24, r22
    1794:	bc 01       	movw	r22, r24
    1796:	cd 01       	movw	r24, r26
    1798:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	9e 83       	std	Y+6, r25	; 0x06
    17a2:	8d 83       	std	Y+5, r24	; 0x05
    17a4:	0f c0       	rjmp	.+30     	; 0x17c4 <LCD_voidSendCommand+0x188>
    17a6:	8c e2       	ldi	r24, 0x2C	; 44
    17a8:	91 e0       	ldi	r25, 0x01	; 1
    17aa:	9c 83       	std	Y+4, r25	; 0x04
    17ac:	8b 83       	std	Y+3, r24	; 0x03
    17ae:	8b 81       	ldd	r24, Y+3	; 0x03
    17b0:	9c 81       	ldd	r25, Y+4	; 0x04
    17b2:	01 97       	sbiw	r24, 0x01	; 1
    17b4:	f1 f7       	brne	.-4      	; 0x17b2 <LCD_voidSendCommand+0x176>
    17b6:	9c 83       	std	Y+4, r25	; 0x04
    17b8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ba:	8d 81       	ldd	r24, Y+5	; 0x05
    17bc:	9e 81       	ldd	r25, Y+6	; 0x06
    17be:	01 97       	sbiw	r24, 0x01	; 1
    17c0:	9e 83       	std	Y+6, r25	; 0x06
    17c2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17c4:	8d 81       	ldd	r24, Y+5	; 0x05
    17c6:	9e 81       	ldd	r25, Y+6	; 0x06
    17c8:	00 97       	sbiw	r24, 0x00	; 0
    17ca:	69 f7       	brne	.-38     	; 0x17a6 <LCD_voidSendCommand+0x16a>
    17cc:	14 c0       	rjmp	.+40     	; 0x17f6 <LCD_voidSendCommand+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ce:	6f 81       	ldd	r22, Y+7	; 0x07
    17d0:	78 85       	ldd	r23, Y+8	; 0x08
    17d2:	89 85       	ldd	r24, Y+9	; 0x09
    17d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17da:	dc 01       	movw	r26, r24
    17dc:	cb 01       	movw	r24, r22
    17de:	9e 83       	std	Y+6, r25	; 0x06
    17e0:	8d 83       	std	Y+5, r24	; 0x05
    17e2:	8d 81       	ldd	r24, Y+5	; 0x05
    17e4:	9e 81       	ldd	r25, Y+6	; 0x06
    17e6:	9a 83       	std	Y+2, r25	; 0x02
    17e8:	89 83       	std	Y+1, r24	; 0x01
    17ea:	89 81       	ldd	r24, Y+1	; 0x01
    17ec:	9a 81       	ldd	r25, Y+2	; 0x02
    17ee:	01 97       	sbiw	r24, 0x01	; 1
    17f0:	f1 f7       	brne	.-4      	; 0x17ee <LCD_voidSendCommand+0x1b2>
    17f2:	9a 83       	std	Y+2, r25	; 0x02
    17f4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_voidSetPinValue(EN_PORT,EN_PIN,LOW);
    17f6:	81 e0       	ldi	r24, 0x01	; 1
    17f8:	62 e0       	ldi	r22, 0x02	; 2
    17fa:	40 e0       	ldi	r20, 0x00	; 0
    17fc:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>


}
    1800:	2f 96       	adiw	r28, 0x0f	; 15
    1802:	0f b6       	in	r0, 0x3f	; 63
    1804:	f8 94       	cli
    1806:	de bf       	out	0x3e, r29	; 62
    1808:	0f be       	out	0x3f, r0	; 63
    180a:	cd bf       	out	0x3d, r28	; 61
    180c:	cf 91       	pop	r28
    180e:	df 91       	pop	r29
    1810:	08 95       	ret

00001812 <LCD_voidWriteString>:

void LCD_voidWriteString(u8 *string)
{
    1812:	df 93       	push	r29
    1814:	cf 93       	push	r28
    1816:	00 d0       	rcall	.+0      	; 0x1818 <LCD_voidWriteString+0x6>
    1818:	cd b7       	in	r28, 0x3d	; 61
    181a:	de b7       	in	r29, 0x3e	; 62
    181c:	9a 83       	std	Y+2, r25	; 0x02
    181e:	89 83       	std	Y+1, r24	; 0x01
    1820:	0a c0       	rjmp	.+20     	; 0x1836 <LCD_voidWriteString+0x24>

	while(*string!='\0')
	{
		LCD_voidWriteCharacter(*string);
    1822:	e9 81       	ldd	r30, Y+1	; 0x01
    1824:	fa 81       	ldd	r31, Y+2	; 0x02
    1826:	80 81       	ld	r24, Z
    1828:	0e 94 33 0a 	call	0x1466	; 0x1466 <LCD_voidWriteCharacter>
		string++;
    182c:	89 81       	ldd	r24, Y+1	; 0x01
    182e:	9a 81       	ldd	r25, Y+2	; 0x02
    1830:	01 96       	adiw	r24, 0x01	; 1
    1832:	9a 83       	std	Y+2, r25	; 0x02
    1834:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_voidWriteString(u8 *string)
{

	while(*string!='\0')
    1836:	e9 81       	ldd	r30, Y+1	; 0x01
    1838:	fa 81       	ldd	r31, Y+2	; 0x02
    183a:	80 81       	ld	r24, Z
    183c:	88 23       	and	r24, r24
    183e:	89 f7       	brne	.-30     	; 0x1822 <LCD_voidWriteString+0x10>
		string++;

	}


}
    1840:	0f 90       	pop	r0
    1842:	0f 90       	pop	r0
    1844:	cf 91       	pop	r28
    1846:	df 91       	pop	r29
    1848:	08 95       	ret

0000184a <LCD_voidSetCursor>:

void LCD_voidSetCursor(char a, char b)
{
    184a:	df 93       	push	r29
    184c:	cf 93       	push	r28
    184e:	00 d0       	rcall	.+0      	; 0x1850 <LCD_voidSetCursor+0x6>
    1850:	cd b7       	in	r28, 0x3d	; 61
    1852:	de b7       	in	r29, 0x3e	; 62
    1854:	89 83       	std	Y+1, r24	; 0x01
    1856:	6a 83       	std	Y+2, r22	; 0x02
	if(a == 1)
    1858:	89 81       	ldd	r24, Y+1	; 0x01
    185a:	81 30       	cpi	r24, 0x01	; 1
    185c:	29 f4       	brne	.+10     	; 0x1868 <LCD_voidSetCursor+0x1e>
		LCD_voidSendCommand(0x80 + b);
    185e:	8a 81       	ldd	r24, Y+2	; 0x02
    1860:	80 58       	subi	r24, 0x80	; 128
    1862:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
    1866:	07 c0       	rjmp	.+14     	; 0x1876 <LCD_voidSetCursor+0x2c>
	else if(a == 2)
    1868:	89 81       	ldd	r24, Y+1	; 0x01
    186a:	82 30       	cpi	r24, 0x02	; 2
    186c:	21 f4       	brne	.+8      	; 0x1876 <LCD_voidSetCursor+0x2c>
		LCD_voidSendCommand(0xC0 + b);
    186e:	8a 81       	ldd	r24, Y+2	; 0x02
    1870:	80 54       	subi	r24, 0x40	; 64
    1872:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
}
    1876:	0f 90       	pop	r0
    1878:	0f 90       	pop	r0
    187a:	cf 91       	pop	r28
    187c:	df 91       	pop	r29
    187e:	08 95       	ret

00001880 <LCD_voidClear>:
void LCD_voidClear(void)
{
    1880:	df 93       	push	r29
    1882:	cf 93       	push	r28
    1884:	cd b7       	in	r28, 0x3d	; 61
    1886:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCommand(0x01);
    1888:	81 e0       	ldi	r24, 0x01	; 1
    188a:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
}
    188e:	cf 91       	pop	r28
    1890:	df 91       	pop	r29
    1892:	08 95       	ret

00001894 <Lcd_voidShiftRight>:

void Lcd_voidShiftRight(void)
{
    1894:	df 93       	push	r29
    1896:	cf 93       	push	r28
    1898:	cd b7       	in	r28, 0x3d	; 61
    189a:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCommand(0x1C);
    189c:	8c e1       	ldi	r24, 0x1C	; 28
    189e:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
}
    18a2:	cf 91       	pop	r28
    18a4:	df 91       	pop	r29
    18a6:	08 95       	ret

000018a8 <Lcd_voidShiftLeft>:

void Lcd_voidShiftLeft(void)
{
    18a8:	df 93       	push	r29
    18aa:	cf 93       	push	r28
    18ac:	cd b7       	in	r28, 0x3d	; 61
    18ae:	de b7       	in	r29, 0x3e	; 62
	LCD_voidSendCommand(0x18);
    18b0:	88 e1       	ldi	r24, 0x18	; 24
    18b2:	0e 94 1e 0b 	call	0x163c	; 0x163c <LCD_voidSendCommand>
}
    18b6:	cf 91       	pop	r28
    18b8:	df 91       	pop	r29
    18ba:	08 95       	ret

000018bc <main>:
#include<avr/io.h>
#define F_CPU 12000000


int main(void)
{
    18bc:	0f 93       	push	r16
    18be:	1f 93       	push	r17
    18c0:	df 93       	push	r29
    18c2:	cf 93       	push	r28
    18c4:	cd b7       	in	r28, 0x3d	; 61
    18c6:	de b7       	in	r29, 0x3e	; 62
    18c8:	c4 5e       	subi	r28, 0xE4	; 228
    18ca:	d1 40       	sbci	r29, 0x01	; 1
    18cc:	0f b6       	in	r0, 0x3f	; 63
    18ce:	f8 94       	cli
    18d0:	de bf       	out	0x3e, r29	; 62
    18d2:	0f be       	out	0x3f, r0	; 63
    18d4:	cd bf       	out	0x3d, r28	; 61
	u16 i;
	u8 x,y;

	DIO_voidSetPinDir(PORT_C,PIN_0,INPUT);//keypad pushbutton to rotate left
    18d6:	82 e0       	ldi	r24, 0x02	; 2
    18d8:	60 e0       	ldi	r22, 0x00	; 0
    18da:	40 e0       	ldi	r20, 0x00	; 0
    18dc:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_1,INPUT);//keypad pushbutton to rotate right
    18e0:	82 e0       	ldi	r24, 0x02	; 2
    18e2:	61 e0       	ldi	r22, 0x01	; 1
    18e4:	40 e0       	ldi	r20, 0x00	; 0
    18e6:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>
	DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PULL UP
    18ea:	82 e0       	ldi	r24, 0x02	; 2
    18ec:	60 e0       	ldi	r22, 0x00	; 0
    18ee:	41 e0       	ldi	r20, 0x01	; 1
    18f0:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PULL UP
    18f4:	82 e0       	ldi	r24, 0x02	; 2
    18f6:	61 e0       	ldi	r22, 0x01	; 1
    18f8:	41 e0       	ldi	r20, 0x01	; 1
    18fa:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>


	DIO_voidSetPinDir(PORT_C,PIN_2,OUTPUT);//signal for servo motor
    18fe:	82 e0       	ldi	r24, 0x02	; 2
    1900:	62 e0       	ldi	r22, 0x02	; 2
    1902:	41 e0       	ldi	r20, 0x01	; 1
    1904:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>

	DIO_voidSetPinDir(PORT_C,PIN_7,OUTPUT);//LED
    1908:	82 e0       	ldi	r24, 0x02	; 2
    190a:	67 e0       	ldi	r22, 0x07	; 7
    190c:	41 e0       	ldi	r20, 0x01	; 1
    190e:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_voidSetPinDir>

	LCD_voidInit(); //lcd initialization
    1912:	0e 94 8a 08 	call	0x1114	; 0x1114 <LCD_voidInit>
	LCD_voidWriteString("Angle:");
    1916:	80 e6       	ldi	r24, 0x60	; 96
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>

		while(1)
		{
			x=GET_BIT(PINC,0);
    191e:	e3 e3       	ldi	r30, 0x33	; 51
    1920:	f0 e0       	ldi	r31, 0x00	; 0
    1922:	80 81       	ld	r24, Z
    1924:	fe 01       	movw	r30, r28
    1926:	ee 51       	subi	r30, 0x1E	; 30
    1928:	fe 4f       	sbci	r31, 0xFE	; 254
    192a:	81 70       	andi	r24, 0x01	; 1
    192c:	80 83       	st	Z, r24
			y=GET_BIT(PINC,1);
    192e:	e3 e3       	ldi	r30, 0x33	; 51
    1930:	f0 e0       	ldi	r31, 0x00	; 0
    1932:	80 81       	ld	r24, Z
    1934:	86 95       	lsr	r24
    1936:	fe 01       	movw	r30, r28
    1938:	ef 51       	subi	r30, 0x1F	; 31
    193a:	fe 4f       	sbci	r31, 0xFE	; 254
    193c:	81 70       	andi	r24, 0x01	; 1
    193e:	80 83       	st	Z, r24
			/*if(x==0)
			{SET_BIT(PORTC,7);}
			else
			{CLEAR_BIT(PORTC,7);}*/

if(x==0){
    1940:	fe 01       	movw	r30, r28
    1942:	ee 51       	subi	r30, 0x1E	; 30
    1944:	fe 4f       	sbci	r31, 0xFE	; 254
    1946:	80 81       	ld	r24, Z
    1948:	88 23       	and	r24, r24
    194a:	11 f0       	breq	.+4      	; 0x1950 <main+0x94>
    194c:	0c 94 33 19 	jmp	0x3266	; 0x3266 <main+0x19aa>
			for( i=0;i<50;i++) //zero Angle
    1950:	fe 01       	movw	r30, r28
    1952:	ed 51       	subi	r30, 0x1D	; 29
    1954:	fe 4f       	sbci	r31, 0xFE	; 254
    1956:	11 82       	std	Z+1, r1	; 0x01
    1958:	10 82       	st	Z, r1
    195a:	70 c2       	rjmp	.+1248   	; 0x1e3c <main+0x580>
			{

				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    195c:	82 e0       	ldi	r24, 0x02	; 2
    195e:	62 e0       	ldi	r22, 0x02	; 2
    1960:	41 e0       	ldi	r20, 0x01	; 1
    1962:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    1966:	fe 01       	movw	r30, r28
    1968:	e3 52       	subi	r30, 0x23	; 35
    196a:	fe 4f       	sbci	r31, 0xFE	; 254
    196c:	80 e0       	ldi	r24, 0x00	; 0
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	a0 e7       	ldi	r26, 0x70	; 112
    1972:	b2 e4       	ldi	r27, 0x42	; 66
    1974:	80 83       	st	Z, r24
    1976:	91 83       	std	Z+1, r25	; 0x01
    1978:	a2 83       	std	Z+2, r26	; 0x02
    197a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    197c:	8e 01       	movw	r16, r28
    197e:	07 52       	subi	r16, 0x27	; 39
    1980:	1e 4f       	sbci	r17, 0xFE	; 254
    1982:	fe 01       	movw	r30, r28
    1984:	e3 52       	subi	r30, 0x23	; 35
    1986:	fe 4f       	sbci	r31, 0xFE	; 254
    1988:	60 81       	ld	r22, Z
    198a:	71 81       	ldd	r23, Z+1	; 0x01
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	40 e8       	ldi	r20, 0x80	; 128
    1996:	50 e4       	ldi	r21, 0x40	; 64
    1998:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	f8 01       	movw	r30, r16
    19a2:	80 83       	st	Z, r24
    19a4:	91 83       	std	Z+1, r25	; 0x01
    19a6:	a2 83       	std	Z+2, r26	; 0x02
    19a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19aa:	fe 01       	movw	r30, r28
    19ac:	e7 52       	subi	r30, 0x27	; 39
    19ae:	fe 4f       	sbci	r31, 0xFE	; 254
    19b0:	60 81       	ld	r22, Z
    19b2:	71 81       	ldd	r23, Z+1	; 0x01
    19b4:	82 81       	ldd	r24, Z+2	; 0x02
    19b6:	93 81       	ldd	r25, Z+3	; 0x03
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e8       	ldi	r20, 0x80	; 128
    19be:	5f e3       	ldi	r21, 0x3F	; 63
    19c0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19c4:	88 23       	and	r24, r24
    19c6:	34 f4       	brge	.+12     	; 0x19d4 <main+0x118>
		__ticks = 1;
    19c8:	fe 01       	movw	r30, r28
    19ca:	e8 52       	subi	r30, 0x28	; 40
    19cc:	fe 4f       	sbci	r31, 0xFE	; 254
    19ce:	81 e0       	ldi	r24, 0x01	; 1
    19d0:	80 83       	st	Z, r24
    19d2:	e0 c0       	rjmp	.+448    	; 0x1b94 <main+0x2d8>
	else if (__tmp > 255)
    19d4:	fe 01       	movw	r30, r28
    19d6:	e7 52       	subi	r30, 0x27	; 39
    19d8:	fe 4f       	sbci	r31, 0xFE	; 254
    19da:	60 81       	ld	r22, Z
    19dc:	71 81       	ldd	r23, Z+1	; 0x01
    19de:	82 81       	ldd	r24, Z+2	; 0x02
    19e0:	93 81       	ldd	r25, Z+3	; 0x03
    19e2:	20 e0       	ldi	r18, 0x00	; 0
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	4f e7       	ldi	r20, 0x7F	; 127
    19e8:	53 e4       	ldi	r21, 0x43	; 67
    19ea:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    19ee:	18 16       	cp	r1, r24
    19f0:	0c f0       	brlt	.+2      	; 0x19f4 <main+0x138>
    19f2:	c0 c0       	rjmp	.+384    	; 0x1b74 <main+0x2b8>
	{
		_delay_ms(__us / 1000.0);
    19f4:	fe 01       	movw	r30, r28
    19f6:	e3 52       	subi	r30, 0x23	; 35
    19f8:	fe 4f       	sbci	r31, 0xFE	; 254
    19fa:	60 81       	ld	r22, Z
    19fc:	71 81       	ldd	r23, Z+1	; 0x01
    19fe:	82 81       	ldd	r24, Z+2	; 0x02
    1a00:	93 81       	ldd	r25, Z+3	; 0x03
    1a02:	20 e0       	ldi	r18, 0x00	; 0
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	4a e7       	ldi	r20, 0x7A	; 122
    1a08:	54 e4       	ldi	r21, 0x44	; 68
    1a0a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	fe 01       	movw	r30, r28
    1a14:	ec 52       	subi	r30, 0x2C	; 44
    1a16:	fe 4f       	sbci	r31, 0xFE	; 254
    1a18:	80 83       	st	Z, r24
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	a2 83       	std	Z+2, r26	; 0x02
    1a1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a20:	8e 01       	movw	r16, r28
    1a22:	00 53       	subi	r16, 0x30	; 48
    1a24:	1e 4f       	sbci	r17, 0xFE	; 254
    1a26:	fe 01       	movw	r30, r28
    1a28:	ec 52       	subi	r30, 0x2C	; 44
    1a2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1a2c:	60 81       	ld	r22, Z
    1a2e:	71 81       	ldd	r23, Z+1	; 0x01
    1a30:	82 81       	ldd	r24, Z+2	; 0x02
    1a32:	93 81       	ldd	r25, Z+3	; 0x03
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e8       	ldi	r19, 0x80	; 128
    1a38:	4b e3       	ldi	r20, 0x3B	; 59
    1a3a:	55 e4       	ldi	r21, 0x45	; 69
    1a3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a40:	dc 01       	movw	r26, r24
    1a42:	cb 01       	movw	r24, r22
    1a44:	f8 01       	movw	r30, r16
    1a46:	80 83       	st	Z, r24
    1a48:	91 83       	std	Z+1, r25	; 0x01
    1a4a:	a2 83       	std	Z+2, r26	; 0x02
    1a4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a4e:	fe 01       	movw	r30, r28
    1a50:	e0 53       	subi	r30, 0x30	; 48
    1a52:	fe 4f       	sbci	r31, 0xFE	; 254
    1a54:	60 81       	ld	r22, Z
    1a56:	71 81       	ldd	r23, Z+1	; 0x01
    1a58:	82 81       	ldd	r24, Z+2	; 0x02
    1a5a:	93 81       	ldd	r25, Z+3	; 0x03
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	40 e8       	ldi	r20, 0x80	; 128
    1a62:	5f e3       	ldi	r21, 0x3F	; 63
    1a64:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a68:	88 23       	and	r24, r24
    1a6a:	44 f4       	brge	.+16     	; 0x1a7c <main+0x1c0>
		__ticks = 1;
    1a6c:	fe 01       	movw	r30, r28
    1a6e:	e2 53       	subi	r30, 0x32	; 50
    1a70:	fe 4f       	sbci	r31, 0xFE	; 254
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	91 83       	std	Z+1, r25	; 0x01
    1a78:	80 83       	st	Z, r24
    1a7a:	64 c0       	rjmp	.+200    	; 0x1b44 <main+0x288>
	else if (__tmp > 65535)
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	e0 53       	subi	r30, 0x30	; 48
    1a80:	fe 4f       	sbci	r31, 0xFE	; 254
    1a82:	60 81       	ld	r22, Z
    1a84:	71 81       	ldd	r23, Z+1	; 0x01
    1a86:	82 81       	ldd	r24, Z+2	; 0x02
    1a88:	93 81       	ldd	r25, Z+3	; 0x03
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	3f ef       	ldi	r19, 0xFF	; 255
    1a8e:	4f e7       	ldi	r20, 0x7F	; 127
    1a90:	57 e4       	ldi	r21, 0x47	; 71
    1a92:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1a96:	18 16       	cp	r1, r24
    1a98:	0c f0       	brlt	.+2      	; 0x1a9c <main+0x1e0>
    1a9a:	43 c0       	rjmp	.+134    	; 0x1b22 <main+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a9c:	fe 01       	movw	r30, r28
    1a9e:	ec 52       	subi	r30, 0x2C	; 44
    1aa0:	fe 4f       	sbci	r31, 0xFE	; 254
    1aa2:	60 81       	ld	r22, Z
    1aa4:	71 81       	ldd	r23, Z+1	; 0x01
    1aa6:	82 81       	ldd	r24, Z+2	; 0x02
    1aa8:	93 81       	ldd	r25, Z+3	; 0x03
    1aaa:	20 e0       	ldi	r18, 0x00	; 0
    1aac:	30 e0       	ldi	r19, 0x00	; 0
    1aae:	40 e2       	ldi	r20, 0x20	; 32
    1ab0:	51 e4       	ldi	r21, 0x41	; 65
    1ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	8e 01       	movw	r16, r28
    1abc:	02 53       	subi	r16, 0x32	; 50
    1abe:	1e 4f       	sbci	r17, 0xFE	; 254
    1ac0:	bc 01       	movw	r22, r24
    1ac2:	cd 01       	movw	r24, r26
    1ac4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ac8:	dc 01       	movw	r26, r24
    1aca:	cb 01       	movw	r24, r22
    1acc:	f8 01       	movw	r30, r16
    1ace:	91 83       	std	Z+1, r25	; 0x01
    1ad0:	80 83       	st	Z, r24
    1ad2:	1f c0       	rjmp	.+62     	; 0x1b12 <main+0x256>
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	e4 53       	subi	r30, 0x34	; 52
    1ad8:	fe 4f       	sbci	r31, 0xFE	; 254
    1ada:	8c e2       	ldi	r24, 0x2C	; 44
    1adc:	91 e0       	ldi	r25, 0x01	; 1
    1ade:	91 83       	std	Z+1, r25	; 0x01
    1ae0:	80 83       	st	Z, r24
    1ae2:	fe 01       	movw	r30, r28
    1ae4:	e4 53       	subi	r30, 0x34	; 52
    1ae6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ae8:	80 81       	ld	r24, Z
    1aea:	91 81       	ldd	r25, Z+1	; 0x01
    1aec:	01 97       	sbiw	r24, 0x01	; 1
    1aee:	f1 f7       	brne	.-4      	; 0x1aec <main+0x230>
    1af0:	fe 01       	movw	r30, r28
    1af2:	e4 53       	subi	r30, 0x34	; 52
    1af4:	fe 4f       	sbci	r31, 0xFE	; 254
    1af6:	91 83       	std	Z+1, r25	; 0x01
    1af8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1afa:	de 01       	movw	r26, r28
    1afc:	a2 53       	subi	r26, 0x32	; 50
    1afe:	be 4f       	sbci	r27, 0xFE	; 254
    1b00:	fe 01       	movw	r30, r28
    1b02:	e2 53       	subi	r30, 0x32	; 50
    1b04:	fe 4f       	sbci	r31, 0xFE	; 254
    1b06:	80 81       	ld	r24, Z
    1b08:	91 81       	ldd	r25, Z+1	; 0x01
    1b0a:	01 97       	sbiw	r24, 0x01	; 1
    1b0c:	11 96       	adiw	r26, 0x01	; 1
    1b0e:	9c 93       	st	X, r25
    1b10:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b12:	fe 01       	movw	r30, r28
    1b14:	e2 53       	subi	r30, 0x32	; 50
    1b16:	fe 4f       	sbci	r31, 0xFE	; 254
    1b18:	80 81       	ld	r24, Z
    1b1a:	91 81       	ldd	r25, Z+1	; 0x01
    1b1c:	00 97       	sbiw	r24, 0x00	; 0
    1b1e:	d1 f6       	brne	.-76     	; 0x1ad4 <main+0x218>
    1b20:	4b c0       	rjmp	.+150    	; 0x1bb8 <main+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b22:	8e 01       	movw	r16, r28
    1b24:	02 53       	subi	r16, 0x32	; 50
    1b26:	1e 4f       	sbci	r17, 0xFE	; 254
    1b28:	fe 01       	movw	r30, r28
    1b2a:	e0 53       	subi	r30, 0x30	; 48
    1b2c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b2e:	60 81       	ld	r22, Z
    1b30:	71 81       	ldd	r23, Z+1	; 0x01
    1b32:	82 81       	ldd	r24, Z+2	; 0x02
    1b34:	93 81       	ldd	r25, Z+3	; 0x03
    1b36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b3a:	dc 01       	movw	r26, r24
    1b3c:	cb 01       	movw	r24, r22
    1b3e:	f8 01       	movw	r30, r16
    1b40:	91 83       	std	Z+1, r25	; 0x01
    1b42:	80 83       	st	Z, r24
    1b44:	de 01       	movw	r26, r28
    1b46:	a6 53       	subi	r26, 0x36	; 54
    1b48:	be 4f       	sbci	r27, 0xFE	; 254
    1b4a:	fe 01       	movw	r30, r28
    1b4c:	e2 53       	subi	r30, 0x32	; 50
    1b4e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b50:	80 81       	ld	r24, Z
    1b52:	91 81       	ldd	r25, Z+1	; 0x01
    1b54:	11 96       	adiw	r26, 0x01	; 1
    1b56:	9c 93       	st	X, r25
    1b58:	8e 93       	st	-X, r24
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	e6 53       	subi	r30, 0x36	; 54
    1b5e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b60:	80 81       	ld	r24, Z
    1b62:	91 81       	ldd	r25, Z+1	; 0x01
    1b64:	01 97       	sbiw	r24, 0x01	; 1
    1b66:	f1 f7       	brne	.-4      	; 0x1b64 <main+0x2a8>
    1b68:	fe 01       	movw	r30, r28
    1b6a:	e6 53       	subi	r30, 0x36	; 54
    1b6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1b6e:	91 83       	std	Z+1, r25	; 0x01
    1b70:	80 83       	st	Z, r24
    1b72:	22 c0       	rjmp	.+68     	; 0x1bb8 <main+0x2fc>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1b74:	8e 01       	movw	r16, r28
    1b76:	08 52       	subi	r16, 0x28	; 40
    1b78:	1e 4f       	sbci	r17, 0xFE	; 254
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	e7 52       	subi	r30, 0x27	; 39
    1b7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b80:	60 81       	ld	r22, Z
    1b82:	71 81       	ldd	r23, Z+1	; 0x01
    1b84:	82 81       	ldd	r24, Z+2	; 0x02
    1b86:	93 81       	ldd	r25, Z+3	; 0x03
    1b88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b8c:	dc 01       	movw	r26, r24
    1b8e:	cb 01       	movw	r24, r22
    1b90:	f8 01       	movw	r30, r16
    1b92:	80 83       	st	Z, r24
    1b94:	de 01       	movw	r26, r28
    1b96:	a7 53       	subi	r26, 0x37	; 55
    1b98:	be 4f       	sbci	r27, 0xFE	; 254
    1b9a:	fe 01       	movw	r30, r28
    1b9c:	e8 52       	subi	r30, 0x28	; 40
    1b9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba0:	80 81       	ld	r24, Z
    1ba2:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1ba4:	fe 01       	movw	r30, r28
    1ba6:	e7 53       	subi	r30, 0x37	; 55
    1ba8:	fe 4f       	sbci	r31, 0xFE	; 254
    1baa:	80 81       	ld	r24, Z
    1bac:	8a 95       	dec	r24
    1bae:	f1 f7       	brne	.-4      	; 0x1bac <main+0x2f0>
    1bb0:	fe 01       	movw	r30, r28
    1bb2:	e7 53       	subi	r30, 0x37	; 55
    1bb4:	fe 4f       	sbci	r31, 0xFE	; 254
    1bb6:	80 83       	st	Z, r24
				_delay_us(60);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1bb8:	82 e0       	ldi	r24, 0x02	; 2
    1bba:	62 e0       	ldi	r22, 0x02	; 2
    1bbc:	40 e0       	ldi	r20, 0x00	; 0
    1bbe:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    1bc2:	fe 01       	movw	r30, r28
    1bc4:	eb 53       	subi	r30, 0x3B	; 59
    1bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1bc8:	80 e0       	ldi	r24, 0x00	; 0
    1bca:	98 ec       	ldi	r25, 0xC8	; 200
    1bcc:	ab e9       	ldi	r26, 0x9B	; 155
    1bce:	b6 e4       	ldi	r27, 0x46	; 70
    1bd0:	80 83       	st	Z, r24
    1bd2:	91 83       	std	Z+1, r25	; 0x01
    1bd4:	a2 83       	std	Z+2, r26	; 0x02
    1bd6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1bd8:	8e 01       	movw	r16, r28
    1bda:	0f 53       	subi	r16, 0x3F	; 63
    1bdc:	1e 4f       	sbci	r17, 0xFE	; 254
    1bde:	fe 01       	movw	r30, r28
    1be0:	eb 53       	subi	r30, 0x3B	; 59
    1be2:	fe 4f       	sbci	r31, 0xFE	; 254
    1be4:	60 81       	ld	r22, Z
    1be6:	71 81       	ldd	r23, Z+1	; 0x01
    1be8:	82 81       	ldd	r24, Z+2	; 0x02
    1bea:	93 81       	ldd	r25, Z+3	; 0x03
    1bec:	20 e0       	ldi	r18, 0x00	; 0
    1bee:	30 e0       	ldi	r19, 0x00	; 0
    1bf0:	40 e8       	ldi	r20, 0x80	; 128
    1bf2:	50 e4       	ldi	r21, 0x40	; 64
    1bf4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bf8:	dc 01       	movw	r26, r24
    1bfa:	cb 01       	movw	r24, r22
    1bfc:	f8 01       	movw	r30, r16
    1bfe:	80 83       	st	Z, r24
    1c00:	91 83       	std	Z+1, r25	; 0x01
    1c02:	a2 83       	std	Z+2, r26	; 0x02
    1c04:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c06:	fe 01       	movw	r30, r28
    1c08:	ef 53       	subi	r30, 0x3F	; 63
    1c0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1c0c:	60 81       	ld	r22, Z
    1c0e:	71 81       	ldd	r23, Z+1	; 0x01
    1c10:	82 81       	ldd	r24, Z+2	; 0x02
    1c12:	93 81       	ldd	r25, Z+3	; 0x03
    1c14:	20 e0       	ldi	r18, 0x00	; 0
    1c16:	30 e0       	ldi	r19, 0x00	; 0
    1c18:	40 e8       	ldi	r20, 0x80	; 128
    1c1a:	5f e3       	ldi	r21, 0x3F	; 63
    1c1c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c20:	88 23       	and	r24, r24
    1c22:	34 f4       	brge	.+12     	; 0x1c30 <main+0x374>
		__ticks = 1;
    1c24:	fe 01       	movw	r30, r28
    1c26:	e0 54       	subi	r30, 0x40	; 64
    1c28:	fe 4f       	sbci	r31, 0xFE	; 254
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	80 83       	st	Z, r24
    1c2e:	e0 c0       	rjmp	.+448    	; 0x1df0 <main+0x534>
	else if (__tmp > 255)
    1c30:	fe 01       	movw	r30, r28
    1c32:	ef 53       	subi	r30, 0x3F	; 63
    1c34:	fe 4f       	sbci	r31, 0xFE	; 254
    1c36:	60 81       	ld	r22, Z
    1c38:	71 81       	ldd	r23, Z+1	; 0x01
    1c3a:	82 81       	ldd	r24, Z+2	; 0x02
    1c3c:	93 81       	ldd	r25, Z+3	; 0x03
    1c3e:	20 e0       	ldi	r18, 0x00	; 0
    1c40:	30 e0       	ldi	r19, 0x00	; 0
    1c42:	4f e7       	ldi	r20, 0x7F	; 127
    1c44:	53 e4       	ldi	r21, 0x43	; 67
    1c46:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c4a:	18 16       	cp	r1, r24
    1c4c:	0c f0       	brlt	.+2      	; 0x1c50 <main+0x394>
    1c4e:	c0 c0       	rjmp	.+384    	; 0x1dd0 <main+0x514>
	{
		_delay_ms(__us / 1000.0);
    1c50:	fe 01       	movw	r30, r28
    1c52:	eb 53       	subi	r30, 0x3B	; 59
    1c54:	fe 4f       	sbci	r31, 0xFE	; 254
    1c56:	60 81       	ld	r22, Z
    1c58:	71 81       	ldd	r23, Z+1	; 0x01
    1c5a:	82 81       	ldd	r24, Z+2	; 0x02
    1c5c:	93 81       	ldd	r25, Z+3	; 0x03
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	4a e7       	ldi	r20, 0x7A	; 122
    1c64:	54 e4       	ldi	r21, 0x44	; 68
    1c66:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1c6a:	dc 01       	movw	r26, r24
    1c6c:	cb 01       	movw	r24, r22
    1c6e:	fe 01       	movw	r30, r28
    1c70:	e4 54       	subi	r30, 0x44	; 68
    1c72:	fe 4f       	sbci	r31, 0xFE	; 254
    1c74:	80 83       	st	Z, r24
    1c76:	91 83       	std	Z+1, r25	; 0x01
    1c78:	a2 83       	std	Z+2, r26	; 0x02
    1c7a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c7c:	8e 01       	movw	r16, r28
    1c7e:	08 54       	subi	r16, 0x48	; 72
    1c80:	1e 4f       	sbci	r17, 0xFE	; 254
    1c82:	fe 01       	movw	r30, r28
    1c84:	e4 54       	subi	r30, 0x44	; 68
    1c86:	fe 4f       	sbci	r31, 0xFE	; 254
    1c88:	60 81       	ld	r22, Z
    1c8a:	71 81       	ldd	r23, Z+1	; 0x01
    1c8c:	82 81       	ldd	r24, Z+2	; 0x02
    1c8e:	93 81       	ldd	r25, Z+3	; 0x03
    1c90:	20 e0       	ldi	r18, 0x00	; 0
    1c92:	30 e8       	ldi	r19, 0x80	; 128
    1c94:	4b e3       	ldi	r20, 0x3B	; 59
    1c96:	55 e4       	ldi	r21, 0x45	; 69
    1c98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c9c:	dc 01       	movw	r26, r24
    1c9e:	cb 01       	movw	r24, r22
    1ca0:	f8 01       	movw	r30, r16
    1ca2:	80 83       	st	Z, r24
    1ca4:	91 83       	std	Z+1, r25	; 0x01
    1ca6:	a2 83       	std	Z+2, r26	; 0x02
    1ca8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1caa:	fe 01       	movw	r30, r28
    1cac:	e8 54       	subi	r30, 0x48	; 72
    1cae:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb0:	60 81       	ld	r22, Z
    1cb2:	71 81       	ldd	r23, Z+1	; 0x01
    1cb4:	82 81       	ldd	r24, Z+2	; 0x02
    1cb6:	93 81       	ldd	r25, Z+3	; 0x03
    1cb8:	20 e0       	ldi	r18, 0x00	; 0
    1cba:	30 e0       	ldi	r19, 0x00	; 0
    1cbc:	40 e8       	ldi	r20, 0x80	; 128
    1cbe:	5f e3       	ldi	r21, 0x3F	; 63
    1cc0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1cc4:	88 23       	and	r24, r24
    1cc6:	44 f4       	brge	.+16     	; 0x1cd8 <main+0x41c>
		__ticks = 1;
    1cc8:	fe 01       	movw	r30, r28
    1cca:	ea 54       	subi	r30, 0x4A	; 74
    1ccc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cce:	81 e0       	ldi	r24, 0x01	; 1
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	91 83       	std	Z+1, r25	; 0x01
    1cd4:	80 83       	st	Z, r24
    1cd6:	64 c0       	rjmp	.+200    	; 0x1da0 <main+0x4e4>
	else if (__tmp > 65535)
    1cd8:	fe 01       	movw	r30, r28
    1cda:	e8 54       	subi	r30, 0x48	; 72
    1cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cde:	60 81       	ld	r22, Z
    1ce0:	71 81       	ldd	r23, Z+1	; 0x01
    1ce2:	82 81       	ldd	r24, Z+2	; 0x02
    1ce4:	93 81       	ldd	r25, Z+3	; 0x03
    1ce6:	20 e0       	ldi	r18, 0x00	; 0
    1ce8:	3f ef       	ldi	r19, 0xFF	; 255
    1cea:	4f e7       	ldi	r20, 0x7F	; 127
    1cec:	57 e4       	ldi	r21, 0x47	; 71
    1cee:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1cf2:	18 16       	cp	r1, r24
    1cf4:	0c f0       	brlt	.+2      	; 0x1cf8 <main+0x43c>
    1cf6:	43 c0       	rjmp	.+134    	; 0x1d7e <main+0x4c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	e4 54       	subi	r30, 0x44	; 68
    1cfc:	fe 4f       	sbci	r31, 0xFE	; 254
    1cfe:	60 81       	ld	r22, Z
    1d00:	71 81       	ldd	r23, Z+1	; 0x01
    1d02:	82 81       	ldd	r24, Z+2	; 0x02
    1d04:	93 81       	ldd	r25, Z+3	; 0x03
    1d06:	20 e0       	ldi	r18, 0x00	; 0
    1d08:	30 e0       	ldi	r19, 0x00	; 0
    1d0a:	40 e2       	ldi	r20, 0x20	; 32
    1d0c:	51 e4       	ldi	r21, 0x41	; 65
    1d0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d12:	dc 01       	movw	r26, r24
    1d14:	cb 01       	movw	r24, r22
    1d16:	8e 01       	movw	r16, r28
    1d18:	0a 54       	subi	r16, 0x4A	; 74
    1d1a:	1e 4f       	sbci	r17, 0xFE	; 254
    1d1c:	bc 01       	movw	r22, r24
    1d1e:	cd 01       	movw	r24, r26
    1d20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d24:	dc 01       	movw	r26, r24
    1d26:	cb 01       	movw	r24, r22
    1d28:	f8 01       	movw	r30, r16
    1d2a:	91 83       	std	Z+1, r25	; 0x01
    1d2c:	80 83       	st	Z, r24
    1d2e:	1f c0       	rjmp	.+62     	; 0x1d6e <main+0x4b2>
    1d30:	fe 01       	movw	r30, r28
    1d32:	ec 54       	subi	r30, 0x4C	; 76
    1d34:	fe 4f       	sbci	r31, 0xFE	; 254
    1d36:	8c e2       	ldi	r24, 0x2C	; 44
    1d38:	91 e0       	ldi	r25, 0x01	; 1
    1d3a:	91 83       	std	Z+1, r25	; 0x01
    1d3c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1d3e:	fe 01       	movw	r30, r28
    1d40:	ec 54       	subi	r30, 0x4C	; 76
    1d42:	fe 4f       	sbci	r31, 0xFE	; 254
    1d44:	80 81       	ld	r24, Z
    1d46:	91 81       	ldd	r25, Z+1	; 0x01
    1d48:	01 97       	sbiw	r24, 0x01	; 1
    1d4a:	f1 f7       	brne	.-4      	; 0x1d48 <main+0x48c>
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	ec 54       	subi	r30, 0x4C	; 76
    1d50:	fe 4f       	sbci	r31, 0xFE	; 254
    1d52:	91 83       	std	Z+1, r25	; 0x01
    1d54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d56:	de 01       	movw	r26, r28
    1d58:	aa 54       	subi	r26, 0x4A	; 74
    1d5a:	be 4f       	sbci	r27, 0xFE	; 254
    1d5c:	fe 01       	movw	r30, r28
    1d5e:	ea 54       	subi	r30, 0x4A	; 74
    1d60:	fe 4f       	sbci	r31, 0xFE	; 254
    1d62:	80 81       	ld	r24, Z
    1d64:	91 81       	ldd	r25, Z+1	; 0x01
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	11 96       	adiw	r26, 0x01	; 1
    1d6a:	9c 93       	st	X, r25
    1d6c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d6e:	fe 01       	movw	r30, r28
    1d70:	ea 54       	subi	r30, 0x4A	; 74
    1d72:	fe 4f       	sbci	r31, 0xFE	; 254
    1d74:	80 81       	ld	r24, Z
    1d76:	91 81       	ldd	r25, Z+1	; 0x01
    1d78:	00 97       	sbiw	r24, 0x00	; 0
    1d7a:	d1 f6       	brne	.-76     	; 0x1d30 <main+0x474>
    1d7c:	4b c0       	rjmp	.+150    	; 0x1e14 <main+0x558>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d7e:	8e 01       	movw	r16, r28
    1d80:	0a 54       	subi	r16, 0x4A	; 74
    1d82:	1e 4f       	sbci	r17, 0xFE	; 254
    1d84:	fe 01       	movw	r30, r28
    1d86:	e8 54       	subi	r30, 0x48	; 72
    1d88:	fe 4f       	sbci	r31, 0xFE	; 254
    1d8a:	60 81       	ld	r22, Z
    1d8c:	71 81       	ldd	r23, Z+1	; 0x01
    1d8e:	82 81       	ldd	r24, Z+2	; 0x02
    1d90:	93 81       	ldd	r25, Z+3	; 0x03
    1d92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d96:	dc 01       	movw	r26, r24
    1d98:	cb 01       	movw	r24, r22
    1d9a:	f8 01       	movw	r30, r16
    1d9c:	91 83       	std	Z+1, r25	; 0x01
    1d9e:	80 83       	st	Z, r24
    1da0:	de 01       	movw	r26, r28
    1da2:	ae 54       	subi	r26, 0x4E	; 78
    1da4:	be 4f       	sbci	r27, 0xFE	; 254
    1da6:	fe 01       	movw	r30, r28
    1da8:	ea 54       	subi	r30, 0x4A	; 74
    1daa:	fe 4f       	sbci	r31, 0xFE	; 254
    1dac:	80 81       	ld	r24, Z
    1dae:	91 81       	ldd	r25, Z+1	; 0x01
    1db0:	11 96       	adiw	r26, 0x01	; 1
    1db2:	9c 93       	st	X, r25
    1db4:	8e 93       	st	-X, r24
    1db6:	fe 01       	movw	r30, r28
    1db8:	ee 54       	subi	r30, 0x4E	; 78
    1dba:	fe 4f       	sbci	r31, 0xFE	; 254
    1dbc:	80 81       	ld	r24, Z
    1dbe:	91 81       	ldd	r25, Z+1	; 0x01
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	f1 f7       	brne	.-4      	; 0x1dc0 <main+0x504>
    1dc4:	fe 01       	movw	r30, r28
    1dc6:	ee 54       	subi	r30, 0x4E	; 78
    1dc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dca:	91 83       	std	Z+1, r25	; 0x01
    1dcc:	80 83       	st	Z, r24
    1dce:	22 c0       	rjmp	.+68     	; 0x1e14 <main+0x558>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1dd0:	8e 01       	movw	r16, r28
    1dd2:	00 54       	subi	r16, 0x40	; 64
    1dd4:	1e 4f       	sbci	r17, 0xFE	; 254
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	ef 53       	subi	r30, 0x3F	; 63
    1dda:	fe 4f       	sbci	r31, 0xFE	; 254
    1ddc:	60 81       	ld	r22, Z
    1dde:	71 81       	ldd	r23, Z+1	; 0x01
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1de8:	dc 01       	movw	r26, r24
    1dea:	cb 01       	movw	r24, r22
    1dec:	f8 01       	movw	r30, r16
    1dee:	80 83       	st	Z, r24
    1df0:	de 01       	movw	r26, r28
    1df2:	af 54       	subi	r26, 0x4F	; 79
    1df4:	be 4f       	sbci	r27, 0xFE	; 254
    1df6:	fe 01       	movw	r30, r28
    1df8:	e0 54       	subi	r30, 0x40	; 64
    1dfa:	fe 4f       	sbci	r31, 0xFE	; 254
    1dfc:	80 81       	ld	r24, Z
    1dfe:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1e00:	fe 01       	movw	r30, r28
    1e02:	ef 54       	subi	r30, 0x4F	; 79
    1e04:	fe 4f       	sbci	r31, 0xFE	; 254
    1e06:	80 81       	ld	r24, Z
    1e08:	8a 95       	dec	r24
    1e0a:	f1 f7       	brne	.-4      	; 0x1e08 <main+0x54c>
    1e0c:	fe 01       	movw	r30, r28
    1e0e:	ef 54       	subi	r30, 0x4F	; 79
    1e10:	fe 4f       	sbci	r31, 0xFE	; 254
    1e12:	80 83       	st	Z, r24
				_delay_us(19940);
				LCD_voidSetCursor(2, 1);
    1e14:	82 e0       	ldi	r24, 0x02	; 2
    1e16:	61 e0       	ldi	r22, 0x01	; 1
    1e18:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("0");
    1e1c:	87 e6       	ldi	r24, 0x67	; 103
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
			{SET_BIT(PORTC,7);}
			else
			{CLEAR_BIT(PORTC,7);}*/

if(x==0){
			for( i=0;i<50;i++) //zero Angle
    1e24:	de 01       	movw	r26, r28
    1e26:	ad 51       	subi	r26, 0x1D	; 29
    1e28:	be 4f       	sbci	r27, 0xFE	; 254
    1e2a:	fe 01       	movw	r30, r28
    1e2c:	ed 51       	subi	r30, 0x1D	; 29
    1e2e:	fe 4f       	sbci	r31, 0xFE	; 254
    1e30:	80 81       	ld	r24, Z
    1e32:	91 81       	ldd	r25, Z+1	; 0x01
    1e34:	01 96       	adiw	r24, 0x01	; 1
    1e36:	11 96       	adiw	r26, 0x01	; 1
    1e38:	9c 93       	st	X, r25
    1e3a:	8e 93       	st	-X, r24
    1e3c:	fe 01       	movw	r30, r28
    1e3e:	ed 51       	subi	r30, 0x1D	; 29
    1e40:	fe 4f       	sbci	r31, 0xFE	; 254
    1e42:	80 81       	ld	r24, Z
    1e44:	91 81       	ldd	r25, Z+1	; 0x01
    1e46:	82 33       	cpi	r24, 0x32	; 50
    1e48:	91 05       	cpc	r25, r1
    1e4a:	08 f4       	brcc	.+2      	; 0x1e4e <main+0x592>
    1e4c:	87 cd       	rjmp	.-1266   	; 0x195c <main+0xa0>
				LCD_voidWriteString("0");
			}



			for( i=0;i<50;i++)// angle 45
    1e4e:	fe 01       	movw	r30, r28
    1e50:	ed 51       	subi	r30, 0x1D	; 29
    1e52:	fe 4f       	sbci	r31, 0xFE	; 254
    1e54:	11 82       	std	Z+1, r1	; 0x01
    1e56:	10 82       	st	Z, r1
    1e58:	70 c2       	rjmp	.+1248   	; 0x233a <main+0xa7e>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    1e5a:	82 e0       	ldi	r24, 0x02	; 2
    1e5c:	62 e0       	ldi	r22, 0x02	; 2
    1e5e:	41 e0       	ldi	r20, 0x01	; 1
    1e60:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    1e64:	fe 01       	movw	r30, r28
    1e66:	e3 55       	subi	r30, 0x53	; 83
    1e68:	fe 4f       	sbci	r31, 0xFE	; 254
    1e6a:	80 e0       	ldi	r24, 0x00	; 0
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	a8 ec       	ldi	r26, 0xC8	; 200
    1e70:	b2 e4       	ldi	r27, 0x42	; 66
    1e72:	80 83       	st	Z, r24
    1e74:	91 83       	std	Z+1, r25	; 0x01
    1e76:	a2 83       	std	Z+2, r26	; 0x02
    1e78:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e7a:	8e 01       	movw	r16, r28
    1e7c:	07 55       	subi	r16, 0x57	; 87
    1e7e:	1e 4f       	sbci	r17, 0xFE	; 254
    1e80:	fe 01       	movw	r30, r28
    1e82:	e3 55       	subi	r30, 0x53	; 83
    1e84:	fe 4f       	sbci	r31, 0xFE	; 254
    1e86:	60 81       	ld	r22, Z
    1e88:	71 81       	ldd	r23, Z+1	; 0x01
    1e8a:	82 81       	ldd	r24, Z+2	; 0x02
    1e8c:	93 81       	ldd	r25, Z+3	; 0x03
    1e8e:	20 e0       	ldi	r18, 0x00	; 0
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	40 e8       	ldi	r20, 0x80	; 128
    1e94:	50 e4       	ldi	r21, 0x40	; 64
    1e96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	cb 01       	movw	r24, r22
    1e9e:	f8 01       	movw	r30, r16
    1ea0:	80 83       	st	Z, r24
    1ea2:	91 83       	std	Z+1, r25	; 0x01
    1ea4:	a2 83       	std	Z+2, r26	; 0x02
    1ea6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ea8:	fe 01       	movw	r30, r28
    1eaa:	e7 55       	subi	r30, 0x57	; 87
    1eac:	fe 4f       	sbci	r31, 0xFE	; 254
    1eae:	60 81       	ld	r22, Z
    1eb0:	71 81       	ldd	r23, Z+1	; 0x01
    1eb2:	82 81       	ldd	r24, Z+2	; 0x02
    1eb4:	93 81       	ldd	r25, Z+3	; 0x03
    1eb6:	20 e0       	ldi	r18, 0x00	; 0
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	40 e8       	ldi	r20, 0x80	; 128
    1ebc:	5f e3       	ldi	r21, 0x3F	; 63
    1ebe:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1ec2:	88 23       	and	r24, r24
    1ec4:	34 f4       	brge	.+12     	; 0x1ed2 <main+0x616>
		__ticks = 1;
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	e8 55       	subi	r30, 0x58	; 88
    1eca:	fe 4f       	sbci	r31, 0xFE	; 254
    1ecc:	81 e0       	ldi	r24, 0x01	; 1
    1ece:	80 83       	st	Z, r24
    1ed0:	e0 c0       	rjmp	.+448    	; 0x2092 <main+0x7d6>
	else if (__tmp > 255)
    1ed2:	fe 01       	movw	r30, r28
    1ed4:	e7 55       	subi	r30, 0x57	; 87
    1ed6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ed8:	60 81       	ld	r22, Z
    1eda:	71 81       	ldd	r23, Z+1	; 0x01
    1edc:	82 81       	ldd	r24, Z+2	; 0x02
    1ede:	93 81       	ldd	r25, Z+3	; 0x03
    1ee0:	20 e0       	ldi	r18, 0x00	; 0
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	4f e7       	ldi	r20, 0x7F	; 127
    1ee6:	53 e4       	ldi	r21, 0x43	; 67
    1ee8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1eec:	18 16       	cp	r1, r24
    1eee:	0c f0       	brlt	.+2      	; 0x1ef2 <main+0x636>
    1ef0:	c0 c0       	rjmp	.+384    	; 0x2072 <main+0x7b6>
	{
		_delay_ms(__us / 1000.0);
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	e3 55       	subi	r30, 0x53	; 83
    1ef6:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef8:	60 81       	ld	r22, Z
    1efa:	71 81       	ldd	r23, Z+1	; 0x01
    1efc:	82 81       	ldd	r24, Z+2	; 0x02
    1efe:	93 81       	ldd	r25, Z+3	; 0x03
    1f00:	20 e0       	ldi	r18, 0x00	; 0
    1f02:	30 e0       	ldi	r19, 0x00	; 0
    1f04:	4a e7       	ldi	r20, 0x7A	; 122
    1f06:	54 e4       	ldi	r21, 0x44	; 68
    1f08:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1f0c:	dc 01       	movw	r26, r24
    1f0e:	cb 01       	movw	r24, r22
    1f10:	fe 01       	movw	r30, r28
    1f12:	ec 55       	subi	r30, 0x5C	; 92
    1f14:	fe 4f       	sbci	r31, 0xFE	; 254
    1f16:	80 83       	st	Z, r24
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	a2 83       	std	Z+2, r26	; 0x02
    1f1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f1e:	8e 01       	movw	r16, r28
    1f20:	00 56       	subi	r16, 0x60	; 96
    1f22:	1e 4f       	sbci	r17, 0xFE	; 254
    1f24:	fe 01       	movw	r30, r28
    1f26:	ec 55       	subi	r30, 0x5C	; 92
    1f28:	fe 4f       	sbci	r31, 0xFE	; 254
    1f2a:	60 81       	ld	r22, Z
    1f2c:	71 81       	ldd	r23, Z+1	; 0x01
    1f2e:	82 81       	ldd	r24, Z+2	; 0x02
    1f30:	93 81       	ldd	r25, Z+3	; 0x03
    1f32:	20 e0       	ldi	r18, 0x00	; 0
    1f34:	30 e8       	ldi	r19, 0x80	; 128
    1f36:	4b e3       	ldi	r20, 0x3B	; 59
    1f38:	55 e4       	ldi	r21, 0x45	; 69
    1f3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f3e:	dc 01       	movw	r26, r24
    1f40:	cb 01       	movw	r24, r22
    1f42:	f8 01       	movw	r30, r16
    1f44:	80 83       	st	Z, r24
    1f46:	91 83       	std	Z+1, r25	; 0x01
    1f48:	a2 83       	std	Z+2, r26	; 0x02
    1f4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	e0 56       	subi	r30, 0x60	; 96
    1f50:	fe 4f       	sbci	r31, 0xFE	; 254
    1f52:	60 81       	ld	r22, Z
    1f54:	71 81       	ldd	r23, Z+1	; 0x01
    1f56:	82 81       	ldd	r24, Z+2	; 0x02
    1f58:	93 81       	ldd	r25, Z+3	; 0x03
    1f5a:	20 e0       	ldi	r18, 0x00	; 0
    1f5c:	30 e0       	ldi	r19, 0x00	; 0
    1f5e:	40 e8       	ldi	r20, 0x80	; 128
    1f60:	5f e3       	ldi	r21, 0x3F	; 63
    1f62:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1f66:	88 23       	and	r24, r24
    1f68:	44 f4       	brge	.+16     	; 0x1f7a <main+0x6be>
		__ticks = 1;
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	e2 56       	subi	r30, 0x62	; 98
    1f6e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f70:	81 e0       	ldi	r24, 0x01	; 1
    1f72:	90 e0       	ldi	r25, 0x00	; 0
    1f74:	91 83       	std	Z+1, r25	; 0x01
    1f76:	80 83       	st	Z, r24
    1f78:	64 c0       	rjmp	.+200    	; 0x2042 <main+0x786>
	else if (__tmp > 65535)
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e0 56       	subi	r30, 0x60	; 96
    1f7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1f80:	60 81       	ld	r22, Z
    1f82:	71 81       	ldd	r23, Z+1	; 0x01
    1f84:	82 81       	ldd	r24, Z+2	; 0x02
    1f86:	93 81       	ldd	r25, Z+3	; 0x03
    1f88:	20 e0       	ldi	r18, 0x00	; 0
    1f8a:	3f ef       	ldi	r19, 0xFF	; 255
    1f8c:	4f e7       	ldi	r20, 0x7F	; 127
    1f8e:	57 e4       	ldi	r21, 0x47	; 71
    1f90:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1f94:	18 16       	cp	r1, r24
    1f96:	0c f0       	brlt	.+2      	; 0x1f9a <main+0x6de>
    1f98:	43 c0       	rjmp	.+134    	; 0x2020 <main+0x764>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f9a:	fe 01       	movw	r30, r28
    1f9c:	ec 55       	subi	r30, 0x5C	; 92
    1f9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa0:	60 81       	ld	r22, Z
    1fa2:	71 81       	ldd	r23, Z+1	; 0x01
    1fa4:	82 81       	ldd	r24, Z+2	; 0x02
    1fa6:	93 81       	ldd	r25, Z+3	; 0x03
    1fa8:	20 e0       	ldi	r18, 0x00	; 0
    1faa:	30 e0       	ldi	r19, 0x00	; 0
    1fac:	40 e2       	ldi	r20, 0x20	; 32
    1fae:	51 e4       	ldi	r21, 0x41	; 65
    1fb0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fb4:	dc 01       	movw	r26, r24
    1fb6:	cb 01       	movw	r24, r22
    1fb8:	8e 01       	movw	r16, r28
    1fba:	02 56       	subi	r16, 0x62	; 98
    1fbc:	1e 4f       	sbci	r17, 0xFE	; 254
    1fbe:	bc 01       	movw	r22, r24
    1fc0:	cd 01       	movw	r24, r26
    1fc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cb 01       	movw	r24, r22
    1fca:	f8 01       	movw	r30, r16
    1fcc:	91 83       	std	Z+1, r25	; 0x01
    1fce:	80 83       	st	Z, r24
    1fd0:	1f c0       	rjmp	.+62     	; 0x2010 <main+0x754>
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	e4 56       	subi	r30, 0x64	; 100
    1fd6:	fe 4f       	sbci	r31, 0xFE	; 254
    1fd8:	8c e2       	ldi	r24, 0x2C	; 44
    1fda:	91 e0       	ldi	r25, 0x01	; 1
    1fdc:	91 83       	std	Z+1, r25	; 0x01
    1fde:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1fe0:	fe 01       	movw	r30, r28
    1fe2:	e4 56       	subi	r30, 0x64	; 100
    1fe4:	fe 4f       	sbci	r31, 0xFE	; 254
    1fe6:	80 81       	ld	r24, Z
    1fe8:	91 81       	ldd	r25, Z+1	; 0x01
    1fea:	01 97       	sbiw	r24, 0x01	; 1
    1fec:	f1 f7       	brne	.-4      	; 0x1fea <main+0x72e>
    1fee:	fe 01       	movw	r30, r28
    1ff0:	e4 56       	subi	r30, 0x64	; 100
    1ff2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ff4:	91 83       	std	Z+1, r25	; 0x01
    1ff6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ff8:	de 01       	movw	r26, r28
    1ffa:	a2 56       	subi	r26, 0x62	; 98
    1ffc:	be 4f       	sbci	r27, 0xFE	; 254
    1ffe:	fe 01       	movw	r30, r28
    2000:	e2 56       	subi	r30, 0x62	; 98
    2002:	fe 4f       	sbci	r31, 0xFE	; 254
    2004:	80 81       	ld	r24, Z
    2006:	91 81       	ldd	r25, Z+1	; 0x01
    2008:	01 97       	sbiw	r24, 0x01	; 1
    200a:	11 96       	adiw	r26, 0x01	; 1
    200c:	9c 93       	st	X, r25
    200e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2010:	fe 01       	movw	r30, r28
    2012:	e2 56       	subi	r30, 0x62	; 98
    2014:	fe 4f       	sbci	r31, 0xFE	; 254
    2016:	80 81       	ld	r24, Z
    2018:	91 81       	ldd	r25, Z+1	; 0x01
    201a:	00 97       	sbiw	r24, 0x00	; 0
    201c:	d1 f6       	brne	.-76     	; 0x1fd2 <main+0x716>
    201e:	4b c0       	rjmp	.+150    	; 0x20b6 <main+0x7fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2020:	8e 01       	movw	r16, r28
    2022:	02 56       	subi	r16, 0x62	; 98
    2024:	1e 4f       	sbci	r17, 0xFE	; 254
    2026:	fe 01       	movw	r30, r28
    2028:	e0 56       	subi	r30, 0x60	; 96
    202a:	fe 4f       	sbci	r31, 0xFE	; 254
    202c:	60 81       	ld	r22, Z
    202e:	71 81       	ldd	r23, Z+1	; 0x01
    2030:	82 81       	ldd	r24, Z+2	; 0x02
    2032:	93 81       	ldd	r25, Z+3	; 0x03
    2034:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2038:	dc 01       	movw	r26, r24
    203a:	cb 01       	movw	r24, r22
    203c:	f8 01       	movw	r30, r16
    203e:	91 83       	std	Z+1, r25	; 0x01
    2040:	80 83       	st	Z, r24
    2042:	de 01       	movw	r26, r28
    2044:	a6 56       	subi	r26, 0x66	; 102
    2046:	be 4f       	sbci	r27, 0xFE	; 254
    2048:	fe 01       	movw	r30, r28
    204a:	e2 56       	subi	r30, 0x62	; 98
    204c:	fe 4f       	sbci	r31, 0xFE	; 254
    204e:	80 81       	ld	r24, Z
    2050:	91 81       	ldd	r25, Z+1	; 0x01
    2052:	11 96       	adiw	r26, 0x01	; 1
    2054:	9c 93       	st	X, r25
    2056:	8e 93       	st	-X, r24
    2058:	fe 01       	movw	r30, r28
    205a:	e6 56       	subi	r30, 0x66	; 102
    205c:	fe 4f       	sbci	r31, 0xFE	; 254
    205e:	80 81       	ld	r24, Z
    2060:	91 81       	ldd	r25, Z+1	; 0x01
    2062:	01 97       	sbiw	r24, 0x01	; 1
    2064:	f1 f7       	brne	.-4      	; 0x2062 <main+0x7a6>
    2066:	fe 01       	movw	r30, r28
    2068:	e6 56       	subi	r30, 0x66	; 102
    206a:	fe 4f       	sbci	r31, 0xFE	; 254
    206c:	91 83       	std	Z+1, r25	; 0x01
    206e:	80 83       	st	Z, r24
    2070:	22 c0       	rjmp	.+68     	; 0x20b6 <main+0x7fa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2072:	8e 01       	movw	r16, r28
    2074:	08 55       	subi	r16, 0x58	; 88
    2076:	1e 4f       	sbci	r17, 0xFE	; 254
    2078:	fe 01       	movw	r30, r28
    207a:	e7 55       	subi	r30, 0x57	; 87
    207c:	fe 4f       	sbci	r31, 0xFE	; 254
    207e:	60 81       	ld	r22, Z
    2080:	71 81       	ldd	r23, Z+1	; 0x01
    2082:	82 81       	ldd	r24, Z+2	; 0x02
    2084:	93 81       	ldd	r25, Z+3	; 0x03
    2086:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    208a:	dc 01       	movw	r26, r24
    208c:	cb 01       	movw	r24, r22
    208e:	f8 01       	movw	r30, r16
    2090:	80 83       	st	Z, r24
    2092:	de 01       	movw	r26, r28
    2094:	a7 56       	subi	r26, 0x67	; 103
    2096:	be 4f       	sbci	r27, 0xFE	; 254
    2098:	fe 01       	movw	r30, r28
    209a:	e8 55       	subi	r30, 0x58	; 88
    209c:	fe 4f       	sbci	r31, 0xFE	; 254
    209e:	80 81       	ld	r24, Z
    20a0:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    20a2:	fe 01       	movw	r30, r28
    20a4:	e7 56       	subi	r30, 0x67	; 103
    20a6:	fe 4f       	sbci	r31, 0xFE	; 254
    20a8:	80 81       	ld	r24, Z
    20aa:	8a 95       	dec	r24
    20ac:	f1 f7       	brne	.-4      	; 0x20aa <main+0x7ee>
    20ae:	fe 01       	movw	r30, r28
    20b0:	e7 56       	subi	r30, 0x67	; 103
    20b2:	fe 4f       	sbci	r31, 0xFE	; 254
    20b4:	80 83       	st	Z, r24
				_delay_us(100);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    20b6:	82 e0       	ldi	r24, 0x02	; 2
    20b8:	62 e0       	ldi	r22, 0x02	; 2
    20ba:	40 e0       	ldi	r20, 0x00	; 0
    20bc:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    20c0:	fe 01       	movw	r30, r28
    20c2:	eb 56       	subi	r30, 0x6B	; 107
    20c4:	fe 4f       	sbci	r31, 0xFE	; 254
    20c6:	80 e0       	ldi	r24, 0x00	; 0
    20c8:	98 e7       	ldi	r25, 0x78	; 120
    20ca:	ab e9       	ldi	r26, 0x9B	; 155
    20cc:	b6 e4       	ldi	r27, 0x46	; 70
    20ce:	80 83       	st	Z, r24
    20d0:	91 83       	std	Z+1, r25	; 0x01
    20d2:	a2 83       	std	Z+2, r26	; 0x02
    20d4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    20d6:	8e 01       	movw	r16, r28
    20d8:	0f 56       	subi	r16, 0x6F	; 111
    20da:	1e 4f       	sbci	r17, 0xFE	; 254
    20dc:	fe 01       	movw	r30, r28
    20de:	eb 56       	subi	r30, 0x6B	; 107
    20e0:	fe 4f       	sbci	r31, 0xFE	; 254
    20e2:	60 81       	ld	r22, Z
    20e4:	71 81       	ldd	r23, Z+1	; 0x01
    20e6:	82 81       	ldd	r24, Z+2	; 0x02
    20e8:	93 81       	ldd	r25, Z+3	; 0x03
    20ea:	20 e0       	ldi	r18, 0x00	; 0
    20ec:	30 e0       	ldi	r19, 0x00	; 0
    20ee:	40 e8       	ldi	r20, 0x80	; 128
    20f0:	50 e4       	ldi	r21, 0x40	; 64
    20f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20f6:	dc 01       	movw	r26, r24
    20f8:	cb 01       	movw	r24, r22
    20fa:	f8 01       	movw	r30, r16
    20fc:	80 83       	st	Z, r24
    20fe:	91 83       	std	Z+1, r25	; 0x01
    2100:	a2 83       	std	Z+2, r26	; 0x02
    2102:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2104:	fe 01       	movw	r30, r28
    2106:	ef 56       	subi	r30, 0x6F	; 111
    2108:	fe 4f       	sbci	r31, 0xFE	; 254
    210a:	60 81       	ld	r22, Z
    210c:	71 81       	ldd	r23, Z+1	; 0x01
    210e:	82 81       	ldd	r24, Z+2	; 0x02
    2110:	93 81       	ldd	r25, Z+3	; 0x03
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	40 e8       	ldi	r20, 0x80	; 128
    2118:	5f e3       	ldi	r21, 0x3F	; 63
    211a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    211e:	88 23       	and	r24, r24
    2120:	34 f4       	brge	.+12     	; 0x212e <main+0x872>
		__ticks = 1;
    2122:	fe 01       	movw	r30, r28
    2124:	e0 57       	subi	r30, 0x70	; 112
    2126:	fe 4f       	sbci	r31, 0xFE	; 254
    2128:	81 e0       	ldi	r24, 0x01	; 1
    212a:	80 83       	st	Z, r24
    212c:	e0 c0       	rjmp	.+448    	; 0x22ee <main+0xa32>
	else if (__tmp > 255)
    212e:	fe 01       	movw	r30, r28
    2130:	ef 56       	subi	r30, 0x6F	; 111
    2132:	fe 4f       	sbci	r31, 0xFE	; 254
    2134:	60 81       	ld	r22, Z
    2136:	71 81       	ldd	r23, Z+1	; 0x01
    2138:	82 81       	ldd	r24, Z+2	; 0x02
    213a:	93 81       	ldd	r25, Z+3	; 0x03
    213c:	20 e0       	ldi	r18, 0x00	; 0
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	4f e7       	ldi	r20, 0x7F	; 127
    2142:	53 e4       	ldi	r21, 0x43	; 67
    2144:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2148:	18 16       	cp	r1, r24
    214a:	0c f0       	brlt	.+2      	; 0x214e <main+0x892>
    214c:	c0 c0       	rjmp	.+384    	; 0x22ce <main+0xa12>
	{
		_delay_ms(__us / 1000.0);
    214e:	fe 01       	movw	r30, r28
    2150:	eb 56       	subi	r30, 0x6B	; 107
    2152:	fe 4f       	sbci	r31, 0xFE	; 254
    2154:	60 81       	ld	r22, Z
    2156:	71 81       	ldd	r23, Z+1	; 0x01
    2158:	82 81       	ldd	r24, Z+2	; 0x02
    215a:	93 81       	ldd	r25, Z+3	; 0x03
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	30 e0       	ldi	r19, 0x00	; 0
    2160:	4a e7       	ldi	r20, 0x7A	; 122
    2162:	54 e4       	ldi	r21, 0x44	; 68
    2164:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2168:	dc 01       	movw	r26, r24
    216a:	cb 01       	movw	r24, r22
    216c:	fe 01       	movw	r30, r28
    216e:	e4 57       	subi	r30, 0x74	; 116
    2170:	fe 4f       	sbci	r31, 0xFE	; 254
    2172:	80 83       	st	Z, r24
    2174:	91 83       	std	Z+1, r25	; 0x01
    2176:	a2 83       	std	Z+2, r26	; 0x02
    2178:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    217a:	8e 01       	movw	r16, r28
    217c:	08 57       	subi	r16, 0x78	; 120
    217e:	1e 4f       	sbci	r17, 0xFE	; 254
    2180:	fe 01       	movw	r30, r28
    2182:	e4 57       	subi	r30, 0x74	; 116
    2184:	fe 4f       	sbci	r31, 0xFE	; 254
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	82 81       	ldd	r24, Z+2	; 0x02
    218c:	93 81       	ldd	r25, Z+3	; 0x03
    218e:	20 e0       	ldi	r18, 0x00	; 0
    2190:	30 e8       	ldi	r19, 0x80	; 128
    2192:	4b e3       	ldi	r20, 0x3B	; 59
    2194:	55 e4       	ldi	r21, 0x45	; 69
    2196:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	f8 01       	movw	r30, r16
    21a0:	80 83       	st	Z, r24
    21a2:	91 83       	std	Z+1, r25	; 0x01
    21a4:	a2 83       	std	Z+2, r26	; 0x02
    21a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21a8:	fe 01       	movw	r30, r28
    21aa:	e8 57       	subi	r30, 0x78	; 120
    21ac:	fe 4f       	sbci	r31, 0xFE	; 254
    21ae:	60 81       	ld	r22, Z
    21b0:	71 81       	ldd	r23, Z+1	; 0x01
    21b2:	82 81       	ldd	r24, Z+2	; 0x02
    21b4:	93 81       	ldd	r25, Z+3	; 0x03
    21b6:	20 e0       	ldi	r18, 0x00	; 0
    21b8:	30 e0       	ldi	r19, 0x00	; 0
    21ba:	40 e8       	ldi	r20, 0x80	; 128
    21bc:	5f e3       	ldi	r21, 0x3F	; 63
    21be:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    21c2:	88 23       	and	r24, r24
    21c4:	44 f4       	brge	.+16     	; 0x21d6 <main+0x91a>
		__ticks = 1;
    21c6:	fe 01       	movw	r30, r28
    21c8:	ea 57       	subi	r30, 0x7A	; 122
    21ca:	fe 4f       	sbci	r31, 0xFE	; 254
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	91 83       	std	Z+1, r25	; 0x01
    21d2:	80 83       	st	Z, r24
    21d4:	64 c0       	rjmp	.+200    	; 0x229e <main+0x9e2>
	else if (__tmp > 65535)
    21d6:	fe 01       	movw	r30, r28
    21d8:	e8 57       	subi	r30, 0x78	; 120
    21da:	fe 4f       	sbci	r31, 0xFE	; 254
    21dc:	60 81       	ld	r22, Z
    21de:	71 81       	ldd	r23, Z+1	; 0x01
    21e0:	82 81       	ldd	r24, Z+2	; 0x02
    21e2:	93 81       	ldd	r25, Z+3	; 0x03
    21e4:	20 e0       	ldi	r18, 0x00	; 0
    21e6:	3f ef       	ldi	r19, 0xFF	; 255
    21e8:	4f e7       	ldi	r20, 0x7F	; 127
    21ea:	57 e4       	ldi	r21, 0x47	; 71
    21ec:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    21f0:	18 16       	cp	r1, r24
    21f2:	0c f0       	brlt	.+2      	; 0x21f6 <main+0x93a>
    21f4:	43 c0       	rjmp	.+134    	; 0x227c <main+0x9c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21f6:	fe 01       	movw	r30, r28
    21f8:	e4 57       	subi	r30, 0x74	; 116
    21fa:	fe 4f       	sbci	r31, 0xFE	; 254
    21fc:	60 81       	ld	r22, Z
    21fe:	71 81       	ldd	r23, Z+1	; 0x01
    2200:	82 81       	ldd	r24, Z+2	; 0x02
    2202:	93 81       	ldd	r25, Z+3	; 0x03
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	40 e2       	ldi	r20, 0x20	; 32
    220a:	51 e4       	ldi	r21, 0x41	; 65
    220c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	8e 01       	movw	r16, r28
    2216:	0a 57       	subi	r16, 0x7A	; 122
    2218:	1e 4f       	sbci	r17, 0xFE	; 254
    221a:	bc 01       	movw	r22, r24
    221c:	cd 01       	movw	r24, r26
    221e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2222:	dc 01       	movw	r26, r24
    2224:	cb 01       	movw	r24, r22
    2226:	f8 01       	movw	r30, r16
    2228:	91 83       	std	Z+1, r25	; 0x01
    222a:	80 83       	st	Z, r24
    222c:	1f c0       	rjmp	.+62     	; 0x226c <main+0x9b0>
    222e:	fe 01       	movw	r30, r28
    2230:	ec 57       	subi	r30, 0x7C	; 124
    2232:	fe 4f       	sbci	r31, 0xFE	; 254
    2234:	8c e2       	ldi	r24, 0x2C	; 44
    2236:	91 e0       	ldi	r25, 0x01	; 1
    2238:	91 83       	std	Z+1, r25	; 0x01
    223a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    223c:	fe 01       	movw	r30, r28
    223e:	ec 57       	subi	r30, 0x7C	; 124
    2240:	fe 4f       	sbci	r31, 0xFE	; 254
    2242:	80 81       	ld	r24, Z
    2244:	91 81       	ldd	r25, Z+1	; 0x01
    2246:	01 97       	sbiw	r24, 0x01	; 1
    2248:	f1 f7       	brne	.-4      	; 0x2246 <main+0x98a>
    224a:	fe 01       	movw	r30, r28
    224c:	ec 57       	subi	r30, 0x7C	; 124
    224e:	fe 4f       	sbci	r31, 0xFE	; 254
    2250:	91 83       	std	Z+1, r25	; 0x01
    2252:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2254:	de 01       	movw	r26, r28
    2256:	aa 57       	subi	r26, 0x7A	; 122
    2258:	be 4f       	sbci	r27, 0xFE	; 254
    225a:	fe 01       	movw	r30, r28
    225c:	ea 57       	subi	r30, 0x7A	; 122
    225e:	fe 4f       	sbci	r31, 0xFE	; 254
    2260:	80 81       	ld	r24, Z
    2262:	91 81       	ldd	r25, Z+1	; 0x01
    2264:	01 97       	sbiw	r24, 0x01	; 1
    2266:	11 96       	adiw	r26, 0x01	; 1
    2268:	9c 93       	st	X, r25
    226a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    226c:	fe 01       	movw	r30, r28
    226e:	ea 57       	subi	r30, 0x7A	; 122
    2270:	fe 4f       	sbci	r31, 0xFE	; 254
    2272:	80 81       	ld	r24, Z
    2274:	91 81       	ldd	r25, Z+1	; 0x01
    2276:	00 97       	sbiw	r24, 0x00	; 0
    2278:	d1 f6       	brne	.-76     	; 0x222e <main+0x972>
    227a:	4b c0       	rjmp	.+150    	; 0x2312 <main+0xa56>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    227c:	8e 01       	movw	r16, r28
    227e:	0a 57       	subi	r16, 0x7A	; 122
    2280:	1e 4f       	sbci	r17, 0xFE	; 254
    2282:	fe 01       	movw	r30, r28
    2284:	e8 57       	subi	r30, 0x78	; 120
    2286:	fe 4f       	sbci	r31, 0xFE	; 254
    2288:	60 81       	ld	r22, Z
    228a:	71 81       	ldd	r23, Z+1	; 0x01
    228c:	82 81       	ldd	r24, Z+2	; 0x02
    228e:	93 81       	ldd	r25, Z+3	; 0x03
    2290:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2294:	dc 01       	movw	r26, r24
    2296:	cb 01       	movw	r24, r22
    2298:	f8 01       	movw	r30, r16
    229a:	91 83       	std	Z+1, r25	; 0x01
    229c:	80 83       	st	Z, r24
    229e:	de 01       	movw	r26, r28
    22a0:	ae 57       	subi	r26, 0x7E	; 126
    22a2:	be 4f       	sbci	r27, 0xFE	; 254
    22a4:	fe 01       	movw	r30, r28
    22a6:	ea 57       	subi	r30, 0x7A	; 122
    22a8:	fe 4f       	sbci	r31, 0xFE	; 254
    22aa:	80 81       	ld	r24, Z
    22ac:	91 81       	ldd	r25, Z+1	; 0x01
    22ae:	11 96       	adiw	r26, 0x01	; 1
    22b0:	9c 93       	st	X, r25
    22b2:	8e 93       	st	-X, r24
    22b4:	fe 01       	movw	r30, r28
    22b6:	ee 57       	subi	r30, 0x7E	; 126
    22b8:	fe 4f       	sbci	r31, 0xFE	; 254
    22ba:	80 81       	ld	r24, Z
    22bc:	91 81       	ldd	r25, Z+1	; 0x01
    22be:	01 97       	sbiw	r24, 0x01	; 1
    22c0:	f1 f7       	brne	.-4      	; 0x22be <main+0xa02>
    22c2:	fe 01       	movw	r30, r28
    22c4:	ee 57       	subi	r30, 0x7E	; 126
    22c6:	fe 4f       	sbci	r31, 0xFE	; 254
    22c8:	91 83       	std	Z+1, r25	; 0x01
    22ca:	80 83       	st	Z, r24
    22cc:	22 c0       	rjmp	.+68     	; 0x2312 <main+0xa56>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    22ce:	8e 01       	movw	r16, r28
    22d0:	00 57       	subi	r16, 0x70	; 112
    22d2:	1e 4f       	sbci	r17, 0xFE	; 254
    22d4:	fe 01       	movw	r30, r28
    22d6:	ef 56       	subi	r30, 0x6F	; 111
    22d8:	fe 4f       	sbci	r31, 0xFE	; 254
    22da:	60 81       	ld	r22, Z
    22dc:	71 81       	ldd	r23, Z+1	; 0x01
    22de:	82 81       	ldd	r24, Z+2	; 0x02
    22e0:	93 81       	ldd	r25, Z+3	; 0x03
    22e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	f8 01       	movw	r30, r16
    22ec:	80 83       	st	Z, r24
    22ee:	de 01       	movw	r26, r28
    22f0:	af 57       	subi	r26, 0x7F	; 127
    22f2:	be 4f       	sbci	r27, 0xFE	; 254
    22f4:	fe 01       	movw	r30, r28
    22f6:	e0 57       	subi	r30, 0x70	; 112
    22f8:	fe 4f       	sbci	r31, 0xFE	; 254
    22fa:	80 81       	ld	r24, Z
    22fc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    22fe:	fe 01       	movw	r30, r28
    2300:	ef 57       	subi	r30, 0x7F	; 127
    2302:	fe 4f       	sbci	r31, 0xFE	; 254
    2304:	80 81       	ld	r24, Z
    2306:	8a 95       	dec	r24
    2308:	f1 f7       	brne	.-4      	; 0x2306 <main+0xa4a>
    230a:	fe 01       	movw	r30, r28
    230c:	ef 57       	subi	r30, 0x7F	; 127
    230e:	fe 4f       	sbci	r31, 0xFE	; 254
    2310:	80 83       	st	Z, r24
				_delay_us(19900);
				LCD_voidSetCursor(2, 1);
    2312:	82 e0       	ldi	r24, 0x02	; 2
    2314:	61 e0       	ldi	r22, 0x01	; 1
    2316:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("45");
    231a:	89 e6       	ldi	r24, 0x69	; 105
    231c:	90 e0       	ldi	r25, 0x00	; 0
    231e:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidWriteString("0");
			}



			for( i=0;i<50;i++)// angle 45
    2322:	de 01       	movw	r26, r28
    2324:	ad 51       	subi	r26, 0x1D	; 29
    2326:	be 4f       	sbci	r27, 0xFE	; 254
    2328:	fe 01       	movw	r30, r28
    232a:	ed 51       	subi	r30, 0x1D	; 29
    232c:	fe 4f       	sbci	r31, 0xFE	; 254
    232e:	80 81       	ld	r24, Z
    2330:	91 81       	ldd	r25, Z+1	; 0x01
    2332:	01 96       	adiw	r24, 0x01	; 1
    2334:	11 96       	adiw	r26, 0x01	; 1
    2336:	9c 93       	st	X, r25
    2338:	8e 93       	st	-X, r24
    233a:	fe 01       	movw	r30, r28
    233c:	ed 51       	subi	r30, 0x1D	; 29
    233e:	fe 4f       	sbci	r31, 0xFE	; 254
    2340:	80 81       	ld	r24, Z
    2342:	91 81       	ldd	r25, Z+1	; 0x01
    2344:	82 33       	cpi	r24, 0x32	; 50
    2346:	91 05       	cpc	r25, r1
    2348:	08 f4       	brcc	.+2      	; 0x234c <main+0xa90>
    234a:	87 cd       	rjmp	.-1266   	; 0x1e5a <main+0x59e>
				LCD_voidWriteString("45");

	       }


			for( i=0;i<50;i++)//angle 90
    234c:	fe 01       	movw	r30, r28
    234e:	ed 51       	subi	r30, 0x1D	; 29
    2350:	fe 4f       	sbci	r31, 0xFE	; 254
    2352:	11 82       	std	Z+1, r1	; 0x01
    2354:	10 82       	st	Z, r1
    2356:	70 c2       	rjmp	.+1248   	; 0x2838 <main+0xf7c>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    2358:	82 e0       	ldi	r24, 0x02	; 2
    235a:	62 e0       	ldi	r22, 0x02	; 2
    235c:	41 e0       	ldi	r20, 0x01	; 1
    235e:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    2362:	fe 01       	movw	r30, r28
    2364:	e3 58       	subi	r30, 0x83	; 131
    2366:	fe 4f       	sbci	r31, 0xFE	; 254
    2368:	80 e0       	ldi	r24, 0x00	; 0
    236a:	90 e0       	ldi	r25, 0x00	; 0
    236c:	aa e7       	ldi	r26, 0x7A	; 122
    236e:	b4 e4       	ldi	r27, 0x44	; 68
    2370:	80 83       	st	Z, r24
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	a2 83       	std	Z+2, r26	; 0x02
    2376:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2378:	8e 01       	movw	r16, r28
    237a:	07 58       	subi	r16, 0x87	; 135
    237c:	1e 4f       	sbci	r17, 0xFE	; 254
    237e:	fe 01       	movw	r30, r28
    2380:	e3 58       	subi	r30, 0x83	; 131
    2382:	fe 4f       	sbci	r31, 0xFE	; 254
    2384:	60 81       	ld	r22, Z
    2386:	71 81       	ldd	r23, Z+1	; 0x01
    2388:	82 81       	ldd	r24, Z+2	; 0x02
    238a:	93 81       	ldd	r25, Z+3	; 0x03
    238c:	20 e0       	ldi	r18, 0x00	; 0
    238e:	30 e0       	ldi	r19, 0x00	; 0
    2390:	40 e8       	ldi	r20, 0x80	; 128
    2392:	50 e4       	ldi	r21, 0x40	; 64
    2394:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2398:	dc 01       	movw	r26, r24
    239a:	cb 01       	movw	r24, r22
    239c:	f8 01       	movw	r30, r16
    239e:	80 83       	st	Z, r24
    23a0:	91 83       	std	Z+1, r25	; 0x01
    23a2:	a2 83       	std	Z+2, r26	; 0x02
    23a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23a6:	fe 01       	movw	r30, r28
    23a8:	e7 58       	subi	r30, 0x87	; 135
    23aa:	fe 4f       	sbci	r31, 0xFE	; 254
    23ac:	60 81       	ld	r22, Z
    23ae:	71 81       	ldd	r23, Z+1	; 0x01
    23b0:	82 81       	ldd	r24, Z+2	; 0x02
    23b2:	93 81       	ldd	r25, Z+3	; 0x03
    23b4:	20 e0       	ldi	r18, 0x00	; 0
    23b6:	30 e0       	ldi	r19, 0x00	; 0
    23b8:	40 e8       	ldi	r20, 0x80	; 128
    23ba:	5f e3       	ldi	r21, 0x3F	; 63
    23bc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    23c0:	88 23       	and	r24, r24
    23c2:	34 f4       	brge	.+12     	; 0x23d0 <main+0xb14>
		__ticks = 1;
    23c4:	fe 01       	movw	r30, r28
    23c6:	e8 58       	subi	r30, 0x88	; 136
    23c8:	fe 4f       	sbci	r31, 0xFE	; 254
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	80 83       	st	Z, r24
    23ce:	e0 c0       	rjmp	.+448    	; 0x2590 <main+0xcd4>
	else if (__tmp > 255)
    23d0:	fe 01       	movw	r30, r28
    23d2:	e7 58       	subi	r30, 0x87	; 135
    23d4:	fe 4f       	sbci	r31, 0xFE	; 254
    23d6:	60 81       	ld	r22, Z
    23d8:	71 81       	ldd	r23, Z+1	; 0x01
    23da:	82 81       	ldd	r24, Z+2	; 0x02
    23dc:	93 81       	ldd	r25, Z+3	; 0x03
    23de:	20 e0       	ldi	r18, 0x00	; 0
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	4f e7       	ldi	r20, 0x7F	; 127
    23e4:	53 e4       	ldi	r21, 0x43	; 67
    23e6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    23ea:	18 16       	cp	r1, r24
    23ec:	0c f0       	brlt	.+2      	; 0x23f0 <main+0xb34>
    23ee:	c0 c0       	rjmp	.+384    	; 0x2570 <main+0xcb4>
	{
		_delay_ms(__us / 1000.0);
    23f0:	fe 01       	movw	r30, r28
    23f2:	e3 58       	subi	r30, 0x83	; 131
    23f4:	fe 4f       	sbci	r31, 0xFE	; 254
    23f6:	60 81       	ld	r22, Z
    23f8:	71 81       	ldd	r23, Z+1	; 0x01
    23fa:	82 81       	ldd	r24, Z+2	; 0x02
    23fc:	93 81       	ldd	r25, Z+3	; 0x03
    23fe:	20 e0       	ldi	r18, 0x00	; 0
    2400:	30 e0       	ldi	r19, 0x00	; 0
    2402:	4a e7       	ldi	r20, 0x7A	; 122
    2404:	54 e4       	ldi	r21, 0x44	; 68
    2406:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    240a:	dc 01       	movw	r26, r24
    240c:	cb 01       	movw	r24, r22
    240e:	fe 01       	movw	r30, r28
    2410:	ec 58       	subi	r30, 0x8C	; 140
    2412:	fe 4f       	sbci	r31, 0xFE	; 254
    2414:	80 83       	st	Z, r24
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	a2 83       	std	Z+2, r26	; 0x02
    241a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    241c:	8e 01       	movw	r16, r28
    241e:	00 59       	subi	r16, 0x90	; 144
    2420:	1e 4f       	sbci	r17, 0xFE	; 254
    2422:	fe 01       	movw	r30, r28
    2424:	ec 58       	subi	r30, 0x8C	; 140
    2426:	fe 4f       	sbci	r31, 0xFE	; 254
    2428:	60 81       	ld	r22, Z
    242a:	71 81       	ldd	r23, Z+1	; 0x01
    242c:	82 81       	ldd	r24, Z+2	; 0x02
    242e:	93 81       	ldd	r25, Z+3	; 0x03
    2430:	20 e0       	ldi	r18, 0x00	; 0
    2432:	30 e8       	ldi	r19, 0x80	; 128
    2434:	4b e3       	ldi	r20, 0x3B	; 59
    2436:	55 e4       	ldi	r21, 0x45	; 69
    2438:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    243c:	dc 01       	movw	r26, r24
    243e:	cb 01       	movw	r24, r22
    2440:	f8 01       	movw	r30, r16
    2442:	80 83       	st	Z, r24
    2444:	91 83       	std	Z+1, r25	; 0x01
    2446:	a2 83       	std	Z+2, r26	; 0x02
    2448:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    244a:	fe 01       	movw	r30, r28
    244c:	e0 59       	subi	r30, 0x90	; 144
    244e:	fe 4f       	sbci	r31, 0xFE	; 254
    2450:	60 81       	ld	r22, Z
    2452:	71 81       	ldd	r23, Z+1	; 0x01
    2454:	82 81       	ldd	r24, Z+2	; 0x02
    2456:	93 81       	ldd	r25, Z+3	; 0x03
    2458:	20 e0       	ldi	r18, 0x00	; 0
    245a:	30 e0       	ldi	r19, 0x00	; 0
    245c:	40 e8       	ldi	r20, 0x80	; 128
    245e:	5f e3       	ldi	r21, 0x3F	; 63
    2460:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2464:	88 23       	and	r24, r24
    2466:	44 f4       	brge	.+16     	; 0x2478 <main+0xbbc>
		__ticks = 1;
    2468:	fe 01       	movw	r30, r28
    246a:	e2 59       	subi	r30, 0x92	; 146
    246c:	fe 4f       	sbci	r31, 0xFE	; 254
    246e:	81 e0       	ldi	r24, 0x01	; 1
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	91 83       	std	Z+1, r25	; 0x01
    2474:	80 83       	st	Z, r24
    2476:	64 c0       	rjmp	.+200    	; 0x2540 <main+0xc84>
	else if (__tmp > 65535)
    2478:	fe 01       	movw	r30, r28
    247a:	e0 59       	subi	r30, 0x90	; 144
    247c:	fe 4f       	sbci	r31, 0xFE	; 254
    247e:	60 81       	ld	r22, Z
    2480:	71 81       	ldd	r23, Z+1	; 0x01
    2482:	82 81       	ldd	r24, Z+2	; 0x02
    2484:	93 81       	ldd	r25, Z+3	; 0x03
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	3f ef       	ldi	r19, 0xFF	; 255
    248a:	4f e7       	ldi	r20, 0x7F	; 127
    248c:	57 e4       	ldi	r21, 0x47	; 71
    248e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2492:	18 16       	cp	r1, r24
    2494:	0c f0       	brlt	.+2      	; 0x2498 <main+0xbdc>
    2496:	43 c0       	rjmp	.+134    	; 0x251e <main+0xc62>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2498:	fe 01       	movw	r30, r28
    249a:	ec 58       	subi	r30, 0x8C	; 140
    249c:	fe 4f       	sbci	r31, 0xFE	; 254
    249e:	60 81       	ld	r22, Z
    24a0:	71 81       	ldd	r23, Z+1	; 0x01
    24a2:	82 81       	ldd	r24, Z+2	; 0x02
    24a4:	93 81       	ldd	r25, Z+3	; 0x03
    24a6:	20 e0       	ldi	r18, 0x00	; 0
    24a8:	30 e0       	ldi	r19, 0x00	; 0
    24aa:	40 e2       	ldi	r20, 0x20	; 32
    24ac:	51 e4       	ldi	r21, 0x41	; 65
    24ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24b2:	dc 01       	movw	r26, r24
    24b4:	cb 01       	movw	r24, r22
    24b6:	8e 01       	movw	r16, r28
    24b8:	02 59       	subi	r16, 0x92	; 146
    24ba:	1e 4f       	sbci	r17, 0xFE	; 254
    24bc:	bc 01       	movw	r22, r24
    24be:	cd 01       	movw	r24, r26
    24c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24c4:	dc 01       	movw	r26, r24
    24c6:	cb 01       	movw	r24, r22
    24c8:	f8 01       	movw	r30, r16
    24ca:	91 83       	std	Z+1, r25	; 0x01
    24cc:	80 83       	st	Z, r24
    24ce:	1f c0       	rjmp	.+62     	; 0x250e <main+0xc52>
    24d0:	fe 01       	movw	r30, r28
    24d2:	e4 59       	subi	r30, 0x94	; 148
    24d4:	fe 4f       	sbci	r31, 0xFE	; 254
    24d6:	8c e2       	ldi	r24, 0x2C	; 44
    24d8:	91 e0       	ldi	r25, 0x01	; 1
    24da:	91 83       	std	Z+1, r25	; 0x01
    24dc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    24de:	fe 01       	movw	r30, r28
    24e0:	e4 59       	subi	r30, 0x94	; 148
    24e2:	fe 4f       	sbci	r31, 0xFE	; 254
    24e4:	80 81       	ld	r24, Z
    24e6:	91 81       	ldd	r25, Z+1	; 0x01
    24e8:	01 97       	sbiw	r24, 0x01	; 1
    24ea:	f1 f7       	brne	.-4      	; 0x24e8 <main+0xc2c>
    24ec:	fe 01       	movw	r30, r28
    24ee:	e4 59       	subi	r30, 0x94	; 148
    24f0:	fe 4f       	sbci	r31, 0xFE	; 254
    24f2:	91 83       	std	Z+1, r25	; 0x01
    24f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24f6:	de 01       	movw	r26, r28
    24f8:	a2 59       	subi	r26, 0x92	; 146
    24fa:	be 4f       	sbci	r27, 0xFE	; 254
    24fc:	fe 01       	movw	r30, r28
    24fe:	e2 59       	subi	r30, 0x92	; 146
    2500:	fe 4f       	sbci	r31, 0xFE	; 254
    2502:	80 81       	ld	r24, Z
    2504:	91 81       	ldd	r25, Z+1	; 0x01
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	11 96       	adiw	r26, 0x01	; 1
    250a:	9c 93       	st	X, r25
    250c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    250e:	fe 01       	movw	r30, r28
    2510:	e2 59       	subi	r30, 0x92	; 146
    2512:	fe 4f       	sbci	r31, 0xFE	; 254
    2514:	80 81       	ld	r24, Z
    2516:	91 81       	ldd	r25, Z+1	; 0x01
    2518:	00 97       	sbiw	r24, 0x00	; 0
    251a:	d1 f6       	brne	.-76     	; 0x24d0 <main+0xc14>
    251c:	4b c0       	rjmp	.+150    	; 0x25b4 <main+0xcf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    251e:	8e 01       	movw	r16, r28
    2520:	02 59       	subi	r16, 0x92	; 146
    2522:	1e 4f       	sbci	r17, 0xFE	; 254
    2524:	fe 01       	movw	r30, r28
    2526:	e0 59       	subi	r30, 0x90	; 144
    2528:	fe 4f       	sbci	r31, 0xFE	; 254
    252a:	60 81       	ld	r22, Z
    252c:	71 81       	ldd	r23, Z+1	; 0x01
    252e:	82 81       	ldd	r24, Z+2	; 0x02
    2530:	93 81       	ldd	r25, Z+3	; 0x03
    2532:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2536:	dc 01       	movw	r26, r24
    2538:	cb 01       	movw	r24, r22
    253a:	f8 01       	movw	r30, r16
    253c:	91 83       	std	Z+1, r25	; 0x01
    253e:	80 83       	st	Z, r24
    2540:	de 01       	movw	r26, r28
    2542:	a6 59       	subi	r26, 0x96	; 150
    2544:	be 4f       	sbci	r27, 0xFE	; 254
    2546:	fe 01       	movw	r30, r28
    2548:	e2 59       	subi	r30, 0x92	; 146
    254a:	fe 4f       	sbci	r31, 0xFE	; 254
    254c:	80 81       	ld	r24, Z
    254e:	91 81       	ldd	r25, Z+1	; 0x01
    2550:	11 96       	adiw	r26, 0x01	; 1
    2552:	9c 93       	st	X, r25
    2554:	8e 93       	st	-X, r24
    2556:	fe 01       	movw	r30, r28
    2558:	e6 59       	subi	r30, 0x96	; 150
    255a:	fe 4f       	sbci	r31, 0xFE	; 254
    255c:	80 81       	ld	r24, Z
    255e:	91 81       	ldd	r25, Z+1	; 0x01
    2560:	01 97       	sbiw	r24, 0x01	; 1
    2562:	f1 f7       	brne	.-4      	; 0x2560 <main+0xca4>
    2564:	fe 01       	movw	r30, r28
    2566:	e6 59       	subi	r30, 0x96	; 150
    2568:	fe 4f       	sbci	r31, 0xFE	; 254
    256a:	91 83       	std	Z+1, r25	; 0x01
    256c:	80 83       	st	Z, r24
    256e:	22 c0       	rjmp	.+68     	; 0x25b4 <main+0xcf8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2570:	8e 01       	movw	r16, r28
    2572:	08 58       	subi	r16, 0x88	; 136
    2574:	1e 4f       	sbci	r17, 0xFE	; 254
    2576:	fe 01       	movw	r30, r28
    2578:	e7 58       	subi	r30, 0x87	; 135
    257a:	fe 4f       	sbci	r31, 0xFE	; 254
    257c:	60 81       	ld	r22, Z
    257e:	71 81       	ldd	r23, Z+1	; 0x01
    2580:	82 81       	ldd	r24, Z+2	; 0x02
    2582:	93 81       	ldd	r25, Z+3	; 0x03
    2584:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2588:	dc 01       	movw	r26, r24
    258a:	cb 01       	movw	r24, r22
    258c:	f8 01       	movw	r30, r16
    258e:	80 83       	st	Z, r24
    2590:	de 01       	movw	r26, r28
    2592:	a7 59       	subi	r26, 0x97	; 151
    2594:	be 4f       	sbci	r27, 0xFE	; 254
    2596:	fe 01       	movw	r30, r28
    2598:	e8 58       	subi	r30, 0x88	; 136
    259a:	fe 4f       	sbci	r31, 0xFE	; 254
    259c:	80 81       	ld	r24, Z
    259e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    25a0:	fe 01       	movw	r30, r28
    25a2:	e7 59       	subi	r30, 0x97	; 151
    25a4:	fe 4f       	sbci	r31, 0xFE	; 254
    25a6:	80 81       	ld	r24, Z
    25a8:	8a 95       	dec	r24
    25aa:	f1 f7       	brne	.-4      	; 0x25a8 <main+0xcec>
    25ac:	fe 01       	movw	r30, r28
    25ae:	e7 59       	subi	r30, 0x97	; 151
    25b0:	fe 4f       	sbci	r31, 0xFE	; 254
    25b2:	80 83       	st	Z, r24
				_delay_us(1000);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    25b4:	82 e0       	ldi	r24, 0x02	; 2
    25b6:	62 e0       	ldi	r22, 0x02	; 2
    25b8:	40 e0       	ldi	r20, 0x00	; 0
    25ba:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    25be:	fe 01       	movw	r30, r28
    25c0:	eb 59       	subi	r30, 0x9B	; 155
    25c2:	fe 4f       	sbci	r31, 0xFE	; 254
    25c4:	80 e0       	ldi	r24, 0x00	; 0
    25c6:	90 e7       	ldi	r25, 0x70	; 112
    25c8:	a4 e9       	ldi	r26, 0x94	; 148
    25ca:	b6 e4       	ldi	r27, 0x46	; 70
    25cc:	80 83       	st	Z, r24
    25ce:	91 83       	std	Z+1, r25	; 0x01
    25d0:	a2 83       	std	Z+2, r26	; 0x02
    25d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    25d4:	8e 01       	movw	r16, r28
    25d6:	0f 59       	subi	r16, 0x9F	; 159
    25d8:	1e 4f       	sbci	r17, 0xFE	; 254
    25da:	fe 01       	movw	r30, r28
    25dc:	eb 59       	subi	r30, 0x9B	; 155
    25de:	fe 4f       	sbci	r31, 0xFE	; 254
    25e0:	60 81       	ld	r22, Z
    25e2:	71 81       	ldd	r23, Z+1	; 0x01
    25e4:	82 81       	ldd	r24, Z+2	; 0x02
    25e6:	93 81       	ldd	r25, Z+3	; 0x03
    25e8:	20 e0       	ldi	r18, 0x00	; 0
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	40 e8       	ldi	r20, 0x80	; 128
    25ee:	50 e4       	ldi	r21, 0x40	; 64
    25f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25f4:	dc 01       	movw	r26, r24
    25f6:	cb 01       	movw	r24, r22
    25f8:	f8 01       	movw	r30, r16
    25fa:	80 83       	st	Z, r24
    25fc:	91 83       	std	Z+1, r25	; 0x01
    25fe:	a2 83       	std	Z+2, r26	; 0x02
    2600:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2602:	fe 01       	movw	r30, r28
    2604:	ef 59       	subi	r30, 0x9F	; 159
    2606:	fe 4f       	sbci	r31, 0xFE	; 254
    2608:	60 81       	ld	r22, Z
    260a:	71 81       	ldd	r23, Z+1	; 0x01
    260c:	82 81       	ldd	r24, Z+2	; 0x02
    260e:	93 81       	ldd	r25, Z+3	; 0x03
    2610:	20 e0       	ldi	r18, 0x00	; 0
    2612:	30 e0       	ldi	r19, 0x00	; 0
    2614:	40 e8       	ldi	r20, 0x80	; 128
    2616:	5f e3       	ldi	r21, 0x3F	; 63
    2618:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    261c:	88 23       	and	r24, r24
    261e:	34 f4       	brge	.+12     	; 0x262c <main+0xd70>
		__ticks = 1;
    2620:	fe 01       	movw	r30, r28
    2622:	e0 5a       	subi	r30, 0xA0	; 160
    2624:	fe 4f       	sbci	r31, 0xFE	; 254
    2626:	81 e0       	ldi	r24, 0x01	; 1
    2628:	80 83       	st	Z, r24
    262a:	e0 c0       	rjmp	.+448    	; 0x27ec <main+0xf30>
	else if (__tmp > 255)
    262c:	fe 01       	movw	r30, r28
    262e:	ef 59       	subi	r30, 0x9F	; 159
    2630:	fe 4f       	sbci	r31, 0xFE	; 254
    2632:	60 81       	ld	r22, Z
    2634:	71 81       	ldd	r23, Z+1	; 0x01
    2636:	82 81       	ldd	r24, Z+2	; 0x02
    2638:	93 81       	ldd	r25, Z+3	; 0x03
    263a:	20 e0       	ldi	r18, 0x00	; 0
    263c:	30 e0       	ldi	r19, 0x00	; 0
    263e:	4f e7       	ldi	r20, 0x7F	; 127
    2640:	53 e4       	ldi	r21, 0x43	; 67
    2642:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2646:	18 16       	cp	r1, r24
    2648:	0c f0       	brlt	.+2      	; 0x264c <main+0xd90>
    264a:	c0 c0       	rjmp	.+384    	; 0x27cc <main+0xf10>
	{
		_delay_ms(__us / 1000.0);
    264c:	fe 01       	movw	r30, r28
    264e:	eb 59       	subi	r30, 0x9B	; 155
    2650:	fe 4f       	sbci	r31, 0xFE	; 254
    2652:	60 81       	ld	r22, Z
    2654:	71 81       	ldd	r23, Z+1	; 0x01
    2656:	82 81       	ldd	r24, Z+2	; 0x02
    2658:	93 81       	ldd	r25, Z+3	; 0x03
    265a:	20 e0       	ldi	r18, 0x00	; 0
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	4a e7       	ldi	r20, 0x7A	; 122
    2660:	54 e4       	ldi	r21, 0x44	; 68
    2662:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2666:	dc 01       	movw	r26, r24
    2668:	cb 01       	movw	r24, r22
    266a:	fe 01       	movw	r30, r28
    266c:	e4 5a       	subi	r30, 0xA4	; 164
    266e:	fe 4f       	sbci	r31, 0xFE	; 254
    2670:	80 83       	st	Z, r24
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	a2 83       	std	Z+2, r26	; 0x02
    2676:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2678:	8e 01       	movw	r16, r28
    267a:	08 5a       	subi	r16, 0xA8	; 168
    267c:	1e 4f       	sbci	r17, 0xFE	; 254
    267e:	fe 01       	movw	r30, r28
    2680:	e4 5a       	subi	r30, 0xA4	; 164
    2682:	fe 4f       	sbci	r31, 0xFE	; 254
    2684:	60 81       	ld	r22, Z
    2686:	71 81       	ldd	r23, Z+1	; 0x01
    2688:	82 81       	ldd	r24, Z+2	; 0x02
    268a:	93 81       	ldd	r25, Z+3	; 0x03
    268c:	20 e0       	ldi	r18, 0x00	; 0
    268e:	30 e8       	ldi	r19, 0x80	; 128
    2690:	4b e3       	ldi	r20, 0x3B	; 59
    2692:	55 e4       	ldi	r21, 0x45	; 69
    2694:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2698:	dc 01       	movw	r26, r24
    269a:	cb 01       	movw	r24, r22
    269c:	f8 01       	movw	r30, r16
    269e:	80 83       	st	Z, r24
    26a0:	91 83       	std	Z+1, r25	; 0x01
    26a2:	a2 83       	std	Z+2, r26	; 0x02
    26a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26a6:	fe 01       	movw	r30, r28
    26a8:	e8 5a       	subi	r30, 0xA8	; 168
    26aa:	fe 4f       	sbci	r31, 0xFE	; 254
    26ac:	60 81       	ld	r22, Z
    26ae:	71 81       	ldd	r23, Z+1	; 0x01
    26b0:	82 81       	ldd	r24, Z+2	; 0x02
    26b2:	93 81       	ldd	r25, Z+3	; 0x03
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e8       	ldi	r20, 0x80	; 128
    26ba:	5f e3       	ldi	r21, 0x3F	; 63
    26bc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    26c0:	88 23       	and	r24, r24
    26c2:	44 f4       	brge	.+16     	; 0x26d4 <main+0xe18>
		__ticks = 1;
    26c4:	fe 01       	movw	r30, r28
    26c6:	ea 5a       	subi	r30, 0xAA	; 170
    26c8:	fe 4f       	sbci	r31, 0xFE	; 254
    26ca:	81 e0       	ldi	r24, 0x01	; 1
    26cc:	90 e0       	ldi	r25, 0x00	; 0
    26ce:	91 83       	std	Z+1, r25	; 0x01
    26d0:	80 83       	st	Z, r24
    26d2:	64 c0       	rjmp	.+200    	; 0x279c <main+0xee0>
	else if (__tmp > 65535)
    26d4:	fe 01       	movw	r30, r28
    26d6:	e8 5a       	subi	r30, 0xA8	; 168
    26d8:	fe 4f       	sbci	r31, 0xFE	; 254
    26da:	60 81       	ld	r22, Z
    26dc:	71 81       	ldd	r23, Z+1	; 0x01
    26de:	82 81       	ldd	r24, Z+2	; 0x02
    26e0:	93 81       	ldd	r25, Z+3	; 0x03
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	3f ef       	ldi	r19, 0xFF	; 255
    26e6:	4f e7       	ldi	r20, 0x7F	; 127
    26e8:	57 e4       	ldi	r21, 0x47	; 71
    26ea:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    26ee:	18 16       	cp	r1, r24
    26f0:	0c f0       	brlt	.+2      	; 0x26f4 <main+0xe38>
    26f2:	43 c0       	rjmp	.+134    	; 0x277a <main+0xebe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f4:	fe 01       	movw	r30, r28
    26f6:	e4 5a       	subi	r30, 0xA4	; 164
    26f8:	fe 4f       	sbci	r31, 0xFE	; 254
    26fa:	60 81       	ld	r22, Z
    26fc:	71 81       	ldd	r23, Z+1	; 0x01
    26fe:	82 81       	ldd	r24, Z+2	; 0x02
    2700:	93 81       	ldd	r25, Z+3	; 0x03
    2702:	20 e0       	ldi	r18, 0x00	; 0
    2704:	30 e0       	ldi	r19, 0x00	; 0
    2706:	40 e2       	ldi	r20, 0x20	; 32
    2708:	51 e4       	ldi	r21, 0x41	; 65
    270a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    270e:	dc 01       	movw	r26, r24
    2710:	cb 01       	movw	r24, r22
    2712:	8e 01       	movw	r16, r28
    2714:	0a 5a       	subi	r16, 0xAA	; 170
    2716:	1e 4f       	sbci	r17, 0xFE	; 254
    2718:	bc 01       	movw	r22, r24
    271a:	cd 01       	movw	r24, r26
    271c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2720:	dc 01       	movw	r26, r24
    2722:	cb 01       	movw	r24, r22
    2724:	f8 01       	movw	r30, r16
    2726:	91 83       	std	Z+1, r25	; 0x01
    2728:	80 83       	st	Z, r24
    272a:	1f c0       	rjmp	.+62     	; 0x276a <main+0xeae>
    272c:	fe 01       	movw	r30, r28
    272e:	ec 5a       	subi	r30, 0xAC	; 172
    2730:	fe 4f       	sbci	r31, 0xFE	; 254
    2732:	8c e2       	ldi	r24, 0x2C	; 44
    2734:	91 e0       	ldi	r25, 0x01	; 1
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    273a:	fe 01       	movw	r30, r28
    273c:	ec 5a       	subi	r30, 0xAC	; 172
    273e:	fe 4f       	sbci	r31, 0xFE	; 254
    2740:	80 81       	ld	r24, Z
    2742:	91 81       	ldd	r25, Z+1	; 0x01
    2744:	01 97       	sbiw	r24, 0x01	; 1
    2746:	f1 f7       	brne	.-4      	; 0x2744 <main+0xe88>
    2748:	fe 01       	movw	r30, r28
    274a:	ec 5a       	subi	r30, 0xAC	; 172
    274c:	fe 4f       	sbci	r31, 0xFE	; 254
    274e:	91 83       	std	Z+1, r25	; 0x01
    2750:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2752:	de 01       	movw	r26, r28
    2754:	aa 5a       	subi	r26, 0xAA	; 170
    2756:	be 4f       	sbci	r27, 0xFE	; 254
    2758:	fe 01       	movw	r30, r28
    275a:	ea 5a       	subi	r30, 0xAA	; 170
    275c:	fe 4f       	sbci	r31, 0xFE	; 254
    275e:	80 81       	ld	r24, Z
    2760:	91 81       	ldd	r25, Z+1	; 0x01
    2762:	01 97       	sbiw	r24, 0x01	; 1
    2764:	11 96       	adiw	r26, 0x01	; 1
    2766:	9c 93       	st	X, r25
    2768:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    276a:	fe 01       	movw	r30, r28
    276c:	ea 5a       	subi	r30, 0xAA	; 170
    276e:	fe 4f       	sbci	r31, 0xFE	; 254
    2770:	80 81       	ld	r24, Z
    2772:	91 81       	ldd	r25, Z+1	; 0x01
    2774:	00 97       	sbiw	r24, 0x00	; 0
    2776:	d1 f6       	brne	.-76     	; 0x272c <main+0xe70>
    2778:	4b c0       	rjmp	.+150    	; 0x2810 <main+0xf54>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    277a:	8e 01       	movw	r16, r28
    277c:	0a 5a       	subi	r16, 0xAA	; 170
    277e:	1e 4f       	sbci	r17, 0xFE	; 254
    2780:	fe 01       	movw	r30, r28
    2782:	e8 5a       	subi	r30, 0xA8	; 168
    2784:	fe 4f       	sbci	r31, 0xFE	; 254
    2786:	60 81       	ld	r22, Z
    2788:	71 81       	ldd	r23, Z+1	; 0x01
    278a:	82 81       	ldd	r24, Z+2	; 0x02
    278c:	93 81       	ldd	r25, Z+3	; 0x03
    278e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2792:	dc 01       	movw	r26, r24
    2794:	cb 01       	movw	r24, r22
    2796:	f8 01       	movw	r30, r16
    2798:	91 83       	std	Z+1, r25	; 0x01
    279a:	80 83       	st	Z, r24
    279c:	de 01       	movw	r26, r28
    279e:	ae 5a       	subi	r26, 0xAE	; 174
    27a0:	be 4f       	sbci	r27, 0xFE	; 254
    27a2:	fe 01       	movw	r30, r28
    27a4:	ea 5a       	subi	r30, 0xAA	; 170
    27a6:	fe 4f       	sbci	r31, 0xFE	; 254
    27a8:	80 81       	ld	r24, Z
    27aa:	91 81       	ldd	r25, Z+1	; 0x01
    27ac:	11 96       	adiw	r26, 0x01	; 1
    27ae:	9c 93       	st	X, r25
    27b0:	8e 93       	st	-X, r24
    27b2:	fe 01       	movw	r30, r28
    27b4:	ee 5a       	subi	r30, 0xAE	; 174
    27b6:	fe 4f       	sbci	r31, 0xFE	; 254
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	01 97       	sbiw	r24, 0x01	; 1
    27be:	f1 f7       	brne	.-4      	; 0x27bc <main+0xf00>
    27c0:	fe 01       	movw	r30, r28
    27c2:	ee 5a       	subi	r30, 0xAE	; 174
    27c4:	fe 4f       	sbci	r31, 0xFE	; 254
    27c6:	91 83       	std	Z+1, r25	; 0x01
    27c8:	80 83       	st	Z, r24
    27ca:	22 c0       	rjmp	.+68     	; 0x2810 <main+0xf54>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    27cc:	8e 01       	movw	r16, r28
    27ce:	00 5a       	subi	r16, 0xA0	; 160
    27d0:	1e 4f       	sbci	r17, 0xFE	; 254
    27d2:	fe 01       	movw	r30, r28
    27d4:	ef 59       	subi	r30, 0x9F	; 159
    27d6:	fe 4f       	sbci	r31, 0xFE	; 254
    27d8:	60 81       	ld	r22, Z
    27da:	71 81       	ldd	r23, Z+1	; 0x01
    27dc:	82 81       	ldd	r24, Z+2	; 0x02
    27de:	93 81       	ldd	r25, Z+3	; 0x03
    27e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27e4:	dc 01       	movw	r26, r24
    27e6:	cb 01       	movw	r24, r22
    27e8:	f8 01       	movw	r30, r16
    27ea:	80 83       	st	Z, r24
    27ec:	de 01       	movw	r26, r28
    27ee:	af 5a       	subi	r26, 0xAF	; 175
    27f0:	be 4f       	sbci	r27, 0xFE	; 254
    27f2:	fe 01       	movw	r30, r28
    27f4:	e0 5a       	subi	r30, 0xA0	; 160
    27f6:	fe 4f       	sbci	r31, 0xFE	; 254
    27f8:	80 81       	ld	r24, Z
    27fa:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    27fc:	fe 01       	movw	r30, r28
    27fe:	ef 5a       	subi	r30, 0xAF	; 175
    2800:	fe 4f       	sbci	r31, 0xFE	; 254
    2802:	80 81       	ld	r24, Z
    2804:	8a 95       	dec	r24
    2806:	f1 f7       	brne	.-4      	; 0x2804 <main+0xf48>
    2808:	fe 01       	movw	r30, r28
    280a:	ef 5a       	subi	r30, 0xAF	; 175
    280c:	fe 4f       	sbci	r31, 0xFE	; 254
    280e:	80 83       	st	Z, r24
				_delay_us(19000);
				LCD_voidSetCursor(2, 1);
    2810:	82 e0       	ldi	r24, 0x02	; 2
    2812:	61 e0       	ldi	r22, 0x01	; 1
    2814:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("90");
    2818:	8c e6       	ldi	r24, 0x6C	; 108
    281a:	90 e0       	ldi	r25, 0x00	; 0
    281c:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidWriteString("45");

	       }


			for( i=0;i<50;i++)//angle 90
    2820:	de 01       	movw	r26, r28
    2822:	ad 51       	subi	r26, 0x1D	; 29
    2824:	be 4f       	sbci	r27, 0xFE	; 254
    2826:	fe 01       	movw	r30, r28
    2828:	ed 51       	subi	r30, 0x1D	; 29
    282a:	fe 4f       	sbci	r31, 0xFE	; 254
    282c:	80 81       	ld	r24, Z
    282e:	91 81       	ldd	r25, Z+1	; 0x01
    2830:	01 96       	adiw	r24, 0x01	; 1
    2832:	11 96       	adiw	r26, 0x01	; 1
    2834:	9c 93       	st	X, r25
    2836:	8e 93       	st	-X, r24
    2838:	fe 01       	movw	r30, r28
    283a:	ed 51       	subi	r30, 0x1D	; 29
    283c:	fe 4f       	sbci	r31, 0xFE	; 254
    283e:	80 81       	ld	r24, Z
    2840:	91 81       	ldd	r25, Z+1	; 0x01
    2842:	82 33       	cpi	r24, 0x32	; 50
    2844:	91 05       	cpc	r25, r1
    2846:	08 f4       	brcc	.+2      	; 0x284a <main+0xf8e>
    2848:	87 cd       	rjmp	.-1266   	; 0x2358 <main+0xa9c>
				LCD_voidWriteString("90");

			}


			for( i=0;i<50;i++)//angle 135
    284a:	fe 01       	movw	r30, r28
    284c:	ed 51       	subi	r30, 0x1D	; 29
    284e:	fe 4f       	sbci	r31, 0xFE	; 254
    2850:	11 82       	std	Z+1, r1	; 0x01
    2852:	10 82       	st	Z, r1
    2854:	70 c2       	rjmp	.+1248   	; 0x2d36 <main+0x147a>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    2856:	82 e0       	ldi	r24, 0x02	; 2
    2858:	62 e0       	ldi	r22, 0x02	; 2
    285a:	41 e0       	ldi	r20, 0x01	; 1
    285c:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    2860:	fe 01       	movw	r30, r28
    2862:	e3 5b       	subi	r30, 0xB3	; 179
    2864:	fe 4f       	sbci	r31, 0xFE	; 254
    2866:	80 e0       	ldi	r24, 0x00	; 0
    2868:	90 e8       	ldi	r25, 0x80	; 128
    286a:	ab eb       	ldi	r26, 0xBB	; 187
    286c:	b4 e4       	ldi	r27, 0x44	; 68
    286e:	80 83       	st	Z, r24
    2870:	91 83       	std	Z+1, r25	; 0x01
    2872:	a2 83       	std	Z+2, r26	; 0x02
    2874:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2876:	8e 01       	movw	r16, r28
    2878:	07 5b       	subi	r16, 0xB7	; 183
    287a:	1e 4f       	sbci	r17, 0xFE	; 254
    287c:	fe 01       	movw	r30, r28
    287e:	e3 5b       	subi	r30, 0xB3	; 179
    2880:	fe 4f       	sbci	r31, 0xFE	; 254
    2882:	60 81       	ld	r22, Z
    2884:	71 81       	ldd	r23, Z+1	; 0x01
    2886:	82 81       	ldd	r24, Z+2	; 0x02
    2888:	93 81       	ldd	r25, Z+3	; 0x03
    288a:	20 e0       	ldi	r18, 0x00	; 0
    288c:	30 e0       	ldi	r19, 0x00	; 0
    288e:	40 e8       	ldi	r20, 0x80	; 128
    2890:	50 e4       	ldi	r21, 0x40	; 64
    2892:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2896:	dc 01       	movw	r26, r24
    2898:	cb 01       	movw	r24, r22
    289a:	f8 01       	movw	r30, r16
    289c:	80 83       	st	Z, r24
    289e:	91 83       	std	Z+1, r25	; 0x01
    28a0:	a2 83       	std	Z+2, r26	; 0x02
    28a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28a4:	fe 01       	movw	r30, r28
    28a6:	e7 5b       	subi	r30, 0xB7	; 183
    28a8:	fe 4f       	sbci	r31, 0xFE	; 254
    28aa:	60 81       	ld	r22, Z
    28ac:	71 81       	ldd	r23, Z+1	; 0x01
    28ae:	82 81       	ldd	r24, Z+2	; 0x02
    28b0:	93 81       	ldd	r25, Z+3	; 0x03
    28b2:	20 e0       	ldi	r18, 0x00	; 0
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	40 e8       	ldi	r20, 0x80	; 128
    28b8:	5f e3       	ldi	r21, 0x3F	; 63
    28ba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    28be:	88 23       	and	r24, r24
    28c0:	34 f4       	brge	.+12     	; 0x28ce <main+0x1012>
		__ticks = 1;
    28c2:	fe 01       	movw	r30, r28
    28c4:	e8 5b       	subi	r30, 0xB8	; 184
    28c6:	fe 4f       	sbci	r31, 0xFE	; 254
    28c8:	81 e0       	ldi	r24, 0x01	; 1
    28ca:	80 83       	st	Z, r24
    28cc:	e0 c0       	rjmp	.+448    	; 0x2a8e <main+0x11d2>
	else if (__tmp > 255)
    28ce:	fe 01       	movw	r30, r28
    28d0:	e7 5b       	subi	r30, 0xB7	; 183
    28d2:	fe 4f       	sbci	r31, 0xFE	; 254
    28d4:	60 81       	ld	r22, Z
    28d6:	71 81       	ldd	r23, Z+1	; 0x01
    28d8:	82 81       	ldd	r24, Z+2	; 0x02
    28da:	93 81       	ldd	r25, Z+3	; 0x03
    28dc:	20 e0       	ldi	r18, 0x00	; 0
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	4f e7       	ldi	r20, 0x7F	; 127
    28e2:	53 e4       	ldi	r21, 0x43	; 67
    28e4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    28e8:	18 16       	cp	r1, r24
    28ea:	0c f0       	brlt	.+2      	; 0x28ee <main+0x1032>
    28ec:	c0 c0       	rjmp	.+384    	; 0x2a6e <main+0x11b2>
	{
		_delay_ms(__us / 1000.0);
    28ee:	fe 01       	movw	r30, r28
    28f0:	e3 5b       	subi	r30, 0xB3	; 179
    28f2:	fe 4f       	sbci	r31, 0xFE	; 254
    28f4:	60 81       	ld	r22, Z
    28f6:	71 81       	ldd	r23, Z+1	; 0x01
    28f8:	82 81       	ldd	r24, Z+2	; 0x02
    28fa:	93 81       	ldd	r25, Z+3	; 0x03
    28fc:	20 e0       	ldi	r18, 0x00	; 0
    28fe:	30 e0       	ldi	r19, 0x00	; 0
    2900:	4a e7       	ldi	r20, 0x7A	; 122
    2902:	54 e4       	ldi	r21, 0x44	; 68
    2904:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2908:	dc 01       	movw	r26, r24
    290a:	cb 01       	movw	r24, r22
    290c:	fe 01       	movw	r30, r28
    290e:	ec 5b       	subi	r30, 0xBC	; 188
    2910:	fe 4f       	sbci	r31, 0xFE	; 254
    2912:	80 83       	st	Z, r24
    2914:	91 83       	std	Z+1, r25	; 0x01
    2916:	a2 83       	std	Z+2, r26	; 0x02
    2918:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    291a:	8e 01       	movw	r16, r28
    291c:	00 5c       	subi	r16, 0xC0	; 192
    291e:	1e 4f       	sbci	r17, 0xFE	; 254
    2920:	fe 01       	movw	r30, r28
    2922:	ec 5b       	subi	r30, 0xBC	; 188
    2924:	fe 4f       	sbci	r31, 0xFE	; 254
    2926:	60 81       	ld	r22, Z
    2928:	71 81       	ldd	r23, Z+1	; 0x01
    292a:	82 81       	ldd	r24, Z+2	; 0x02
    292c:	93 81       	ldd	r25, Z+3	; 0x03
    292e:	20 e0       	ldi	r18, 0x00	; 0
    2930:	30 e8       	ldi	r19, 0x80	; 128
    2932:	4b e3       	ldi	r20, 0x3B	; 59
    2934:	55 e4       	ldi	r21, 0x45	; 69
    2936:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    293a:	dc 01       	movw	r26, r24
    293c:	cb 01       	movw	r24, r22
    293e:	f8 01       	movw	r30, r16
    2940:	80 83       	st	Z, r24
    2942:	91 83       	std	Z+1, r25	; 0x01
    2944:	a2 83       	std	Z+2, r26	; 0x02
    2946:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2948:	fe 01       	movw	r30, r28
    294a:	e0 5c       	subi	r30, 0xC0	; 192
    294c:	fe 4f       	sbci	r31, 0xFE	; 254
    294e:	60 81       	ld	r22, Z
    2950:	71 81       	ldd	r23, Z+1	; 0x01
    2952:	82 81       	ldd	r24, Z+2	; 0x02
    2954:	93 81       	ldd	r25, Z+3	; 0x03
    2956:	20 e0       	ldi	r18, 0x00	; 0
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	40 e8       	ldi	r20, 0x80	; 128
    295c:	5f e3       	ldi	r21, 0x3F	; 63
    295e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2962:	88 23       	and	r24, r24
    2964:	44 f4       	brge	.+16     	; 0x2976 <main+0x10ba>
		__ticks = 1;
    2966:	fe 01       	movw	r30, r28
    2968:	e2 5c       	subi	r30, 0xC2	; 194
    296a:	fe 4f       	sbci	r31, 0xFE	; 254
    296c:	81 e0       	ldi	r24, 0x01	; 1
    296e:	90 e0       	ldi	r25, 0x00	; 0
    2970:	91 83       	std	Z+1, r25	; 0x01
    2972:	80 83       	st	Z, r24
    2974:	64 c0       	rjmp	.+200    	; 0x2a3e <main+0x1182>
	else if (__tmp > 65535)
    2976:	fe 01       	movw	r30, r28
    2978:	e0 5c       	subi	r30, 0xC0	; 192
    297a:	fe 4f       	sbci	r31, 0xFE	; 254
    297c:	60 81       	ld	r22, Z
    297e:	71 81       	ldd	r23, Z+1	; 0x01
    2980:	82 81       	ldd	r24, Z+2	; 0x02
    2982:	93 81       	ldd	r25, Z+3	; 0x03
    2984:	20 e0       	ldi	r18, 0x00	; 0
    2986:	3f ef       	ldi	r19, 0xFF	; 255
    2988:	4f e7       	ldi	r20, 0x7F	; 127
    298a:	57 e4       	ldi	r21, 0x47	; 71
    298c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2990:	18 16       	cp	r1, r24
    2992:	0c f0       	brlt	.+2      	; 0x2996 <main+0x10da>
    2994:	43 c0       	rjmp	.+134    	; 0x2a1c <main+0x1160>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2996:	fe 01       	movw	r30, r28
    2998:	ec 5b       	subi	r30, 0xBC	; 188
    299a:	fe 4f       	sbci	r31, 0xFE	; 254
    299c:	60 81       	ld	r22, Z
    299e:	71 81       	ldd	r23, Z+1	; 0x01
    29a0:	82 81       	ldd	r24, Z+2	; 0x02
    29a2:	93 81       	ldd	r25, Z+3	; 0x03
    29a4:	20 e0       	ldi	r18, 0x00	; 0
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	40 e2       	ldi	r20, 0x20	; 32
    29aa:	51 e4       	ldi	r21, 0x41	; 65
    29ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29b0:	dc 01       	movw	r26, r24
    29b2:	cb 01       	movw	r24, r22
    29b4:	8e 01       	movw	r16, r28
    29b6:	02 5c       	subi	r16, 0xC2	; 194
    29b8:	1e 4f       	sbci	r17, 0xFE	; 254
    29ba:	bc 01       	movw	r22, r24
    29bc:	cd 01       	movw	r24, r26
    29be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29c2:	dc 01       	movw	r26, r24
    29c4:	cb 01       	movw	r24, r22
    29c6:	f8 01       	movw	r30, r16
    29c8:	91 83       	std	Z+1, r25	; 0x01
    29ca:	80 83       	st	Z, r24
    29cc:	1f c0       	rjmp	.+62     	; 0x2a0c <main+0x1150>
    29ce:	fe 01       	movw	r30, r28
    29d0:	e4 5c       	subi	r30, 0xC4	; 196
    29d2:	fe 4f       	sbci	r31, 0xFE	; 254
    29d4:	8c e2       	ldi	r24, 0x2C	; 44
    29d6:	91 e0       	ldi	r25, 0x01	; 1
    29d8:	91 83       	std	Z+1, r25	; 0x01
    29da:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    29dc:	fe 01       	movw	r30, r28
    29de:	e4 5c       	subi	r30, 0xC4	; 196
    29e0:	fe 4f       	sbci	r31, 0xFE	; 254
    29e2:	80 81       	ld	r24, Z
    29e4:	91 81       	ldd	r25, Z+1	; 0x01
    29e6:	01 97       	sbiw	r24, 0x01	; 1
    29e8:	f1 f7       	brne	.-4      	; 0x29e6 <main+0x112a>
    29ea:	fe 01       	movw	r30, r28
    29ec:	e4 5c       	subi	r30, 0xC4	; 196
    29ee:	fe 4f       	sbci	r31, 0xFE	; 254
    29f0:	91 83       	std	Z+1, r25	; 0x01
    29f2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29f4:	de 01       	movw	r26, r28
    29f6:	a2 5c       	subi	r26, 0xC2	; 194
    29f8:	be 4f       	sbci	r27, 0xFE	; 254
    29fa:	fe 01       	movw	r30, r28
    29fc:	e2 5c       	subi	r30, 0xC2	; 194
    29fe:	fe 4f       	sbci	r31, 0xFE	; 254
    2a00:	80 81       	ld	r24, Z
    2a02:	91 81       	ldd	r25, Z+1	; 0x01
    2a04:	01 97       	sbiw	r24, 0x01	; 1
    2a06:	11 96       	adiw	r26, 0x01	; 1
    2a08:	9c 93       	st	X, r25
    2a0a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	e2 5c       	subi	r30, 0xC2	; 194
    2a10:	fe 4f       	sbci	r31, 0xFE	; 254
    2a12:	80 81       	ld	r24, Z
    2a14:	91 81       	ldd	r25, Z+1	; 0x01
    2a16:	00 97       	sbiw	r24, 0x00	; 0
    2a18:	d1 f6       	brne	.-76     	; 0x29ce <main+0x1112>
    2a1a:	4b c0       	rjmp	.+150    	; 0x2ab2 <main+0x11f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a1c:	8e 01       	movw	r16, r28
    2a1e:	02 5c       	subi	r16, 0xC2	; 194
    2a20:	1e 4f       	sbci	r17, 0xFE	; 254
    2a22:	fe 01       	movw	r30, r28
    2a24:	e0 5c       	subi	r30, 0xC0	; 192
    2a26:	fe 4f       	sbci	r31, 0xFE	; 254
    2a28:	60 81       	ld	r22, Z
    2a2a:	71 81       	ldd	r23, Z+1	; 0x01
    2a2c:	82 81       	ldd	r24, Z+2	; 0x02
    2a2e:	93 81       	ldd	r25, Z+3	; 0x03
    2a30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a34:	dc 01       	movw	r26, r24
    2a36:	cb 01       	movw	r24, r22
    2a38:	f8 01       	movw	r30, r16
    2a3a:	91 83       	std	Z+1, r25	; 0x01
    2a3c:	80 83       	st	Z, r24
    2a3e:	de 01       	movw	r26, r28
    2a40:	a6 5c       	subi	r26, 0xC6	; 198
    2a42:	be 4f       	sbci	r27, 0xFE	; 254
    2a44:	fe 01       	movw	r30, r28
    2a46:	e2 5c       	subi	r30, 0xC2	; 194
    2a48:	fe 4f       	sbci	r31, 0xFE	; 254
    2a4a:	80 81       	ld	r24, Z
    2a4c:	91 81       	ldd	r25, Z+1	; 0x01
    2a4e:	11 96       	adiw	r26, 0x01	; 1
    2a50:	9c 93       	st	X, r25
    2a52:	8e 93       	st	-X, r24
    2a54:	fe 01       	movw	r30, r28
    2a56:	e6 5c       	subi	r30, 0xC6	; 198
    2a58:	fe 4f       	sbci	r31, 0xFE	; 254
    2a5a:	80 81       	ld	r24, Z
    2a5c:	91 81       	ldd	r25, Z+1	; 0x01
    2a5e:	01 97       	sbiw	r24, 0x01	; 1
    2a60:	f1 f7       	brne	.-4      	; 0x2a5e <main+0x11a2>
    2a62:	fe 01       	movw	r30, r28
    2a64:	e6 5c       	subi	r30, 0xC6	; 198
    2a66:	fe 4f       	sbci	r31, 0xFE	; 254
    2a68:	91 83       	std	Z+1, r25	; 0x01
    2a6a:	80 83       	st	Z, r24
    2a6c:	22 c0       	rjmp	.+68     	; 0x2ab2 <main+0x11f6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2a6e:	8e 01       	movw	r16, r28
    2a70:	08 5b       	subi	r16, 0xB8	; 184
    2a72:	1e 4f       	sbci	r17, 0xFE	; 254
    2a74:	fe 01       	movw	r30, r28
    2a76:	e7 5b       	subi	r30, 0xB7	; 183
    2a78:	fe 4f       	sbci	r31, 0xFE	; 254
    2a7a:	60 81       	ld	r22, Z
    2a7c:	71 81       	ldd	r23, Z+1	; 0x01
    2a7e:	82 81       	ldd	r24, Z+2	; 0x02
    2a80:	93 81       	ldd	r25, Z+3	; 0x03
    2a82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a86:	dc 01       	movw	r26, r24
    2a88:	cb 01       	movw	r24, r22
    2a8a:	f8 01       	movw	r30, r16
    2a8c:	80 83       	st	Z, r24
    2a8e:	de 01       	movw	r26, r28
    2a90:	a7 5c       	subi	r26, 0xC7	; 199
    2a92:	be 4f       	sbci	r27, 0xFE	; 254
    2a94:	fe 01       	movw	r30, r28
    2a96:	e8 5b       	subi	r30, 0xB8	; 184
    2a98:	fe 4f       	sbci	r31, 0xFE	; 254
    2a9a:	80 81       	ld	r24, Z
    2a9c:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2a9e:	fe 01       	movw	r30, r28
    2aa0:	e7 5c       	subi	r30, 0xC7	; 199
    2aa2:	fe 4f       	sbci	r31, 0xFE	; 254
    2aa4:	80 81       	ld	r24, Z
    2aa6:	8a 95       	dec	r24
    2aa8:	f1 f7       	brne	.-4      	; 0x2aa6 <main+0x11ea>
    2aaa:	fe 01       	movw	r30, r28
    2aac:	e7 5c       	subi	r30, 0xC7	; 199
    2aae:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab0:	80 83       	st	Z, r24
				_delay_us(1500);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2ab2:	82 e0       	ldi	r24, 0x02	; 2
    2ab4:	62 e0       	ldi	r22, 0x02	; 2
    2ab6:	40 e0       	ldi	r20, 0x00	; 0
    2ab8:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    2abc:	fe 01       	movw	r30, r28
    2abe:	eb 5c       	subi	r30, 0xCB	; 203
    2ac0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ac2:	80 e0       	ldi	r24, 0x00	; 0
    2ac4:	98 e8       	ldi	r25, 0x88	; 136
    2ac6:	a0 e9       	ldi	r26, 0x90	; 144
    2ac8:	b6 e4       	ldi	r27, 0x46	; 70
    2aca:	80 83       	st	Z, r24
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	a2 83       	std	Z+2, r26	; 0x02
    2ad0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2ad2:	8e 01       	movw	r16, r28
    2ad4:	0f 5c       	subi	r16, 0xCF	; 207
    2ad6:	1e 4f       	sbci	r17, 0xFE	; 254
    2ad8:	fe 01       	movw	r30, r28
    2ada:	eb 5c       	subi	r30, 0xCB	; 203
    2adc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ade:	60 81       	ld	r22, Z
    2ae0:	71 81       	ldd	r23, Z+1	; 0x01
    2ae2:	82 81       	ldd	r24, Z+2	; 0x02
    2ae4:	93 81       	ldd	r25, Z+3	; 0x03
    2ae6:	20 e0       	ldi	r18, 0x00	; 0
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	40 e8       	ldi	r20, 0x80	; 128
    2aec:	50 e4       	ldi	r21, 0x40	; 64
    2aee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2af2:	dc 01       	movw	r26, r24
    2af4:	cb 01       	movw	r24, r22
    2af6:	f8 01       	movw	r30, r16
    2af8:	80 83       	st	Z, r24
    2afa:	91 83       	std	Z+1, r25	; 0x01
    2afc:	a2 83       	std	Z+2, r26	; 0x02
    2afe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b00:	fe 01       	movw	r30, r28
    2b02:	ef 5c       	subi	r30, 0xCF	; 207
    2b04:	fe 4f       	sbci	r31, 0xFE	; 254
    2b06:	60 81       	ld	r22, Z
    2b08:	71 81       	ldd	r23, Z+1	; 0x01
    2b0a:	82 81       	ldd	r24, Z+2	; 0x02
    2b0c:	93 81       	ldd	r25, Z+3	; 0x03
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	40 e8       	ldi	r20, 0x80	; 128
    2b14:	5f e3       	ldi	r21, 0x3F	; 63
    2b16:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2b1a:	88 23       	and	r24, r24
    2b1c:	34 f4       	brge	.+12     	; 0x2b2a <main+0x126e>
		__ticks = 1;
    2b1e:	fe 01       	movw	r30, r28
    2b20:	e0 5d       	subi	r30, 0xD0	; 208
    2b22:	fe 4f       	sbci	r31, 0xFE	; 254
    2b24:	81 e0       	ldi	r24, 0x01	; 1
    2b26:	80 83       	st	Z, r24
    2b28:	e0 c0       	rjmp	.+448    	; 0x2cea <main+0x142e>
	else if (__tmp > 255)
    2b2a:	fe 01       	movw	r30, r28
    2b2c:	ef 5c       	subi	r30, 0xCF	; 207
    2b2e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b30:	60 81       	ld	r22, Z
    2b32:	71 81       	ldd	r23, Z+1	; 0x01
    2b34:	82 81       	ldd	r24, Z+2	; 0x02
    2b36:	93 81       	ldd	r25, Z+3	; 0x03
    2b38:	20 e0       	ldi	r18, 0x00	; 0
    2b3a:	30 e0       	ldi	r19, 0x00	; 0
    2b3c:	4f e7       	ldi	r20, 0x7F	; 127
    2b3e:	53 e4       	ldi	r21, 0x43	; 67
    2b40:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2b44:	18 16       	cp	r1, r24
    2b46:	0c f0       	brlt	.+2      	; 0x2b4a <main+0x128e>
    2b48:	c0 c0       	rjmp	.+384    	; 0x2cca <main+0x140e>
	{
		_delay_ms(__us / 1000.0);
    2b4a:	fe 01       	movw	r30, r28
    2b4c:	eb 5c       	subi	r30, 0xCB	; 203
    2b4e:	fe 4f       	sbci	r31, 0xFE	; 254
    2b50:	60 81       	ld	r22, Z
    2b52:	71 81       	ldd	r23, Z+1	; 0x01
    2b54:	82 81       	ldd	r24, Z+2	; 0x02
    2b56:	93 81       	ldd	r25, Z+3	; 0x03
    2b58:	20 e0       	ldi	r18, 0x00	; 0
    2b5a:	30 e0       	ldi	r19, 0x00	; 0
    2b5c:	4a e7       	ldi	r20, 0x7A	; 122
    2b5e:	54 e4       	ldi	r21, 0x44	; 68
    2b60:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2b64:	dc 01       	movw	r26, r24
    2b66:	cb 01       	movw	r24, r22
    2b68:	fe 01       	movw	r30, r28
    2b6a:	e4 5d       	subi	r30, 0xD4	; 212
    2b6c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b6e:	80 83       	st	Z, r24
    2b70:	91 83       	std	Z+1, r25	; 0x01
    2b72:	a2 83       	std	Z+2, r26	; 0x02
    2b74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b76:	8e 01       	movw	r16, r28
    2b78:	08 5d       	subi	r16, 0xD8	; 216
    2b7a:	1e 4f       	sbci	r17, 0xFE	; 254
    2b7c:	fe 01       	movw	r30, r28
    2b7e:	e4 5d       	subi	r30, 0xD4	; 212
    2b80:	fe 4f       	sbci	r31, 0xFE	; 254
    2b82:	60 81       	ld	r22, Z
    2b84:	71 81       	ldd	r23, Z+1	; 0x01
    2b86:	82 81       	ldd	r24, Z+2	; 0x02
    2b88:	93 81       	ldd	r25, Z+3	; 0x03
    2b8a:	20 e0       	ldi	r18, 0x00	; 0
    2b8c:	30 e8       	ldi	r19, 0x80	; 128
    2b8e:	4b e3       	ldi	r20, 0x3B	; 59
    2b90:	55 e4       	ldi	r21, 0x45	; 69
    2b92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b96:	dc 01       	movw	r26, r24
    2b98:	cb 01       	movw	r24, r22
    2b9a:	f8 01       	movw	r30, r16
    2b9c:	80 83       	st	Z, r24
    2b9e:	91 83       	std	Z+1, r25	; 0x01
    2ba0:	a2 83       	std	Z+2, r26	; 0x02
    2ba2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ba4:	fe 01       	movw	r30, r28
    2ba6:	e8 5d       	subi	r30, 0xD8	; 216
    2ba8:	fe 4f       	sbci	r31, 0xFE	; 254
    2baa:	60 81       	ld	r22, Z
    2bac:	71 81       	ldd	r23, Z+1	; 0x01
    2bae:	82 81       	ldd	r24, Z+2	; 0x02
    2bb0:	93 81       	ldd	r25, Z+3	; 0x03
    2bb2:	20 e0       	ldi	r18, 0x00	; 0
    2bb4:	30 e0       	ldi	r19, 0x00	; 0
    2bb6:	40 e8       	ldi	r20, 0x80	; 128
    2bb8:	5f e3       	ldi	r21, 0x3F	; 63
    2bba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2bbe:	88 23       	and	r24, r24
    2bc0:	44 f4       	brge	.+16     	; 0x2bd2 <main+0x1316>
		__ticks = 1;
    2bc2:	fe 01       	movw	r30, r28
    2bc4:	ea 5d       	subi	r30, 0xDA	; 218
    2bc6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc8:	81 e0       	ldi	r24, 0x01	; 1
    2bca:	90 e0       	ldi	r25, 0x00	; 0
    2bcc:	91 83       	std	Z+1, r25	; 0x01
    2bce:	80 83       	st	Z, r24
    2bd0:	64 c0       	rjmp	.+200    	; 0x2c9a <main+0x13de>
	else if (__tmp > 65535)
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	e8 5d       	subi	r30, 0xD8	; 216
    2bd6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bd8:	60 81       	ld	r22, Z
    2bda:	71 81       	ldd	r23, Z+1	; 0x01
    2bdc:	82 81       	ldd	r24, Z+2	; 0x02
    2bde:	93 81       	ldd	r25, Z+3	; 0x03
    2be0:	20 e0       	ldi	r18, 0x00	; 0
    2be2:	3f ef       	ldi	r19, 0xFF	; 255
    2be4:	4f e7       	ldi	r20, 0x7F	; 127
    2be6:	57 e4       	ldi	r21, 0x47	; 71
    2be8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2bec:	18 16       	cp	r1, r24
    2bee:	0c f0       	brlt	.+2      	; 0x2bf2 <main+0x1336>
    2bf0:	43 c0       	rjmp	.+134    	; 0x2c78 <main+0x13bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bf2:	fe 01       	movw	r30, r28
    2bf4:	e4 5d       	subi	r30, 0xD4	; 212
    2bf6:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf8:	60 81       	ld	r22, Z
    2bfa:	71 81       	ldd	r23, Z+1	; 0x01
    2bfc:	82 81       	ldd	r24, Z+2	; 0x02
    2bfe:	93 81       	ldd	r25, Z+3	; 0x03
    2c00:	20 e0       	ldi	r18, 0x00	; 0
    2c02:	30 e0       	ldi	r19, 0x00	; 0
    2c04:	40 e2       	ldi	r20, 0x20	; 32
    2c06:	51 e4       	ldi	r21, 0x41	; 65
    2c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c0c:	dc 01       	movw	r26, r24
    2c0e:	cb 01       	movw	r24, r22
    2c10:	8e 01       	movw	r16, r28
    2c12:	0a 5d       	subi	r16, 0xDA	; 218
    2c14:	1e 4f       	sbci	r17, 0xFE	; 254
    2c16:	bc 01       	movw	r22, r24
    2c18:	cd 01       	movw	r24, r26
    2c1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	f8 01       	movw	r30, r16
    2c24:	91 83       	std	Z+1, r25	; 0x01
    2c26:	80 83       	st	Z, r24
    2c28:	1f c0       	rjmp	.+62     	; 0x2c68 <main+0x13ac>
    2c2a:	fe 01       	movw	r30, r28
    2c2c:	ec 5d       	subi	r30, 0xDC	; 220
    2c2e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c30:	8c e2       	ldi	r24, 0x2C	; 44
    2c32:	91 e0       	ldi	r25, 0x01	; 1
    2c34:	91 83       	std	Z+1, r25	; 0x01
    2c36:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2c38:	fe 01       	movw	r30, r28
    2c3a:	ec 5d       	subi	r30, 0xDC	; 220
    2c3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c3e:	80 81       	ld	r24, Z
    2c40:	91 81       	ldd	r25, Z+1	; 0x01
    2c42:	01 97       	sbiw	r24, 0x01	; 1
    2c44:	f1 f7       	brne	.-4      	; 0x2c42 <main+0x1386>
    2c46:	fe 01       	movw	r30, r28
    2c48:	ec 5d       	subi	r30, 0xDC	; 220
    2c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c4c:	91 83       	std	Z+1, r25	; 0x01
    2c4e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c50:	de 01       	movw	r26, r28
    2c52:	aa 5d       	subi	r26, 0xDA	; 218
    2c54:	be 4f       	sbci	r27, 0xFE	; 254
    2c56:	fe 01       	movw	r30, r28
    2c58:	ea 5d       	subi	r30, 0xDA	; 218
    2c5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c5c:	80 81       	ld	r24, Z
    2c5e:	91 81       	ldd	r25, Z+1	; 0x01
    2c60:	01 97       	sbiw	r24, 0x01	; 1
    2c62:	11 96       	adiw	r26, 0x01	; 1
    2c64:	9c 93       	st	X, r25
    2c66:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c68:	fe 01       	movw	r30, r28
    2c6a:	ea 5d       	subi	r30, 0xDA	; 218
    2c6c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c6e:	80 81       	ld	r24, Z
    2c70:	91 81       	ldd	r25, Z+1	; 0x01
    2c72:	00 97       	sbiw	r24, 0x00	; 0
    2c74:	d1 f6       	brne	.-76     	; 0x2c2a <main+0x136e>
    2c76:	4b c0       	rjmp	.+150    	; 0x2d0e <main+0x1452>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c78:	8e 01       	movw	r16, r28
    2c7a:	0a 5d       	subi	r16, 0xDA	; 218
    2c7c:	1e 4f       	sbci	r17, 0xFE	; 254
    2c7e:	fe 01       	movw	r30, r28
    2c80:	e8 5d       	subi	r30, 0xD8	; 216
    2c82:	fe 4f       	sbci	r31, 0xFE	; 254
    2c84:	60 81       	ld	r22, Z
    2c86:	71 81       	ldd	r23, Z+1	; 0x01
    2c88:	82 81       	ldd	r24, Z+2	; 0x02
    2c8a:	93 81       	ldd	r25, Z+3	; 0x03
    2c8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c90:	dc 01       	movw	r26, r24
    2c92:	cb 01       	movw	r24, r22
    2c94:	f8 01       	movw	r30, r16
    2c96:	91 83       	std	Z+1, r25	; 0x01
    2c98:	80 83       	st	Z, r24
    2c9a:	de 01       	movw	r26, r28
    2c9c:	ae 5d       	subi	r26, 0xDE	; 222
    2c9e:	be 4f       	sbci	r27, 0xFE	; 254
    2ca0:	fe 01       	movw	r30, r28
    2ca2:	ea 5d       	subi	r30, 0xDA	; 218
    2ca4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ca6:	80 81       	ld	r24, Z
    2ca8:	91 81       	ldd	r25, Z+1	; 0x01
    2caa:	11 96       	adiw	r26, 0x01	; 1
    2cac:	9c 93       	st	X, r25
    2cae:	8e 93       	st	-X, r24
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	ee 5d       	subi	r30, 0xDE	; 222
    2cb4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cb6:	80 81       	ld	r24, Z
    2cb8:	91 81       	ldd	r25, Z+1	; 0x01
    2cba:	01 97       	sbiw	r24, 0x01	; 1
    2cbc:	f1 f7       	brne	.-4      	; 0x2cba <main+0x13fe>
    2cbe:	fe 01       	movw	r30, r28
    2cc0:	ee 5d       	subi	r30, 0xDE	; 222
    2cc2:	fe 4f       	sbci	r31, 0xFE	; 254
    2cc4:	91 83       	std	Z+1, r25	; 0x01
    2cc6:	80 83       	st	Z, r24
    2cc8:	22 c0       	rjmp	.+68     	; 0x2d0e <main+0x1452>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2cca:	8e 01       	movw	r16, r28
    2ccc:	00 5d       	subi	r16, 0xD0	; 208
    2cce:	1e 4f       	sbci	r17, 0xFE	; 254
    2cd0:	fe 01       	movw	r30, r28
    2cd2:	ef 5c       	subi	r30, 0xCF	; 207
    2cd4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cd6:	60 81       	ld	r22, Z
    2cd8:	71 81       	ldd	r23, Z+1	; 0x01
    2cda:	82 81       	ldd	r24, Z+2	; 0x02
    2cdc:	93 81       	ldd	r25, Z+3	; 0x03
    2cde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ce2:	dc 01       	movw	r26, r24
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	f8 01       	movw	r30, r16
    2ce8:	80 83       	st	Z, r24
    2cea:	de 01       	movw	r26, r28
    2cec:	af 5d       	subi	r26, 0xDF	; 223
    2cee:	be 4f       	sbci	r27, 0xFE	; 254
    2cf0:	fe 01       	movw	r30, r28
    2cf2:	e0 5d       	subi	r30, 0xD0	; 208
    2cf4:	fe 4f       	sbci	r31, 0xFE	; 254
    2cf6:	80 81       	ld	r24, Z
    2cf8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2cfa:	fe 01       	movw	r30, r28
    2cfc:	ef 5d       	subi	r30, 0xDF	; 223
    2cfe:	fe 4f       	sbci	r31, 0xFE	; 254
    2d00:	80 81       	ld	r24, Z
    2d02:	8a 95       	dec	r24
    2d04:	f1 f7       	brne	.-4      	; 0x2d02 <main+0x1446>
    2d06:	fe 01       	movw	r30, r28
    2d08:	ef 5d       	subi	r30, 0xDF	; 223
    2d0a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d0c:	80 83       	st	Z, r24
				_delay_us(18500);
				LCD_voidSetCursor(2, 1);
    2d0e:	82 e0       	ldi	r24, 0x02	; 2
    2d10:	61 e0       	ldi	r22, 0x01	; 1
    2d12:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("135");
    2d16:	8f e6       	ldi	r24, 0x6F	; 111
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidWriteString("90");

			}


			for( i=0;i<50;i++)//angle 135
    2d1e:	de 01       	movw	r26, r28
    2d20:	ad 51       	subi	r26, 0x1D	; 29
    2d22:	be 4f       	sbci	r27, 0xFE	; 254
    2d24:	fe 01       	movw	r30, r28
    2d26:	ed 51       	subi	r30, 0x1D	; 29
    2d28:	fe 4f       	sbci	r31, 0xFE	; 254
    2d2a:	80 81       	ld	r24, Z
    2d2c:	91 81       	ldd	r25, Z+1	; 0x01
    2d2e:	01 96       	adiw	r24, 0x01	; 1
    2d30:	11 96       	adiw	r26, 0x01	; 1
    2d32:	9c 93       	st	X, r25
    2d34:	8e 93       	st	-X, r24
    2d36:	fe 01       	movw	r30, r28
    2d38:	ed 51       	subi	r30, 0x1D	; 29
    2d3a:	fe 4f       	sbci	r31, 0xFE	; 254
    2d3c:	80 81       	ld	r24, Z
    2d3e:	91 81       	ldd	r25, Z+1	; 0x01
    2d40:	82 33       	cpi	r24, 0x32	; 50
    2d42:	91 05       	cpc	r25, r1
    2d44:	08 f4       	brcc	.+2      	; 0x2d48 <main+0x148c>
    2d46:	87 cd       	rjmp	.-1266   	; 0x2856 <main+0xf9a>
			}




			for( i=0;i<50;i++)//angle 180
    2d48:	fe 01       	movw	r30, r28
    2d4a:	ed 51       	subi	r30, 0x1D	; 29
    2d4c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d4e:	11 82       	std	Z+1, r1	; 0x01
    2d50:	10 82       	st	Z, r1
    2d52:	70 c2       	rjmp	.+1248   	; 0x3234 <main+0x1978>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    2d54:	82 e0       	ldi	r24, 0x02	; 2
    2d56:	62 e0       	ldi	r22, 0x02	; 2
    2d58:	41 e0       	ldi	r20, 0x01	; 1
    2d5a:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    2d5e:	fe 01       	movw	r30, r28
    2d60:	e3 5e       	subi	r30, 0xE3	; 227
    2d62:	fe 4f       	sbci	r31, 0xFE	; 254
    2d64:	80 e0       	ldi	r24, 0x00	; 0
    2d66:	90 e0       	ldi	r25, 0x00	; 0
    2d68:	aa ef       	ldi	r26, 0xFA	; 250
    2d6a:	b4 e4       	ldi	r27, 0x44	; 68
    2d6c:	80 83       	st	Z, r24
    2d6e:	91 83       	std	Z+1, r25	; 0x01
    2d70:	a2 83       	std	Z+2, r26	; 0x02
    2d72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2d74:	8e 01       	movw	r16, r28
    2d76:	07 5e       	subi	r16, 0xE7	; 231
    2d78:	1e 4f       	sbci	r17, 0xFE	; 254
    2d7a:	fe 01       	movw	r30, r28
    2d7c:	e3 5e       	subi	r30, 0xE3	; 227
    2d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d80:	60 81       	ld	r22, Z
    2d82:	71 81       	ldd	r23, Z+1	; 0x01
    2d84:	82 81       	ldd	r24, Z+2	; 0x02
    2d86:	93 81       	ldd	r25, Z+3	; 0x03
    2d88:	20 e0       	ldi	r18, 0x00	; 0
    2d8a:	30 e0       	ldi	r19, 0x00	; 0
    2d8c:	40 e8       	ldi	r20, 0x80	; 128
    2d8e:	50 e4       	ldi	r21, 0x40	; 64
    2d90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d94:	dc 01       	movw	r26, r24
    2d96:	cb 01       	movw	r24, r22
    2d98:	f8 01       	movw	r30, r16
    2d9a:	80 83       	st	Z, r24
    2d9c:	91 83       	std	Z+1, r25	; 0x01
    2d9e:	a2 83       	std	Z+2, r26	; 0x02
    2da0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2da2:	fe 01       	movw	r30, r28
    2da4:	e7 5e       	subi	r30, 0xE7	; 231
    2da6:	fe 4f       	sbci	r31, 0xFE	; 254
    2da8:	60 81       	ld	r22, Z
    2daa:	71 81       	ldd	r23, Z+1	; 0x01
    2dac:	82 81       	ldd	r24, Z+2	; 0x02
    2dae:	93 81       	ldd	r25, Z+3	; 0x03
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	30 e0       	ldi	r19, 0x00	; 0
    2db4:	40 e8       	ldi	r20, 0x80	; 128
    2db6:	5f e3       	ldi	r21, 0x3F	; 63
    2db8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2dbc:	88 23       	and	r24, r24
    2dbe:	34 f4       	brge	.+12     	; 0x2dcc <main+0x1510>
		__ticks = 1;
    2dc0:	fe 01       	movw	r30, r28
    2dc2:	e8 5e       	subi	r30, 0xE8	; 232
    2dc4:	fe 4f       	sbci	r31, 0xFE	; 254
    2dc6:	81 e0       	ldi	r24, 0x01	; 1
    2dc8:	80 83       	st	Z, r24
    2dca:	e0 c0       	rjmp	.+448    	; 0x2f8c <main+0x16d0>
	else if (__tmp > 255)
    2dcc:	fe 01       	movw	r30, r28
    2dce:	e7 5e       	subi	r30, 0xE7	; 231
    2dd0:	fe 4f       	sbci	r31, 0xFE	; 254
    2dd2:	60 81       	ld	r22, Z
    2dd4:	71 81       	ldd	r23, Z+1	; 0x01
    2dd6:	82 81       	ldd	r24, Z+2	; 0x02
    2dd8:	93 81       	ldd	r25, Z+3	; 0x03
    2dda:	20 e0       	ldi	r18, 0x00	; 0
    2ddc:	30 e0       	ldi	r19, 0x00	; 0
    2dde:	4f e7       	ldi	r20, 0x7F	; 127
    2de0:	53 e4       	ldi	r21, 0x43	; 67
    2de2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2de6:	18 16       	cp	r1, r24
    2de8:	0c f0       	brlt	.+2      	; 0x2dec <main+0x1530>
    2dea:	c0 c0       	rjmp	.+384    	; 0x2f6c <main+0x16b0>
	{
		_delay_ms(__us / 1000.0);
    2dec:	fe 01       	movw	r30, r28
    2dee:	e3 5e       	subi	r30, 0xE3	; 227
    2df0:	fe 4f       	sbci	r31, 0xFE	; 254
    2df2:	60 81       	ld	r22, Z
    2df4:	71 81       	ldd	r23, Z+1	; 0x01
    2df6:	82 81       	ldd	r24, Z+2	; 0x02
    2df8:	93 81       	ldd	r25, Z+3	; 0x03
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	4a e7       	ldi	r20, 0x7A	; 122
    2e00:	54 e4       	ldi	r21, 0x44	; 68
    2e02:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    2e06:	dc 01       	movw	r26, r24
    2e08:	cb 01       	movw	r24, r22
    2e0a:	fe 01       	movw	r30, r28
    2e0c:	ec 5e       	subi	r30, 0xEC	; 236
    2e0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2e10:	80 83       	st	Z, r24
    2e12:	91 83       	std	Z+1, r25	; 0x01
    2e14:	a2 83       	std	Z+2, r26	; 0x02
    2e16:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e18:	8e 01       	movw	r16, r28
    2e1a:	00 5f       	subi	r16, 0xF0	; 240
    2e1c:	1e 4f       	sbci	r17, 0xFE	; 254
    2e1e:	fe 01       	movw	r30, r28
    2e20:	ec 5e       	subi	r30, 0xEC	; 236
    2e22:	fe 4f       	sbci	r31, 0xFE	; 254
    2e24:	60 81       	ld	r22, Z
    2e26:	71 81       	ldd	r23, Z+1	; 0x01
    2e28:	82 81       	ldd	r24, Z+2	; 0x02
    2e2a:	93 81       	ldd	r25, Z+3	; 0x03
    2e2c:	20 e0       	ldi	r18, 0x00	; 0
    2e2e:	30 e8       	ldi	r19, 0x80	; 128
    2e30:	4b e3       	ldi	r20, 0x3B	; 59
    2e32:	55 e4       	ldi	r21, 0x45	; 69
    2e34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e38:	dc 01       	movw	r26, r24
    2e3a:	cb 01       	movw	r24, r22
    2e3c:	f8 01       	movw	r30, r16
    2e3e:	80 83       	st	Z, r24
    2e40:	91 83       	std	Z+1, r25	; 0x01
    2e42:	a2 83       	std	Z+2, r26	; 0x02
    2e44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e46:	fe 01       	movw	r30, r28
    2e48:	e0 5f       	subi	r30, 0xF0	; 240
    2e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e4c:	60 81       	ld	r22, Z
    2e4e:	71 81       	ldd	r23, Z+1	; 0x01
    2e50:	82 81       	ldd	r24, Z+2	; 0x02
    2e52:	93 81       	ldd	r25, Z+3	; 0x03
    2e54:	20 e0       	ldi	r18, 0x00	; 0
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	40 e8       	ldi	r20, 0x80	; 128
    2e5a:	5f e3       	ldi	r21, 0x3F	; 63
    2e5c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2e60:	88 23       	and	r24, r24
    2e62:	44 f4       	brge	.+16     	; 0x2e74 <main+0x15b8>
		__ticks = 1;
    2e64:	fe 01       	movw	r30, r28
    2e66:	e2 5f       	subi	r30, 0xF2	; 242
    2e68:	fe 4f       	sbci	r31, 0xFE	; 254
    2e6a:	81 e0       	ldi	r24, 0x01	; 1
    2e6c:	90 e0       	ldi	r25, 0x00	; 0
    2e6e:	91 83       	std	Z+1, r25	; 0x01
    2e70:	80 83       	st	Z, r24
    2e72:	64 c0       	rjmp	.+200    	; 0x2f3c <main+0x1680>
	else if (__tmp > 65535)
    2e74:	fe 01       	movw	r30, r28
    2e76:	e0 5f       	subi	r30, 0xF0	; 240
    2e78:	fe 4f       	sbci	r31, 0xFE	; 254
    2e7a:	60 81       	ld	r22, Z
    2e7c:	71 81       	ldd	r23, Z+1	; 0x01
    2e7e:	82 81       	ldd	r24, Z+2	; 0x02
    2e80:	93 81       	ldd	r25, Z+3	; 0x03
    2e82:	20 e0       	ldi	r18, 0x00	; 0
    2e84:	3f ef       	ldi	r19, 0xFF	; 255
    2e86:	4f e7       	ldi	r20, 0x7F	; 127
    2e88:	57 e4       	ldi	r21, 0x47	; 71
    2e8a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2e8e:	18 16       	cp	r1, r24
    2e90:	0c f0       	brlt	.+2      	; 0x2e94 <main+0x15d8>
    2e92:	43 c0       	rjmp	.+134    	; 0x2f1a <main+0x165e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e94:	fe 01       	movw	r30, r28
    2e96:	ec 5e       	subi	r30, 0xEC	; 236
    2e98:	fe 4f       	sbci	r31, 0xFE	; 254
    2e9a:	60 81       	ld	r22, Z
    2e9c:	71 81       	ldd	r23, Z+1	; 0x01
    2e9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ea0:	93 81       	ldd	r25, Z+3	; 0x03
    2ea2:	20 e0       	ldi	r18, 0x00	; 0
    2ea4:	30 e0       	ldi	r19, 0x00	; 0
    2ea6:	40 e2       	ldi	r20, 0x20	; 32
    2ea8:	51 e4       	ldi	r21, 0x41	; 65
    2eaa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eae:	dc 01       	movw	r26, r24
    2eb0:	cb 01       	movw	r24, r22
    2eb2:	8e 01       	movw	r16, r28
    2eb4:	02 5f       	subi	r16, 0xF2	; 242
    2eb6:	1e 4f       	sbci	r17, 0xFE	; 254
    2eb8:	bc 01       	movw	r22, r24
    2eba:	cd 01       	movw	r24, r26
    2ebc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ec0:	dc 01       	movw	r26, r24
    2ec2:	cb 01       	movw	r24, r22
    2ec4:	f8 01       	movw	r30, r16
    2ec6:	91 83       	std	Z+1, r25	; 0x01
    2ec8:	80 83       	st	Z, r24
    2eca:	1f c0       	rjmp	.+62     	; 0x2f0a <main+0x164e>
    2ecc:	fe 01       	movw	r30, r28
    2ece:	e4 5f       	subi	r30, 0xF4	; 244
    2ed0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ed2:	8c e2       	ldi	r24, 0x2C	; 44
    2ed4:	91 e0       	ldi	r25, 0x01	; 1
    2ed6:	91 83       	std	Z+1, r25	; 0x01
    2ed8:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2eda:	fe 01       	movw	r30, r28
    2edc:	e4 5f       	subi	r30, 0xF4	; 244
    2ede:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee0:	80 81       	ld	r24, Z
    2ee2:	91 81       	ldd	r25, Z+1	; 0x01
    2ee4:	01 97       	sbiw	r24, 0x01	; 1
    2ee6:	f1 f7       	brne	.-4      	; 0x2ee4 <main+0x1628>
    2ee8:	fe 01       	movw	r30, r28
    2eea:	e4 5f       	subi	r30, 0xF4	; 244
    2eec:	fe 4f       	sbci	r31, 0xFE	; 254
    2eee:	91 83       	std	Z+1, r25	; 0x01
    2ef0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ef2:	de 01       	movw	r26, r28
    2ef4:	a2 5f       	subi	r26, 0xF2	; 242
    2ef6:	be 4f       	sbci	r27, 0xFE	; 254
    2ef8:	fe 01       	movw	r30, r28
    2efa:	e2 5f       	subi	r30, 0xF2	; 242
    2efc:	fe 4f       	sbci	r31, 0xFE	; 254
    2efe:	80 81       	ld	r24, Z
    2f00:	91 81       	ldd	r25, Z+1	; 0x01
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	11 96       	adiw	r26, 0x01	; 1
    2f06:	9c 93       	st	X, r25
    2f08:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f0a:	fe 01       	movw	r30, r28
    2f0c:	e2 5f       	subi	r30, 0xF2	; 242
    2f0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2f10:	80 81       	ld	r24, Z
    2f12:	91 81       	ldd	r25, Z+1	; 0x01
    2f14:	00 97       	sbiw	r24, 0x00	; 0
    2f16:	d1 f6       	brne	.-76     	; 0x2ecc <main+0x1610>
    2f18:	4b c0       	rjmp	.+150    	; 0x2fb0 <main+0x16f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f1a:	8e 01       	movw	r16, r28
    2f1c:	02 5f       	subi	r16, 0xF2	; 242
    2f1e:	1e 4f       	sbci	r17, 0xFE	; 254
    2f20:	fe 01       	movw	r30, r28
    2f22:	e0 5f       	subi	r30, 0xF0	; 240
    2f24:	fe 4f       	sbci	r31, 0xFE	; 254
    2f26:	60 81       	ld	r22, Z
    2f28:	71 81       	ldd	r23, Z+1	; 0x01
    2f2a:	82 81       	ldd	r24, Z+2	; 0x02
    2f2c:	93 81       	ldd	r25, Z+3	; 0x03
    2f2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f32:	dc 01       	movw	r26, r24
    2f34:	cb 01       	movw	r24, r22
    2f36:	f8 01       	movw	r30, r16
    2f38:	91 83       	std	Z+1, r25	; 0x01
    2f3a:	80 83       	st	Z, r24
    2f3c:	de 01       	movw	r26, r28
    2f3e:	a6 5f       	subi	r26, 0xF6	; 246
    2f40:	be 4f       	sbci	r27, 0xFE	; 254
    2f42:	fe 01       	movw	r30, r28
    2f44:	e2 5f       	subi	r30, 0xF2	; 242
    2f46:	fe 4f       	sbci	r31, 0xFE	; 254
    2f48:	80 81       	ld	r24, Z
    2f4a:	91 81       	ldd	r25, Z+1	; 0x01
    2f4c:	11 96       	adiw	r26, 0x01	; 1
    2f4e:	9c 93       	st	X, r25
    2f50:	8e 93       	st	-X, r24
    2f52:	fe 01       	movw	r30, r28
    2f54:	e6 5f       	subi	r30, 0xF6	; 246
    2f56:	fe 4f       	sbci	r31, 0xFE	; 254
    2f58:	80 81       	ld	r24, Z
    2f5a:	91 81       	ldd	r25, Z+1	; 0x01
    2f5c:	01 97       	sbiw	r24, 0x01	; 1
    2f5e:	f1 f7       	brne	.-4      	; 0x2f5c <main+0x16a0>
    2f60:	fe 01       	movw	r30, r28
    2f62:	e6 5f       	subi	r30, 0xF6	; 246
    2f64:	fe 4f       	sbci	r31, 0xFE	; 254
    2f66:	91 83       	std	Z+1, r25	; 0x01
    2f68:	80 83       	st	Z, r24
    2f6a:	22 c0       	rjmp	.+68     	; 0x2fb0 <main+0x16f4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2f6c:	8e 01       	movw	r16, r28
    2f6e:	08 5e       	subi	r16, 0xE8	; 232
    2f70:	1e 4f       	sbci	r17, 0xFE	; 254
    2f72:	fe 01       	movw	r30, r28
    2f74:	e7 5e       	subi	r30, 0xE7	; 231
    2f76:	fe 4f       	sbci	r31, 0xFE	; 254
    2f78:	60 81       	ld	r22, Z
    2f7a:	71 81       	ldd	r23, Z+1	; 0x01
    2f7c:	82 81       	ldd	r24, Z+2	; 0x02
    2f7e:	93 81       	ldd	r25, Z+3	; 0x03
    2f80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f84:	dc 01       	movw	r26, r24
    2f86:	cb 01       	movw	r24, r22
    2f88:	f8 01       	movw	r30, r16
    2f8a:	80 83       	st	Z, r24
    2f8c:	de 01       	movw	r26, r28
    2f8e:	a7 5f       	subi	r26, 0xF7	; 247
    2f90:	be 4f       	sbci	r27, 0xFE	; 254
    2f92:	fe 01       	movw	r30, r28
    2f94:	e8 5e       	subi	r30, 0xE8	; 232
    2f96:	fe 4f       	sbci	r31, 0xFE	; 254
    2f98:	80 81       	ld	r24, Z
    2f9a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    2f9c:	fe 01       	movw	r30, r28
    2f9e:	e7 5f       	subi	r30, 0xF7	; 247
    2fa0:	fe 4f       	sbci	r31, 0xFE	; 254
    2fa2:	80 81       	ld	r24, Z
    2fa4:	8a 95       	dec	r24
    2fa6:	f1 f7       	brne	.-4      	; 0x2fa4 <main+0x16e8>
    2fa8:	fe 01       	movw	r30, r28
    2faa:	e7 5f       	subi	r30, 0xF7	; 247
    2fac:	fe 4f       	sbci	r31, 0xFE	; 254
    2fae:	80 83       	st	Z, r24
				_delay_us(2000);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2fb0:	82 e0       	ldi	r24, 0x02	; 2
    2fb2:	62 e0       	ldi	r22, 0x02	; 2
    2fb4:	40 e0       	ldi	r20, 0x00	; 0
    2fb6:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    2fba:	fe 01       	movw	r30, r28
    2fbc:	eb 5f       	subi	r30, 0xFB	; 251
    2fbe:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc0:	80 e0       	ldi	r24, 0x00	; 0
    2fc2:	90 ea       	ldi	r25, 0xA0	; 160
    2fc4:	ac e8       	ldi	r26, 0x8C	; 140
    2fc6:	b6 e4       	ldi	r27, 0x46	; 70
    2fc8:	80 83       	st	Z, r24
    2fca:	91 83       	std	Z+1, r25	; 0x01
    2fcc:	a2 83       	std	Z+2, r26	; 0x02
    2fce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2fd0:	8e 01       	movw	r16, r28
    2fd2:	0f 5f       	subi	r16, 0xFF	; 255
    2fd4:	1e 4f       	sbci	r17, 0xFE	; 254
    2fd6:	fe 01       	movw	r30, r28
    2fd8:	eb 5f       	subi	r30, 0xFB	; 251
    2fda:	fe 4f       	sbci	r31, 0xFE	; 254
    2fdc:	60 81       	ld	r22, Z
    2fde:	71 81       	ldd	r23, Z+1	; 0x01
    2fe0:	82 81       	ldd	r24, Z+2	; 0x02
    2fe2:	93 81       	ldd	r25, Z+3	; 0x03
    2fe4:	20 e0       	ldi	r18, 0x00	; 0
    2fe6:	30 e0       	ldi	r19, 0x00	; 0
    2fe8:	40 e8       	ldi	r20, 0x80	; 128
    2fea:	50 e4       	ldi	r21, 0x40	; 64
    2fec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ff0:	dc 01       	movw	r26, r24
    2ff2:	cb 01       	movw	r24, r22
    2ff4:	f8 01       	movw	r30, r16
    2ff6:	80 83       	st	Z, r24
    2ff8:	91 83       	std	Z+1, r25	; 0x01
    2ffa:	a2 83       	std	Z+2, r26	; 0x02
    2ffc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ffe:	fe 01       	movw	r30, r28
    3000:	ef 5f       	subi	r30, 0xFF	; 255
    3002:	fe 4f       	sbci	r31, 0xFE	; 254
    3004:	60 81       	ld	r22, Z
    3006:	71 81       	ldd	r23, Z+1	; 0x01
    3008:	82 81       	ldd	r24, Z+2	; 0x02
    300a:	93 81       	ldd	r25, Z+3	; 0x03
    300c:	20 e0       	ldi	r18, 0x00	; 0
    300e:	30 e0       	ldi	r19, 0x00	; 0
    3010:	40 e8       	ldi	r20, 0x80	; 128
    3012:	5f e3       	ldi	r21, 0x3F	; 63
    3014:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3018:	88 23       	and	r24, r24
    301a:	34 f4       	brge	.+12     	; 0x3028 <main+0x176c>
		__ticks = 1;
    301c:	fe 01       	movw	r30, r28
    301e:	e0 50       	subi	r30, 0x00	; 0
    3020:	ff 4f       	sbci	r31, 0xFF	; 255
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	80 83       	st	Z, r24
    3026:	e0 c0       	rjmp	.+448    	; 0x31e8 <main+0x192c>
	else if (__tmp > 255)
    3028:	fe 01       	movw	r30, r28
    302a:	ef 5f       	subi	r30, 0xFF	; 255
    302c:	fe 4f       	sbci	r31, 0xFE	; 254
    302e:	60 81       	ld	r22, Z
    3030:	71 81       	ldd	r23, Z+1	; 0x01
    3032:	82 81       	ldd	r24, Z+2	; 0x02
    3034:	93 81       	ldd	r25, Z+3	; 0x03
    3036:	20 e0       	ldi	r18, 0x00	; 0
    3038:	30 e0       	ldi	r19, 0x00	; 0
    303a:	4f e7       	ldi	r20, 0x7F	; 127
    303c:	53 e4       	ldi	r21, 0x43	; 67
    303e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3042:	18 16       	cp	r1, r24
    3044:	0c f0       	brlt	.+2      	; 0x3048 <main+0x178c>
    3046:	c0 c0       	rjmp	.+384    	; 0x31c8 <main+0x190c>
	{
		_delay_ms(__us / 1000.0);
    3048:	fe 01       	movw	r30, r28
    304a:	eb 5f       	subi	r30, 0xFB	; 251
    304c:	fe 4f       	sbci	r31, 0xFE	; 254
    304e:	60 81       	ld	r22, Z
    3050:	71 81       	ldd	r23, Z+1	; 0x01
    3052:	82 81       	ldd	r24, Z+2	; 0x02
    3054:	93 81       	ldd	r25, Z+3	; 0x03
    3056:	20 e0       	ldi	r18, 0x00	; 0
    3058:	30 e0       	ldi	r19, 0x00	; 0
    305a:	4a e7       	ldi	r20, 0x7A	; 122
    305c:	54 e4       	ldi	r21, 0x44	; 68
    305e:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3062:	dc 01       	movw	r26, r24
    3064:	cb 01       	movw	r24, r22
    3066:	fe 01       	movw	r30, r28
    3068:	e4 50       	subi	r30, 0x04	; 4
    306a:	ff 4f       	sbci	r31, 0xFF	; 255
    306c:	80 83       	st	Z, r24
    306e:	91 83       	std	Z+1, r25	; 0x01
    3070:	a2 83       	std	Z+2, r26	; 0x02
    3072:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3074:	8e 01       	movw	r16, r28
    3076:	08 50       	subi	r16, 0x08	; 8
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	fe 01       	movw	r30, r28
    307c:	e4 50       	subi	r30, 0x04	; 4
    307e:	ff 4f       	sbci	r31, 0xFF	; 255
    3080:	60 81       	ld	r22, Z
    3082:	71 81       	ldd	r23, Z+1	; 0x01
    3084:	82 81       	ldd	r24, Z+2	; 0x02
    3086:	93 81       	ldd	r25, Z+3	; 0x03
    3088:	20 e0       	ldi	r18, 0x00	; 0
    308a:	30 e8       	ldi	r19, 0x80	; 128
    308c:	4b e3       	ldi	r20, 0x3B	; 59
    308e:	55 e4       	ldi	r21, 0x45	; 69
    3090:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3094:	dc 01       	movw	r26, r24
    3096:	cb 01       	movw	r24, r22
    3098:	f8 01       	movw	r30, r16
    309a:	80 83       	st	Z, r24
    309c:	91 83       	std	Z+1, r25	; 0x01
    309e:	a2 83       	std	Z+2, r26	; 0x02
    30a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    30a2:	fe 01       	movw	r30, r28
    30a4:	e8 50       	subi	r30, 0x08	; 8
    30a6:	ff 4f       	sbci	r31, 0xFF	; 255
    30a8:	60 81       	ld	r22, Z
    30aa:	71 81       	ldd	r23, Z+1	; 0x01
    30ac:	82 81       	ldd	r24, Z+2	; 0x02
    30ae:	93 81       	ldd	r25, Z+3	; 0x03
    30b0:	20 e0       	ldi	r18, 0x00	; 0
    30b2:	30 e0       	ldi	r19, 0x00	; 0
    30b4:	40 e8       	ldi	r20, 0x80	; 128
    30b6:	5f e3       	ldi	r21, 0x3F	; 63
    30b8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    30bc:	88 23       	and	r24, r24
    30be:	44 f4       	brge	.+16     	; 0x30d0 <main+0x1814>
		__ticks = 1;
    30c0:	fe 01       	movw	r30, r28
    30c2:	ea 50       	subi	r30, 0x0A	; 10
    30c4:	ff 4f       	sbci	r31, 0xFF	; 255
    30c6:	81 e0       	ldi	r24, 0x01	; 1
    30c8:	90 e0       	ldi	r25, 0x00	; 0
    30ca:	91 83       	std	Z+1, r25	; 0x01
    30cc:	80 83       	st	Z, r24
    30ce:	64 c0       	rjmp	.+200    	; 0x3198 <main+0x18dc>
	else if (__tmp > 65535)
    30d0:	fe 01       	movw	r30, r28
    30d2:	e8 50       	subi	r30, 0x08	; 8
    30d4:	ff 4f       	sbci	r31, 0xFF	; 255
    30d6:	60 81       	ld	r22, Z
    30d8:	71 81       	ldd	r23, Z+1	; 0x01
    30da:	82 81       	ldd	r24, Z+2	; 0x02
    30dc:	93 81       	ldd	r25, Z+3	; 0x03
    30de:	20 e0       	ldi	r18, 0x00	; 0
    30e0:	3f ef       	ldi	r19, 0xFF	; 255
    30e2:	4f e7       	ldi	r20, 0x7F	; 127
    30e4:	57 e4       	ldi	r21, 0x47	; 71
    30e6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    30ea:	18 16       	cp	r1, r24
    30ec:	0c f0       	brlt	.+2      	; 0x30f0 <main+0x1834>
    30ee:	43 c0       	rjmp	.+134    	; 0x3176 <main+0x18ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30f0:	fe 01       	movw	r30, r28
    30f2:	e4 50       	subi	r30, 0x04	; 4
    30f4:	ff 4f       	sbci	r31, 0xFF	; 255
    30f6:	60 81       	ld	r22, Z
    30f8:	71 81       	ldd	r23, Z+1	; 0x01
    30fa:	82 81       	ldd	r24, Z+2	; 0x02
    30fc:	93 81       	ldd	r25, Z+3	; 0x03
    30fe:	20 e0       	ldi	r18, 0x00	; 0
    3100:	30 e0       	ldi	r19, 0x00	; 0
    3102:	40 e2       	ldi	r20, 0x20	; 32
    3104:	51 e4       	ldi	r21, 0x41	; 65
    3106:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    310a:	dc 01       	movw	r26, r24
    310c:	cb 01       	movw	r24, r22
    310e:	8e 01       	movw	r16, r28
    3110:	0a 50       	subi	r16, 0x0A	; 10
    3112:	1f 4f       	sbci	r17, 0xFF	; 255
    3114:	bc 01       	movw	r22, r24
    3116:	cd 01       	movw	r24, r26
    3118:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    311c:	dc 01       	movw	r26, r24
    311e:	cb 01       	movw	r24, r22
    3120:	f8 01       	movw	r30, r16
    3122:	91 83       	std	Z+1, r25	; 0x01
    3124:	80 83       	st	Z, r24
    3126:	1f c0       	rjmp	.+62     	; 0x3166 <main+0x18aa>
    3128:	fe 01       	movw	r30, r28
    312a:	ec 50       	subi	r30, 0x0C	; 12
    312c:	ff 4f       	sbci	r31, 0xFF	; 255
    312e:	8c e2       	ldi	r24, 0x2C	; 44
    3130:	91 e0       	ldi	r25, 0x01	; 1
    3132:	91 83       	std	Z+1, r25	; 0x01
    3134:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3136:	fe 01       	movw	r30, r28
    3138:	ec 50       	subi	r30, 0x0C	; 12
    313a:	ff 4f       	sbci	r31, 0xFF	; 255
    313c:	80 81       	ld	r24, Z
    313e:	91 81       	ldd	r25, Z+1	; 0x01
    3140:	01 97       	sbiw	r24, 0x01	; 1
    3142:	f1 f7       	brne	.-4      	; 0x3140 <main+0x1884>
    3144:	fe 01       	movw	r30, r28
    3146:	ec 50       	subi	r30, 0x0C	; 12
    3148:	ff 4f       	sbci	r31, 0xFF	; 255
    314a:	91 83       	std	Z+1, r25	; 0x01
    314c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    314e:	de 01       	movw	r26, r28
    3150:	aa 50       	subi	r26, 0x0A	; 10
    3152:	bf 4f       	sbci	r27, 0xFF	; 255
    3154:	fe 01       	movw	r30, r28
    3156:	ea 50       	subi	r30, 0x0A	; 10
    3158:	ff 4f       	sbci	r31, 0xFF	; 255
    315a:	80 81       	ld	r24, Z
    315c:	91 81       	ldd	r25, Z+1	; 0x01
    315e:	01 97       	sbiw	r24, 0x01	; 1
    3160:	11 96       	adiw	r26, 0x01	; 1
    3162:	9c 93       	st	X, r25
    3164:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3166:	fe 01       	movw	r30, r28
    3168:	ea 50       	subi	r30, 0x0A	; 10
    316a:	ff 4f       	sbci	r31, 0xFF	; 255
    316c:	80 81       	ld	r24, Z
    316e:	91 81       	ldd	r25, Z+1	; 0x01
    3170:	00 97       	sbiw	r24, 0x00	; 0
    3172:	d1 f6       	brne	.-76     	; 0x3128 <main+0x186c>
    3174:	4b c0       	rjmp	.+150    	; 0x320c <main+0x1950>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3176:	8e 01       	movw	r16, r28
    3178:	0a 50       	subi	r16, 0x0A	; 10
    317a:	1f 4f       	sbci	r17, 0xFF	; 255
    317c:	fe 01       	movw	r30, r28
    317e:	e8 50       	subi	r30, 0x08	; 8
    3180:	ff 4f       	sbci	r31, 0xFF	; 255
    3182:	60 81       	ld	r22, Z
    3184:	71 81       	ldd	r23, Z+1	; 0x01
    3186:	82 81       	ldd	r24, Z+2	; 0x02
    3188:	93 81       	ldd	r25, Z+3	; 0x03
    318a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    318e:	dc 01       	movw	r26, r24
    3190:	cb 01       	movw	r24, r22
    3192:	f8 01       	movw	r30, r16
    3194:	91 83       	std	Z+1, r25	; 0x01
    3196:	80 83       	st	Z, r24
    3198:	de 01       	movw	r26, r28
    319a:	ae 50       	subi	r26, 0x0E	; 14
    319c:	bf 4f       	sbci	r27, 0xFF	; 255
    319e:	fe 01       	movw	r30, r28
    31a0:	ea 50       	subi	r30, 0x0A	; 10
    31a2:	ff 4f       	sbci	r31, 0xFF	; 255
    31a4:	80 81       	ld	r24, Z
    31a6:	91 81       	ldd	r25, Z+1	; 0x01
    31a8:	11 96       	adiw	r26, 0x01	; 1
    31aa:	9c 93       	st	X, r25
    31ac:	8e 93       	st	-X, r24
    31ae:	fe 01       	movw	r30, r28
    31b0:	ee 50       	subi	r30, 0x0E	; 14
    31b2:	ff 4f       	sbci	r31, 0xFF	; 255
    31b4:	80 81       	ld	r24, Z
    31b6:	91 81       	ldd	r25, Z+1	; 0x01
    31b8:	01 97       	sbiw	r24, 0x01	; 1
    31ba:	f1 f7       	brne	.-4      	; 0x31b8 <main+0x18fc>
    31bc:	fe 01       	movw	r30, r28
    31be:	ee 50       	subi	r30, 0x0E	; 14
    31c0:	ff 4f       	sbci	r31, 0xFF	; 255
    31c2:	91 83       	std	Z+1, r25	; 0x01
    31c4:	80 83       	st	Z, r24
    31c6:	22 c0       	rjmp	.+68     	; 0x320c <main+0x1950>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    31c8:	8e 01       	movw	r16, r28
    31ca:	00 50       	subi	r16, 0x00	; 0
    31cc:	1f 4f       	sbci	r17, 0xFF	; 255
    31ce:	fe 01       	movw	r30, r28
    31d0:	ef 5f       	subi	r30, 0xFF	; 255
    31d2:	fe 4f       	sbci	r31, 0xFE	; 254
    31d4:	60 81       	ld	r22, Z
    31d6:	71 81       	ldd	r23, Z+1	; 0x01
    31d8:	82 81       	ldd	r24, Z+2	; 0x02
    31da:	93 81       	ldd	r25, Z+3	; 0x03
    31dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31e0:	dc 01       	movw	r26, r24
    31e2:	cb 01       	movw	r24, r22
    31e4:	f8 01       	movw	r30, r16
    31e6:	80 83       	st	Z, r24
    31e8:	de 01       	movw	r26, r28
    31ea:	af 50       	subi	r26, 0x0F	; 15
    31ec:	bf 4f       	sbci	r27, 0xFF	; 255
    31ee:	fe 01       	movw	r30, r28
    31f0:	e0 50       	subi	r30, 0x00	; 0
    31f2:	ff 4f       	sbci	r31, 0xFF	; 255
    31f4:	80 81       	ld	r24, Z
    31f6:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    31f8:	fe 01       	movw	r30, r28
    31fa:	ef 50       	subi	r30, 0x0F	; 15
    31fc:	ff 4f       	sbci	r31, 0xFF	; 255
    31fe:	80 81       	ld	r24, Z
    3200:	8a 95       	dec	r24
    3202:	f1 f7       	brne	.-4      	; 0x3200 <main+0x1944>
    3204:	fe 01       	movw	r30, r28
    3206:	ef 50       	subi	r30, 0x0F	; 15
    3208:	ff 4f       	sbci	r31, 0xFF	; 255
    320a:	80 83       	st	Z, r24
				_delay_us(18000);
				LCD_voidSetCursor(2, 1);
    320c:	82 e0       	ldi	r24, 0x02	; 2
    320e:	61 e0       	ldi	r22, 0x01	; 1
    3210:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("180");
    3214:	83 e7       	ldi	r24, 0x73	; 115
    3216:	90 e0       	ldi	r25, 0x00	; 0
    3218:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
			}




			for( i=0;i<50;i++)//angle 180
    321c:	de 01       	movw	r26, r28
    321e:	ad 51       	subi	r26, 0x1D	; 29
    3220:	be 4f       	sbci	r27, 0xFE	; 254
    3222:	fe 01       	movw	r30, r28
    3224:	ed 51       	subi	r30, 0x1D	; 29
    3226:	fe 4f       	sbci	r31, 0xFE	; 254
    3228:	80 81       	ld	r24, Z
    322a:	91 81       	ldd	r25, Z+1	; 0x01
    322c:	01 96       	adiw	r24, 0x01	; 1
    322e:	11 96       	adiw	r26, 0x01	; 1
    3230:	9c 93       	st	X, r25
    3232:	8e 93       	st	-X, r24
    3234:	fe 01       	movw	r30, r28
    3236:	ed 51       	subi	r30, 0x1D	; 29
    3238:	fe 4f       	sbci	r31, 0xFE	; 254
    323a:	80 81       	ld	r24, Z
    323c:	91 81       	ldd	r25, Z+1	; 0x01
    323e:	82 33       	cpi	r24, 0x32	; 50
    3240:	91 05       	cpc	r25, r1
    3242:	08 f4       	brcc	.+2      	; 0x3246 <main+0x198a>
    3244:	87 cd       	rjmp	.-1266   	; 0x2d54 <main+0x1498>
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("180");

			}

			LCD_voidClear();
    3246:	0e 94 40 0c 	call	0x1880	; 0x1880 <LCD_voidClear>
			LCD_voidWriteString("Angle:");
    324a:	80 e6       	ldi	r24, 0x60	; 96
    324c:	90 e0       	ldi	r25, 0x00	; 0
    324e:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
			LCD_voidSetCursor(2, 1);
    3252:	82 e0       	ldi	r24, 0x02	; 2
    3254:	61 e0       	ldi	r22, 0x01	; 1
    3256:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
			LCD_voidWriteString("180");
    325a:	83 e7       	ldi	r24, 0x73	; 115
    325c:	90 e0       	ldi	r25, 0x00	; 0
    325e:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
    3262:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <main+0x62>

			/////////////////////////////////////////////////////////////////
			////////////////////////////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////
else if(y==0)
    3266:	fe 01       	movw	r30, r28
    3268:	ef 51       	subi	r30, 0x1F	; 31
    326a:	fe 4f       	sbci	r31, 0xFE	; 254
    326c:	80 81       	ld	r24, Z
    326e:	88 23       	and	r24, r24
    3270:	11 f0       	breq	.+4      	; 0x3276 <main+0x19ba>
    3272:	0c 94 a9 24 	jmp	0x4952	; 0x4952 <main+0x3096>
{
			for( i=0;i<50;i++)//angle 180
    3276:	fe 01       	movw	r30, r28
    3278:	ed 51       	subi	r30, 0x1D	; 29
    327a:	fe 4f       	sbci	r31, 0xFE	; 254
    327c:	11 82       	std	Z+1, r1	; 0x01
    327e:	10 82       	st	Z, r1
    3280:	77 c2       	rjmp	.+1262   	; 0x3770 <main+0x1eb4>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    3282:	82 e0       	ldi	r24, 0x02	; 2
    3284:	62 e0       	ldi	r22, 0x02	; 2
    3286:	41 e0       	ldi	r20, 0x01	; 1
    3288:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    328c:	fe 01       	movw	r30, r28
    328e:	e3 51       	subi	r30, 0x13	; 19
    3290:	ff 4f       	sbci	r31, 0xFF	; 255
    3292:	80 e0       	ldi	r24, 0x00	; 0
    3294:	90 e0       	ldi	r25, 0x00	; 0
    3296:	aa ef       	ldi	r26, 0xFA	; 250
    3298:	b4 e4       	ldi	r27, 0x44	; 68
    329a:	80 83       	st	Z, r24
    329c:	91 83       	std	Z+1, r25	; 0x01
    329e:	a2 83       	std	Z+2, r26	; 0x02
    32a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    32a2:	8e 01       	movw	r16, r28
    32a4:	07 51       	subi	r16, 0x17	; 23
    32a6:	1f 4f       	sbci	r17, 0xFF	; 255
    32a8:	fe 01       	movw	r30, r28
    32aa:	e3 51       	subi	r30, 0x13	; 19
    32ac:	ff 4f       	sbci	r31, 0xFF	; 255
    32ae:	60 81       	ld	r22, Z
    32b0:	71 81       	ldd	r23, Z+1	; 0x01
    32b2:	82 81       	ldd	r24, Z+2	; 0x02
    32b4:	93 81       	ldd	r25, Z+3	; 0x03
    32b6:	20 e0       	ldi	r18, 0x00	; 0
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	40 e8       	ldi	r20, 0x80	; 128
    32bc:	50 e4       	ldi	r21, 0x40	; 64
    32be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32c2:	dc 01       	movw	r26, r24
    32c4:	cb 01       	movw	r24, r22
    32c6:	f8 01       	movw	r30, r16
    32c8:	80 83       	st	Z, r24
    32ca:	91 83       	std	Z+1, r25	; 0x01
    32cc:	a2 83       	std	Z+2, r26	; 0x02
    32ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32d0:	fe 01       	movw	r30, r28
    32d2:	e7 51       	subi	r30, 0x17	; 23
    32d4:	ff 4f       	sbci	r31, 0xFF	; 255
    32d6:	60 81       	ld	r22, Z
    32d8:	71 81       	ldd	r23, Z+1	; 0x01
    32da:	82 81       	ldd	r24, Z+2	; 0x02
    32dc:	93 81       	ldd	r25, Z+3	; 0x03
    32de:	20 e0       	ldi	r18, 0x00	; 0
    32e0:	30 e0       	ldi	r19, 0x00	; 0
    32e2:	40 e8       	ldi	r20, 0x80	; 128
    32e4:	5f e3       	ldi	r21, 0x3F	; 63
    32e6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    32ea:	88 23       	and	r24, r24
    32ec:	34 f4       	brge	.+12     	; 0x32fa <main+0x1a3e>
		__ticks = 1;
    32ee:	fe 01       	movw	r30, r28
    32f0:	e8 51       	subi	r30, 0x18	; 24
    32f2:	ff 4f       	sbci	r31, 0xFF	; 255
    32f4:	81 e0       	ldi	r24, 0x01	; 1
    32f6:	80 83       	st	Z, r24
    32f8:	e0 c0       	rjmp	.+448    	; 0x34ba <main+0x1bfe>
	else if (__tmp > 255)
    32fa:	fe 01       	movw	r30, r28
    32fc:	e7 51       	subi	r30, 0x17	; 23
    32fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3300:	60 81       	ld	r22, Z
    3302:	71 81       	ldd	r23, Z+1	; 0x01
    3304:	82 81       	ldd	r24, Z+2	; 0x02
    3306:	93 81       	ldd	r25, Z+3	; 0x03
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	4f e7       	ldi	r20, 0x7F	; 127
    330e:	53 e4       	ldi	r21, 0x43	; 67
    3310:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3314:	18 16       	cp	r1, r24
    3316:	0c f0       	brlt	.+2      	; 0x331a <main+0x1a5e>
    3318:	c0 c0       	rjmp	.+384    	; 0x349a <main+0x1bde>
	{
		_delay_ms(__us / 1000.0);
    331a:	fe 01       	movw	r30, r28
    331c:	e3 51       	subi	r30, 0x13	; 19
    331e:	ff 4f       	sbci	r31, 0xFF	; 255
    3320:	60 81       	ld	r22, Z
    3322:	71 81       	ldd	r23, Z+1	; 0x01
    3324:	82 81       	ldd	r24, Z+2	; 0x02
    3326:	93 81       	ldd	r25, Z+3	; 0x03
    3328:	20 e0       	ldi	r18, 0x00	; 0
    332a:	30 e0       	ldi	r19, 0x00	; 0
    332c:	4a e7       	ldi	r20, 0x7A	; 122
    332e:	54 e4       	ldi	r21, 0x44	; 68
    3330:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3334:	dc 01       	movw	r26, r24
    3336:	cb 01       	movw	r24, r22
    3338:	fe 01       	movw	r30, r28
    333a:	ec 51       	subi	r30, 0x1C	; 28
    333c:	ff 4f       	sbci	r31, 0xFF	; 255
    333e:	80 83       	st	Z, r24
    3340:	91 83       	std	Z+1, r25	; 0x01
    3342:	a2 83       	std	Z+2, r26	; 0x02
    3344:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3346:	8e 01       	movw	r16, r28
    3348:	00 52       	subi	r16, 0x20	; 32
    334a:	1f 4f       	sbci	r17, 0xFF	; 255
    334c:	fe 01       	movw	r30, r28
    334e:	ec 51       	subi	r30, 0x1C	; 28
    3350:	ff 4f       	sbci	r31, 0xFF	; 255
    3352:	60 81       	ld	r22, Z
    3354:	71 81       	ldd	r23, Z+1	; 0x01
    3356:	82 81       	ldd	r24, Z+2	; 0x02
    3358:	93 81       	ldd	r25, Z+3	; 0x03
    335a:	20 e0       	ldi	r18, 0x00	; 0
    335c:	30 e8       	ldi	r19, 0x80	; 128
    335e:	4b e3       	ldi	r20, 0x3B	; 59
    3360:	55 e4       	ldi	r21, 0x45	; 69
    3362:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3366:	dc 01       	movw	r26, r24
    3368:	cb 01       	movw	r24, r22
    336a:	f8 01       	movw	r30, r16
    336c:	80 83       	st	Z, r24
    336e:	91 83       	std	Z+1, r25	; 0x01
    3370:	a2 83       	std	Z+2, r26	; 0x02
    3372:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3374:	fe 01       	movw	r30, r28
    3376:	e0 52       	subi	r30, 0x20	; 32
    3378:	ff 4f       	sbci	r31, 0xFF	; 255
    337a:	60 81       	ld	r22, Z
    337c:	71 81       	ldd	r23, Z+1	; 0x01
    337e:	82 81       	ldd	r24, Z+2	; 0x02
    3380:	93 81       	ldd	r25, Z+3	; 0x03
    3382:	20 e0       	ldi	r18, 0x00	; 0
    3384:	30 e0       	ldi	r19, 0x00	; 0
    3386:	40 e8       	ldi	r20, 0x80	; 128
    3388:	5f e3       	ldi	r21, 0x3F	; 63
    338a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    338e:	88 23       	and	r24, r24
    3390:	44 f4       	brge	.+16     	; 0x33a2 <main+0x1ae6>
		__ticks = 1;
    3392:	fe 01       	movw	r30, r28
    3394:	e2 52       	subi	r30, 0x22	; 34
    3396:	ff 4f       	sbci	r31, 0xFF	; 255
    3398:	81 e0       	ldi	r24, 0x01	; 1
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	91 83       	std	Z+1, r25	; 0x01
    339e:	80 83       	st	Z, r24
    33a0:	64 c0       	rjmp	.+200    	; 0x346a <main+0x1bae>
	else if (__tmp > 65535)
    33a2:	fe 01       	movw	r30, r28
    33a4:	e0 52       	subi	r30, 0x20	; 32
    33a6:	ff 4f       	sbci	r31, 0xFF	; 255
    33a8:	60 81       	ld	r22, Z
    33aa:	71 81       	ldd	r23, Z+1	; 0x01
    33ac:	82 81       	ldd	r24, Z+2	; 0x02
    33ae:	93 81       	ldd	r25, Z+3	; 0x03
    33b0:	20 e0       	ldi	r18, 0x00	; 0
    33b2:	3f ef       	ldi	r19, 0xFF	; 255
    33b4:	4f e7       	ldi	r20, 0x7F	; 127
    33b6:	57 e4       	ldi	r21, 0x47	; 71
    33b8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    33bc:	18 16       	cp	r1, r24
    33be:	0c f0       	brlt	.+2      	; 0x33c2 <main+0x1b06>
    33c0:	43 c0       	rjmp	.+134    	; 0x3448 <main+0x1b8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33c2:	fe 01       	movw	r30, r28
    33c4:	ec 51       	subi	r30, 0x1C	; 28
    33c6:	ff 4f       	sbci	r31, 0xFF	; 255
    33c8:	60 81       	ld	r22, Z
    33ca:	71 81       	ldd	r23, Z+1	; 0x01
    33cc:	82 81       	ldd	r24, Z+2	; 0x02
    33ce:	93 81       	ldd	r25, Z+3	; 0x03
    33d0:	20 e0       	ldi	r18, 0x00	; 0
    33d2:	30 e0       	ldi	r19, 0x00	; 0
    33d4:	40 e2       	ldi	r20, 0x20	; 32
    33d6:	51 e4       	ldi	r21, 0x41	; 65
    33d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33dc:	dc 01       	movw	r26, r24
    33de:	cb 01       	movw	r24, r22
    33e0:	8e 01       	movw	r16, r28
    33e2:	02 52       	subi	r16, 0x22	; 34
    33e4:	1f 4f       	sbci	r17, 0xFF	; 255
    33e6:	bc 01       	movw	r22, r24
    33e8:	cd 01       	movw	r24, r26
    33ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33ee:	dc 01       	movw	r26, r24
    33f0:	cb 01       	movw	r24, r22
    33f2:	f8 01       	movw	r30, r16
    33f4:	91 83       	std	Z+1, r25	; 0x01
    33f6:	80 83       	st	Z, r24
    33f8:	1f c0       	rjmp	.+62     	; 0x3438 <main+0x1b7c>
    33fa:	fe 01       	movw	r30, r28
    33fc:	e4 52       	subi	r30, 0x24	; 36
    33fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3400:	8c e2       	ldi	r24, 0x2C	; 44
    3402:	91 e0       	ldi	r25, 0x01	; 1
    3404:	91 83       	std	Z+1, r25	; 0x01
    3406:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3408:	fe 01       	movw	r30, r28
    340a:	e4 52       	subi	r30, 0x24	; 36
    340c:	ff 4f       	sbci	r31, 0xFF	; 255
    340e:	80 81       	ld	r24, Z
    3410:	91 81       	ldd	r25, Z+1	; 0x01
    3412:	01 97       	sbiw	r24, 0x01	; 1
    3414:	f1 f7       	brne	.-4      	; 0x3412 <main+0x1b56>
    3416:	fe 01       	movw	r30, r28
    3418:	e4 52       	subi	r30, 0x24	; 36
    341a:	ff 4f       	sbci	r31, 0xFF	; 255
    341c:	91 83       	std	Z+1, r25	; 0x01
    341e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3420:	de 01       	movw	r26, r28
    3422:	a2 52       	subi	r26, 0x22	; 34
    3424:	bf 4f       	sbci	r27, 0xFF	; 255
    3426:	fe 01       	movw	r30, r28
    3428:	e2 52       	subi	r30, 0x22	; 34
    342a:	ff 4f       	sbci	r31, 0xFF	; 255
    342c:	80 81       	ld	r24, Z
    342e:	91 81       	ldd	r25, Z+1	; 0x01
    3430:	01 97       	sbiw	r24, 0x01	; 1
    3432:	11 96       	adiw	r26, 0x01	; 1
    3434:	9c 93       	st	X, r25
    3436:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3438:	fe 01       	movw	r30, r28
    343a:	e2 52       	subi	r30, 0x22	; 34
    343c:	ff 4f       	sbci	r31, 0xFF	; 255
    343e:	80 81       	ld	r24, Z
    3440:	91 81       	ldd	r25, Z+1	; 0x01
    3442:	00 97       	sbiw	r24, 0x00	; 0
    3444:	d1 f6       	brne	.-76     	; 0x33fa <main+0x1b3e>
    3446:	4b c0       	rjmp	.+150    	; 0x34de <main+0x1c22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3448:	8e 01       	movw	r16, r28
    344a:	02 52       	subi	r16, 0x22	; 34
    344c:	1f 4f       	sbci	r17, 0xFF	; 255
    344e:	fe 01       	movw	r30, r28
    3450:	e0 52       	subi	r30, 0x20	; 32
    3452:	ff 4f       	sbci	r31, 0xFF	; 255
    3454:	60 81       	ld	r22, Z
    3456:	71 81       	ldd	r23, Z+1	; 0x01
    3458:	82 81       	ldd	r24, Z+2	; 0x02
    345a:	93 81       	ldd	r25, Z+3	; 0x03
    345c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3460:	dc 01       	movw	r26, r24
    3462:	cb 01       	movw	r24, r22
    3464:	f8 01       	movw	r30, r16
    3466:	91 83       	std	Z+1, r25	; 0x01
    3468:	80 83       	st	Z, r24
    346a:	de 01       	movw	r26, r28
    346c:	a6 52       	subi	r26, 0x26	; 38
    346e:	bf 4f       	sbci	r27, 0xFF	; 255
    3470:	fe 01       	movw	r30, r28
    3472:	e2 52       	subi	r30, 0x22	; 34
    3474:	ff 4f       	sbci	r31, 0xFF	; 255
    3476:	80 81       	ld	r24, Z
    3478:	91 81       	ldd	r25, Z+1	; 0x01
    347a:	11 96       	adiw	r26, 0x01	; 1
    347c:	9c 93       	st	X, r25
    347e:	8e 93       	st	-X, r24
    3480:	fe 01       	movw	r30, r28
    3482:	e6 52       	subi	r30, 0x26	; 38
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	91 81       	ldd	r25, Z+1	; 0x01
    348a:	01 97       	sbiw	r24, 0x01	; 1
    348c:	f1 f7       	brne	.-4      	; 0x348a <main+0x1bce>
    348e:	fe 01       	movw	r30, r28
    3490:	e6 52       	subi	r30, 0x26	; 38
    3492:	ff 4f       	sbci	r31, 0xFF	; 255
    3494:	91 83       	std	Z+1, r25	; 0x01
    3496:	80 83       	st	Z, r24
    3498:	22 c0       	rjmp	.+68     	; 0x34de <main+0x1c22>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    349a:	8e 01       	movw	r16, r28
    349c:	08 51       	subi	r16, 0x18	; 24
    349e:	1f 4f       	sbci	r17, 0xFF	; 255
    34a0:	fe 01       	movw	r30, r28
    34a2:	e7 51       	subi	r30, 0x17	; 23
    34a4:	ff 4f       	sbci	r31, 0xFF	; 255
    34a6:	60 81       	ld	r22, Z
    34a8:	71 81       	ldd	r23, Z+1	; 0x01
    34aa:	82 81       	ldd	r24, Z+2	; 0x02
    34ac:	93 81       	ldd	r25, Z+3	; 0x03
    34ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34b2:	dc 01       	movw	r26, r24
    34b4:	cb 01       	movw	r24, r22
    34b6:	f8 01       	movw	r30, r16
    34b8:	80 83       	st	Z, r24
    34ba:	de 01       	movw	r26, r28
    34bc:	a7 52       	subi	r26, 0x27	; 39
    34be:	bf 4f       	sbci	r27, 0xFF	; 255
    34c0:	fe 01       	movw	r30, r28
    34c2:	e8 51       	subi	r30, 0x18	; 24
    34c4:	ff 4f       	sbci	r31, 0xFF	; 255
    34c6:	80 81       	ld	r24, Z
    34c8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    34ca:	fe 01       	movw	r30, r28
    34cc:	e7 52       	subi	r30, 0x27	; 39
    34ce:	ff 4f       	sbci	r31, 0xFF	; 255
    34d0:	80 81       	ld	r24, Z
    34d2:	8a 95       	dec	r24
    34d4:	f1 f7       	brne	.-4      	; 0x34d2 <main+0x1c16>
    34d6:	fe 01       	movw	r30, r28
    34d8:	e7 52       	subi	r30, 0x27	; 39
    34da:	ff 4f       	sbci	r31, 0xFF	; 255
    34dc:	80 83       	st	Z, r24
				_delay_us(2000);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    34de:	82 e0       	ldi	r24, 0x02	; 2
    34e0:	62 e0       	ldi	r22, 0x02	; 2
    34e2:	40 e0       	ldi	r20, 0x00	; 0
    34e4:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    34e8:	fe 01       	movw	r30, r28
    34ea:	eb 52       	subi	r30, 0x2B	; 43
    34ec:	ff 4f       	sbci	r31, 0xFF	; 255
    34ee:	80 e0       	ldi	r24, 0x00	; 0
    34f0:	90 ea       	ldi	r25, 0xA0	; 160
    34f2:	ac e8       	ldi	r26, 0x8C	; 140
    34f4:	b6 e4       	ldi	r27, 0x46	; 70
    34f6:	80 83       	st	Z, r24
    34f8:	91 83       	std	Z+1, r25	; 0x01
    34fa:	a2 83       	std	Z+2, r26	; 0x02
    34fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    34fe:	8e 01       	movw	r16, r28
    3500:	0f 52       	subi	r16, 0x2F	; 47
    3502:	1f 4f       	sbci	r17, 0xFF	; 255
    3504:	fe 01       	movw	r30, r28
    3506:	eb 52       	subi	r30, 0x2B	; 43
    3508:	ff 4f       	sbci	r31, 0xFF	; 255
    350a:	60 81       	ld	r22, Z
    350c:	71 81       	ldd	r23, Z+1	; 0x01
    350e:	82 81       	ldd	r24, Z+2	; 0x02
    3510:	93 81       	ldd	r25, Z+3	; 0x03
    3512:	20 e0       	ldi	r18, 0x00	; 0
    3514:	30 e0       	ldi	r19, 0x00	; 0
    3516:	40 e8       	ldi	r20, 0x80	; 128
    3518:	50 e4       	ldi	r21, 0x40	; 64
    351a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    351e:	dc 01       	movw	r26, r24
    3520:	cb 01       	movw	r24, r22
    3522:	f8 01       	movw	r30, r16
    3524:	80 83       	st	Z, r24
    3526:	91 83       	std	Z+1, r25	; 0x01
    3528:	a2 83       	std	Z+2, r26	; 0x02
    352a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    352c:	fe 01       	movw	r30, r28
    352e:	ef 52       	subi	r30, 0x2F	; 47
    3530:	ff 4f       	sbci	r31, 0xFF	; 255
    3532:	60 81       	ld	r22, Z
    3534:	71 81       	ldd	r23, Z+1	; 0x01
    3536:	82 81       	ldd	r24, Z+2	; 0x02
    3538:	93 81       	ldd	r25, Z+3	; 0x03
    353a:	20 e0       	ldi	r18, 0x00	; 0
    353c:	30 e0       	ldi	r19, 0x00	; 0
    353e:	40 e8       	ldi	r20, 0x80	; 128
    3540:	5f e3       	ldi	r21, 0x3F	; 63
    3542:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3546:	88 23       	and	r24, r24
    3548:	34 f4       	brge	.+12     	; 0x3556 <main+0x1c9a>
		__ticks = 1;
    354a:	fe 01       	movw	r30, r28
    354c:	e0 53       	subi	r30, 0x30	; 48
    354e:	ff 4f       	sbci	r31, 0xFF	; 255
    3550:	81 e0       	ldi	r24, 0x01	; 1
    3552:	80 83       	st	Z, r24
    3554:	e0 c0       	rjmp	.+448    	; 0x3716 <main+0x1e5a>
	else if (__tmp > 255)
    3556:	fe 01       	movw	r30, r28
    3558:	ef 52       	subi	r30, 0x2F	; 47
    355a:	ff 4f       	sbci	r31, 0xFF	; 255
    355c:	60 81       	ld	r22, Z
    355e:	71 81       	ldd	r23, Z+1	; 0x01
    3560:	82 81       	ldd	r24, Z+2	; 0x02
    3562:	93 81       	ldd	r25, Z+3	; 0x03
    3564:	20 e0       	ldi	r18, 0x00	; 0
    3566:	30 e0       	ldi	r19, 0x00	; 0
    3568:	4f e7       	ldi	r20, 0x7F	; 127
    356a:	53 e4       	ldi	r21, 0x43	; 67
    356c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3570:	18 16       	cp	r1, r24
    3572:	0c f0       	brlt	.+2      	; 0x3576 <main+0x1cba>
    3574:	c0 c0       	rjmp	.+384    	; 0x36f6 <main+0x1e3a>
	{
		_delay_ms(__us / 1000.0);
    3576:	fe 01       	movw	r30, r28
    3578:	eb 52       	subi	r30, 0x2B	; 43
    357a:	ff 4f       	sbci	r31, 0xFF	; 255
    357c:	60 81       	ld	r22, Z
    357e:	71 81       	ldd	r23, Z+1	; 0x01
    3580:	82 81       	ldd	r24, Z+2	; 0x02
    3582:	93 81       	ldd	r25, Z+3	; 0x03
    3584:	20 e0       	ldi	r18, 0x00	; 0
    3586:	30 e0       	ldi	r19, 0x00	; 0
    3588:	4a e7       	ldi	r20, 0x7A	; 122
    358a:	54 e4       	ldi	r21, 0x44	; 68
    358c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3590:	dc 01       	movw	r26, r24
    3592:	cb 01       	movw	r24, r22
    3594:	fe 01       	movw	r30, r28
    3596:	e4 53       	subi	r30, 0x34	; 52
    3598:	ff 4f       	sbci	r31, 0xFF	; 255
    359a:	80 83       	st	Z, r24
    359c:	91 83       	std	Z+1, r25	; 0x01
    359e:	a2 83       	std	Z+2, r26	; 0x02
    35a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35a2:	8e 01       	movw	r16, r28
    35a4:	08 53       	subi	r16, 0x38	; 56
    35a6:	1f 4f       	sbci	r17, 0xFF	; 255
    35a8:	fe 01       	movw	r30, r28
    35aa:	e4 53       	subi	r30, 0x34	; 52
    35ac:	ff 4f       	sbci	r31, 0xFF	; 255
    35ae:	60 81       	ld	r22, Z
    35b0:	71 81       	ldd	r23, Z+1	; 0x01
    35b2:	82 81       	ldd	r24, Z+2	; 0x02
    35b4:	93 81       	ldd	r25, Z+3	; 0x03
    35b6:	20 e0       	ldi	r18, 0x00	; 0
    35b8:	30 e8       	ldi	r19, 0x80	; 128
    35ba:	4b e3       	ldi	r20, 0x3B	; 59
    35bc:	55 e4       	ldi	r21, 0x45	; 69
    35be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35c2:	dc 01       	movw	r26, r24
    35c4:	cb 01       	movw	r24, r22
    35c6:	f8 01       	movw	r30, r16
    35c8:	80 83       	st	Z, r24
    35ca:	91 83       	std	Z+1, r25	; 0x01
    35cc:	a2 83       	std	Z+2, r26	; 0x02
    35ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35d0:	fe 01       	movw	r30, r28
    35d2:	e8 53       	subi	r30, 0x38	; 56
    35d4:	ff 4f       	sbci	r31, 0xFF	; 255
    35d6:	60 81       	ld	r22, Z
    35d8:	71 81       	ldd	r23, Z+1	; 0x01
    35da:	82 81       	ldd	r24, Z+2	; 0x02
    35dc:	93 81       	ldd	r25, Z+3	; 0x03
    35de:	20 e0       	ldi	r18, 0x00	; 0
    35e0:	30 e0       	ldi	r19, 0x00	; 0
    35e2:	40 e8       	ldi	r20, 0x80	; 128
    35e4:	5f e3       	ldi	r21, 0x3F	; 63
    35e6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    35ea:	88 23       	and	r24, r24
    35ec:	44 f4       	brge	.+16     	; 0x35fe <main+0x1d42>
		__ticks = 1;
    35ee:	fe 01       	movw	r30, r28
    35f0:	ea 53       	subi	r30, 0x3A	; 58
    35f2:	ff 4f       	sbci	r31, 0xFF	; 255
    35f4:	81 e0       	ldi	r24, 0x01	; 1
    35f6:	90 e0       	ldi	r25, 0x00	; 0
    35f8:	91 83       	std	Z+1, r25	; 0x01
    35fa:	80 83       	st	Z, r24
    35fc:	64 c0       	rjmp	.+200    	; 0x36c6 <main+0x1e0a>
	else if (__tmp > 65535)
    35fe:	fe 01       	movw	r30, r28
    3600:	e8 53       	subi	r30, 0x38	; 56
    3602:	ff 4f       	sbci	r31, 0xFF	; 255
    3604:	60 81       	ld	r22, Z
    3606:	71 81       	ldd	r23, Z+1	; 0x01
    3608:	82 81       	ldd	r24, Z+2	; 0x02
    360a:	93 81       	ldd	r25, Z+3	; 0x03
    360c:	20 e0       	ldi	r18, 0x00	; 0
    360e:	3f ef       	ldi	r19, 0xFF	; 255
    3610:	4f e7       	ldi	r20, 0x7F	; 127
    3612:	57 e4       	ldi	r21, 0x47	; 71
    3614:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3618:	18 16       	cp	r1, r24
    361a:	0c f0       	brlt	.+2      	; 0x361e <main+0x1d62>
    361c:	43 c0       	rjmp	.+134    	; 0x36a4 <main+0x1de8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    361e:	fe 01       	movw	r30, r28
    3620:	e4 53       	subi	r30, 0x34	; 52
    3622:	ff 4f       	sbci	r31, 0xFF	; 255
    3624:	60 81       	ld	r22, Z
    3626:	71 81       	ldd	r23, Z+1	; 0x01
    3628:	82 81       	ldd	r24, Z+2	; 0x02
    362a:	93 81       	ldd	r25, Z+3	; 0x03
    362c:	20 e0       	ldi	r18, 0x00	; 0
    362e:	30 e0       	ldi	r19, 0x00	; 0
    3630:	40 e2       	ldi	r20, 0x20	; 32
    3632:	51 e4       	ldi	r21, 0x41	; 65
    3634:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3638:	dc 01       	movw	r26, r24
    363a:	cb 01       	movw	r24, r22
    363c:	8e 01       	movw	r16, r28
    363e:	0a 53       	subi	r16, 0x3A	; 58
    3640:	1f 4f       	sbci	r17, 0xFF	; 255
    3642:	bc 01       	movw	r22, r24
    3644:	cd 01       	movw	r24, r26
    3646:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    364a:	dc 01       	movw	r26, r24
    364c:	cb 01       	movw	r24, r22
    364e:	f8 01       	movw	r30, r16
    3650:	91 83       	std	Z+1, r25	; 0x01
    3652:	80 83       	st	Z, r24
    3654:	1f c0       	rjmp	.+62     	; 0x3694 <main+0x1dd8>
    3656:	fe 01       	movw	r30, r28
    3658:	ec 53       	subi	r30, 0x3C	; 60
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	8c e2       	ldi	r24, 0x2C	; 44
    365e:	91 e0       	ldi	r25, 0x01	; 1
    3660:	91 83       	std	Z+1, r25	; 0x01
    3662:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3664:	fe 01       	movw	r30, r28
    3666:	ec 53       	subi	r30, 0x3C	; 60
    3668:	ff 4f       	sbci	r31, 0xFF	; 255
    366a:	80 81       	ld	r24, Z
    366c:	91 81       	ldd	r25, Z+1	; 0x01
    366e:	01 97       	sbiw	r24, 0x01	; 1
    3670:	f1 f7       	brne	.-4      	; 0x366e <main+0x1db2>
    3672:	fe 01       	movw	r30, r28
    3674:	ec 53       	subi	r30, 0x3C	; 60
    3676:	ff 4f       	sbci	r31, 0xFF	; 255
    3678:	91 83       	std	Z+1, r25	; 0x01
    367a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    367c:	de 01       	movw	r26, r28
    367e:	aa 53       	subi	r26, 0x3A	; 58
    3680:	bf 4f       	sbci	r27, 0xFF	; 255
    3682:	fe 01       	movw	r30, r28
    3684:	ea 53       	subi	r30, 0x3A	; 58
    3686:	ff 4f       	sbci	r31, 0xFF	; 255
    3688:	80 81       	ld	r24, Z
    368a:	91 81       	ldd	r25, Z+1	; 0x01
    368c:	01 97       	sbiw	r24, 0x01	; 1
    368e:	11 96       	adiw	r26, 0x01	; 1
    3690:	9c 93       	st	X, r25
    3692:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3694:	fe 01       	movw	r30, r28
    3696:	ea 53       	subi	r30, 0x3A	; 58
    3698:	ff 4f       	sbci	r31, 0xFF	; 255
    369a:	80 81       	ld	r24, Z
    369c:	91 81       	ldd	r25, Z+1	; 0x01
    369e:	00 97       	sbiw	r24, 0x00	; 0
    36a0:	d1 f6       	brne	.-76     	; 0x3656 <main+0x1d9a>
    36a2:	4b c0       	rjmp	.+150    	; 0x373a <main+0x1e7e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36a4:	8e 01       	movw	r16, r28
    36a6:	0a 53       	subi	r16, 0x3A	; 58
    36a8:	1f 4f       	sbci	r17, 0xFF	; 255
    36aa:	fe 01       	movw	r30, r28
    36ac:	e8 53       	subi	r30, 0x38	; 56
    36ae:	ff 4f       	sbci	r31, 0xFF	; 255
    36b0:	60 81       	ld	r22, Z
    36b2:	71 81       	ldd	r23, Z+1	; 0x01
    36b4:	82 81       	ldd	r24, Z+2	; 0x02
    36b6:	93 81       	ldd	r25, Z+3	; 0x03
    36b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36bc:	dc 01       	movw	r26, r24
    36be:	cb 01       	movw	r24, r22
    36c0:	f8 01       	movw	r30, r16
    36c2:	91 83       	std	Z+1, r25	; 0x01
    36c4:	80 83       	st	Z, r24
    36c6:	de 01       	movw	r26, r28
    36c8:	ae 53       	subi	r26, 0x3E	; 62
    36ca:	bf 4f       	sbci	r27, 0xFF	; 255
    36cc:	fe 01       	movw	r30, r28
    36ce:	ea 53       	subi	r30, 0x3A	; 58
    36d0:	ff 4f       	sbci	r31, 0xFF	; 255
    36d2:	80 81       	ld	r24, Z
    36d4:	91 81       	ldd	r25, Z+1	; 0x01
    36d6:	11 96       	adiw	r26, 0x01	; 1
    36d8:	9c 93       	st	X, r25
    36da:	8e 93       	st	-X, r24
    36dc:	fe 01       	movw	r30, r28
    36de:	ee 53       	subi	r30, 0x3E	; 62
    36e0:	ff 4f       	sbci	r31, 0xFF	; 255
    36e2:	80 81       	ld	r24, Z
    36e4:	91 81       	ldd	r25, Z+1	; 0x01
    36e6:	01 97       	sbiw	r24, 0x01	; 1
    36e8:	f1 f7       	brne	.-4      	; 0x36e6 <main+0x1e2a>
    36ea:	fe 01       	movw	r30, r28
    36ec:	ee 53       	subi	r30, 0x3E	; 62
    36ee:	ff 4f       	sbci	r31, 0xFF	; 255
    36f0:	91 83       	std	Z+1, r25	; 0x01
    36f2:	80 83       	st	Z, r24
    36f4:	22 c0       	rjmp	.+68     	; 0x373a <main+0x1e7e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    36f6:	8e 01       	movw	r16, r28
    36f8:	00 53       	subi	r16, 0x30	; 48
    36fa:	1f 4f       	sbci	r17, 0xFF	; 255
    36fc:	fe 01       	movw	r30, r28
    36fe:	ef 52       	subi	r30, 0x2F	; 47
    3700:	ff 4f       	sbci	r31, 0xFF	; 255
    3702:	60 81       	ld	r22, Z
    3704:	71 81       	ldd	r23, Z+1	; 0x01
    3706:	82 81       	ldd	r24, Z+2	; 0x02
    3708:	93 81       	ldd	r25, Z+3	; 0x03
    370a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    370e:	dc 01       	movw	r26, r24
    3710:	cb 01       	movw	r24, r22
    3712:	f8 01       	movw	r30, r16
    3714:	80 83       	st	Z, r24
    3716:	de 01       	movw	r26, r28
    3718:	af 53       	subi	r26, 0x3F	; 63
    371a:	bf 4f       	sbci	r27, 0xFF	; 255
    371c:	fe 01       	movw	r30, r28
    371e:	e0 53       	subi	r30, 0x30	; 48
    3720:	ff 4f       	sbci	r31, 0xFF	; 255
    3722:	80 81       	ld	r24, Z
    3724:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3726:	fe 01       	movw	r30, r28
    3728:	ef 53       	subi	r30, 0x3F	; 63
    372a:	ff 4f       	sbci	r31, 0xFF	; 255
    372c:	80 81       	ld	r24, Z
    372e:	8a 95       	dec	r24
    3730:	f1 f7       	brne	.-4      	; 0x372e <main+0x1e72>
    3732:	fe 01       	movw	r30, r28
    3734:	ef 53       	subi	r30, 0x3F	; 63
    3736:	ff 4f       	sbci	r31, 0xFF	; 255
    3738:	80 83       	st	Z, r24
				_delay_us(18000);
				LCD_voidSetCursor(2, 1);
    373a:	82 e0       	ldi	r24, 0x02	; 2
    373c:	61 e0       	ldi	r22, 0x01	; 1
    373e:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("180");
    3742:	83 e7       	ldi	r24, 0x73	; 115
    3744:	90 e0       	ldi	r25, 0x00	; 0
    3746:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				SET_BIT(PORTC,1);
    374a:	a5 e3       	ldi	r26, 0x35	; 53
    374c:	b0 e0       	ldi	r27, 0x00	; 0
    374e:	e5 e3       	ldi	r30, 0x35	; 53
    3750:	f0 e0       	ldi	r31, 0x00	; 0
    3752:	80 81       	ld	r24, Z
    3754:	82 60       	ori	r24, 0x02	; 2
    3756:	8c 93       	st	X, r24
			////////////////////////////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////
			/////////////////////////////////////////////////////////////////
else if(y==0)
{
			for( i=0;i<50;i++)//angle 180
    3758:	de 01       	movw	r26, r28
    375a:	ad 51       	subi	r26, 0x1D	; 29
    375c:	be 4f       	sbci	r27, 0xFE	; 254
    375e:	fe 01       	movw	r30, r28
    3760:	ed 51       	subi	r30, 0x1D	; 29
    3762:	fe 4f       	sbci	r31, 0xFE	; 254
    3764:	80 81       	ld	r24, Z
    3766:	91 81       	ldd	r25, Z+1	; 0x01
    3768:	01 96       	adiw	r24, 0x01	; 1
    376a:	11 96       	adiw	r26, 0x01	; 1
    376c:	9c 93       	st	X, r25
    376e:	8e 93       	st	-X, r24
    3770:	fe 01       	movw	r30, r28
    3772:	ed 51       	subi	r30, 0x1D	; 29
    3774:	fe 4f       	sbci	r31, 0xFE	; 254
    3776:	80 81       	ld	r24, Z
    3778:	91 81       	ldd	r25, Z+1	; 0x01
    377a:	82 33       	cpi	r24, 0x32	; 50
    377c:	91 05       	cpc	r25, r1
    377e:	08 f4       	brcc	.+2      	; 0x3782 <main+0x1ec6>
    3780:	80 cd       	rjmp	.-1280   	; 0x3282 <main+0x19c6>
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("180");
				SET_BIT(PORTC,1);
			}

			for( i=0;i<50;i++)//angle 135
    3782:	fe 01       	movw	r30, r28
    3784:	ed 51       	subi	r30, 0x1D	; 29
    3786:	fe 4f       	sbci	r31, 0xFE	; 254
    3788:	11 82       	std	Z+1, r1	; 0x01
    378a:	10 82       	st	Z, r1
    378c:	70 c2       	rjmp	.+1248   	; 0x3c6e <main+0x23b2>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    378e:	82 e0       	ldi	r24, 0x02	; 2
    3790:	62 e0       	ldi	r22, 0x02	; 2
    3792:	41 e0       	ldi	r20, 0x01	; 1
    3794:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    3798:	fe 01       	movw	r30, r28
    379a:	e3 54       	subi	r30, 0x43	; 67
    379c:	ff 4f       	sbci	r31, 0xFF	; 255
    379e:	80 e0       	ldi	r24, 0x00	; 0
    37a0:	90 e8       	ldi	r25, 0x80	; 128
    37a2:	ab eb       	ldi	r26, 0xBB	; 187
    37a4:	b4 e4       	ldi	r27, 0x44	; 68
    37a6:	80 83       	st	Z, r24
    37a8:	91 83       	std	Z+1, r25	; 0x01
    37aa:	a2 83       	std	Z+2, r26	; 0x02
    37ac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    37ae:	8e 01       	movw	r16, r28
    37b0:	07 54       	subi	r16, 0x47	; 71
    37b2:	1f 4f       	sbci	r17, 0xFF	; 255
    37b4:	fe 01       	movw	r30, r28
    37b6:	e3 54       	subi	r30, 0x43	; 67
    37b8:	ff 4f       	sbci	r31, 0xFF	; 255
    37ba:	60 81       	ld	r22, Z
    37bc:	71 81       	ldd	r23, Z+1	; 0x01
    37be:	82 81       	ldd	r24, Z+2	; 0x02
    37c0:	93 81       	ldd	r25, Z+3	; 0x03
    37c2:	20 e0       	ldi	r18, 0x00	; 0
    37c4:	30 e0       	ldi	r19, 0x00	; 0
    37c6:	40 e8       	ldi	r20, 0x80	; 128
    37c8:	50 e4       	ldi	r21, 0x40	; 64
    37ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37ce:	dc 01       	movw	r26, r24
    37d0:	cb 01       	movw	r24, r22
    37d2:	f8 01       	movw	r30, r16
    37d4:	80 83       	st	Z, r24
    37d6:	91 83       	std	Z+1, r25	; 0x01
    37d8:	a2 83       	std	Z+2, r26	; 0x02
    37da:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37dc:	fe 01       	movw	r30, r28
    37de:	e7 54       	subi	r30, 0x47	; 71
    37e0:	ff 4f       	sbci	r31, 0xFF	; 255
    37e2:	60 81       	ld	r22, Z
    37e4:	71 81       	ldd	r23, Z+1	; 0x01
    37e6:	82 81       	ldd	r24, Z+2	; 0x02
    37e8:	93 81       	ldd	r25, Z+3	; 0x03
    37ea:	20 e0       	ldi	r18, 0x00	; 0
    37ec:	30 e0       	ldi	r19, 0x00	; 0
    37ee:	40 e8       	ldi	r20, 0x80	; 128
    37f0:	5f e3       	ldi	r21, 0x3F	; 63
    37f2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    37f6:	88 23       	and	r24, r24
    37f8:	34 f4       	brge	.+12     	; 0x3806 <main+0x1f4a>
		__ticks = 1;
    37fa:	fe 01       	movw	r30, r28
    37fc:	e8 54       	subi	r30, 0x48	; 72
    37fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3800:	81 e0       	ldi	r24, 0x01	; 1
    3802:	80 83       	st	Z, r24
    3804:	e0 c0       	rjmp	.+448    	; 0x39c6 <main+0x210a>
	else if (__tmp > 255)
    3806:	fe 01       	movw	r30, r28
    3808:	e7 54       	subi	r30, 0x47	; 71
    380a:	ff 4f       	sbci	r31, 0xFF	; 255
    380c:	60 81       	ld	r22, Z
    380e:	71 81       	ldd	r23, Z+1	; 0x01
    3810:	82 81       	ldd	r24, Z+2	; 0x02
    3812:	93 81       	ldd	r25, Z+3	; 0x03
    3814:	20 e0       	ldi	r18, 0x00	; 0
    3816:	30 e0       	ldi	r19, 0x00	; 0
    3818:	4f e7       	ldi	r20, 0x7F	; 127
    381a:	53 e4       	ldi	r21, 0x43	; 67
    381c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3820:	18 16       	cp	r1, r24
    3822:	0c f0       	brlt	.+2      	; 0x3826 <main+0x1f6a>
    3824:	c0 c0       	rjmp	.+384    	; 0x39a6 <main+0x20ea>
	{
		_delay_ms(__us / 1000.0);
    3826:	fe 01       	movw	r30, r28
    3828:	e3 54       	subi	r30, 0x43	; 67
    382a:	ff 4f       	sbci	r31, 0xFF	; 255
    382c:	60 81       	ld	r22, Z
    382e:	71 81       	ldd	r23, Z+1	; 0x01
    3830:	82 81       	ldd	r24, Z+2	; 0x02
    3832:	93 81       	ldd	r25, Z+3	; 0x03
    3834:	20 e0       	ldi	r18, 0x00	; 0
    3836:	30 e0       	ldi	r19, 0x00	; 0
    3838:	4a e7       	ldi	r20, 0x7A	; 122
    383a:	54 e4       	ldi	r21, 0x44	; 68
    383c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3840:	dc 01       	movw	r26, r24
    3842:	cb 01       	movw	r24, r22
    3844:	fe 01       	movw	r30, r28
    3846:	ec 54       	subi	r30, 0x4C	; 76
    3848:	ff 4f       	sbci	r31, 0xFF	; 255
    384a:	80 83       	st	Z, r24
    384c:	91 83       	std	Z+1, r25	; 0x01
    384e:	a2 83       	std	Z+2, r26	; 0x02
    3850:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3852:	8e 01       	movw	r16, r28
    3854:	00 55       	subi	r16, 0x50	; 80
    3856:	1f 4f       	sbci	r17, 0xFF	; 255
    3858:	fe 01       	movw	r30, r28
    385a:	ec 54       	subi	r30, 0x4C	; 76
    385c:	ff 4f       	sbci	r31, 0xFF	; 255
    385e:	60 81       	ld	r22, Z
    3860:	71 81       	ldd	r23, Z+1	; 0x01
    3862:	82 81       	ldd	r24, Z+2	; 0x02
    3864:	93 81       	ldd	r25, Z+3	; 0x03
    3866:	20 e0       	ldi	r18, 0x00	; 0
    3868:	30 e8       	ldi	r19, 0x80	; 128
    386a:	4b e3       	ldi	r20, 0x3B	; 59
    386c:	55 e4       	ldi	r21, 0x45	; 69
    386e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3872:	dc 01       	movw	r26, r24
    3874:	cb 01       	movw	r24, r22
    3876:	f8 01       	movw	r30, r16
    3878:	80 83       	st	Z, r24
    387a:	91 83       	std	Z+1, r25	; 0x01
    387c:	a2 83       	std	Z+2, r26	; 0x02
    387e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3880:	fe 01       	movw	r30, r28
    3882:	e0 55       	subi	r30, 0x50	; 80
    3884:	ff 4f       	sbci	r31, 0xFF	; 255
    3886:	60 81       	ld	r22, Z
    3888:	71 81       	ldd	r23, Z+1	; 0x01
    388a:	82 81       	ldd	r24, Z+2	; 0x02
    388c:	93 81       	ldd	r25, Z+3	; 0x03
    388e:	20 e0       	ldi	r18, 0x00	; 0
    3890:	30 e0       	ldi	r19, 0x00	; 0
    3892:	40 e8       	ldi	r20, 0x80	; 128
    3894:	5f e3       	ldi	r21, 0x3F	; 63
    3896:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    389a:	88 23       	and	r24, r24
    389c:	44 f4       	brge	.+16     	; 0x38ae <main+0x1ff2>
		__ticks = 1;
    389e:	fe 01       	movw	r30, r28
    38a0:	e2 55       	subi	r30, 0x52	; 82
    38a2:	ff 4f       	sbci	r31, 0xFF	; 255
    38a4:	81 e0       	ldi	r24, 0x01	; 1
    38a6:	90 e0       	ldi	r25, 0x00	; 0
    38a8:	91 83       	std	Z+1, r25	; 0x01
    38aa:	80 83       	st	Z, r24
    38ac:	64 c0       	rjmp	.+200    	; 0x3976 <main+0x20ba>
	else if (__tmp > 65535)
    38ae:	fe 01       	movw	r30, r28
    38b0:	e0 55       	subi	r30, 0x50	; 80
    38b2:	ff 4f       	sbci	r31, 0xFF	; 255
    38b4:	60 81       	ld	r22, Z
    38b6:	71 81       	ldd	r23, Z+1	; 0x01
    38b8:	82 81       	ldd	r24, Z+2	; 0x02
    38ba:	93 81       	ldd	r25, Z+3	; 0x03
    38bc:	20 e0       	ldi	r18, 0x00	; 0
    38be:	3f ef       	ldi	r19, 0xFF	; 255
    38c0:	4f e7       	ldi	r20, 0x7F	; 127
    38c2:	57 e4       	ldi	r21, 0x47	; 71
    38c4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    38c8:	18 16       	cp	r1, r24
    38ca:	0c f0       	brlt	.+2      	; 0x38ce <main+0x2012>
    38cc:	43 c0       	rjmp	.+134    	; 0x3954 <main+0x2098>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38ce:	fe 01       	movw	r30, r28
    38d0:	ec 54       	subi	r30, 0x4C	; 76
    38d2:	ff 4f       	sbci	r31, 0xFF	; 255
    38d4:	60 81       	ld	r22, Z
    38d6:	71 81       	ldd	r23, Z+1	; 0x01
    38d8:	82 81       	ldd	r24, Z+2	; 0x02
    38da:	93 81       	ldd	r25, Z+3	; 0x03
    38dc:	20 e0       	ldi	r18, 0x00	; 0
    38de:	30 e0       	ldi	r19, 0x00	; 0
    38e0:	40 e2       	ldi	r20, 0x20	; 32
    38e2:	51 e4       	ldi	r21, 0x41	; 65
    38e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38e8:	dc 01       	movw	r26, r24
    38ea:	cb 01       	movw	r24, r22
    38ec:	8e 01       	movw	r16, r28
    38ee:	02 55       	subi	r16, 0x52	; 82
    38f0:	1f 4f       	sbci	r17, 0xFF	; 255
    38f2:	bc 01       	movw	r22, r24
    38f4:	cd 01       	movw	r24, r26
    38f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38fa:	dc 01       	movw	r26, r24
    38fc:	cb 01       	movw	r24, r22
    38fe:	f8 01       	movw	r30, r16
    3900:	91 83       	std	Z+1, r25	; 0x01
    3902:	80 83       	st	Z, r24
    3904:	1f c0       	rjmp	.+62     	; 0x3944 <main+0x2088>
    3906:	fe 01       	movw	r30, r28
    3908:	e4 55       	subi	r30, 0x54	; 84
    390a:	ff 4f       	sbci	r31, 0xFF	; 255
    390c:	8c e2       	ldi	r24, 0x2C	; 44
    390e:	91 e0       	ldi	r25, 0x01	; 1
    3910:	91 83       	std	Z+1, r25	; 0x01
    3912:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3914:	fe 01       	movw	r30, r28
    3916:	e4 55       	subi	r30, 0x54	; 84
    3918:	ff 4f       	sbci	r31, 0xFF	; 255
    391a:	80 81       	ld	r24, Z
    391c:	91 81       	ldd	r25, Z+1	; 0x01
    391e:	01 97       	sbiw	r24, 0x01	; 1
    3920:	f1 f7       	brne	.-4      	; 0x391e <main+0x2062>
    3922:	fe 01       	movw	r30, r28
    3924:	e4 55       	subi	r30, 0x54	; 84
    3926:	ff 4f       	sbci	r31, 0xFF	; 255
    3928:	91 83       	std	Z+1, r25	; 0x01
    392a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    392c:	de 01       	movw	r26, r28
    392e:	a2 55       	subi	r26, 0x52	; 82
    3930:	bf 4f       	sbci	r27, 0xFF	; 255
    3932:	fe 01       	movw	r30, r28
    3934:	e2 55       	subi	r30, 0x52	; 82
    3936:	ff 4f       	sbci	r31, 0xFF	; 255
    3938:	80 81       	ld	r24, Z
    393a:	91 81       	ldd	r25, Z+1	; 0x01
    393c:	01 97       	sbiw	r24, 0x01	; 1
    393e:	11 96       	adiw	r26, 0x01	; 1
    3940:	9c 93       	st	X, r25
    3942:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3944:	fe 01       	movw	r30, r28
    3946:	e2 55       	subi	r30, 0x52	; 82
    3948:	ff 4f       	sbci	r31, 0xFF	; 255
    394a:	80 81       	ld	r24, Z
    394c:	91 81       	ldd	r25, Z+1	; 0x01
    394e:	00 97       	sbiw	r24, 0x00	; 0
    3950:	d1 f6       	brne	.-76     	; 0x3906 <main+0x204a>
    3952:	4b c0       	rjmp	.+150    	; 0x39ea <main+0x212e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3954:	8e 01       	movw	r16, r28
    3956:	02 55       	subi	r16, 0x52	; 82
    3958:	1f 4f       	sbci	r17, 0xFF	; 255
    395a:	fe 01       	movw	r30, r28
    395c:	e0 55       	subi	r30, 0x50	; 80
    395e:	ff 4f       	sbci	r31, 0xFF	; 255
    3960:	60 81       	ld	r22, Z
    3962:	71 81       	ldd	r23, Z+1	; 0x01
    3964:	82 81       	ldd	r24, Z+2	; 0x02
    3966:	93 81       	ldd	r25, Z+3	; 0x03
    3968:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    396c:	dc 01       	movw	r26, r24
    396e:	cb 01       	movw	r24, r22
    3970:	f8 01       	movw	r30, r16
    3972:	91 83       	std	Z+1, r25	; 0x01
    3974:	80 83       	st	Z, r24
    3976:	de 01       	movw	r26, r28
    3978:	a6 55       	subi	r26, 0x56	; 86
    397a:	bf 4f       	sbci	r27, 0xFF	; 255
    397c:	fe 01       	movw	r30, r28
    397e:	e2 55       	subi	r30, 0x52	; 82
    3980:	ff 4f       	sbci	r31, 0xFF	; 255
    3982:	80 81       	ld	r24, Z
    3984:	91 81       	ldd	r25, Z+1	; 0x01
    3986:	11 96       	adiw	r26, 0x01	; 1
    3988:	9c 93       	st	X, r25
    398a:	8e 93       	st	-X, r24
    398c:	fe 01       	movw	r30, r28
    398e:	e6 55       	subi	r30, 0x56	; 86
    3990:	ff 4f       	sbci	r31, 0xFF	; 255
    3992:	80 81       	ld	r24, Z
    3994:	91 81       	ldd	r25, Z+1	; 0x01
    3996:	01 97       	sbiw	r24, 0x01	; 1
    3998:	f1 f7       	brne	.-4      	; 0x3996 <main+0x20da>
    399a:	fe 01       	movw	r30, r28
    399c:	e6 55       	subi	r30, 0x56	; 86
    399e:	ff 4f       	sbci	r31, 0xFF	; 255
    39a0:	91 83       	std	Z+1, r25	; 0x01
    39a2:	80 83       	st	Z, r24
    39a4:	22 c0       	rjmp	.+68     	; 0x39ea <main+0x212e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    39a6:	8e 01       	movw	r16, r28
    39a8:	08 54       	subi	r16, 0x48	; 72
    39aa:	1f 4f       	sbci	r17, 0xFF	; 255
    39ac:	fe 01       	movw	r30, r28
    39ae:	e7 54       	subi	r30, 0x47	; 71
    39b0:	ff 4f       	sbci	r31, 0xFF	; 255
    39b2:	60 81       	ld	r22, Z
    39b4:	71 81       	ldd	r23, Z+1	; 0x01
    39b6:	82 81       	ldd	r24, Z+2	; 0x02
    39b8:	93 81       	ldd	r25, Z+3	; 0x03
    39ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39be:	dc 01       	movw	r26, r24
    39c0:	cb 01       	movw	r24, r22
    39c2:	f8 01       	movw	r30, r16
    39c4:	80 83       	st	Z, r24
    39c6:	de 01       	movw	r26, r28
    39c8:	a7 55       	subi	r26, 0x57	; 87
    39ca:	bf 4f       	sbci	r27, 0xFF	; 255
    39cc:	fe 01       	movw	r30, r28
    39ce:	e8 54       	subi	r30, 0x48	; 72
    39d0:	ff 4f       	sbci	r31, 0xFF	; 255
    39d2:	80 81       	ld	r24, Z
    39d4:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    39d6:	fe 01       	movw	r30, r28
    39d8:	e7 55       	subi	r30, 0x57	; 87
    39da:	ff 4f       	sbci	r31, 0xFF	; 255
    39dc:	80 81       	ld	r24, Z
    39de:	8a 95       	dec	r24
    39e0:	f1 f7       	brne	.-4      	; 0x39de <main+0x2122>
    39e2:	fe 01       	movw	r30, r28
    39e4:	e7 55       	subi	r30, 0x57	; 87
    39e6:	ff 4f       	sbci	r31, 0xFF	; 255
    39e8:	80 83       	st	Z, r24
				_delay_us(1500);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    39ea:	82 e0       	ldi	r24, 0x02	; 2
    39ec:	62 e0       	ldi	r22, 0x02	; 2
    39ee:	40 e0       	ldi	r20, 0x00	; 0
    39f0:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    39f4:	fe 01       	movw	r30, r28
    39f6:	eb 55       	subi	r30, 0x5B	; 91
    39f8:	ff 4f       	sbci	r31, 0xFF	; 255
    39fa:	80 e0       	ldi	r24, 0x00	; 0
    39fc:	98 e8       	ldi	r25, 0x88	; 136
    39fe:	a0 e9       	ldi	r26, 0x90	; 144
    3a00:	b6 e4       	ldi	r27, 0x46	; 70
    3a02:	80 83       	st	Z, r24
    3a04:	91 83       	std	Z+1, r25	; 0x01
    3a06:	a2 83       	std	Z+2, r26	; 0x02
    3a08:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3a0a:	8e 01       	movw	r16, r28
    3a0c:	0f 55       	subi	r16, 0x5F	; 95
    3a0e:	1f 4f       	sbci	r17, 0xFF	; 255
    3a10:	fe 01       	movw	r30, r28
    3a12:	eb 55       	subi	r30, 0x5B	; 91
    3a14:	ff 4f       	sbci	r31, 0xFF	; 255
    3a16:	60 81       	ld	r22, Z
    3a18:	71 81       	ldd	r23, Z+1	; 0x01
    3a1a:	82 81       	ldd	r24, Z+2	; 0x02
    3a1c:	93 81       	ldd	r25, Z+3	; 0x03
    3a1e:	20 e0       	ldi	r18, 0x00	; 0
    3a20:	30 e0       	ldi	r19, 0x00	; 0
    3a22:	40 e8       	ldi	r20, 0x80	; 128
    3a24:	50 e4       	ldi	r21, 0x40	; 64
    3a26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a2a:	dc 01       	movw	r26, r24
    3a2c:	cb 01       	movw	r24, r22
    3a2e:	f8 01       	movw	r30, r16
    3a30:	80 83       	st	Z, r24
    3a32:	91 83       	std	Z+1, r25	; 0x01
    3a34:	a2 83       	std	Z+2, r26	; 0x02
    3a36:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a38:	fe 01       	movw	r30, r28
    3a3a:	ef 55       	subi	r30, 0x5F	; 95
    3a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a3e:	60 81       	ld	r22, Z
    3a40:	71 81       	ldd	r23, Z+1	; 0x01
    3a42:	82 81       	ldd	r24, Z+2	; 0x02
    3a44:	93 81       	ldd	r25, Z+3	; 0x03
    3a46:	20 e0       	ldi	r18, 0x00	; 0
    3a48:	30 e0       	ldi	r19, 0x00	; 0
    3a4a:	40 e8       	ldi	r20, 0x80	; 128
    3a4c:	5f e3       	ldi	r21, 0x3F	; 63
    3a4e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3a52:	88 23       	and	r24, r24
    3a54:	34 f4       	brge	.+12     	; 0x3a62 <main+0x21a6>
		__ticks = 1;
    3a56:	fe 01       	movw	r30, r28
    3a58:	e0 56       	subi	r30, 0x60	; 96
    3a5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a5c:	81 e0       	ldi	r24, 0x01	; 1
    3a5e:	80 83       	st	Z, r24
    3a60:	e0 c0       	rjmp	.+448    	; 0x3c22 <main+0x2366>
	else if (__tmp > 255)
    3a62:	fe 01       	movw	r30, r28
    3a64:	ef 55       	subi	r30, 0x5F	; 95
    3a66:	ff 4f       	sbci	r31, 0xFF	; 255
    3a68:	60 81       	ld	r22, Z
    3a6a:	71 81       	ldd	r23, Z+1	; 0x01
    3a6c:	82 81       	ldd	r24, Z+2	; 0x02
    3a6e:	93 81       	ldd	r25, Z+3	; 0x03
    3a70:	20 e0       	ldi	r18, 0x00	; 0
    3a72:	30 e0       	ldi	r19, 0x00	; 0
    3a74:	4f e7       	ldi	r20, 0x7F	; 127
    3a76:	53 e4       	ldi	r21, 0x43	; 67
    3a78:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3a7c:	18 16       	cp	r1, r24
    3a7e:	0c f0       	brlt	.+2      	; 0x3a82 <main+0x21c6>
    3a80:	c0 c0       	rjmp	.+384    	; 0x3c02 <main+0x2346>
	{
		_delay_ms(__us / 1000.0);
    3a82:	fe 01       	movw	r30, r28
    3a84:	eb 55       	subi	r30, 0x5B	; 91
    3a86:	ff 4f       	sbci	r31, 0xFF	; 255
    3a88:	60 81       	ld	r22, Z
    3a8a:	71 81       	ldd	r23, Z+1	; 0x01
    3a8c:	82 81       	ldd	r24, Z+2	; 0x02
    3a8e:	93 81       	ldd	r25, Z+3	; 0x03
    3a90:	20 e0       	ldi	r18, 0x00	; 0
    3a92:	30 e0       	ldi	r19, 0x00	; 0
    3a94:	4a e7       	ldi	r20, 0x7A	; 122
    3a96:	54 e4       	ldi	r21, 0x44	; 68
    3a98:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3a9c:	dc 01       	movw	r26, r24
    3a9e:	cb 01       	movw	r24, r22
    3aa0:	fe 01       	movw	r30, r28
    3aa2:	e4 56       	subi	r30, 0x64	; 100
    3aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa6:	80 83       	st	Z, r24
    3aa8:	91 83       	std	Z+1, r25	; 0x01
    3aaa:	a2 83       	std	Z+2, r26	; 0x02
    3aac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3aae:	8e 01       	movw	r16, r28
    3ab0:	08 56       	subi	r16, 0x68	; 104
    3ab2:	1f 4f       	sbci	r17, 0xFF	; 255
    3ab4:	fe 01       	movw	r30, r28
    3ab6:	e4 56       	subi	r30, 0x64	; 100
    3ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aba:	60 81       	ld	r22, Z
    3abc:	71 81       	ldd	r23, Z+1	; 0x01
    3abe:	82 81       	ldd	r24, Z+2	; 0x02
    3ac0:	93 81       	ldd	r25, Z+3	; 0x03
    3ac2:	20 e0       	ldi	r18, 0x00	; 0
    3ac4:	30 e8       	ldi	r19, 0x80	; 128
    3ac6:	4b e3       	ldi	r20, 0x3B	; 59
    3ac8:	55 e4       	ldi	r21, 0x45	; 69
    3aca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ace:	dc 01       	movw	r26, r24
    3ad0:	cb 01       	movw	r24, r22
    3ad2:	f8 01       	movw	r30, r16
    3ad4:	80 83       	st	Z, r24
    3ad6:	91 83       	std	Z+1, r25	; 0x01
    3ad8:	a2 83       	std	Z+2, r26	; 0x02
    3ada:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3adc:	fe 01       	movw	r30, r28
    3ade:	e8 56       	subi	r30, 0x68	; 104
    3ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae2:	60 81       	ld	r22, Z
    3ae4:	71 81       	ldd	r23, Z+1	; 0x01
    3ae6:	82 81       	ldd	r24, Z+2	; 0x02
    3ae8:	93 81       	ldd	r25, Z+3	; 0x03
    3aea:	20 e0       	ldi	r18, 0x00	; 0
    3aec:	30 e0       	ldi	r19, 0x00	; 0
    3aee:	40 e8       	ldi	r20, 0x80	; 128
    3af0:	5f e3       	ldi	r21, 0x3F	; 63
    3af2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3af6:	88 23       	and	r24, r24
    3af8:	44 f4       	brge	.+16     	; 0x3b0a <main+0x224e>
		__ticks = 1;
    3afa:	fe 01       	movw	r30, r28
    3afc:	ea 56       	subi	r30, 0x6A	; 106
    3afe:	ff 4f       	sbci	r31, 0xFF	; 255
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	90 e0       	ldi	r25, 0x00	; 0
    3b04:	91 83       	std	Z+1, r25	; 0x01
    3b06:	80 83       	st	Z, r24
    3b08:	64 c0       	rjmp	.+200    	; 0x3bd2 <main+0x2316>
	else if (__tmp > 65535)
    3b0a:	fe 01       	movw	r30, r28
    3b0c:	e8 56       	subi	r30, 0x68	; 104
    3b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b10:	60 81       	ld	r22, Z
    3b12:	71 81       	ldd	r23, Z+1	; 0x01
    3b14:	82 81       	ldd	r24, Z+2	; 0x02
    3b16:	93 81       	ldd	r25, Z+3	; 0x03
    3b18:	20 e0       	ldi	r18, 0x00	; 0
    3b1a:	3f ef       	ldi	r19, 0xFF	; 255
    3b1c:	4f e7       	ldi	r20, 0x7F	; 127
    3b1e:	57 e4       	ldi	r21, 0x47	; 71
    3b20:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3b24:	18 16       	cp	r1, r24
    3b26:	0c f0       	brlt	.+2      	; 0x3b2a <main+0x226e>
    3b28:	43 c0       	rjmp	.+134    	; 0x3bb0 <main+0x22f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b2a:	fe 01       	movw	r30, r28
    3b2c:	e4 56       	subi	r30, 0x64	; 100
    3b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b30:	60 81       	ld	r22, Z
    3b32:	71 81       	ldd	r23, Z+1	; 0x01
    3b34:	82 81       	ldd	r24, Z+2	; 0x02
    3b36:	93 81       	ldd	r25, Z+3	; 0x03
    3b38:	20 e0       	ldi	r18, 0x00	; 0
    3b3a:	30 e0       	ldi	r19, 0x00	; 0
    3b3c:	40 e2       	ldi	r20, 0x20	; 32
    3b3e:	51 e4       	ldi	r21, 0x41	; 65
    3b40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b44:	dc 01       	movw	r26, r24
    3b46:	cb 01       	movw	r24, r22
    3b48:	8e 01       	movw	r16, r28
    3b4a:	0a 56       	subi	r16, 0x6A	; 106
    3b4c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b4e:	bc 01       	movw	r22, r24
    3b50:	cd 01       	movw	r24, r26
    3b52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b56:	dc 01       	movw	r26, r24
    3b58:	cb 01       	movw	r24, r22
    3b5a:	f8 01       	movw	r30, r16
    3b5c:	91 83       	std	Z+1, r25	; 0x01
    3b5e:	80 83       	st	Z, r24
    3b60:	1f c0       	rjmp	.+62     	; 0x3ba0 <main+0x22e4>
    3b62:	fe 01       	movw	r30, r28
    3b64:	ec 56       	subi	r30, 0x6C	; 108
    3b66:	ff 4f       	sbci	r31, 0xFF	; 255
    3b68:	8c e2       	ldi	r24, 0x2C	; 44
    3b6a:	91 e0       	ldi	r25, 0x01	; 1
    3b6c:	91 83       	std	Z+1, r25	; 0x01
    3b6e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3b70:	fe 01       	movw	r30, r28
    3b72:	ec 56       	subi	r30, 0x6C	; 108
    3b74:	ff 4f       	sbci	r31, 0xFF	; 255
    3b76:	80 81       	ld	r24, Z
    3b78:	91 81       	ldd	r25, Z+1	; 0x01
    3b7a:	01 97       	sbiw	r24, 0x01	; 1
    3b7c:	f1 f7       	brne	.-4      	; 0x3b7a <main+0x22be>
    3b7e:	fe 01       	movw	r30, r28
    3b80:	ec 56       	subi	r30, 0x6C	; 108
    3b82:	ff 4f       	sbci	r31, 0xFF	; 255
    3b84:	91 83       	std	Z+1, r25	; 0x01
    3b86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b88:	de 01       	movw	r26, r28
    3b8a:	aa 56       	subi	r26, 0x6A	; 106
    3b8c:	bf 4f       	sbci	r27, 0xFF	; 255
    3b8e:	fe 01       	movw	r30, r28
    3b90:	ea 56       	subi	r30, 0x6A	; 106
    3b92:	ff 4f       	sbci	r31, 0xFF	; 255
    3b94:	80 81       	ld	r24, Z
    3b96:	91 81       	ldd	r25, Z+1	; 0x01
    3b98:	01 97       	sbiw	r24, 0x01	; 1
    3b9a:	11 96       	adiw	r26, 0x01	; 1
    3b9c:	9c 93       	st	X, r25
    3b9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	ea 56       	subi	r30, 0x6A	; 106
    3ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba6:	80 81       	ld	r24, Z
    3ba8:	91 81       	ldd	r25, Z+1	; 0x01
    3baa:	00 97       	sbiw	r24, 0x00	; 0
    3bac:	d1 f6       	brne	.-76     	; 0x3b62 <main+0x22a6>
    3bae:	4b c0       	rjmp	.+150    	; 0x3c46 <main+0x238a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bb0:	8e 01       	movw	r16, r28
    3bb2:	0a 56       	subi	r16, 0x6A	; 106
    3bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3bb6:	fe 01       	movw	r30, r28
    3bb8:	e8 56       	subi	r30, 0x68	; 104
    3bba:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbc:	60 81       	ld	r22, Z
    3bbe:	71 81       	ldd	r23, Z+1	; 0x01
    3bc0:	82 81       	ldd	r24, Z+2	; 0x02
    3bc2:	93 81       	ldd	r25, Z+3	; 0x03
    3bc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bc8:	dc 01       	movw	r26, r24
    3bca:	cb 01       	movw	r24, r22
    3bcc:	f8 01       	movw	r30, r16
    3bce:	91 83       	std	Z+1, r25	; 0x01
    3bd0:	80 83       	st	Z, r24
    3bd2:	de 01       	movw	r26, r28
    3bd4:	ae 56       	subi	r26, 0x6E	; 110
    3bd6:	bf 4f       	sbci	r27, 0xFF	; 255
    3bd8:	fe 01       	movw	r30, r28
    3bda:	ea 56       	subi	r30, 0x6A	; 106
    3bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bde:	80 81       	ld	r24, Z
    3be0:	91 81       	ldd	r25, Z+1	; 0x01
    3be2:	11 96       	adiw	r26, 0x01	; 1
    3be4:	9c 93       	st	X, r25
    3be6:	8e 93       	st	-X, r24
    3be8:	fe 01       	movw	r30, r28
    3bea:	ee 56       	subi	r30, 0x6E	; 110
    3bec:	ff 4f       	sbci	r31, 0xFF	; 255
    3bee:	80 81       	ld	r24, Z
    3bf0:	91 81       	ldd	r25, Z+1	; 0x01
    3bf2:	01 97       	sbiw	r24, 0x01	; 1
    3bf4:	f1 f7       	brne	.-4      	; 0x3bf2 <main+0x2336>
    3bf6:	fe 01       	movw	r30, r28
    3bf8:	ee 56       	subi	r30, 0x6E	; 110
    3bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfc:	91 83       	std	Z+1, r25	; 0x01
    3bfe:	80 83       	st	Z, r24
    3c00:	22 c0       	rjmp	.+68     	; 0x3c46 <main+0x238a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3c02:	8e 01       	movw	r16, r28
    3c04:	00 56       	subi	r16, 0x60	; 96
    3c06:	1f 4f       	sbci	r17, 0xFF	; 255
    3c08:	fe 01       	movw	r30, r28
    3c0a:	ef 55       	subi	r30, 0x5F	; 95
    3c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0e:	60 81       	ld	r22, Z
    3c10:	71 81       	ldd	r23, Z+1	; 0x01
    3c12:	82 81       	ldd	r24, Z+2	; 0x02
    3c14:	93 81       	ldd	r25, Z+3	; 0x03
    3c16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c1a:	dc 01       	movw	r26, r24
    3c1c:	cb 01       	movw	r24, r22
    3c1e:	f8 01       	movw	r30, r16
    3c20:	80 83       	st	Z, r24
    3c22:	de 01       	movw	r26, r28
    3c24:	af 56       	subi	r26, 0x6F	; 111
    3c26:	bf 4f       	sbci	r27, 0xFF	; 255
    3c28:	fe 01       	movw	r30, r28
    3c2a:	e0 56       	subi	r30, 0x60	; 96
    3c2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2e:	80 81       	ld	r24, Z
    3c30:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3c32:	fe 01       	movw	r30, r28
    3c34:	ef 56       	subi	r30, 0x6F	; 111
    3c36:	ff 4f       	sbci	r31, 0xFF	; 255
    3c38:	80 81       	ld	r24, Z
    3c3a:	8a 95       	dec	r24
    3c3c:	f1 f7       	brne	.-4      	; 0x3c3a <main+0x237e>
    3c3e:	fe 01       	movw	r30, r28
    3c40:	ef 56       	subi	r30, 0x6F	; 111
    3c42:	ff 4f       	sbci	r31, 0xFF	; 255
    3c44:	80 83       	st	Z, r24
				_delay_us(18500);
				LCD_voidSetCursor(2, 1);
    3c46:	82 e0       	ldi	r24, 0x02	; 2
    3c48:	61 e0       	ldi	r22, 0x01	; 1
    3c4a:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("135");
    3c4e:	8f e6       	ldi	r24, 0x6F	; 111
    3c50:	90 e0       	ldi	r25, 0x00	; 0
    3c52:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("180");
				SET_BIT(PORTC,1);
			}

			for( i=0;i<50;i++)//angle 135
    3c56:	de 01       	movw	r26, r28
    3c58:	ad 51       	subi	r26, 0x1D	; 29
    3c5a:	be 4f       	sbci	r27, 0xFE	; 254
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	ed 51       	subi	r30, 0x1D	; 29
    3c60:	fe 4f       	sbci	r31, 0xFE	; 254
    3c62:	80 81       	ld	r24, Z
    3c64:	91 81       	ldd	r25, Z+1	; 0x01
    3c66:	01 96       	adiw	r24, 0x01	; 1
    3c68:	11 96       	adiw	r26, 0x01	; 1
    3c6a:	9c 93       	st	X, r25
    3c6c:	8e 93       	st	-X, r24
    3c6e:	fe 01       	movw	r30, r28
    3c70:	ed 51       	subi	r30, 0x1D	; 29
    3c72:	fe 4f       	sbci	r31, 0xFE	; 254
    3c74:	80 81       	ld	r24, Z
    3c76:	91 81       	ldd	r25, Z+1	; 0x01
    3c78:	82 33       	cpi	r24, 0x32	; 50
    3c7a:	91 05       	cpc	r25, r1
    3c7c:	08 f4       	brcc	.+2      	; 0x3c80 <main+0x23c4>
    3c7e:	87 cd       	rjmp	.-1266   	; 0x378e <main+0x1ed2>
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
				_delay_us(18500);
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("135");
			}
			LCD_voidClear();
    3c80:	0e 94 40 0c 	call	0x1880	; 0x1880 <LCD_voidClear>
			LCD_voidWriteString("Angle:");
    3c84:	80 e6       	ldi	r24, 0x60	; 96
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>

			for( i=0;i<50;i++)//angle 90
    3c8c:	fe 01       	movw	r30, r28
    3c8e:	ed 51       	subi	r30, 0x1D	; 29
    3c90:	fe 4f       	sbci	r31, 0xFE	; 254
    3c92:	11 82       	std	Z+1, r1	; 0x01
    3c94:	10 82       	st	Z, r1
    3c96:	70 c2       	rjmp	.+1248   	; 0x4178 <main+0x28bc>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    3c98:	82 e0       	ldi	r24, 0x02	; 2
    3c9a:	62 e0       	ldi	r22, 0x02	; 2
    3c9c:	41 e0       	ldi	r20, 0x01	; 1
    3c9e:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    3ca2:	fe 01       	movw	r30, r28
    3ca4:	e3 57       	subi	r30, 0x73	; 115
    3ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca8:	80 e0       	ldi	r24, 0x00	; 0
    3caa:	90 e0       	ldi	r25, 0x00	; 0
    3cac:	aa e7       	ldi	r26, 0x7A	; 122
    3cae:	b4 e4       	ldi	r27, 0x44	; 68
    3cb0:	80 83       	st	Z, r24
    3cb2:	91 83       	std	Z+1, r25	; 0x01
    3cb4:	a2 83       	std	Z+2, r26	; 0x02
    3cb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3cb8:	8e 01       	movw	r16, r28
    3cba:	07 57       	subi	r16, 0x77	; 119
    3cbc:	1f 4f       	sbci	r17, 0xFF	; 255
    3cbe:	fe 01       	movw	r30, r28
    3cc0:	e3 57       	subi	r30, 0x73	; 115
    3cc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc4:	60 81       	ld	r22, Z
    3cc6:	71 81       	ldd	r23, Z+1	; 0x01
    3cc8:	82 81       	ldd	r24, Z+2	; 0x02
    3cca:	93 81       	ldd	r25, Z+3	; 0x03
    3ccc:	20 e0       	ldi	r18, 0x00	; 0
    3cce:	30 e0       	ldi	r19, 0x00	; 0
    3cd0:	40 e8       	ldi	r20, 0x80	; 128
    3cd2:	50 e4       	ldi	r21, 0x40	; 64
    3cd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cd8:	dc 01       	movw	r26, r24
    3cda:	cb 01       	movw	r24, r22
    3cdc:	f8 01       	movw	r30, r16
    3cde:	80 83       	st	Z, r24
    3ce0:	91 83       	std	Z+1, r25	; 0x01
    3ce2:	a2 83       	std	Z+2, r26	; 0x02
    3ce4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ce6:	fe 01       	movw	r30, r28
    3ce8:	e7 57       	subi	r30, 0x77	; 119
    3cea:	ff 4f       	sbci	r31, 0xFF	; 255
    3cec:	60 81       	ld	r22, Z
    3cee:	71 81       	ldd	r23, Z+1	; 0x01
    3cf0:	82 81       	ldd	r24, Z+2	; 0x02
    3cf2:	93 81       	ldd	r25, Z+3	; 0x03
    3cf4:	20 e0       	ldi	r18, 0x00	; 0
    3cf6:	30 e0       	ldi	r19, 0x00	; 0
    3cf8:	40 e8       	ldi	r20, 0x80	; 128
    3cfa:	5f e3       	ldi	r21, 0x3F	; 63
    3cfc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3d00:	88 23       	and	r24, r24
    3d02:	34 f4       	brge	.+12     	; 0x3d10 <main+0x2454>
		__ticks = 1;
    3d04:	fe 01       	movw	r30, r28
    3d06:	e8 57       	subi	r30, 0x78	; 120
    3d08:	ff 4f       	sbci	r31, 0xFF	; 255
    3d0a:	81 e0       	ldi	r24, 0x01	; 1
    3d0c:	80 83       	st	Z, r24
    3d0e:	e0 c0       	rjmp	.+448    	; 0x3ed0 <main+0x2614>
	else if (__tmp > 255)
    3d10:	fe 01       	movw	r30, r28
    3d12:	e7 57       	subi	r30, 0x77	; 119
    3d14:	ff 4f       	sbci	r31, 0xFF	; 255
    3d16:	60 81       	ld	r22, Z
    3d18:	71 81       	ldd	r23, Z+1	; 0x01
    3d1a:	82 81       	ldd	r24, Z+2	; 0x02
    3d1c:	93 81       	ldd	r25, Z+3	; 0x03
    3d1e:	20 e0       	ldi	r18, 0x00	; 0
    3d20:	30 e0       	ldi	r19, 0x00	; 0
    3d22:	4f e7       	ldi	r20, 0x7F	; 127
    3d24:	53 e4       	ldi	r21, 0x43	; 67
    3d26:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3d2a:	18 16       	cp	r1, r24
    3d2c:	0c f0       	brlt	.+2      	; 0x3d30 <main+0x2474>
    3d2e:	c0 c0       	rjmp	.+384    	; 0x3eb0 <main+0x25f4>
	{
		_delay_ms(__us / 1000.0);
    3d30:	fe 01       	movw	r30, r28
    3d32:	e3 57       	subi	r30, 0x73	; 115
    3d34:	ff 4f       	sbci	r31, 0xFF	; 255
    3d36:	60 81       	ld	r22, Z
    3d38:	71 81       	ldd	r23, Z+1	; 0x01
    3d3a:	82 81       	ldd	r24, Z+2	; 0x02
    3d3c:	93 81       	ldd	r25, Z+3	; 0x03
    3d3e:	20 e0       	ldi	r18, 0x00	; 0
    3d40:	30 e0       	ldi	r19, 0x00	; 0
    3d42:	4a e7       	ldi	r20, 0x7A	; 122
    3d44:	54 e4       	ldi	r21, 0x44	; 68
    3d46:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3d4a:	dc 01       	movw	r26, r24
    3d4c:	cb 01       	movw	r24, r22
    3d4e:	fe 01       	movw	r30, r28
    3d50:	ec 57       	subi	r30, 0x7C	; 124
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	80 83       	st	Z, r24
    3d56:	91 83       	std	Z+1, r25	; 0x01
    3d58:	a2 83       	std	Z+2, r26	; 0x02
    3d5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d5c:	8e 01       	movw	r16, r28
    3d5e:	00 58       	subi	r16, 0x80	; 128
    3d60:	1f 4f       	sbci	r17, 0xFF	; 255
    3d62:	fe 01       	movw	r30, r28
    3d64:	ec 57       	subi	r30, 0x7C	; 124
    3d66:	ff 4f       	sbci	r31, 0xFF	; 255
    3d68:	60 81       	ld	r22, Z
    3d6a:	71 81       	ldd	r23, Z+1	; 0x01
    3d6c:	82 81       	ldd	r24, Z+2	; 0x02
    3d6e:	93 81       	ldd	r25, Z+3	; 0x03
    3d70:	20 e0       	ldi	r18, 0x00	; 0
    3d72:	30 e8       	ldi	r19, 0x80	; 128
    3d74:	4b e3       	ldi	r20, 0x3B	; 59
    3d76:	55 e4       	ldi	r21, 0x45	; 69
    3d78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d7c:	dc 01       	movw	r26, r24
    3d7e:	cb 01       	movw	r24, r22
    3d80:	f8 01       	movw	r30, r16
    3d82:	80 83       	st	Z, r24
    3d84:	91 83       	std	Z+1, r25	; 0x01
    3d86:	a2 83       	std	Z+2, r26	; 0x02
    3d88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d8a:	fe 01       	movw	r30, r28
    3d8c:	e0 58       	subi	r30, 0x80	; 128
    3d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d90:	60 81       	ld	r22, Z
    3d92:	71 81       	ldd	r23, Z+1	; 0x01
    3d94:	82 81       	ldd	r24, Z+2	; 0x02
    3d96:	93 81       	ldd	r25, Z+3	; 0x03
    3d98:	20 e0       	ldi	r18, 0x00	; 0
    3d9a:	30 e0       	ldi	r19, 0x00	; 0
    3d9c:	40 e8       	ldi	r20, 0x80	; 128
    3d9e:	5f e3       	ldi	r21, 0x3F	; 63
    3da0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3da4:	88 23       	and	r24, r24
    3da6:	44 f4       	brge	.+16     	; 0x3db8 <main+0x24fc>
		__ticks = 1;
    3da8:	fe 01       	movw	r30, r28
    3daa:	e2 58       	subi	r30, 0x82	; 130
    3dac:	ff 4f       	sbci	r31, 0xFF	; 255
    3dae:	81 e0       	ldi	r24, 0x01	; 1
    3db0:	90 e0       	ldi	r25, 0x00	; 0
    3db2:	91 83       	std	Z+1, r25	; 0x01
    3db4:	80 83       	st	Z, r24
    3db6:	64 c0       	rjmp	.+200    	; 0x3e80 <main+0x25c4>
	else if (__tmp > 65535)
    3db8:	fe 01       	movw	r30, r28
    3dba:	e0 58       	subi	r30, 0x80	; 128
    3dbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dbe:	60 81       	ld	r22, Z
    3dc0:	71 81       	ldd	r23, Z+1	; 0x01
    3dc2:	82 81       	ldd	r24, Z+2	; 0x02
    3dc4:	93 81       	ldd	r25, Z+3	; 0x03
    3dc6:	20 e0       	ldi	r18, 0x00	; 0
    3dc8:	3f ef       	ldi	r19, 0xFF	; 255
    3dca:	4f e7       	ldi	r20, 0x7F	; 127
    3dcc:	57 e4       	ldi	r21, 0x47	; 71
    3dce:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3dd2:	18 16       	cp	r1, r24
    3dd4:	0c f0       	brlt	.+2      	; 0x3dd8 <main+0x251c>
    3dd6:	43 c0       	rjmp	.+134    	; 0x3e5e <main+0x25a2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dd8:	fe 01       	movw	r30, r28
    3dda:	ec 57       	subi	r30, 0x7C	; 124
    3ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    3dde:	60 81       	ld	r22, Z
    3de0:	71 81       	ldd	r23, Z+1	; 0x01
    3de2:	82 81       	ldd	r24, Z+2	; 0x02
    3de4:	93 81       	ldd	r25, Z+3	; 0x03
    3de6:	20 e0       	ldi	r18, 0x00	; 0
    3de8:	30 e0       	ldi	r19, 0x00	; 0
    3dea:	40 e2       	ldi	r20, 0x20	; 32
    3dec:	51 e4       	ldi	r21, 0x41	; 65
    3dee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3df2:	dc 01       	movw	r26, r24
    3df4:	cb 01       	movw	r24, r22
    3df6:	8e 01       	movw	r16, r28
    3df8:	02 58       	subi	r16, 0x82	; 130
    3dfa:	1f 4f       	sbci	r17, 0xFF	; 255
    3dfc:	bc 01       	movw	r22, r24
    3dfe:	cd 01       	movw	r24, r26
    3e00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e04:	dc 01       	movw	r26, r24
    3e06:	cb 01       	movw	r24, r22
    3e08:	f8 01       	movw	r30, r16
    3e0a:	91 83       	std	Z+1, r25	; 0x01
    3e0c:	80 83       	st	Z, r24
    3e0e:	1f c0       	rjmp	.+62     	; 0x3e4e <main+0x2592>
    3e10:	fe 01       	movw	r30, r28
    3e12:	e4 58       	subi	r30, 0x84	; 132
    3e14:	ff 4f       	sbci	r31, 0xFF	; 255
    3e16:	8c e2       	ldi	r24, 0x2C	; 44
    3e18:	91 e0       	ldi	r25, 0x01	; 1
    3e1a:	91 83       	std	Z+1, r25	; 0x01
    3e1c:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3e1e:	fe 01       	movw	r30, r28
    3e20:	e4 58       	subi	r30, 0x84	; 132
    3e22:	ff 4f       	sbci	r31, 0xFF	; 255
    3e24:	80 81       	ld	r24, Z
    3e26:	91 81       	ldd	r25, Z+1	; 0x01
    3e28:	01 97       	sbiw	r24, 0x01	; 1
    3e2a:	f1 f7       	brne	.-4      	; 0x3e28 <main+0x256c>
    3e2c:	fe 01       	movw	r30, r28
    3e2e:	e4 58       	subi	r30, 0x84	; 132
    3e30:	ff 4f       	sbci	r31, 0xFF	; 255
    3e32:	91 83       	std	Z+1, r25	; 0x01
    3e34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e36:	de 01       	movw	r26, r28
    3e38:	a2 58       	subi	r26, 0x82	; 130
    3e3a:	bf 4f       	sbci	r27, 0xFF	; 255
    3e3c:	fe 01       	movw	r30, r28
    3e3e:	e2 58       	subi	r30, 0x82	; 130
    3e40:	ff 4f       	sbci	r31, 0xFF	; 255
    3e42:	80 81       	ld	r24, Z
    3e44:	91 81       	ldd	r25, Z+1	; 0x01
    3e46:	01 97       	sbiw	r24, 0x01	; 1
    3e48:	11 96       	adiw	r26, 0x01	; 1
    3e4a:	9c 93       	st	X, r25
    3e4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e4e:	fe 01       	movw	r30, r28
    3e50:	e2 58       	subi	r30, 0x82	; 130
    3e52:	ff 4f       	sbci	r31, 0xFF	; 255
    3e54:	80 81       	ld	r24, Z
    3e56:	91 81       	ldd	r25, Z+1	; 0x01
    3e58:	00 97       	sbiw	r24, 0x00	; 0
    3e5a:	d1 f6       	brne	.-76     	; 0x3e10 <main+0x2554>
    3e5c:	4b c0       	rjmp	.+150    	; 0x3ef4 <main+0x2638>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e5e:	8e 01       	movw	r16, r28
    3e60:	02 58       	subi	r16, 0x82	; 130
    3e62:	1f 4f       	sbci	r17, 0xFF	; 255
    3e64:	fe 01       	movw	r30, r28
    3e66:	e0 58       	subi	r30, 0x80	; 128
    3e68:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6a:	60 81       	ld	r22, Z
    3e6c:	71 81       	ldd	r23, Z+1	; 0x01
    3e6e:	82 81       	ldd	r24, Z+2	; 0x02
    3e70:	93 81       	ldd	r25, Z+3	; 0x03
    3e72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e76:	dc 01       	movw	r26, r24
    3e78:	cb 01       	movw	r24, r22
    3e7a:	f8 01       	movw	r30, r16
    3e7c:	91 83       	std	Z+1, r25	; 0x01
    3e7e:	80 83       	st	Z, r24
    3e80:	de 01       	movw	r26, r28
    3e82:	a6 58       	subi	r26, 0x86	; 134
    3e84:	bf 4f       	sbci	r27, 0xFF	; 255
    3e86:	fe 01       	movw	r30, r28
    3e88:	e2 58       	subi	r30, 0x82	; 130
    3e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e8c:	80 81       	ld	r24, Z
    3e8e:	91 81       	ldd	r25, Z+1	; 0x01
    3e90:	11 96       	adiw	r26, 0x01	; 1
    3e92:	9c 93       	st	X, r25
    3e94:	8e 93       	st	-X, r24
    3e96:	fe 01       	movw	r30, r28
    3e98:	e6 58       	subi	r30, 0x86	; 134
    3e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e9c:	80 81       	ld	r24, Z
    3e9e:	91 81       	ldd	r25, Z+1	; 0x01
    3ea0:	01 97       	sbiw	r24, 0x01	; 1
    3ea2:	f1 f7       	brne	.-4      	; 0x3ea0 <main+0x25e4>
    3ea4:	fe 01       	movw	r30, r28
    3ea6:	e6 58       	subi	r30, 0x86	; 134
    3ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eaa:	91 83       	std	Z+1, r25	; 0x01
    3eac:	80 83       	st	Z, r24
    3eae:	22 c0       	rjmp	.+68     	; 0x3ef4 <main+0x2638>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3eb0:	8e 01       	movw	r16, r28
    3eb2:	08 57       	subi	r16, 0x78	; 120
    3eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb6:	fe 01       	movw	r30, r28
    3eb8:	e7 57       	subi	r30, 0x77	; 119
    3eba:	ff 4f       	sbci	r31, 0xFF	; 255
    3ebc:	60 81       	ld	r22, Z
    3ebe:	71 81       	ldd	r23, Z+1	; 0x01
    3ec0:	82 81       	ldd	r24, Z+2	; 0x02
    3ec2:	93 81       	ldd	r25, Z+3	; 0x03
    3ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ec8:	dc 01       	movw	r26, r24
    3eca:	cb 01       	movw	r24, r22
    3ecc:	f8 01       	movw	r30, r16
    3ece:	80 83       	st	Z, r24
    3ed0:	de 01       	movw	r26, r28
    3ed2:	a7 58       	subi	r26, 0x87	; 135
    3ed4:	bf 4f       	sbci	r27, 0xFF	; 255
    3ed6:	fe 01       	movw	r30, r28
    3ed8:	e8 57       	subi	r30, 0x78	; 120
    3eda:	ff 4f       	sbci	r31, 0xFF	; 255
    3edc:	80 81       	ld	r24, Z
    3ede:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3ee0:	fe 01       	movw	r30, r28
    3ee2:	e7 58       	subi	r30, 0x87	; 135
    3ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee6:	80 81       	ld	r24, Z
    3ee8:	8a 95       	dec	r24
    3eea:	f1 f7       	brne	.-4      	; 0x3ee8 <main+0x262c>
    3eec:	fe 01       	movw	r30, r28
    3eee:	e7 58       	subi	r30, 0x87	; 135
    3ef0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ef2:	80 83       	st	Z, r24
				_delay_us(1000);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    3ef4:	82 e0       	ldi	r24, 0x02	; 2
    3ef6:	62 e0       	ldi	r22, 0x02	; 2
    3ef8:	40 e0       	ldi	r20, 0x00	; 0
    3efa:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    3efe:	fe 01       	movw	r30, r28
    3f00:	eb 58       	subi	r30, 0x8B	; 139
    3f02:	ff 4f       	sbci	r31, 0xFF	; 255
    3f04:	80 e0       	ldi	r24, 0x00	; 0
    3f06:	90 e7       	ldi	r25, 0x70	; 112
    3f08:	a4 e9       	ldi	r26, 0x94	; 148
    3f0a:	b6 e4       	ldi	r27, 0x46	; 70
    3f0c:	80 83       	st	Z, r24
    3f0e:	91 83       	std	Z+1, r25	; 0x01
    3f10:	a2 83       	std	Z+2, r26	; 0x02
    3f12:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3f14:	8e 01       	movw	r16, r28
    3f16:	0f 58       	subi	r16, 0x8F	; 143
    3f18:	1f 4f       	sbci	r17, 0xFF	; 255
    3f1a:	fe 01       	movw	r30, r28
    3f1c:	eb 58       	subi	r30, 0x8B	; 139
    3f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f20:	60 81       	ld	r22, Z
    3f22:	71 81       	ldd	r23, Z+1	; 0x01
    3f24:	82 81       	ldd	r24, Z+2	; 0x02
    3f26:	93 81       	ldd	r25, Z+3	; 0x03
    3f28:	20 e0       	ldi	r18, 0x00	; 0
    3f2a:	30 e0       	ldi	r19, 0x00	; 0
    3f2c:	40 e8       	ldi	r20, 0x80	; 128
    3f2e:	50 e4       	ldi	r21, 0x40	; 64
    3f30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f34:	dc 01       	movw	r26, r24
    3f36:	cb 01       	movw	r24, r22
    3f38:	f8 01       	movw	r30, r16
    3f3a:	80 83       	st	Z, r24
    3f3c:	91 83       	std	Z+1, r25	; 0x01
    3f3e:	a2 83       	std	Z+2, r26	; 0x02
    3f40:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3f42:	fe 01       	movw	r30, r28
    3f44:	ef 58       	subi	r30, 0x8F	; 143
    3f46:	ff 4f       	sbci	r31, 0xFF	; 255
    3f48:	60 81       	ld	r22, Z
    3f4a:	71 81       	ldd	r23, Z+1	; 0x01
    3f4c:	82 81       	ldd	r24, Z+2	; 0x02
    3f4e:	93 81       	ldd	r25, Z+3	; 0x03
    3f50:	20 e0       	ldi	r18, 0x00	; 0
    3f52:	30 e0       	ldi	r19, 0x00	; 0
    3f54:	40 e8       	ldi	r20, 0x80	; 128
    3f56:	5f e3       	ldi	r21, 0x3F	; 63
    3f58:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3f5c:	88 23       	and	r24, r24
    3f5e:	34 f4       	brge	.+12     	; 0x3f6c <main+0x26b0>
		__ticks = 1;
    3f60:	fe 01       	movw	r30, r28
    3f62:	e0 59       	subi	r30, 0x90	; 144
    3f64:	ff 4f       	sbci	r31, 0xFF	; 255
    3f66:	81 e0       	ldi	r24, 0x01	; 1
    3f68:	80 83       	st	Z, r24
    3f6a:	e0 c0       	rjmp	.+448    	; 0x412c <main+0x2870>
	else if (__tmp > 255)
    3f6c:	fe 01       	movw	r30, r28
    3f6e:	ef 58       	subi	r30, 0x8F	; 143
    3f70:	ff 4f       	sbci	r31, 0xFF	; 255
    3f72:	60 81       	ld	r22, Z
    3f74:	71 81       	ldd	r23, Z+1	; 0x01
    3f76:	82 81       	ldd	r24, Z+2	; 0x02
    3f78:	93 81       	ldd	r25, Z+3	; 0x03
    3f7a:	20 e0       	ldi	r18, 0x00	; 0
    3f7c:	30 e0       	ldi	r19, 0x00	; 0
    3f7e:	4f e7       	ldi	r20, 0x7F	; 127
    3f80:	53 e4       	ldi	r21, 0x43	; 67
    3f82:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3f86:	18 16       	cp	r1, r24
    3f88:	0c f0       	brlt	.+2      	; 0x3f8c <main+0x26d0>
    3f8a:	c0 c0       	rjmp	.+384    	; 0x410c <main+0x2850>
	{
		_delay_ms(__us / 1000.0);
    3f8c:	fe 01       	movw	r30, r28
    3f8e:	eb 58       	subi	r30, 0x8B	; 139
    3f90:	ff 4f       	sbci	r31, 0xFF	; 255
    3f92:	60 81       	ld	r22, Z
    3f94:	71 81       	ldd	r23, Z+1	; 0x01
    3f96:	82 81       	ldd	r24, Z+2	; 0x02
    3f98:	93 81       	ldd	r25, Z+3	; 0x03
    3f9a:	20 e0       	ldi	r18, 0x00	; 0
    3f9c:	30 e0       	ldi	r19, 0x00	; 0
    3f9e:	4a e7       	ldi	r20, 0x7A	; 122
    3fa0:	54 e4       	ldi	r21, 0x44	; 68
    3fa2:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    3fa6:	dc 01       	movw	r26, r24
    3fa8:	cb 01       	movw	r24, r22
    3faa:	fe 01       	movw	r30, r28
    3fac:	e4 59       	subi	r30, 0x94	; 148
    3fae:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb0:	80 83       	st	Z, r24
    3fb2:	91 83       	std	Z+1, r25	; 0x01
    3fb4:	a2 83       	std	Z+2, r26	; 0x02
    3fb6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3fb8:	8e 01       	movw	r16, r28
    3fba:	08 59       	subi	r16, 0x98	; 152
    3fbc:	1f 4f       	sbci	r17, 0xFF	; 255
    3fbe:	fe 01       	movw	r30, r28
    3fc0:	e4 59       	subi	r30, 0x94	; 148
    3fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc4:	60 81       	ld	r22, Z
    3fc6:	71 81       	ldd	r23, Z+1	; 0x01
    3fc8:	82 81       	ldd	r24, Z+2	; 0x02
    3fca:	93 81       	ldd	r25, Z+3	; 0x03
    3fcc:	20 e0       	ldi	r18, 0x00	; 0
    3fce:	30 e8       	ldi	r19, 0x80	; 128
    3fd0:	4b e3       	ldi	r20, 0x3B	; 59
    3fd2:	55 e4       	ldi	r21, 0x45	; 69
    3fd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3fd8:	dc 01       	movw	r26, r24
    3fda:	cb 01       	movw	r24, r22
    3fdc:	f8 01       	movw	r30, r16
    3fde:	80 83       	st	Z, r24
    3fe0:	91 83       	std	Z+1, r25	; 0x01
    3fe2:	a2 83       	std	Z+2, r26	; 0x02
    3fe4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3fe6:	fe 01       	movw	r30, r28
    3fe8:	e8 59       	subi	r30, 0x98	; 152
    3fea:	ff 4f       	sbci	r31, 0xFF	; 255
    3fec:	60 81       	ld	r22, Z
    3fee:	71 81       	ldd	r23, Z+1	; 0x01
    3ff0:	82 81       	ldd	r24, Z+2	; 0x02
    3ff2:	93 81       	ldd	r25, Z+3	; 0x03
    3ff4:	20 e0       	ldi	r18, 0x00	; 0
    3ff6:	30 e0       	ldi	r19, 0x00	; 0
    3ff8:	40 e8       	ldi	r20, 0x80	; 128
    3ffa:	5f e3       	ldi	r21, 0x3F	; 63
    3ffc:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4000:	88 23       	and	r24, r24
    4002:	44 f4       	brge	.+16     	; 0x4014 <main+0x2758>
		__ticks = 1;
    4004:	fe 01       	movw	r30, r28
    4006:	ea 59       	subi	r30, 0x9A	; 154
    4008:	ff 4f       	sbci	r31, 0xFF	; 255
    400a:	81 e0       	ldi	r24, 0x01	; 1
    400c:	90 e0       	ldi	r25, 0x00	; 0
    400e:	91 83       	std	Z+1, r25	; 0x01
    4010:	80 83       	st	Z, r24
    4012:	64 c0       	rjmp	.+200    	; 0x40dc <main+0x2820>
	else if (__tmp > 65535)
    4014:	fe 01       	movw	r30, r28
    4016:	e8 59       	subi	r30, 0x98	; 152
    4018:	ff 4f       	sbci	r31, 0xFF	; 255
    401a:	60 81       	ld	r22, Z
    401c:	71 81       	ldd	r23, Z+1	; 0x01
    401e:	82 81       	ldd	r24, Z+2	; 0x02
    4020:	93 81       	ldd	r25, Z+3	; 0x03
    4022:	20 e0       	ldi	r18, 0x00	; 0
    4024:	3f ef       	ldi	r19, 0xFF	; 255
    4026:	4f e7       	ldi	r20, 0x7F	; 127
    4028:	57 e4       	ldi	r21, 0x47	; 71
    402a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    402e:	18 16       	cp	r1, r24
    4030:	0c f0       	brlt	.+2      	; 0x4034 <main+0x2778>
    4032:	43 c0       	rjmp	.+134    	; 0x40ba <main+0x27fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4034:	fe 01       	movw	r30, r28
    4036:	e4 59       	subi	r30, 0x94	; 148
    4038:	ff 4f       	sbci	r31, 0xFF	; 255
    403a:	60 81       	ld	r22, Z
    403c:	71 81       	ldd	r23, Z+1	; 0x01
    403e:	82 81       	ldd	r24, Z+2	; 0x02
    4040:	93 81       	ldd	r25, Z+3	; 0x03
    4042:	20 e0       	ldi	r18, 0x00	; 0
    4044:	30 e0       	ldi	r19, 0x00	; 0
    4046:	40 e2       	ldi	r20, 0x20	; 32
    4048:	51 e4       	ldi	r21, 0x41	; 65
    404a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    404e:	dc 01       	movw	r26, r24
    4050:	cb 01       	movw	r24, r22
    4052:	8e 01       	movw	r16, r28
    4054:	0a 59       	subi	r16, 0x9A	; 154
    4056:	1f 4f       	sbci	r17, 0xFF	; 255
    4058:	bc 01       	movw	r22, r24
    405a:	cd 01       	movw	r24, r26
    405c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4060:	dc 01       	movw	r26, r24
    4062:	cb 01       	movw	r24, r22
    4064:	f8 01       	movw	r30, r16
    4066:	91 83       	std	Z+1, r25	; 0x01
    4068:	80 83       	st	Z, r24
    406a:	1f c0       	rjmp	.+62     	; 0x40aa <main+0x27ee>
    406c:	fe 01       	movw	r30, r28
    406e:	ec 59       	subi	r30, 0x9C	; 156
    4070:	ff 4f       	sbci	r31, 0xFF	; 255
    4072:	8c e2       	ldi	r24, 0x2C	; 44
    4074:	91 e0       	ldi	r25, 0x01	; 1
    4076:	91 83       	std	Z+1, r25	; 0x01
    4078:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    407a:	fe 01       	movw	r30, r28
    407c:	ec 59       	subi	r30, 0x9C	; 156
    407e:	ff 4f       	sbci	r31, 0xFF	; 255
    4080:	80 81       	ld	r24, Z
    4082:	91 81       	ldd	r25, Z+1	; 0x01
    4084:	01 97       	sbiw	r24, 0x01	; 1
    4086:	f1 f7       	brne	.-4      	; 0x4084 <main+0x27c8>
    4088:	fe 01       	movw	r30, r28
    408a:	ec 59       	subi	r30, 0x9C	; 156
    408c:	ff 4f       	sbci	r31, 0xFF	; 255
    408e:	91 83       	std	Z+1, r25	; 0x01
    4090:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4092:	de 01       	movw	r26, r28
    4094:	aa 59       	subi	r26, 0x9A	; 154
    4096:	bf 4f       	sbci	r27, 0xFF	; 255
    4098:	fe 01       	movw	r30, r28
    409a:	ea 59       	subi	r30, 0x9A	; 154
    409c:	ff 4f       	sbci	r31, 0xFF	; 255
    409e:	80 81       	ld	r24, Z
    40a0:	91 81       	ldd	r25, Z+1	; 0x01
    40a2:	01 97       	sbiw	r24, 0x01	; 1
    40a4:	11 96       	adiw	r26, 0x01	; 1
    40a6:	9c 93       	st	X, r25
    40a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40aa:	fe 01       	movw	r30, r28
    40ac:	ea 59       	subi	r30, 0x9A	; 154
    40ae:	ff 4f       	sbci	r31, 0xFF	; 255
    40b0:	80 81       	ld	r24, Z
    40b2:	91 81       	ldd	r25, Z+1	; 0x01
    40b4:	00 97       	sbiw	r24, 0x00	; 0
    40b6:	d1 f6       	brne	.-76     	; 0x406c <main+0x27b0>
    40b8:	4b c0       	rjmp	.+150    	; 0x4150 <main+0x2894>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40ba:	8e 01       	movw	r16, r28
    40bc:	0a 59       	subi	r16, 0x9A	; 154
    40be:	1f 4f       	sbci	r17, 0xFF	; 255
    40c0:	fe 01       	movw	r30, r28
    40c2:	e8 59       	subi	r30, 0x98	; 152
    40c4:	ff 4f       	sbci	r31, 0xFF	; 255
    40c6:	60 81       	ld	r22, Z
    40c8:	71 81       	ldd	r23, Z+1	; 0x01
    40ca:	82 81       	ldd	r24, Z+2	; 0x02
    40cc:	93 81       	ldd	r25, Z+3	; 0x03
    40ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40d2:	dc 01       	movw	r26, r24
    40d4:	cb 01       	movw	r24, r22
    40d6:	f8 01       	movw	r30, r16
    40d8:	91 83       	std	Z+1, r25	; 0x01
    40da:	80 83       	st	Z, r24
    40dc:	de 01       	movw	r26, r28
    40de:	ae 59       	subi	r26, 0x9E	; 158
    40e0:	bf 4f       	sbci	r27, 0xFF	; 255
    40e2:	fe 01       	movw	r30, r28
    40e4:	ea 59       	subi	r30, 0x9A	; 154
    40e6:	ff 4f       	sbci	r31, 0xFF	; 255
    40e8:	80 81       	ld	r24, Z
    40ea:	91 81       	ldd	r25, Z+1	; 0x01
    40ec:	11 96       	adiw	r26, 0x01	; 1
    40ee:	9c 93       	st	X, r25
    40f0:	8e 93       	st	-X, r24
    40f2:	fe 01       	movw	r30, r28
    40f4:	ee 59       	subi	r30, 0x9E	; 158
    40f6:	ff 4f       	sbci	r31, 0xFF	; 255
    40f8:	80 81       	ld	r24, Z
    40fa:	91 81       	ldd	r25, Z+1	; 0x01
    40fc:	01 97       	sbiw	r24, 0x01	; 1
    40fe:	f1 f7       	brne	.-4      	; 0x40fc <main+0x2840>
    4100:	fe 01       	movw	r30, r28
    4102:	ee 59       	subi	r30, 0x9E	; 158
    4104:	ff 4f       	sbci	r31, 0xFF	; 255
    4106:	91 83       	std	Z+1, r25	; 0x01
    4108:	80 83       	st	Z, r24
    410a:	22 c0       	rjmp	.+68     	; 0x4150 <main+0x2894>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    410c:	8e 01       	movw	r16, r28
    410e:	00 59       	subi	r16, 0x90	; 144
    4110:	1f 4f       	sbci	r17, 0xFF	; 255
    4112:	fe 01       	movw	r30, r28
    4114:	ef 58       	subi	r30, 0x8F	; 143
    4116:	ff 4f       	sbci	r31, 0xFF	; 255
    4118:	60 81       	ld	r22, Z
    411a:	71 81       	ldd	r23, Z+1	; 0x01
    411c:	82 81       	ldd	r24, Z+2	; 0x02
    411e:	93 81       	ldd	r25, Z+3	; 0x03
    4120:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4124:	dc 01       	movw	r26, r24
    4126:	cb 01       	movw	r24, r22
    4128:	f8 01       	movw	r30, r16
    412a:	80 83       	st	Z, r24
    412c:	de 01       	movw	r26, r28
    412e:	af 59       	subi	r26, 0x9F	; 159
    4130:	bf 4f       	sbci	r27, 0xFF	; 255
    4132:	fe 01       	movw	r30, r28
    4134:	e0 59       	subi	r30, 0x90	; 144
    4136:	ff 4f       	sbci	r31, 0xFF	; 255
    4138:	80 81       	ld	r24, Z
    413a:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    413c:	fe 01       	movw	r30, r28
    413e:	ef 59       	subi	r30, 0x9F	; 159
    4140:	ff 4f       	sbci	r31, 0xFF	; 255
    4142:	80 81       	ld	r24, Z
    4144:	8a 95       	dec	r24
    4146:	f1 f7       	brne	.-4      	; 0x4144 <main+0x2888>
    4148:	fe 01       	movw	r30, r28
    414a:	ef 59       	subi	r30, 0x9F	; 159
    414c:	ff 4f       	sbci	r31, 0xFF	; 255
    414e:	80 83       	st	Z, r24
				_delay_us(19000);
				LCD_voidSetCursor(2, 1);
    4150:	82 e0       	ldi	r24, 0x02	; 2
    4152:	61 e0       	ldi	r22, 0x01	; 1
    4154:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("90");
    4158:	8c e6       	ldi	r24, 0x6C	; 108
    415a:	90 e0       	ldi	r25, 0x00	; 0
    415c:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidWriteString("135");
			}
			LCD_voidClear();
			LCD_voidWriteString("Angle:");

			for( i=0;i<50;i++)//angle 90
    4160:	de 01       	movw	r26, r28
    4162:	ad 51       	subi	r26, 0x1D	; 29
    4164:	be 4f       	sbci	r27, 0xFE	; 254
    4166:	fe 01       	movw	r30, r28
    4168:	ed 51       	subi	r30, 0x1D	; 29
    416a:	fe 4f       	sbci	r31, 0xFE	; 254
    416c:	80 81       	ld	r24, Z
    416e:	91 81       	ldd	r25, Z+1	; 0x01
    4170:	01 96       	adiw	r24, 0x01	; 1
    4172:	11 96       	adiw	r26, 0x01	; 1
    4174:	9c 93       	st	X, r25
    4176:	8e 93       	st	-X, r24
    4178:	fe 01       	movw	r30, r28
    417a:	ed 51       	subi	r30, 0x1D	; 29
    417c:	fe 4f       	sbci	r31, 0xFE	; 254
    417e:	80 81       	ld	r24, Z
    4180:	91 81       	ldd	r25, Z+1	; 0x01
    4182:	82 33       	cpi	r24, 0x32	; 50
    4184:	91 05       	cpc	r25, r1
    4186:	08 f4       	brcc	.+2      	; 0x418a <main+0x28ce>
    4188:	87 cd       	rjmp	.-1266   	; 0x3c98 <main+0x23dc>
				_delay_us(19000);
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("90");
			}

			for( i=0;i<50;i++)// angle 45
    418a:	fe 01       	movw	r30, r28
    418c:	ed 51       	subi	r30, 0x1D	; 29
    418e:	fe 4f       	sbci	r31, 0xFE	; 254
    4190:	11 82       	std	Z+1, r1	; 0x01
    4192:	10 82       	st	Z, r1
    4194:	24 c2       	rjmp	.+1096   	; 0x45de <main+0x2d22>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    4196:	82 e0       	ldi	r24, 0x02	; 2
    4198:	62 e0       	ldi	r22, 0x02	; 2
    419a:	41 e0       	ldi	r20, 0x01	; 1
    419c:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    41a0:	fe 01       	movw	r30, r28
    41a2:	e3 5a       	subi	r30, 0xA3	; 163
    41a4:	ff 4f       	sbci	r31, 0xFF	; 255
    41a6:	80 e0       	ldi	r24, 0x00	; 0
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	a8 ec       	ldi	r26, 0xC8	; 200
    41ac:	b2 e4       	ldi	r27, 0x42	; 66
    41ae:	80 83       	st	Z, r24
    41b0:	91 83       	std	Z+1, r25	; 0x01
    41b2:	a2 83       	std	Z+2, r26	; 0x02
    41b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    41b6:	8e 01       	movw	r16, r28
    41b8:	07 5a       	subi	r16, 0xA7	; 167
    41ba:	1f 4f       	sbci	r17, 0xFF	; 255
    41bc:	fe 01       	movw	r30, r28
    41be:	e3 5a       	subi	r30, 0xA3	; 163
    41c0:	ff 4f       	sbci	r31, 0xFF	; 255
    41c2:	60 81       	ld	r22, Z
    41c4:	71 81       	ldd	r23, Z+1	; 0x01
    41c6:	82 81       	ldd	r24, Z+2	; 0x02
    41c8:	93 81       	ldd	r25, Z+3	; 0x03
    41ca:	20 e0       	ldi	r18, 0x00	; 0
    41cc:	30 e0       	ldi	r19, 0x00	; 0
    41ce:	40 e8       	ldi	r20, 0x80	; 128
    41d0:	50 e4       	ldi	r21, 0x40	; 64
    41d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41d6:	dc 01       	movw	r26, r24
    41d8:	cb 01       	movw	r24, r22
    41da:	f8 01       	movw	r30, r16
    41dc:	80 83       	st	Z, r24
    41de:	91 83       	std	Z+1, r25	; 0x01
    41e0:	a2 83       	std	Z+2, r26	; 0x02
    41e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41e4:	fe 01       	movw	r30, r28
    41e6:	e7 5a       	subi	r30, 0xA7	; 167
    41e8:	ff 4f       	sbci	r31, 0xFF	; 255
    41ea:	60 81       	ld	r22, Z
    41ec:	71 81       	ldd	r23, Z+1	; 0x01
    41ee:	82 81       	ldd	r24, Z+2	; 0x02
    41f0:	93 81       	ldd	r25, Z+3	; 0x03
    41f2:	20 e0       	ldi	r18, 0x00	; 0
    41f4:	30 e0       	ldi	r19, 0x00	; 0
    41f6:	40 e8       	ldi	r20, 0x80	; 128
    41f8:	5f e3       	ldi	r21, 0x3F	; 63
    41fa:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    41fe:	88 23       	and	r24, r24
    4200:	34 f4       	brge	.+12     	; 0x420e <main+0x2952>
		__ticks = 1;
    4202:	fe 01       	movw	r30, r28
    4204:	e8 5a       	subi	r30, 0xA8	; 168
    4206:	ff 4f       	sbci	r31, 0xFF	; 255
    4208:	81 e0       	ldi	r24, 0x01	; 1
    420a:	80 83       	st	Z, r24
    420c:	e0 c0       	rjmp	.+448    	; 0x43ce <main+0x2b12>
	else if (__tmp > 255)
    420e:	fe 01       	movw	r30, r28
    4210:	e7 5a       	subi	r30, 0xA7	; 167
    4212:	ff 4f       	sbci	r31, 0xFF	; 255
    4214:	60 81       	ld	r22, Z
    4216:	71 81       	ldd	r23, Z+1	; 0x01
    4218:	82 81       	ldd	r24, Z+2	; 0x02
    421a:	93 81       	ldd	r25, Z+3	; 0x03
    421c:	20 e0       	ldi	r18, 0x00	; 0
    421e:	30 e0       	ldi	r19, 0x00	; 0
    4220:	4f e7       	ldi	r20, 0x7F	; 127
    4222:	53 e4       	ldi	r21, 0x43	; 67
    4224:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4228:	18 16       	cp	r1, r24
    422a:	0c f0       	brlt	.+2      	; 0x422e <main+0x2972>
    422c:	c0 c0       	rjmp	.+384    	; 0x43ae <main+0x2af2>
	{
		_delay_ms(__us / 1000.0);
    422e:	fe 01       	movw	r30, r28
    4230:	e3 5a       	subi	r30, 0xA3	; 163
    4232:	ff 4f       	sbci	r31, 0xFF	; 255
    4234:	60 81       	ld	r22, Z
    4236:	71 81       	ldd	r23, Z+1	; 0x01
    4238:	82 81       	ldd	r24, Z+2	; 0x02
    423a:	93 81       	ldd	r25, Z+3	; 0x03
    423c:	20 e0       	ldi	r18, 0x00	; 0
    423e:	30 e0       	ldi	r19, 0x00	; 0
    4240:	4a e7       	ldi	r20, 0x7A	; 122
    4242:	54 e4       	ldi	r21, 0x44	; 68
    4244:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    4248:	dc 01       	movw	r26, r24
    424a:	cb 01       	movw	r24, r22
    424c:	fe 01       	movw	r30, r28
    424e:	ec 5a       	subi	r30, 0xAC	; 172
    4250:	ff 4f       	sbci	r31, 0xFF	; 255
    4252:	80 83       	st	Z, r24
    4254:	91 83       	std	Z+1, r25	; 0x01
    4256:	a2 83       	std	Z+2, r26	; 0x02
    4258:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    425a:	8e 01       	movw	r16, r28
    425c:	00 5b       	subi	r16, 0xB0	; 176
    425e:	1f 4f       	sbci	r17, 0xFF	; 255
    4260:	fe 01       	movw	r30, r28
    4262:	ec 5a       	subi	r30, 0xAC	; 172
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	60 81       	ld	r22, Z
    4268:	71 81       	ldd	r23, Z+1	; 0x01
    426a:	82 81       	ldd	r24, Z+2	; 0x02
    426c:	93 81       	ldd	r25, Z+3	; 0x03
    426e:	20 e0       	ldi	r18, 0x00	; 0
    4270:	30 e8       	ldi	r19, 0x80	; 128
    4272:	4b e3       	ldi	r20, 0x3B	; 59
    4274:	55 e4       	ldi	r21, 0x45	; 69
    4276:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    427a:	dc 01       	movw	r26, r24
    427c:	cb 01       	movw	r24, r22
    427e:	f8 01       	movw	r30, r16
    4280:	80 83       	st	Z, r24
    4282:	91 83       	std	Z+1, r25	; 0x01
    4284:	a2 83       	std	Z+2, r26	; 0x02
    4286:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4288:	fe 01       	movw	r30, r28
    428a:	e0 5b       	subi	r30, 0xB0	; 176
    428c:	ff 4f       	sbci	r31, 0xFF	; 255
    428e:	60 81       	ld	r22, Z
    4290:	71 81       	ldd	r23, Z+1	; 0x01
    4292:	82 81       	ldd	r24, Z+2	; 0x02
    4294:	93 81       	ldd	r25, Z+3	; 0x03
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	40 e8       	ldi	r20, 0x80	; 128
    429c:	5f e3       	ldi	r21, 0x3F	; 63
    429e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    42a2:	88 23       	and	r24, r24
    42a4:	44 f4       	brge	.+16     	; 0x42b6 <main+0x29fa>
		__ticks = 1;
    42a6:	fe 01       	movw	r30, r28
    42a8:	e2 5b       	subi	r30, 0xB2	; 178
    42aa:	ff 4f       	sbci	r31, 0xFF	; 255
    42ac:	81 e0       	ldi	r24, 0x01	; 1
    42ae:	90 e0       	ldi	r25, 0x00	; 0
    42b0:	91 83       	std	Z+1, r25	; 0x01
    42b2:	80 83       	st	Z, r24
    42b4:	64 c0       	rjmp	.+200    	; 0x437e <main+0x2ac2>
	else if (__tmp > 65535)
    42b6:	fe 01       	movw	r30, r28
    42b8:	e0 5b       	subi	r30, 0xB0	; 176
    42ba:	ff 4f       	sbci	r31, 0xFF	; 255
    42bc:	60 81       	ld	r22, Z
    42be:	71 81       	ldd	r23, Z+1	; 0x01
    42c0:	82 81       	ldd	r24, Z+2	; 0x02
    42c2:	93 81       	ldd	r25, Z+3	; 0x03
    42c4:	20 e0       	ldi	r18, 0x00	; 0
    42c6:	3f ef       	ldi	r19, 0xFF	; 255
    42c8:	4f e7       	ldi	r20, 0x7F	; 127
    42ca:	57 e4       	ldi	r21, 0x47	; 71
    42cc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    42d0:	18 16       	cp	r1, r24
    42d2:	0c f0       	brlt	.+2      	; 0x42d6 <main+0x2a1a>
    42d4:	43 c0       	rjmp	.+134    	; 0x435c <main+0x2aa0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42d6:	fe 01       	movw	r30, r28
    42d8:	ec 5a       	subi	r30, 0xAC	; 172
    42da:	ff 4f       	sbci	r31, 0xFF	; 255
    42dc:	60 81       	ld	r22, Z
    42de:	71 81       	ldd	r23, Z+1	; 0x01
    42e0:	82 81       	ldd	r24, Z+2	; 0x02
    42e2:	93 81       	ldd	r25, Z+3	; 0x03
    42e4:	20 e0       	ldi	r18, 0x00	; 0
    42e6:	30 e0       	ldi	r19, 0x00	; 0
    42e8:	40 e2       	ldi	r20, 0x20	; 32
    42ea:	51 e4       	ldi	r21, 0x41	; 65
    42ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42f0:	dc 01       	movw	r26, r24
    42f2:	cb 01       	movw	r24, r22
    42f4:	8e 01       	movw	r16, r28
    42f6:	02 5b       	subi	r16, 0xB2	; 178
    42f8:	1f 4f       	sbci	r17, 0xFF	; 255
    42fa:	bc 01       	movw	r22, r24
    42fc:	cd 01       	movw	r24, r26
    42fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4302:	dc 01       	movw	r26, r24
    4304:	cb 01       	movw	r24, r22
    4306:	f8 01       	movw	r30, r16
    4308:	91 83       	std	Z+1, r25	; 0x01
    430a:	80 83       	st	Z, r24
    430c:	1f c0       	rjmp	.+62     	; 0x434c <main+0x2a90>
    430e:	fe 01       	movw	r30, r28
    4310:	e4 5b       	subi	r30, 0xB4	; 180
    4312:	ff 4f       	sbci	r31, 0xFF	; 255
    4314:	8c e2       	ldi	r24, 0x2C	; 44
    4316:	91 e0       	ldi	r25, 0x01	; 1
    4318:	91 83       	std	Z+1, r25	; 0x01
    431a:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    431c:	fe 01       	movw	r30, r28
    431e:	e4 5b       	subi	r30, 0xB4	; 180
    4320:	ff 4f       	sbci	r31, 0xFF	; 255
    4322:	80 81       	ld	r24, Z
    4324:	91 81       	ldd	r25, Z+1	; 0x01
    4326:	01 97       	sbiw	r24, 0x01	; 1
    4328:	f1 f7       	brne	.-4      	; 0x4326 <main+0x2a6a>
    432a:	fe 01       	movw	r30, r28
    432c:	e4 5b       	subi	r30, 0xB4	; 180
    432e:	ff 4f       	sbci	r31, 0xFF	; 255
    4330:	91 83       	std	Z+1, r25	; 0x01
    4332:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4334:	de 01       	movw	r26, r28
    4336:	a2 5b       	subi	r26, 0xB2	; 178
    4338:	bf 4f       	sbci	r27, 0xFF	; 255
    433a:	fe 01       	movw	r30, r28
    433c:	e2 5b       	subi	r30, 0xB2	; 178
    433e:	ff 4f       	sbci	r31, 0xFF	; 255
    4340:	80 81       	ld	r24, Z
    4342:	91 81       	ldd	r25, Z+1	; 0x01
    4344:	01 97       	sbiw	r24, 0x01	; 1
    4346:	11 96       	adiw	r26, 0x01	; 1
    4348:	9c 93       	st	X, r25
    434a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    434c:	fe 01       	movw	r30, r28
    434e:	e2 5b       	subi	r30, 0xB2	; 178
    4350:	ff 4f       	sbci	r31, 0xFF	; 255
    4352:	80 81       	ld	r24, Z
    4354:	91 81       	ldd	r25, Z+1	; 0x01
    4356:	00 97       	sbiw	r24, 0x00	; 0
    4358:	d1 f6       	brne	.-76     	; 0x430e <main+0x2a52>
    435a:	4b c0       	rjmp	.+150    	; 0x43f2 <main+0x2b36>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    435c:	8e 01       	movw	r16, r28
    435e:	02 5b       	subi	r16, 0xB2	; 178
    4360:	1f 4f       	sbci	r17, 0xFF	; 255
    4362:	fe 01       	movw	r30, r28
    4364:	e0 5b       	subi	r30, 0xB0	; 176
    4366:	ff 4f       	sbci	r31, 0xFF	; 255
    4368:	60 81       	ld	r22, Z
    436a:	71 81       	ldd	r23, Z+1	; 0x01
    436c:	82 81       	ldd	r24, Z+2	; 0x02
    436e:	93 81       	ldd	r25, Z+3	; 0x03
    4370:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4374:	dc 01       	movw	r26, r24
    4376:	cb 01       	movw	r24, r22
    4378:	f8 01       	movw	r30, r16
    437a:	91 83       	std	Z+1, r25	; 0x01
    437c:	80 83       	st	Z, r24
    437e:	de 01       	movw	r26, r28
    4380:	a6 5b       	subi	r26, 0xB6	; 182
    4382:	bf 4f       	sbci	r27, 0xFF	; 255
    4384:	fe 01       	movw	r30, r28
    4386:	e2 5b       	subi	r30, 0xB2	; 178
    4388:	ff 4f       	sbci	r31, 0xFF	; 255
    438a:	80 81       	ld	r24, Z
    438c:	91 81       	ldd	r25, Z+1	; 0x01
    438e:	11 96       	adiw	r26, 0x01	; 1
    4390:	9c 93       	st	X, r25
    4392:	8e 93       	st	-X, r24
    4394:	fe 01       	movw	r30, r28
    4396:	e6 5b       	subi	r30, 0xB6	; 182
    4398:	ff 4f       	sbci	r31, 0xFF	; 255
    439a:	80 81       	ld	r24, Z
    439c:	91 81       	ldd	r25, Z+1	; 0x01
    439e:	01 97       	sbiw	r24, 0x01	; 1
    43a0:	f1 f7       	brne	.-4      	; 0x439e <main+0x2ae2>
    43a2:	fe 01       	movw	r30, r28
    43a4:	e6 5b       	subi	r30, 0xB6	; 182
    43a6:	ff 4f       	sbci	r31, 0xFF	; 255
    43a8:	91 83       	std	Z+1, r25	; 0x01
    43aa:	80 83       	st	Z, r24
    43ac:	22 c0       	rjmp	.+68     	; 0x43f2 <main+0x2b36>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    43ae:	8e 01       	movw	r16, r28
    43b0:	08 5a       	subi	r16, 0xA8	; 168
    43b2:	1f 4f       	sbci	r17, 0xFF	; 255
    43b4:	fe 01       	movw	r30, r28
    43b6:	e7 5a       	subi	r30, 0xA7	; 167
    43b8:	ff 4f       	sbci	r31, 0xFF	; 255
    43ba:	60 81       	ld	r22, Z
    43bc:	71 81       	ldd	r23, Z+1	; 0x01
    43be:	82 81       	ldd	r24, Z+2	; 0x02
    43c0:	93 81       	ldd	r25, Z+3	; 0x03
    43c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43c6:	dc 01       	movw	r26, r24
    43c8:	cb 01       	movw	r24, r22
    43ca:	f8 01       	movw	r30, r16
    43cc:	80 83       	st	Z, r24
    43ce:	de 01       	movw	r26, r28
    43d0:	a7 5b       	subi	r26, 0xB7	; 183
    43d2:	bf 4f       	sbci	r27, 0xFF	; 255
    43d4:	fe 01       	movw	r30, r28
    43d6:	e8 5a       	subi	r30, 0xA8	; 168
    43d8:	ff 4f       	sbci	r31, 0xFF	; 255
    43da:	80 81       	ld	r24, Z
    43dc:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    43de:	fe 01       	movw	r30, r28
    43e0:	e7 5b       	subi	r30, 0xB7	; 183
    43e2:	ff 4f       	sbci	r31, 0xFF	; 255
    43e4:	80 81       	ld	r24, Z
    43e6:	8a 95       	dec	r24
    43e8:	f1 f7       	brne	.-4      	; 0x43e6 <main+0x2b2a>
    43ea:	fe 01       	movw	r30, r28
    43ec:	e7 5b       	subi	r30, 0xB7	; 183
    43ee:	ff 4f       	sbci	r31, 0xFF	; 255
    43f0:	80 83       	st	Z, r24
				_delay_us(100);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    43f2:	82 e0       	ldi	r24, 0x02	; 2
    43f4:	62 e0       	ldi	r22, 0x02	; 2
    43f6:	40 e0       	ldi	r20, 0x00	; 0
    43f8:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    43fc:	fe 01       	movw	r30, r28
    43fe:	eb 5b       	subi	r30, 0xBB	; 187
    4400:	ff 4f       	sbci	r31, 0xFF	; 255
    4402:	80 e0       	ldi	r24, 0x00	; 0
    4404:	98 e7       	ldi	r25, 0x78	; 120
    4406:	ab e9       	ldi	r26, 0x9B	; 155
    4408:	b6 e4       	ldi	r27, 0x46	; 70
    440a:	80 83       	st	Z, r24
    440c:	91 83       	std	Z+1, r25	; 0x01
    440e:	a2 83       	std	Z+2, r26	; 0x02
    4410:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4412:	8e 01       	movw	r16, r28
    4414:	0f 5b       	subi	r16, 0xBF	; 191
    4416:	1f 4f       	sbci	r17, 0xFF	; 255
    4418:	fe 01       	movw	r30, r28
    441a:	eb 5b       	subi	r30, 0xBB	; 187
    441c:	ff 4f       	sbci	r31, 0xFF	; 255
    441e:	60 81       	ld	r22, Z
    4420:	71 81       	ldd	r23, Z+1	; 0x01
    4422:	82 81       	ldd	r24, Z+2	; 0x02
    4424:	93 81       	ldd	r25, Z+3	; 0x03
    4426:	20 e0       	ldi	r18, 0x00	; 0
    4428:	30 e0       	ldi	r19, 0x00	; 0
    442a:	40 e8       	ldi	r20, 0x80	; 128
    442c:	50 e4       	ldi	r21, 0x40	; 64
    442e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4432:	dc 01       	movw	r26, r24
    4434:	cb 01       	movw	r24, r22
    4436:	f8 01       	movw	r30, r16
    4438:	80 83       	st	Z, r24
    443a:	91 83       	std	Z+1, r25	; 0x01
    443c:	a2 83       	std	Z+2, r26	; 0x02
    443e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4440:	fe 01       	movw	r30, r28
    4442:	ef 5b       	subi	r30, 0xBF	; 191
    4444:	ff 4f       	sbci	r31, 0xFF	; 255
    4446:	60 81       	ld	r22, Z
    4448:	71 81       	ldd	r23, Z+1	; 0x01
    444a:	82 81       	ldd	r24, Z+2	; 0x02
    444c:	93 81       	ldd	r25, Z+3	; 0x03
    444e:	20 e0       	ldi	r18, 0x00	; 0
    4450:	30 e0       	ldi	r19, 0x00	; 0
    4452:	40 e8       	ldi	r20, 0x80	; 128
    4454:	5f e3       	ldi	r21, 0x3F	; 63
    4456:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    445a:	88 23       	and	r24, r24
    445c:	34 f4       	brge	.+12     	; 0x446a <main+0x2bae>
		__ticks = 1;
    445e:	81 e0       	ldi	r24, 0x01	; 1
    4460:	fe 01       	movw	r30, r28
    4462:	e0 5c       	subi	r30, 0xC0	; 192
    4464:	ff 4f       	sbci	r31, 0xFF	; 255
    4466:	80 83       	st	Z, r24
    4468:	9d c0       	rjmp	.+314    	; 0x45a4 <main+0x2ce8>
	else if (__tmp > 255)
    446a:	fe 01       	movw	r30, r28
    446c:	ef 5b       	subi	r30, 0xBF	; 191
    446e:	ff 4f       	sbci	r31, 0xFF	; 255
    4470:	60 81       	ld	r22, Z
    4472:	71 81       	ldd	r23, Z+1	; 0x01
    4474:	82 81       	ldd	r24, Z+2	; 0x02
    4476:	93 81       	ldd	r25, Z+3	; 0x03
    4478:	20 e0       	ldi	r18, 0x00	; 0
    447a:	30 e0       	ldi	r19, 0x00	; 0
    447c:	4f e7       	ldi	r20, 0x7F	; 127
    447e:	53 e4       	ldi	r21, 0x43	; 67
    4480:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4484:	18 16       	cp	r1, r24
    4486:	0c f0       	brlt	.+2      	; 0x448a <main+0x2bce>
    4488:	7e c0       	rjmp	.+252    	; 0x4586 <main+0x2cca>
	{
		_delay_ms(__us / 1000.0);
    448a:	fe 01       	movw	r30, r28
    448c:	eb 5b       	subi	r30, 0xBB	; 187
    448e:	ff 4f       	sbci	r31, 0xFF	; 255
    4490:	60 81       	ld	r22, Z
    4492:	71 81       	ldd	r23, Z+1	; 0x01
    4494:	82 81       	ldd	r24, Z+2	; 0x02
    4496:	93 81       	ldd	r25, Z+3	; 0x03
    4498:	20 e0       	ldi	r18, 0x00	; 0
    449a:	30 e0       	ldi	r19, 0x00	; 0
    449c:	4a e7       	ldi	r20, 0x7A	; 122
    449e:	54 e4       	ldi	r21, 0x44	; 68
    44a0:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    44a4:	dc 01       	movw	r26, r24
    44a6:	cb 01       	movw	r24, r22
    44a8:	8c af       	std	Y+60, r24	; 0x3c
    44aa:	9d af       	std	Y+61, r25	; 0x3d
    44ac:	ae af       	std	Y+62, r26	; 0x3e
    44ae:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    44b0:	6c ad       	ldd	r22, Y+60	; 0x3c
    44b2:	7d ad       	ldd	r23, Y+61	; 0x3d
    44b4:	8e ad       	ldd	r24, Y+62	; 0x3e
    44b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    44b8:	20 e0       	ldi	r18, 0x00	; 0
    44ba:	30 e8       	ldi	r19, 0x80	; 128
    44bc:	4b e3       	ldi	r20, 0x3B	; 59
    44be:	55 e4       	ldi	r21, 0x45	; 69
    44c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44c4:	dc 01       	movw	r26, r24
    44c6:	cb 01       	movw	r24, r22
    44c8:	88 af       	std	Y+56, r24	; 0x38
    44ca:	99 af       	std	Y+57, r25	; 0x39
    44cc:	aa af       	std	Y+58, r26	; 0x3a
    44ce:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    44d0:	68 ad       	ldd	r22, Y+56	; 0x38
    44d2:	79 ad       	ldd	r23, Y+57	; 0x39
    44d4:	8a ad       	ldd	r24, Y+58	; 0x3a
    44d6:	9b ad       	ldd	r25, Y+59	; 0x3b
    44d8:	20 e0       	ldi	r18, 0x00	; 0
    44da:	30 e0       	ldi	r19, 0x00	; 0
    44dc:	40 e8       	ldi	r20, 0x80	; 128
    44de:	5f e3       	ldi	r21, 0x3F	; 63
    44e0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    44e4:	88 23       	and	r24, r24
    44e6:	2c f4       	brge	.+10     	; 0x44f2 <main+0x2c36>
		__ticks = 1;
    44e8:	81 e0       	ldi	r24, 0x01	; 1
    44ea:	90 e0       	ldi	r25, 0x00	; 0
    44ec:	9f ab       	std	Y+55, r25	; 0x37
    44ee:	8e ab       	std	Y+54, r24	; 0x36
    44f0:	3f c0       	rjmp	.+126    	; 0x4570 <main+0x2cb4>
	else if (__tmp > 65535)
    44f2:	68 ad       	ldd	r22, Y+56	; 0x38
    44f4:	79 ad       	ldd	r23, Y+57	; 0x39
    44f6:	8a ad       	ldd	r24, Y+58	; 0x3a
    44f8:	9b ad       	ldd	r25, Y+59	; 0x3b
    44fa:	20 e0       	ldi	r18, 0x00	; 0
    44fc:	3f ef       	ldi	r19, 0xFF	; 255
    44fe:	4f e7       	ldi	r20, 0x7F	; 127
    4500:	57 e4       	ldi	r21, 0x47	; 71
    4502:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4506:	18 16       	cp	r1, r24
    4508:	4c f5       	brge	.+82     	; 0x455c <main+0x2ca0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    450a:	6c ad       	ldd	r22, Y+60	; 0x3c
    450c:	7d ad       	ldd	r23, Y+61	; 0x3d
    450e:	8e ad       	ldd	r24, Y+62	; 0x3e
    4510:	9f ad       	ldd	r25, Y+63	; 0x3f
    4512:	20 e0       	ldi	r18, 0x00	; 0
    4514:	30 e0       	ldi	r19, 0x00	; 0
    4516:	40 e2       	ldi	r20, 0x20	; 32
    4518:	51 e4       	ldi	r21, 0x41	; 65
    451a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    451e:	dc 01       	movw	r26, r24
    4520:	cb 01       	movw	r24, r22
    4522:	bc 01       	movw	r22, r24
    4524:	cd 01       	movw	r24, r26
    4526:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    452a:	dc 01       	movw	r26, r24
    452c:	cb 01       	movw	r24, r22
    452e:	9f ab       	std	Y+55, r25	; 0x37
    4530:	8e ab       	std	Y+54, r24	; 0x36
    4532:	0f c0       	rjmp	.+30     	; 0x4552 <main+0x2c96>
    4534:	8c e2       	ldi	r24, 0x2C	; 44
    4536:	91 e0       	ldi	r25, 0x01	; 1
    4538:	9d ab       	std	Y+53, r25	; 0x35
    453a:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    453c:	8c a9       	ldd	r24, Y+52	; 0x34
    453e:	9d a9       	ldd	r25, Y+53	; 0x35
    4540:	01 97       	sbiw	r24, 0x01	; 1
    4542:	f1 f7       	brne	.-4      	; 0x4540 <main+0x2c84>
    4544:	9d ab       	std	Y+53, r25	; 0x35
    4546:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4548:	8e a9       	ldd	r24, Y+54	; 0x36
    454a:	9f a9       	ldd	r25, Y+55	; 0x37
    454c:	01 97       	sbiw	r24, 0x01	; 1
    454e:	9f ab       	std	Y+55, r25	; 0x37
    4550:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4552:	8e a9       	ldd	r24, Y+54	; 0x36
    4554:	9f a9       	ldd	r25, Y+55	; 0x37
    4556:	00 97       	sbiw	r24, 0x00	; 0
    4558:	69 f7       	brne	.-38     	; 0x4534 <main+0x2c78>
    455a:	2d c0       	rjmp	.+90     	; 0x45b6 <main+0x2cfa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    455c:	68 ad       	ldd	r22, Y+56	; 0x38
    455e:	79 ad       	ldd	r23, Y+57	; 0x39
    4560:	8a ad       	ldd	r24, Y+58	; 0x3a
    4562:	9b ad       	ldd	r25, Y+59	; 0x3b
    4564:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4568:	dc 01       	movw	r26, r24
    456a:	cb 01       	movw	r24, r22
    456c:	9f ab       	std	Y+55, r25	; 0x37
    456e:	8e ab       	std	Y+54, r24	; 0x36
    4570:	8e a9       	ldd	r24, Y+54	; 0x36
    4572:	9f a9       	ldd	r25, Y+55	; 0x37
    4574:	9b ab       	std	Y+51, r25	; 0x33
    4576:	8a ab       	std	Y+50, r24	; 0x32
    4578:	8a a9       	ldd	r24, Y+50	; 0x32
    457a:	9b a9       	ldd	r25, Y+51	; 0x33
    457c:	01 97       	sbiw	r24, 0x01	; 1
    457e:	f1 f7       	brne	.-4      	; 0x457c <main+0x2cc0>
    4580:	9b ab       	std	Y+51, r25	; 0x33
    4582:	8a ab       	std	Y+50, r24	; 0x32
    4584:	18 c0       	rjmp	.+48     	; 0x45b6 <main+0x2cfa>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4586:	fe 01       	movw	r30, r28
    4588:	ef 5b       	subi	r30, 0xBF	; 191
    458a:	ff 4f       	sbci	r31, 0xFF	; 255
    458c:	60 81       	ld	r22, Z
    458e:	71 81       	ldd	r23, Z+1	; 0x01
    4590:	82 81       	ldd	r24, Z+2	; 0x02
    4592:	93 81       	ldd	r25, Z+3	; 0x03
    4594:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4598:	dc 01       	movw	r26, r24
    459a:	cb 01       	movw	r24, r22
    459c:	fe 01       	movw	r30, r28
    459e:	e0 5c       	subi	r30, 0xC0	; 192
    45a0:	ff 4f       	sbci	r31, 0xFF	; 255
    45a2:	80 83       	st	Z, r24
    45a4:	fe 01       	movw	r30, r28
    45a6:	e0 5c       	subi	r30, 0xC0	; 192
    45a8:	ff 4f       	sbci	r31, 0xFF	; 255
    45aa:	80 81       	ld	r24, Z
    45ac:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    45ae:	89 a9       	ldd	r24, Y+49	; 0x31
    45b0:	8a 95       	dec	r24
    45b2:	f1 f7       	brne	.-4      	; 0x45b0 <main+0x2cf4>
    45b4:	89 ab       	std	Y+49, r24	; 0x31
				_delay_us(19900);
				LCD_voidSetCursor(2, 1);
    45b6:	82 e0       	ldi	r24, 0x02	; 2
    45b8:	61 e0       	ldi	r22, 0x01	; 1
    45ba:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("45");
    45be:	89 e6       	ldi	r24, 0x69	; 105
    45c0:	90 e0       	ldi	r25, 0x00	; 0
    45c2:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				_delay_us(19000);
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("90");
			}

			for( i=0;i<50;i++)// angle 45
    45c6:	de 01       	movw	r26, r28
    45c8:	ad 51       	subi	r26, 0x1D	; 29
    45ca:	be 4f       	sbci	r27, 0xFE	; 254
    45cc:	fe 01       	movw	r30, r28
    45ce:	ed 51       	subi	r30, 0x1D	; 29
    45d0:	fe 4f       	sbci	r31, 0xFE	; 254
    45d2:	80 81       	ld	r24, Z
    45d4:	91 81       	ldd	r25, Z+1	; 0x01
    45d6:	01 96       	adiw	r24, 0x01	; 1
    45d8:	11 96       	adiw	r26, 0x01	; 1
    45da:	9c 93       	st	X, r25
    45dc:	8e 93       	st	-X, r24
    45de:	fe 01       	movw	r30, r28
    45e0:	ed 51       	subi	r30, 0x1D	; 29
    45e2:	fe 4f       	sbci	r31, 0xFE	; 254
    45e4:	80 81       	ld	r24, Z
    45e6:	91 81       	ldd	r25, Z+1	; 0x01
    45e8:	82 33       	cpi	r24, 0x32	; 50
    45ea:	91 05       	cpc	r25, r1
    45ec:	08 f4       	brcc	.+2      	; 0x45f0 <main+0x2d34>
    45ee:	d3 cd       	rjmp	.-1114   	; 0x4196 <main+0x28da>
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
				_delay_us(19900);
				LCD_voidSetCursor(2, 1);
				LCD_voidWriteString("45");
			}
			LCD_voidClear();
    45f0:	0e 94 40 0c 	call	0x1880	; 0x1880 <LCD_voidClear>
			LCD_voidWriteString("Angle:");
    45f4:	80 e6       	ldi	r24, 0x60	; 96
    45f6:	90 e0       	ldi	r25, 0x00	; 0
    45f8:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>

			for( i=0;i<50;i++) //zero Angle
    45fc:	fe 01       	movw	r30, r28
    45fe:	ed 51       	subi	r30, 0x1D	; 29
    4600:	fe 4f       	sbci	r31, 0xFE	; 254
    4602:	11 82       	std	Z+1, r1	; 0x01
    4604:	10 82       	st	Z, r1
    4606:	9a c1       	rjmp	.+820    	; 0x493c <main+0x3080>
			{
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    4608:	82 e0       	ldi	r24, 0x02	; 2
    460a:	62 e0       	ldi	r22, 0x02	; 2
    460c:	41 e0       	ldi	r20, 0x01	; 1
    460e:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    4612:	80 e0       	ldi	r24, 0x00	; 0
    4614:	90 e0       	ldi	r25, 0x00	; 0
    4616:	a0 e7       	ldi	r26, 0x70	; 112
    4618:	b2 e4       	ldi	r27, 0x42	; 66
    461a:	8d a7       	std	Y+45, r24	; 0x2d
    461c:	9e a7       	std	Y+46, r25	; 0x2e
    461e:	af a7       	std	Y+47, r26	; 0x2f
    4620:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    4622:	6d a5       	ldd	r22, Y+45	; 0x2d
    4624:	7e a5       	ldd	r23, Y+46	; 0x2e
    4626:	8f a5       	ldd	r24, Y+47	; 0x2f
    4628:	98 a9       	ldd	r25, Y+48	; 0x30
    462a:	20 e0       	ldi	r18, 0x00	; 0
    462c:	30 e0       	ldi	r19, 0x00	; 0
    462e:	40 e8       	ldi	r20, 0x80	; 128
    4630:	50 e4       	ldi	r21, 0x40	; 64
    4632:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4636:	dc 01       	movw	r26, r24
    4638:	cb 01       	movw	r24, r22
    463a:	89 a7       	std	Y+41, r24	; 0x29
    463c:	9a a7       	std	Y+42, r25	; 0x2a
    463e:	ab a7       	std	Y+43, r26	; 0x2b
    4640:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    4642:	69 a5       	ldd	r22, Y+41	; 0x29
    4644:	7a a5       	ldd	r23, Y+42	; 0x2a
    4646:	8b a5       	ldd	r24, Y+43	; 0x2b
    4648:	9c a5       	ldd	r25, Y+44	; 0x2c
    464a:	20 e0       	ldi	r18, 0x00	; 0
    464c:	30 e0       	ldi	r19, 0x00	; 0
    464e:	40 e8       	ldi	r20, 0x80	; 128
    4650:	5f e3       	ldi	r21, 0x3F	; 63
    4652:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4656:	88 23       	and	r24, r24
    4658:	1c f4       	brge	.+6      	; 0x4660 <main+0x2da4>
		__ticks = 1;
    465a:	81 e0       	ldi	r24, 0x01	; 1
    465c:	88 a7       	std	Y+40, r24	; 0x28
    465e:	91 c0       	rjmp	.+290    	; 0x4782 <main+0x2ec6>
	else if (__tmp > 255)
    4660:	69 a5       	ldd	r22, Y+41	; 0x29
    4662:	7a a5       	ldd	r23, Y+42	; 0x2a
    4664:	8b a5       	ldd	r24, Y+43	; 0x2b
    4666:	9c a5       	ldd	r25, Y+44	; 0x2c
    4668:	20 e0       	ldi	r18, 0x00	; 0
    466a:	30 e0       	ldi	r19, 0x00	; 0
    466c:	4f e7       	ldi	r20, 0x7F	; 127
    466e:	53 e4       	ldi	r21, 0x43	; 67
    4670:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4674:	18 16       	cp	r1, r24
    4676:	0c f0       	brlt	.+2      	; 0x467a <main+0x2dbe>
    4678:	7b c0       	rjmp	.+246    	; 0x4770 <main+0x2eb4>
	{
		_delay_ms(__us / 1000.0);
    467a:	6d a5       	ldd	r22, Y+45	; 0x2d
    467c:	7e a5       	ldd	r23, Y+46	; 0x2e
    467e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4680:	98 a9       	ldd	r25, Y+48	; 0x30
    4682:	20 e0       	ldi	r18, 0x00	; 0
    4684:	30 e0       	ldi	r19, 0x00	; 0
    4686:	4a e7       	ldi	r20, 0x7A	; 122
    4688:	54 e4       	ldi	r21, 0x44	; 68
    468a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    468e:	dc 01       	movw	r26, r24
    4690:	cb 01       	movw	r24, r22
    4692:	8c a3       	std	Y+36, r24	; 0x24
    4694:	9d a3       	std	Y+37, r25	; 0x25
    4696:	ae a3       	std	Y+38, r26	; 0x26
    4698:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    469a:	6c a1       	ldd	r22, Y+36	; 0x24
    469c:	7d a1       	ldd	r23, Y+37	; 0x25
    469e:	8e a1       	ldd	r24, Y+38	; 0x26
    46a0:	9f a1       	ldd	r25, Y+39	; 0x27
    46a2:	20 e0       	ldi	r18, 0x00	; 0
    46a4:	30 e8       	ldi	r19, 0x80	; 128
    46a6:	4b e3       	ldi	r20, 0x3B	; 59
    46a8:	55 e4       	ldi	r21, 0x45	; 69
    46aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46ae:	dc 01       	movw	r26, r24
    46b0:	cb 01       	movw	r24, r22
    46b2:	88 a3       	std	Y+32, r24	; 0x20
    46b4:	99 a3       	std	Y+33, r25	; 0x21
    46b6:	aa a3       	std	Y+34, r26	; 0x22
    46b8:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    46ba:	68 a1       	ldd	r22, Y+32	; 0x20
    46bc:	79 a1       	ldd	r23, Y+33	; 0x21
    46be:	8a a1       	ldd	r24, Y+34	; 0x22
    46c0:	9b a1       	ldd	r25, Y+35	; 0x23
    46c2:	20 e0       	ldi	r18, 0x00	; 0
    46c4:	30 e0       	ldi	r19, 0x00	; 0
    46c6:	40 e8       	ldi	r20, 0x80	; 128
    46c8:	5f e3       	ldi	r21, 0x3F	; 63
    46ca:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    46ce:	88 23       	and	r24, r24
    46d0:	2c f4       	brge	.+10     	; 0x46dc <main+0x2e20>
		__ticks = 1;
    46d2:	81 e0       	ldi	r24, 0x01	; 1
    46d4:	90 e0       	ldi	r25, 0x00	; 0
    46d6:	9f 8f       	std	Y+31, r25	; 0x1f
    46d8:	8e 8f       	std	Y+30, r24	; 0x1e
    46da:	3f c0       	rjmp	.+126    	; 0x475a <main+0x2e9e>
	else if (__tmp > 65535)
    46dc:	68 a1       	ldd	r22, Y+32	; 0x20
    46de:	79 a1       	ldd	r23, Y+33	; 0x21
    46e0:	8a a1       	ldd	r24, Y+34	; 0x22
    46e2:	9b a1       	ldd	r25, Y+35	; 0x23
    46e4:	20 e0       	ldi	r18, 0x00	; 0
    46e6:	3f ef       	ldi	r19, 0xFF	; 255
    46e8:	4f e7       	ldi	r20, 0x7F	; 127
    46ea:	57 e4       	ldi	r21, 0x47	; 71
    46ec:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    46f0:	18 16       	cp	r1, r24
    46f2:	4c f5       	brge	.+82     	; 0x4746 <main+0x2e8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46f4:	6c a1       	ldd	r22, Y+36	; 0x24
    46f6:	7d a1       	ldd	r23, Y+37	; 0x25
    46f8:	8e a1       	ldd	r24, Y+38	; 0x26
    46fa:	9f a1       	ldd	r25, Y+39	; 0x27
    46fc:	20 e0       	ldi	r18, 0x00	; 0
    46fe:	30 e0       	ldi	r19, 0x00	; 0
    4700:	40 e2       	ldi	r20, 0x20	; 32
    4702:	51 e4       	ldi	r21, 0x41	; 65
    4704:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4708:	dc 01       	movw	r26, r24
    470a:	cb 01       	movw	r24, r22
    470c:	bc 01       	movw	r22, r24
    470e:	cd 01       	movw	r24, r26
    4710:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4714:	dc 01       	movw	r26, r24
    4716:	cb 01       	movw	r24, r22
    4718:	9f 8f       	std	Y+31, r25	; 0x1f
    471a:	8e 8f       	std	Y+30, r24	; 0x1e
    471c:	0f c0       	rjmp	.+30     	; 0x473c <main+0x2e80>
    471e:	8c e2       	ldi	r24, 0x2C	; 44
    4720:	91 e0       	ldi	r25, 0x01	; 1
    4722:	9d 8f       	std	Y+29, r25	; 0x1d
    4724:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    4726:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4728:	9d 8d       	ldd	r25, Y+29	; 0x1d
    472a:	01 97       	sbiw	r24, 0x01	; 1
    472c:	f1 f7       	brne	.-4      	; 0x472a <main+0x2e6e>
    472e:	9d 8f       	std	Y+29, r25	; 0x1d
    4730:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4732:	8e 8d       	ldd	r24, Y+30	; 0x1e
    4734:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4736:	01 97       	sbiw	r24, 0x01	; 1
    4738:	9f 8f       	std	Y+31, r25	; 0x1f
    473a:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    473c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    473e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4740:	00 97       	sbiw	r24, 0x00	; 0
    4742:	69 f7       	brne	.-38     	; 0x471e <main+0x2e62>
    4744:	24 c0       	rjmp	.+72     	; 0x478e <main+0x2ed2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4746:	68 a1       	ldd	r22, Y+32	; 0x20
    4748:	79 a1       	ldd	r23, Y+33	; 0x21
    474a:	8a a1       	ldd	r24, Y+34	; 0x22
    474c:	9b a1       	ldd	r25, Y+35	; 0x23
    474e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4752:	dc 01       	movw	r26, r24
    4754:	cb 01       	movw	r24, r22
    4756:	9f 8f       	std	Y+31, r25	; 0x1f
    4758:	8e 8f       	std	Y+30, r24	; 0x1e
    475a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    475c:	9f 8d       	ldd	r25, Y+31	; 0x1f
    475e:	9b 8f       	std	Y+27, r25	; 0x1b
    4760:	8a 8f       	std	Y+26, r24	; 0x1a
    4762:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4764:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4766:	01 97       	sbiw	r24, 0x01	; 1
    4768:	f1 f7       	brne	.-4      	; 0x4766 <main+0x2eaa>
    476a:	9b 8f       	std	Y+27, r25	; 0x1b
    476c:	8a 8f       	std	Y+26, r24	; 0x1a
    476e:	0f c0       	rjmp	.+30     	; 0x478e <main+0x2ed2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    4770:	69 a5       	ldd	r22, Y+41	; 0x29
    4772:	7a a5       	ldd	r23, Y+42	; 0x2a
    4774:	8b a5       	ldd	r24, Y+43	; 0x2b
    4776:	9c a5       	ldd	r25, Y+44	; 0x2c
    4778:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    477c:	dc 01       	movw	r26, r24
    477e:	cb 01       	movw	r24, r22
    4780:	88 a7       	std	Y+40, r24	; 0x28
    4782:	88 a5       	ldd	r24, Y+40	; 0x28
    4784:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4786:	89 8d       	ldd	r24, Y+25	; 0x19
    4788:	8a 95       	dec	r24
    478a:	f1 f7       	brne	.-4      	; 0x4788 <main+0x2ecc>
    478c:	89 8f       	std	Y+25, r24	; 0x19
				_delay_us(60);
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    478e:	82 e0       	ldi	r24, 0x02	; 2
    4790:	62 e0       	ldi	r22, 0x02	; 2
    4792:	40 e0       	ldi	r20, 0x00	; 0
    4794:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    4798:	80 e0       	ldi	r24, 0x00	; 0
    479a:	98 ec       	ldi	r25, 0xC8	; 200
    479c:	ab e9       	ldi	r26, 0x9B	; 155
    479e:	b6 e4       	ldi	r27, 0x46	; 70
    47a0:	8d 8b       	std	Y+21, r24	; 0x15
    47a2:	9e 8b       	std	Y+22, r25	; 0x16
    47a4:	af 8b       	std	Y+23, r26	; 0x17
    47a6:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    47a8:	6d 89       	ldd	r22, Y+21	; 0x15
    47aa:	7e 89       	ldd	r23, Y+22	; 0x16
    47ac:	8f 89       	ldd	r24, Y+23	; 0x17
    47ae:	98 8d       	ldd	r25, Y+24	; 0x18
    47b0:	20 e0       	ldi	r18, 0x00	; 0
    47b2:	30 e0       	ldi	r19, 0x00	; 0
    47b4:	40 e8       	ldi	r20, 0x80	; 128
    47b6:	50 e4       	ldi	r21, 0x40	; 64
    47b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47bc:	dc 01       	movw	r26, r24
    47be:	cb 01       	movw	r24, r22
    47c0:	89 8b       	std	Y+17, r24	; 0x11
    47c2:	9a 8b       	std	Y+18, r25	; 0x12
    47c4:	ab 8b       	std	Y+19, r26	; 0x13
    47c6:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    47c8:	69 89       	ldd	r22, Y+17	; 0x11
    47ca:	7a 89       	ldd	r23, Y+18	; 0x12
    47cc:	8b 89       	ldd	r24, Y+19	; 0x13
    47ce:	9c 89       	ldd	r25, Y+20	; 0x14
    47d0:	20 e0       	ldi	r18, 0x00	; 0
    47d2:	30 e0       	ldi	r19, 0x00	; 0
    47d4:	40 e8       	ldi	r20, 0x80	; 128
    47d6:	5f e3       	ldi	r21, 0x3F	; 63
    47d8:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    47dc:	88 23       	and	r24, r24
    47de:	1c f4       	brge	.+6      	; 0x47e6 <main+0x2f2a>
		__ticks = 1;
    47e0:	81 e0       	ldi	r24, 0x01	; 1
    47e2:	88 8b       	std	Y+16, r24	; 0x10
    47e4:	91 c0       	rjmp	.+290    	; 0x4908 <main+0x304c>
	else if (__tmp > 255)
    47e6:	69 89       	ldd	r22, Y+17	; 0x11
    47e8:	7a 89       	ldd	r23, Y+18	; 0x12
    47ea:	8b 89       	ldd	r24, Y+19	; 0x13
    47ec:	9c 89       	ldd	r25, Y+20	; 0x14
    47ee:	20 e0       	ldi	r18, 0x00	; 0
    47f0:	30 e0       	ldi	r19, 0x00	; 0
    47f2:	4f e7       	ldi	r20, 0x7F	; 127
    47f4:	53 e4       	ldi	r21, 0x43	; 67
    47f6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    47fa:	18 16       	cp	r1, r24
    47fc:	0c f0       	brlt	.+2      	; 0x4800 <main+0x2f44>
    47fe:	7b c0       	rjmp	.+246    	; 0x48f6 <main+0x303a>
	{
		_delay_ms(__us / 1000.0);
    4800:	6d 89       	ldd	r22, Y+21	; 0x15
    4802:	7e 89       	ldd	r23, Y+22	; 0x16
    4804:	8f 89       	ldd	r24, Y+23	; 0x17
    4806:	98 8d       	ldd	r25, Y+24	; 0x18
    4808:	20 e0       	ldi	r18, 0x00	; 0
    480a:	30 e0       	ldi	r19, 0x00	; 0
    480c:	4a e7       	ldi	r20, 0x7A	; 122
    480e:	54 e4       	ldi	r21, 0x44	; 68
    4810:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    4814:	dc 01       	movw	r26, r24
    4816:	cb 01       	movw	r24, r22
    4818:	8c 87       	std	Y+12, r24	; 0x0c
    481a:	9d 87       	std	Y+13, r25	; 0x0d
    481c:	ae 87       	std	Y+14, r26	; 0x0e
    481e:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4820:	6c 85       	ldd	r22, Y+12	; 0x0c
    4822:	7d 85       	ldd	r23, Y+13	; 0x0d
    4824:	8e 85       	ldd	r24, Y+14	; 0x0e
    4826:	9f 85       	ldd	r25, Y+15	; 0x0f
    4828:	20 e0       	ldi	r18, 0x00	; 0
    482a:	30 e8       	ldi	r19, 0x80	; 128
    482c:	4b e3       	ldi	r20, 0x3B	; 59
    482e:	55 e4       	ldi	r21, 0x45	; 69
    4830:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4834:	dc 01       	movw	r26, r24
    4836:	cb 01       	movw	r24, r22
    4838:	88 87       	std	Y+8, r24	; 0x08
    483a:	99 87       	std	Y+9, r25	; 0x09
    483c:	aa 87       	std	Y+10, r26	; 0x0a
    483e:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    4840:	68 85       	ldd	r22, Y+8	; 0x08
    4842:	79 85       	ldd	r23, Y+9	; 0x09
    4844:	8a 85       	ldd	r24, Y+10	; 0x0a
    4846:	9b 85       	ldd	r25, Y+11	; 0x0b
    4848:	20 e0       	ldi	r18, 0x00	; 0
    484a:	30 e0       	ldi	r19, 0x00	; 0
    484c:	40 e8       	ldi	r20, 0x80	; 128
    484e:	5f e3       	ldi	r21, 0x3F	; 63
    4850:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    4854:	88 23       	and	r24, r24
    4856:	2c f4       	brge	.+10     	; 0x4862 <main+0x2fa6>
		__ticks = 1;
    4858:	81 e0       	ldi	r24, 0x01	; 1
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	9f 83       	std	Y+7, r25	; 0x07
    485e:	8e 83       	std	Y+6, r24	; 0x06
    4860:	3f c0       	rjmp	.+126    	; 0x48e0 <main+0x3024>
	else if (__tmp > 65535)
    4862:	68 85       	ldd	r22, Y+8	; 0x08
    4864:	79 85       	ldd	r23, Y+9	; 0x09
    4866:	8a 85       	ldd	r24, Y+10	; 0x0a
    4868:	9b 85       	ldd	r25, Y+11	; 0x0b
    486a:	20 e0       	ldi	r18, 0x00	; 0
    486c:	3f ef       	ldi	r19, 0xFF	; 255
    486e:	4f e7       	ldi	r20, 0x7F	; 127
    4870:	57 e4       	ldi	r21, 0x47	; 71
    4872:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    4876:	18 16       	cp	r1, r24
    4878:	4c f5       	brge	.+82     	; 0x48cc <main+0x3010>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    487a:	6c 85       	ldd	r22, Y+12	; 0x0c
    487c:	7d 85       	ldd	r23, Y+13	; 0x0d
    487e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4880:	9f 85       	ldd	r25, Y+15	; 0x0f
    4882:	20 e0       	ldi	r18, 0x00	; 0
    4884:	30 e0       	ldi	r19, 0x00	; 0
    4886:	40 e2       	ldi	r20, 0x20	; 32
    4888:	51 e4       	ldi	r21, 0x41	; 65
    488a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    488e:	dc 01       	movw	r26, r24
    4890:	cb 01       	movw	r24, r22
    4892:	bc 01       	movw	r22, r24
    4894:	cd 01       	movw	r24, r26
    4896:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    489a:	dc 01       	movw	r26, r24
    489c:	cb 01       	movw	r24, r22
    489e:	9f 83       	std	Y+7, r25	; 0x07
    48a0:	8e 83       	std	Y+6, r24	; 0x06
    48a2:	0f c0       	rjmp	.+30     	; 0x48c2 <main+0x3006>
    48a4:	8c e2       	ldi	r24, 0x2C	; 44
    48a6:	91 e0       	ldi	r25, 0x01	; 1
    48a8:	9d 83       	std	Y+5, r25	; 0x05
    48aa:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    48ac:	8c 81       	ldd	r24, Y+4	; 0x04
    48ae:	9d 81       	ldd	r25, Y+5	; 0x05
    48b0:	01 97       	sbiw	r24, 0x01	; 1
    48b2:	f1 f7       	brne	.-4      	; 0x48b0 <main+0x2ff4>
    48b4:	9d 83       	std	Y+5, r25	; 0x05
    48b6:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48b8:	8e 81       	ldd	r24, Y+6	; 0x06
    48ba:	9f 81       	ldd	r25, Y+7	; 0x07
    48bc:	01 97       	sbiw	r24, 0x01	; 1
    48be:	9f 83       	std	Y+7, r25	; 0x07
    48c0:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48c2:	8e 81       	ldd	r24, Y+6	; 0x06
    48c4:	9f 81       	ldd	r25, Y+7	; 0x07
    48c6:	00 97       	sbiw	r24, 0x00	; 0
    48c8:	69 f7       	brne	.-38     	; 0x48a4 <main+0x2fe8>
    48ca:	24 c0       	rjmp	.+72     	; 0x4914 <main+0x3058>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48cc:	68 85       	ldd	r22, Y+8	; 0x08
    48ce:	79 85       	ldd	r23, Y+9	; 0x09
    48d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    48d2:	9b 85       	ldd	r25, Y+11	; 0x0b
    48d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48d8:	dc 01       	movw	r26, r24
    48da:	cb 01       	movw	r24, r22
    48dc:	9f 83       	std	Y+7, r25	; 0x07
    48de:	8e 83       	std	Y+6, r24	; 0x06
    48e0:	8e 81       	ldd	r24, Y+6	; 0x06
    48e2:	9f 81       	ldd	r25, Y+7	; 0x07
    48e4:	9b 83       	std	Y+3, r25	; 0x03
    48e6:	8a 83       	std	Y+2, r24	; 0x02
    48e8:	8a 81       	ldd	r24, Y+2	; 0x02
    48ea:	9b 81       	ldd	r25, Y+3	; 0x03
    48ec:	01 97       	sbiw	r24, 0x01	; 1
    48ee:	f1 f7       	brne	.-4      	; 0x48ec <main+0x3030>
    48f0:	9b 83       	std	Y+3, r25	; 0x03
    48f2:	8a 83       	std	Y+2, r24	; 0x02
    48f4:	0f c0       	rjmp	.+30     	; 0x4914 <main+0x3058>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    48f6:	69 89       	ldd	r22, Y+17	; 0x11
    48f8:	7a 89       	ldd	r23, Y+18	; 0x12
    48fa:	8b 89       	ldd	r24, Y+19	; 0x13
    48fc:	9c 89       	ldd	r25, Y+20	; 0x14
    48fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4902:	dc 01       	movw	r26, r24
    4904:	cb 01       	movw	r24, r22
    4906:	88 8b       	std	Y+16, r24	; 0x10
    4908:	88 89       	ldd	r24, Y+16	; 0x10
    490a:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    490c:	89 81       	ldd	r24, Y+1	; 0x01
    490e:	8a 95       	dec	r24
    4910:	f1 f7       	brne	.-4      	; 0x490e <main+0x3052>
    4912:	89 83       	std	Y+1, r24	; 0x01
				_delay_us(19940);
				LCD_voidSetCursor(2, 1);
    4914:	82 e0       	ldi	r24, 0x02	; 2
    4916:	61 e0       	ldi	r22, 0x01	; 1
    4918:	0e 94 25 0c 	call	0x184a	; 0x184a <LCD_voidSetCursor>
				LCD_voidWriteString("0");
    491c:	87 e6       	ldi	r24, 0x67	; 103
    491e:	90 e0       	ldi	r25, 0x00	; 0
    4920:	0e 94 09 0c 	call	0x1812	; 0x1812 <LCD_voidWriteString>
				LCD_voidWriteString("45");
			}
			LCD_voidClear();
			LCD_voidWriteString("Angle:");

			for( i=0;i<50;i++) //zero Angle
    4924:	de 01       	movw	r26, r28
    4926:	ad 51       	subi	r26, 0x1D	; 29
    4928:	be 4f       	sbci	r27, 0xFE	; 254
    492a:	fe 01       	movw	r30, r28
    492c:	ed 51       	subi	r30, 0x1D	; 29
    492e:	fe 4f       	sbci	r31, 0xFE	; 254
    4930:	80 81       	ld	r24, Z
    4932:	91 81       	ldd	r25, Z+1	; 0x01
    4934:	01 96       	adiw	r24, 0x01	; 1
    4936:	11 96       	adiw	r26, 0x01	; 1
    4938:	9c 93       	st	X, r25
    493a:	8e 93       	st	-X, r24
    493c:	fe 01       	movw	r30, r28
    493e:	ed 51       	subi	r30, 0x1D	; 29
    4940:	fe 4f       	sbci	r31, 0xFE	; 254
    4942:	80 81       	ld	r24, Z
    4944:	91 81       	ldd	r25, Z+1	; 0x01
    4946:	82 33       	cpi	r24, 0x32	; 50
    4948:	91 05       	cpc	r25, r1
    494a:	08 f4       	brcc	.+2      	; 0x494e <main+0x3092>
    494c:	5d ce       	rjmp	.-838    	; 0x4608 <main+0x2d4c>
    494e:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <main+0x62>

			}
}
else
{
	DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    4952:	82 e0       	ldi	r24, 0x02	; 2
    4954:	62 e0       	ldi	r22, 0x02	; 2
    4956:	40 e0       	ldi	r20, 0x00	; 0
    4958:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_voidSetPinValue>
    495c:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <main+0x62>

00004960 <__prologue_saves__>:
    4960:	2f 92       	push	r2
    4962:	3f 92       	push	r3
    4964:	4f 92       	push	r4
    4966:	5f 92       	push	r5
    4968:	6f 92       	push	r6
    496a:	7f 92       	push	r7
    496c:	8f 92       	push	r8
    496e:	9f 92       	push	r9
    4970:	af 92       	push	r10
    4972:	bf 92       	push	r11
    4974:	cf 92       	push	r12
    4976:	df 92       	push	r13
    4978:	ef 92       	push	r14
    497a:	ff 92       	push	r15
    497c:	0f 93       	push	r16
    497e:	1f 93       	push	r17
    4980:	cf 93       	push	r28
    4982:	df 93       	push	r29
    4984:	cd b7       	in	r28, 0x3d	; 61
    4986:	de b7       	in	r29, 0x3e	; 62
    4988:	ca 1b       	sub	r28, r26
    498a:	db 0b       	sbc	r29, r27
    498c:	0f b6       	in	r0, 0x3f	; 63
    498e:	f8 94       	cli
    4990:	de bf       	out	0x3e, r29	; 62
    4992:	0f be       	out	0x3f, r0	; 63
    4994:	cd bf       	out	0x3d, r28	; 61
    4996:	09 94       	ijmp

00004998 <__epilogue_restores__>:
    4998:	2a 88       	ldd	r2, Y+18	; 0x12
    499a:	39 88       	ldd	r3, Y+17	; 0x11
    499c:	48 88       	ldd	r4, Y+16	; 0x10
    499e:	5f 84       	ldd	r5, Y+15	; 0x0f
    49a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    49a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    49a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    49a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    49a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    49aa:	b9 84       	ldd	r11, Y+9	; 0x09
    49ac:	c8 84       	ldd	r12, Y+8	; 0x08
    49ae:	df 80       	ldd	r13, Y+7	; 0x07
    49b0:	ee 80       	ldd	r14, Y+6	; 0x06
    49b2:	fd 80       	ldd	r15, Y+5	; 0x05
    49b4:	0c 81       	ldd	r16, Y+4	; 0x04
    49b6:	1b 81       	ldd	r17, Y+3	; 0x03
    49b8:	aa 81       	ldd	r26, Y+2	; 0x02
    49ba:	b9 81       	ldd	r27, Y+1	; 0x01
    49bc:	ce 0f       	add	r28, r30
    49be:	d1 1d       	adc	r29, r1
    49c0:	0f b6       	in	r0, 0x3f	; 63
    49c2:	f8 94       	cli
    49c4:	de bf       	out	0x3e, r29	; 62
    49c6:	0f be       	out	0x3f, r0	; 63
    49c8:	cd bf       	out	0x3d, r28	; 61
    49ca:	ed 01       	movw	r28, r26
    49cc:	08 95       	ret

000049ce <_exit>:
    49ce:	f8 94       	cli

000049d0 <__stop_program>:
    49d0:	ff cf       	rjmp	.-2      	; 0x49d0 <__stop_program>
