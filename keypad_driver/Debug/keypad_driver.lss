
keypad_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ade  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000ade  00000b52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000cb4  00000000  00000000  00000b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000964  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ed       	ldi	r30, 0xDE	; 222
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 26 05 	call	0xa4c	; 0xa4c <main>
  7a:	0c 94 6d 05 	jmp	0xada	; 0xada <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_voidSetPinDir>:




void DIO_voidSetPinDir(u8 Port,u8 Pin,u8 Dir)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <DIO_voidSetPinDir+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <DIO_voidSetPinDir+0x8>
  8a:	0f 92       	push	r0
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03

switch(Port)
  96:	89 81       	ldd	r24, Y+1	; 0x01
  98:	28 2f       	mov	r18, r24
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	3d 83       	std	Y+5, r19	; 0x05
  9e:	2c 83       	std	Y+4, r18	; 0x04
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	09 f4       	brne	.+2      	; 0xac <DIO_voidSetPinDir+0x2a>
  aa:	43 c0       	rjmp	.+134    	; 0x132 <DIO_voidSetPinDir+0xb0>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	2c f4       	brge	.+10     	; 0xc0 <DIO_voidSetPinDir+0x3e>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	71 f0       	breq	.+28     	; 0xda <DIO_voidSetPinDir+0x58>
  be:	bc c0       	rjmp	.+376    	; 0x238 <DIO_voidSetPinDir+0x1b6>
  c0:	2c 81       	ldd	r18, Y+4	; 0x04
  c2:	3d 81       	ldd	r19, Y+5	; 0x05
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	09 f4       	brne	.+2      	; 0xcc <DIO_voidSetPinDir+0x4a>
  ca:	5f c0       	rjmp	.+190    	; 0x18a <DIO_voidSetPinDir+0x108>
  cc:	8c 81       	ldd	r24, Y+4	; 0x04
  ce:	9d 81       	ldd	r25, Y+5	; 0x05
  d0:	83 30       	cpi	r24, 0x03	; 3
  d2:	91 05       	cpc	r25, r1
  d4:	09 f4       	brne	.+2      	; 0xd8 <DIO_voidSetPinDir+0x56>
  d6:	85 c0       	rjmp	.+266    	; 0x1e2 <DIO_voidSetPinDir+0x160>
  d8:	af c0       	rjmp	.+350    	; 0x238 <DIO_voidSetPinDir+0x1b6>
{
	case 0:
		if(Dir==0)
  da:	8b 81       	ldd	r24, Y+3	; 0x03
  dc:	88 23       	and	r24, r24
  de:	a9 f4       	brne	.+42     	; 0x10a <DIO_voidSetPinDir+0x88>
		{
			CLEAR_BIT(DDRA,Pin);
  e0:	aa e3       	ldi	r26, 0x3A	; 58
  e2:	b0 e0       	ldi	r27, 0x00	; 0
  e4:	ea e3       	ldi	r30, 0x3A	; 58
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	48 2f       	mov	r20, r24
  ec:	8a 81       	ldd	r24, Y+2	; 0x02
  ee:	28 2f       	mov	r18, r24
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	02 2e       	mov	r0, r18
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_voidSetPinDir+0x7c>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_voidSetPinDir+0x78>
 102:	80 95       	com	r24
 104:	84 23       	and	r24, r20
 106:	8c 93       	st	X, r24
 108:	97 c0       	rjmp	.+302    	; 0x238 <DIO_voidSetPinDir+0x1b6>

		}
		else
		{
			SET_BIT(DDRA,Pin);
 10a:	aa e3       	ldi	r26, 0x3A	; 58
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	ea e3       	ldi	r30, 0x3A	; 58
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	48 2f       	mov	r20, r24
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	28 2f       	mov	r18, r24
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 2e       	mov	r0, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_voidSetPinDir+0xa6>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	0a 94       	dec	r0
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_voidSetPinDir+0xa2>
 12c:	84 2b       	or	r24, r20
 12e:	8c 93       	st	X, r24
 130:	83 c0       	rjmp	.+262    	; 0x238 <DIO_voidSetPinDir+0x1b6>



		break;
	case 1:
		if(Dir==0)
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	88 23       	and	r24, r24
 136:	a9 f4       	brne	.+42     	; 0x162 <DIO_voidSetPinDir+0xe0>
				{
					CLEAR_BIT(DDRB,Pin);
 138:	a7 e3       	ldi	r26, 0x37	; 55
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	e7 e3       	ldi	r30, 0x37	; 55
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	48 2f       	mov	r20, r24
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 2e       	mov	r0, r18
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_voidSetPinDir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_voidSetPinDir+0xd0>
 15a:	80 95       	com	r24
 15c:	84 23       	and	r24, r20
 15e:	8c 93       	st	X, r24
 160:	6b c0       	rjmp	.+214    	; 0x238 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRB,Pin);
 162:	a7 e3       	ldi	r26, 0x37	; 55
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	e7 e3       	ldi	r30, 0x37	; 55
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	48 2f       	mov	r20, r24
 16e:	8a 81       	ldd	r24, Y+2	; 0x02
 170:	28 2f       	mov	r18, r24
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 2e       	mov	r0, r18
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_voidSetPinDir+0xfe>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	0a 94       	dec	r0
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_voidSetPinDir+0xfa>
 184:	84 2b       	or	r24, r20
 186:	8c 93       	st	X, r24
 188:	57 c0       	rjmp	.+174    	; 0x238 <DIO_voidSetPinDir+0x1b6>
				}


		break;
	case 2:
		if(Dir==0)
 18a:	8b 81       	ldd	r24, Y+3	; 0x03
 18c:	88 23       	and	r24, r24
 18e:	a9 f4       	brne	.+42     	; 0x1ba <DIO_voidSetPinDir+0x138>
				{
					CLEAR_BIT(DDRC,Pin);
 190:	a4 e3       	ldi	r26, 0x34	; 52
 192:	b0 e0       	ldi	r27, 0x00	; 0
 194:	e4 e3       	ldi	r30, 0x34	; 52
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	48 2f       	mov	r20, r24
 19c:	8a 81       	ldd	r24, Y+2	; 0x02
 19e:	28 2f       	mov	r18, r24
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 2e       	mov	r0, r18
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_voidSetPinDir+0x12c>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	0a 94       	dec	r0
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_voidSetPinDir+0x128>
 1b2:	80 95       	com	r24
 1b4:	84 23       	and	r24, r20
 1b6:	8c 93       	st	X, r24
 1b8:	3f c0       	rjmp	.+126    	; 0x238 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRC,Pin);
 1ba:	a4 e3       	ldi	r26, 0x34	; 52
 1bc:	b0 e0       	ldi	r27, 0x00	; 0
 1be:	e4 e3       	ldi	r30, 0x34	; 52
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	48 2f       	mov	r20, r24
 1c6:	8a 81       	ldd	r24, Y+2	; 0x02
 1c8:	28 2f       	mov	r18, r24
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	02 2e       	mov	r0, r18
 1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <DIO_voidSetPinDir+0x156>
 1d4:	88 0f       	add	r24, r24
 1d6:	99 1f       	adc	r25, r25
 1d8:	0a 94       	dec	r0
 1da:	e2 f7       	brpl	.-8      	; 0x1d4 <DIO_voidSetPinDir+0x152>
 1dc:	84 2b       	or	r24, r20
 1de:	8c 93       	st	X, r24
 1e0:	2b c0       	rjmp	.+86     	; 0x238 <DIO_voidSetPinDir+0x1b6>


		break;

	case 3:
		if(Dir==0)
 1e2:	8b 81       	ldd	r24, Y+3	; 0x03
 1e4:	88 23       	and	r24, r24
 1e6:	a9 f4       	brne	.+42     	; 0x212 <DIO_voidSetPinDir+0x190>
				{
					CLEAR_BIT(DDRD,Pin);
 1e8:	a1 e3       	ldi	r26, 0x31	; 49
 1ea:	b0 e0       	ldi	r27, 0x00	; 0
 1ec:	e1 e3       	ldi	r30, 0x31	; 49
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	48 2f       	mov	r20, r24
 1f4:	8a 81       	ldd	r24, Y+2	; 0x02
 1f6:	28 2f       	mov	r18, r24
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 2e       	mov	r0, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_voidSetPinDir+0x184>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	0a 94       	dec	r0
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_voidSetPinDir+0x180>
 20a:	80 95       	com	r24
 20c:	84 23       	and	r24, r20
 20e:	8c 93       	st	X, r24
 210:	13 c0       	rjmp	.+38     	; 0x238 <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRD,Pin);
 212:	a1 e3       	ldi	r26, 0x31	; 49
 214:	b0 e0       	ldi	r27, 0x00	; 0
 216:	e1 e3       	ldi	r30, 0x31	; 49
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	48 2f       	mov	r20, r24
 21e:	8a 81       	ldd	r24, Y+2	; 0x02
 220:	28 2f       	mov	r18, r24
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 2e       	mov	r0, r18
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_voidSetPinDir+0x1ae>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	0a 94       	dec	r0
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_voidSetPinDir+0x1aa>
 234:	84 2b       	or	r24, r20
 236:	8c 93       	st	X, r24

		break;
}


}
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	cf 91       	pop	r28
 244:	df 91       	pop	r29
 246:	08 95       	ret

00000248 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Port,u8 Pin,u8 Value)
{
 248:	df 93       	push	r29
 24a:	cf 93       	push	r28
 24c:	00 d0       	rcall	.+0      	; 0x24e <DIO_voidSetPinValue+0x6>
 24e:	00 d0       	rcall	.+0      	; 0x250 <DIO_voidSetPinValue+0x8>
 250:	0f 92       	push	r0
 252:	cd b7       	in	r28, 0x3d	; 61
 254:	de b7       	in	r29, 0x3e	; 62
 256:	89 83       	std	Y+1, r24	; 0x01
 258:	6a 83       	std	Y+2, r22	; 0x02
 25a:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
 25c:	89 81       	ldd	r24, Y+1	; 0x01
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	3d 83       	std	Y+5, r19	; 0x05
 264:	2c 83       	std	Y+4, r18	; 0x04
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	9d 81       	ldd	r25, Y+5	; 0x05
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	91 05       	cpc	r25, r1
 26e:	09 f4       	brne	.+2      	; 0x272 <DIO_voidSetPinValue+0x2a>
 270:	43 c0       	rjmp	.+134    	; 0x2f8 <DIO_voidSetPinValue+0xb0>
 272:	2c 81       	ldd	r18, Y+4	; 0x04
 274:	3d 81       	ldd	r19, Y+5	; 0x05
 276:	22 30       	cpi	r18, 0x02	; 2
 278:	31 05       	cpc	r19, r1
 27a:	2c f4       	brge	.+10     	; 0x286 <DIO_voidSetPinValue+0x3e>
 27c:	8c 81       	ldd	r24, Y+4	; 0x04
 27e:	9d 81       	ldd	r25, Y+5	; 0x05
 280:	00 97       	sbiw	r24, 0x00	; 0
 282:	71 f0       	breq	.+28     	; 0x2a0 <DIO_voidSetPinValue+0x58>
 284:	bc c0       	rjmp	.+376    	; 0x3fe <DIO_voidSetPinValue+0x1b6>
 286:	2c 81       	ldd	r18, Y+4	; 0x04
 288:	3d 81       	ldd	r19, Y+5	; 0x05
 28a:	22 30       	cpi	r18, 0x02	; 2
 28c:	31 05       	cpc	r19, r1
 28e:	09 f4       	brne	.+2      	; 0x292 <DIO_voidSetPinValue+0x4a>
 290:	5f c0       	rjmp	.+190    	; 0x350 <DIO_voidSetPinValue+0x108>
 292:	8c 81       	ldd	r24, Y+4	; 0x04
 294:	9d 81       	ldd	r25, Y+5	; 0x05
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	91 05       	cpc	r25, r1
 29a:	09 f4       	brne	.+2      	; 0x29e <DIO_voidSetPinValue+0x56>
 29c:	85 c0       	rjmp	.+266    	; 0x3a8 <DIO_voidSetPinValue+0x160>
 29e:	af c0       	rjmp	.+350    	; 0x3fe <DIO_voidSetPinValue+0x1b6>
	{
		case 0:
			if(Value==0)
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	88 23       	and	r24, r24
 2a4:	a9 f4       	brne	.+42     	; 0x2d0 <DIO_voidSetPinValue+0x88>
					{
						CLEAR_BIT(PORTA,Pin);
 2a6:	ab e3       	ldi	r26, 0x3B	; 59
 2a8:	b0 e0       	ldi	r27, 0x00	; 0
 2aa:	eb e3       	ldi	r30, 0x3B	; 59
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	48 2f       	mov	r20, r24
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 2e       	mov	r0, r18
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_voidSetPinValue+0x7c>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	0a 94       	dec	r0
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_voidSetPinValue+0x78>
 2c8:	80 95       	com	r24
 2ca:	84 23       	and	r24, r20
 2cc:	8c 93       	st	X, r24
 2ce:	97 c0       	rjmp	.+302    	; 0x3fe <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTA,Pin);
 2d0:	ab e3       	ldi	r26, 0x3B	; 59
 2d2:	b0 e0       	ldi	r27, 0x00	; 0
 2d4:	eb e3       	ldi	r30, 0x3B	; 59
 2d6:	f0 e0       	ldi	r31, 0x00	; 0
 2d8:	80 81       	ld	r24, Z
 2da:	48 2f       	mov	r20, r24
 2dc:	8a 81       	ldd	r24, Y+2	; 0x02
 2de:	28 2f       	mov	r18, r24
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 2e       	mov	r0, r18
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <DIO_voidSetPinValue+0xa6>
 2ea:	88 0f       	add	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	0a 94       	dec	r0
 2f0:	e2 f7       	brpl	.-8      	; 0x2ea <DIO_voidSetPinValue+0xa2>
 2f2:	84 2b       	or	r24, r20
 2f4:	8c 93       	st	X, r24
 2f6:	83 c0       	rjmp	.+262    	; 0x3fe <DIO_voidSetPinValue+0x1b6>
					}


			break;
		case 1:
			if(Value==0)
 2f8:	8b 81       	ldd	r24, Y+3	; 0x03
 2fa:	88 23       	and	r24, r24
 2fc:	a9 f4       	brne	.+42     	; 0x328 <DIO_voidSetPinValue+0xe0>
				{
				CLEAR_BIT(PORTB,Pin);
 2fe:	a8 e3       	ldi	r26, 0x38	; 56
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e8 e3       	ldi	r30, 0x38	; 56
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	80 81       	ld	r24, Z
 308:	48 2f       	mov	r20, r24
 30a:	8a 81       	ldd	r24, Y+2	; 0x02
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	02 2e       	mov	r0, r18
 316:	02 c0       	rjmp	.+4      	; 0x31c <DIO_voidSetPinValue+0xd4>
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	0a 94       	dec	r0
 31e:	e2 f7       	brpl	.-8      	; 0x318 <DIO_voidSetPinValue+0xd0>
 320:	80 95       	com	r24
 322:	84 23       	and	r24, r20
 324:	8c 93       	st	X, r24
 326:	6b c0       	rjmp	.+214    	; 0x3fe <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
				SET_BIT(PORTB,Pin);
 328:	a8 e3       	ldi	r26, 0x38	; 56
 32a:	b0 e0       	ldi	r27, 0x00	; 0
 32c:	e8 e3       	ldi	r30, 0x38	; 56
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	80 81       	ld	r24, Z
 332:	48 2f       	mov	r20, r24
 334:	8a 81       	ldd	r24, Y+2	; 0x02
 336:	28 2f       	mov	r18, r24
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	02 2e       	mov	r0, r18
 340:	02 c0       	rjmp	.+4      	; 0x346 <DIO_voidSetPinValue+0xfe>
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	0a 94       	dec	r0
 348:	e2 f7       	brpl	.-8      	; 0x342 <DIO_voidSetPinValue+0xfa>
 34a:	84 2b       	or	r24, r20
 34c:	8c 93       	st	X, r24
 34e:	57 c0       	rjmp	.+174    	; 0x3fe <DIO_voidSetPinValue+0x1b6>
				}

			break;
		case 2:
			if(Value==0)
 350:	8b 81       	ldd	r24, Y+3	; 0x03
 352:	88 23       	and	r24, r24
 354:	a9 f4       	brne	.+42     	; 0x380 <DIO_voidSetPinValue+0x138>
				{
				CLEAR_BIT(PORTC,Pin);
 356:	a5 e3       	ldi	r26, 0x35	; 53
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	e5 e3       	ldi	r30, 0x35	; 53
 35c:	f0 e0       	ldi	r31, 0x00	; 0
 35e:	80 81       	ld	r24, Z
 360:	48 2f       	mov	r20, r24
 362:	8a 81       	ldd	r24, Y+2	; 0x02
 364:	28 2f       	mov	r18, r24
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	02 2e       	mov	r0, r18
 36e:	02 c0       	rjmp	.+4      	; 0x374 <DIO_voidSetPinValue+0x12c>
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	0a 94       	dec	r0
 376:	e2 f7       	brpl	.-8      	; 0x370 <DIO_voidSetPinValue+0x128>
 378:	80 95       	com	r24
 37a:	84 23       	and	r24, r20
 37c:	8c 93       	st	X, r24
 37e:	3f c0       	rjmp	.+126    	; 0x3fe <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
					SET_BIT(PORTC,Pin);
 380:	a5 e3       	ldi	r26, 0x35	; 53
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	e5 e3       	ldi	r30, 0x35	; 53
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	48 2f       	mov	r20, r24
 38c:	8a 81       	ldd	r24, Y+2	; 0x02
 38e:	28 2f       	mov	r18, r24
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	02 2e       	mov	r0, r18
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_voidSetPinValue+0x156>
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_voidSetPinValue+0x152>
 3a2:	84 2b       	or	r24, r20
 3a4:	8c 93       	st	X, r24
 3a6:	2b c0       	rjmp	.+86     	; 0x3fe <DIO_voidSetPinValue+0x1b6>
				}
			break;

		case 3:
			if(Value==0)
 3a8:	8b 81       	ldd	r24, Y+3	; 0x03
 3aa:	88 23       	and	r24, r24
 3ac:	a9 f4       	brne	.+42     	; 0x3d8 <DIO_voidSetPinValue+0x190>
					{
					CLEAR_BIT(PORTD,Pin);
 3ae:	a2 e3       	ldi	r26, 0x32	; 50
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	e2 e3       	ldi	r30, 0x32	; 50
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	80 81       	ld	r24, Z
 3b8:	48 2f       	mov	r20, r24
 3ba:	8a 81       	ldd	r24, Y+2	; 0x02
 3bc:	28 2f       	mov	r18, r24
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	02 2e       	mov	r0, r18
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_voidSetPinValue+0x184>
 3c8:	88 0f       	add	r24, r24
 3ca:	99 1f       	adc	r25, r25
 3cc:	0a 94       	dec	r0
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_voidSetPinValue+0x180>
 3d0:	80 95       	com	r24
 3d2:	84 23       	and	r24, r20
 3d4:	8c 93       	st	X, r24
 3d6:	13 c0       	rjmp	.+38     	; 0x3fe <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTD,Pin);
 3d8:	a2 e3       	ldi	r26, 0x32	; 50
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	e2 e3       	ldi	r30, 0x32	; 50
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	48 2f       	mov	r20, r24
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
 3e6:	28 2f       	mov	r18, r24
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	02 2e       	mov	r0, r18
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <DIO_voidSetPinValue+0x1ae>
 3f2:	88 0f       	add	r24, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	0a 94       	dec	r0
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <DIO_voidSetPinValue+0x1aa>
 3fa:	84 2b       	or	r24, r20
 3fc:	8c 93       	st	X, r24

			break;
	}


}
 3fe:	0f 90       	pop	r0
 400:	0f 90       	pop	r0
 402:	0f 90       	pop	r0
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	cf 91       	pop	r28
 40a:	df 91       	pop	r29
 40c:	08 95       	ret

0000040e <DIO_voidTogglePinValue>:
void DIO_voidTogglePinValue(u8 Port,u8 Pin)
{
 40e:	df 93       	push	r29
 410:	cf 93       	push	r28
 412:	00 d0       	rcall	.+0      	; 0x414 <DIO_voidTogglePinValue+0x6>
 414:	00 d0       	rcall	.+0      	; 0x416 <DIO_voidTogglePinValue+0x8>
 416:	cd b7       	in	r28, 0x3d	; 61
 418:	de b7       	in	r29, 0x3e	; 62
 41a:	89 83       	std	Y+1, r24	; 0x01
 41c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port)
 41e:	89 81       	ldd	r24, Y+1	; 0x01
 420:	28 2f       	mov	r18, r24
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	3c 83       	std	Y+4, r19	; 0x04
 426:	2b 83       	std	Y+3, r18	; 0x03
 428:	8b 81       	ldd	r24, Y+3	; 0x03
 42a:	9c 81       	ldd	r25, Y+4	; 0x04
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	91 05       	cpc	r25, r1
 430:	49 f1       	breq	.+82     	; 0x484 <DIO_voidTogglePinValue+0x76>
 432:	2b 81       	ldd	r18, Y+3	; 0x03
 434:	3c 81       	ldd	r19, Y+4	; 0x04
 436:	22 30       	cpi	r18, 0x02	; 2
 438:	31 05       	cpc	r19, r1
 43a:	2c f4       	brge	.+10     	; 0x446 <DIO_voidTogglePinValue+0x38>
 43c:	8b 81       	ldd	r24, Y+3	; 0x03
 43e:	9c 81       	ldd	r25, Y+4	; 0x04
 440:	00 97       	sbiw	r24, 0x00	; 0
 442:	61 f0       	breq	.+24     	; 0x45c <DIO_voidTogglePinValue+0x4e>
 444:	5a c0       	rjmp	.+180    	; 0x4fa <DIO_voidTogglePinValue+0xec>
 446:	2b 81       	ldd	r18, Y+3	; 0x03
 448:	3c 81       	ldd	r19, Y+4	; 0x04
 44a:	22 30       	cpi	r18, 0x02	; 2
 44c:	31 05       	cpc	r19, r1
 44e:	71 f1       	breq	.+92     	; 0x4ac <DIO_voidTogglePinValue+0x9e>
 450:	8b 81       	ldd	r24, Y+3	; 0x03
 452:	9c 81       	ldd	r25, Y+4	; 0x04
 454:	83 30       	cpi	r24, 0x03	; 3
 456:	91 05       	cpc	r25, r1
 458:	e9 f1       	breq	.+122    	; 0x4d4 <DIO_voidTogglePinValue+0xc6>
 45a:	4f c0       	rjmp	.+158    	; 0x4fa <DIO_voidTogglePinValue+0xec>
	{
	case 0:
		TOGGLE_BIT(PORTA,Pin);
 45c:	ab e3       	ldi	r26, 0x3B	; 59
 45e:	b0 e0       	ldi	r27, 0x00	; 0
 460:	eb e3       	ldi	r30, 0x3B	; 59
 462:	f0 e0       	ldi	r31, 0x00	; 0
 464:	80 81       	ld	r24, Z
 466:	48 2f       	mov	r20, r24
 468:	8a 81       	ldd	r24, Y+2	; 0x02
 46a:	28 2f       	mov	r18, r24
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	02 2e       	mov	r0, r18
 474:	02 c0       	rjmp	.+4      	; 0x47a <DIO_voidTogglePinValue+0x6c>
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	0a 94       	dec	r0
 47c:	e2 f7       	brpl	.-8      	; 0x476 <DIO_voidTogglePinValue+0x68>
 47e:	84 27       	eor	r24, r20
 480:	8c 93       	st	X, r24
 482:	3b c0       	rjmp	.+118    	; 0x4fa <DIO_voidTogglePinValue+0xec>

		break;
	case 1:
		TOGGLE_BIT(PORTB,Pin);
 484:	a8 e3       	ldi	r26, 0x38	; 56
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e8 e3       	ldi	r30, 0x38	; 56
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	48 2f       	mov	r20, r24
 490:	8a 81       	ldd	r24, Y+2	; 0x02
 492:	28 2f       	mov	r18, r24
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 2e       	mov	r0, r18
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <DIO_voidTogglePinValue+0x94>
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	0a 94       	dec	r0
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <DIO_voidTogglePinValue+0x90>
 4a6:	84 27       	eor	r24, r20
 4a8:	8c 93       	st	X, r24
 4aa:	27 c0       	rjmp	.+78     	; 0x4fa <DIO_voidTogglePinValue+0xec>

		break;
	case 2:
		TOGGLE_BIT(PORTC,Pin);
 4ac:	a5 e3       	ldi	r26, 0x35	; 53
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	e5 e3       	ldi	r30, 0x35	; 53
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	48 2f       	mov	r20, r24
 4b8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ba:	28 2f       	mov	r18, r24
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	02 2e       	mov	r0, r18
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <DIO_voidTogglePinValue+0xbc>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	0a 94       	dec	r0
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <DIO_voidTogglePinValue+0xb8>
 4ce:	84 27       	eor	r24, r20
 4d0:	8c 93       	st	X, r24
 4d2:	13 c0       	rjmp	.+38     	; 0x4fa <DIO_voidTogglePinValue+0xec>

		break;

	case 3:
		TOGGLE_BIT(PORTD,Pin);
 4d4:	a2 e3       	ldi	r26, 0x32	; 50
 4d6:	b0 e0       	ldi	r27, 0x00	; 0
 4d8:	e2 e3       	ldi	r30, 0x32	; 50
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	48 2f       	mov	r20, r24
 4e0:	8a 81       	ldd	r24, Y+2	; 0x02
 4e2:	28 2f       	mov	r18, r24
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	02 2e       	mov	r0, r18
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <DIO_voidTogglePinValue+0xe4>
 4ee:	88 0f       	add	r24, r24
 4f0:	99 1f       	adc	r25, r25
 4f2:	0a 94       	dec	r0
 4f4:	e2 f7       	brpl	.-8      	; 0x4ee <DIO_voidTogglePinValue+0xe0>
 4f6:	84 27       	eor	r24, r20
 4f8:	8c 93       	st	X, r24

		break;

	}

}
 4fa:	0f 90       	pop	r0
 4fc:	0f 90       	pop	r0
 4fe:	0f 90       	pop	r0
 500:	0f 90       	pop	r0
 502:	cf 91       	pop	r28
 504:	df 91       	pop	r29
 506:	08 95       	ret

00000508 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 PORT,u8 Pin)
{
 508:	df 93       	push	r29
 50a:	cf 93       	push	r28
 50c:	00 d0       	rcall	.+0      	; 0x50e <DIO_u8GetPinValue+0x6>
 50e:	00 d0       	rcall	.+0      	; 0x510 <DIO_u8GetPinValue+0x8>
 510:	00 d0       	rcall	.+0      	; 0x512 <DIO_u8GetPinValue+0xa>
 512:	cd b7       	in	r28, 0x3d	; 61
 514:	de b7       	in	r29, 0x3e	; 62
 516:	89 83       	std	Y+1, r24	; 0x01
 518:	6a 83       	std	Y+2, r22	; 0x02
switch(PORT)
 51a:	89 81       	ldd	r24, Y+1	; 0x01
 51c:	28 2f       	mov	r18, r24
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	3d 83       	std	Y+5, r19	; 0x05
 522:	2c 83       	std	Y+4, r18	; 0x04
 524:	4c 81       	ldd	r20, Y+4	; 0x04
 526:	5d 81       	ldd	r21, Y+5	; 0x05
 528:	41 30       	cpi	r20, 0x01	; 1
 52a:	51 05       	cpc	r21, r1
 52c:	49 f1       	breq	.+82     	; 0x580 <DIO_u8GetPinValue+0x78>
 52e:	8c 81       	ldd	r24, Y+4	; 0x04
 530:	9d 81       	ldd	r25, Y+5	; 0x05
 532:	82 30       	cpi	r24, 0x02	; 2
 534:	91 05       	cpc	r25, r1
 536:	34 f4       	brge	.+12     	; 0x544 <DIO_u8GetPinValue+0x3c>
 538:	2c 81       	ldd	r18, Y+4	; 0x04
 53a:	3d 81       	ldd	r19, Y+5	; 0x05
 53c:	21 15       	cp	r18, r1
 53e:	31 05       	cpc	r19, r1
 540:	61 f0       	breq	.+24     	; 0x55a <DIO_u8GetPinValue+0x52>
 542:	57 c0       	rjmp	.+174    	; 0x5f2 <DIO_u8GetPinValue+0xea>
 544:	4c 81       	ldd	r20, Y+4	; 0x04
 546:	5d 81       	ldd	r21, Y+5	; 0x05
 548:	42 30       	cpi	r20, 0x02	; 2
 54a:	51 05       	cpc	r21, r1
 54c:	61 f1       	breq	.+88     	; 0x5a6 <DIO_u8GetPinValue+0x9e>
 54e:	8c 81       	ldd	r24, Y+4	; 0x04
 550:	9d 81       	ldd	r25, Y+5	; 0x05
 552:	83 30       	cpi	r24, 0x03	; 3
 554:	91 05       	cpc	r25, r1
 556:	d1 f1       	breq	.+116    	; 0x5cc <DIO_u8GetPinValue+0xc4>
 558:	4c c0       	rjmp	.+152    	; 0x5f2 <DIO_u8GetPinValue+0xea>
{
case 0:
	return  GET_BIT(PINA,Pin);
 55a:	e9 e3       	ldi	r30, 0x39	; 57
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	28 2f       	mov	r18, r24
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	8a 81       	ldd	r24, Y+2	; 0x02
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	a9 01       	movw	r20, r18
 56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_u8GetPinValue+0x6a>
 56e:	55 95       	asr	r21
 570:	47 95       	ror	r20
 572:	8a 95       	dec	r24
 574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_u8GetPinValue+0x66>
 576:	ca 01       	movw	r24, r20
 578:	58 2f       	mov	r21, r24
 57a:	51 70       	andi	r21, 0x01	; 1
 57c:	5b 83       	std	Y+3, r21	; 0x03
 57e:	3a c0       	rjmp	.+116    	; 0x5f4 <DIO_u8GetPinValue+0xec>

case 1:
	return GET_BIT(PINB,Pin);
 580:	e6 e3       	ldi	r30, 0x36	; 54
 582:	f0 e0       	ldi	r31, 0x00	; 0
 584:	80 81       	ld	r24, Z
 586:	28 2f       	mov	r18, r24
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	8a 81       	ldd	r24, Y+2	; 0x02
 58c:	88 2f       	mov	r24, r24
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	a9 01       	movw	r20, r18
 592:	02 c0       	rjmp	.+4      	; 0x598 <DIO_u8GetPinValue+0x90>
 594:	55 95       	asr	r21
 596:	47 95       	ror	r20
 598:	8a 95       	dec	r24
 59a:	e2 f7       	brpl	.-8      	; 0x594 <DIO_u8GetPinValue+0x8c>
 59c:	ca 01       	movw	r24, r20
 59e:	58 2f       	mov	r21, r24
 5a0:	51 70       	andi	r21, 0x01	; 1
 5a2:	5b 83       	std	Y+3, r21	; 0x03
 5a4:	27 c0       	rjmp	.+78     	; 0x5f4 <DIO_u8GetPinValue+0xec>
case 2:
	return GET_BIT(PINC,Pin);
 5a6:	e3 e3       	ldi	r30, 0x33	; 51
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	80 81       	ld	r24, Z
 5ac:	28 2f       	mov	r18, r24
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	8a 81       	ldd	r24, Y+2	; 0x02
 5b2:	88 2f       	mov	r24, r24
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	a9 01       	movw	r20, r18
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <DIO_u8GetPinValue+0xb6>
 5ba:	55 95       	asr	r21
 5bc:	47 95       	ror	r20
 5be:	8a 95       	dec	r24
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <DIO_u8GetPinValue+0xb2>
 5c2:	ca 01       	movw	r24, r20
 5c4:	58 2f       	mov	r21, r24
 5c6:	51 70       	andi	r21, 0x01	; 1
 5c8:	5b 83       	std	Y+3, r21	; 0x03
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <DIO_u8GetPinValue+0xec>
case 3:
	return GET_BIT(PIND,Pin);
 5cc:	e0 e3       	ldi	r30, 0x30	; 48
 5ce:	f0 e0       	ldi	r31, 0x00	; 0
 5d0:	80 81       	ld	r24, Z
 5d2:	28 2f       	mov	r18, r24
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	8a 81       	ldd	r24, Y+2	; 0x02
 5d8:	88 2f       	mov	r24, r24
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	a9 01       	movw	r20, r18
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <DIO_u8GetPinValue+0xdc>
 5e0:	55 95       	asr	r21
 5e2:	47 95       	ror	r20
 5e4:	8a 95       	dec	r24
 5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <DIO_u8GetPinValue+0xd8>
 5e8:	ca 01       	movw	r24, r20
 5ea:	58 2f       	mov	r21, r24
 5ec:	51 70       	andi	r21, 0x01	; 1
 5ee:	5b 83       	std	Y+3, r21	; 0x03
 5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <DIO_u8GetPinValue+0xec>
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <DIO_u8GetPinValue+0xf0>


}


}
 5f4:	8b 81       	ldd	r24, Y+3	; 0x03
 5f6:	8e 83       	std	Y+6, r24	; 0x06
 5f8:	8e 81       	ldd	r24, Y+6	; 0x06
 5fa:	26 96       	adiw	r28, 0x06	; 6
 5fc:	0f b6       	in	r0, 0x3f	; 63
 5fe:	f8 94       	cli
 600:	de bf       	out	0x3e, r29	; 62
 602:	0f be       	out	0x3f, r0	; 63
 604:	cd bf       	out	0x3d, r28	; 61
 606:	cf 91       	pop	r28
 608:	df 91       	pop	r29
 60a:	08 95       	ret

0000060c <KEYPAD_voidInit>:
#include"DIO_interface.h"
#include"keypad_interface.h"
#include"keypad_config.h"

void KEYPAD_voidInit(void)
{
 60c:	df 93       	push	r29
 60e:	cf 93       	push	r28
 610:	cd b7       	in	r28, 0x3d	; 61
 612:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDir(R1_PORT,R1_PIN,OUTPUT);
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	60 e0       	ldi	r22, 0x00	; 0
 618:	41 e0       	ldi	r20, 0x01	; 1
 61a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(R2_PORT,R2_PIN,OUTPUT);
 61e:	81 e0       	ldi	r24, 0x01	; 1
 620:	61 e0       	ldi	r22, 0x01	; 1
 622:	41 e0       	ldi	r20, 0x01	; 1
 624:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(R3_PORT,R3_PIN,OUTPUT);
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	62 e0       	ldi	r22, 0x02	; 2
 62c:	41 e0       	ldi	r20, 0x01	; 1
 62e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(R4_PORT,R4_PIN,OUTPUT);
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	63 e0       	ldi	r22, 0x03	; 3
 636:	41 e0       	ldi	r20, 0x01	; 1
 638:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>

	DIO_voidSetPinDir(C1_PORT,C1_PIN,INPUT);
 63c:	81 e0       	ldi	r24, 0x01	; 1
 63e:	64 e0       	ldi	r22, 0x04	; 4
 640:	40 e0       	ldi	r20, 0x00	; 0
 642:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(C2_PORT,C2_PIN,INPUT);
 646:	81 e0       	ldi	r24, 0x01	; 1
 648:	65 e0       	ldi	r22, 0x05	; 5
 64a:	40 e0       	ldi	r20, 0x00	; 0
 64c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(C3_PORT,C3_PIN,INPUT);
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	66 e0       	ldi	r22, 0x06	; 6
 654:	40 e0       	ldi	r20, 0x00	; 0
 656:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(C4_PORT,C4_PIN,INPUT);
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	67 e0       	ldi	r22, 0x07	; 7
 65e:	40 e0       	ldi	r20, 0x00	; 0
 660:	0e 94 41 00 	call	0x82	; 0x82 <DIO_voidSetPinDir>

	DIO_voidSetPinValue(C1_PORT,C1_PIN,HIGH);
 664:	81 e0       	ldi	r24, 0x01	; 1
 666:	64 e0       	ldi	r22, 0x04	; 4
 668:	41 e0       	ldi	r20, 0x01	; 1
 66a:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(C2_PORT,C2_PIN,HIGH);
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	65 e0       	ldi	r22, 0x05	; 5
 672:	41 e0       	ldi	r20, 0x01	; 1
 674:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(C3_PORT,C3_PIN,HIGH);
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	66 e0       	ldi	r22, 0x06	; 6
 67c:	41 e0       	ldi	r20, 0x01	; 1
 67e:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(C4_PORT,C4_PIN,HIGH);
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	67 e0       	ldi	r22, 0x07	; 7
 686:	41 e0       	ldi	r20, 0x01	; 1
 688:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>


}
 68c:	cf 91       	pop	r28
 68e:	df 91       	pop	r29
 690:	08 95       	ret

00000692 <KEYPAD_u8GetKey>:
u8 KEYPAD_u8GetKey(void)
{
 692:	df 93       	push	r29
 694:	cf 93       	push	r28
 696:	cd b7       	in	r28, 0x3d	; 61
 698:	de b7       	in	r29, 0x3e	; 62
 69a:	2a 97       	sbiw	r28, 0x0a	; 10
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	f8 94       	cli
 6a0:	de bf       	out	0x3e, r29	; 62
 6a2:	0f be       	out	0x3f, r0	; 63
 6a4:	cd bf       	out	0x3d, r28	; 61
	u8 temp;
	DIO_voidSetPinValue(R1_PORT,R1_PIN,LOW); //DETECT ONE PUTTON ROW
 6a6:	81 e0       	ldi	r24, 0x01	; 1
 6a8:	60 e0       	ldi	r22, 0x00	; 0
 6aa:	40 e0       	ldi	r20, 0x00	; 0
 6ac:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(R2_PORT,R2_PIN,HIGH);
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	61 e0       	ldi	r22, 0x01	; 1
 6b4:	41 e0       	ldi	r20, 0x01	; 1
 6b6:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(R3_PORT,R3_PIN,HIGH);
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	62 e0       	ldi	r22, 0x02	; 2
 6be:	41 e0       	ldi	r20, 0x01	; 1
 6c0:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(R4_PORT,R4_PIN,HIGH);
 6c4:	81 e0       	ldi	r24, 0x01	; 1
 6c6:	63 e0       	ldi	r22, 0x03	; 3
 6c8:	41 e0       	ldi	r20, 0x01	; 1
 6ca:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>

   temp=0;
 6ce:	19 82       	std	Y+1, r1	; 0x01
   temp|=(DIO_u8GetPinValue(C4_PORT,C4_PIN)<<0);
 6d0:	81 e0       	ldi	r24, 0x01	; 1
 6d2:	67 e0       	ldi	r22, 0x07	; 7
 6d4:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 6d8:	98 2f       	mov	r25, r24
 6da:	89 81       	ldd	r24, Y+1	; 0x01
 6dc:	89 2b       	or	r24, r25
 6de:	89 83       	std	Y+1, r24	; 0x01
   temp|=(DIO_u8GetPinValue(C3_PORT,C3_PIN)<<1);
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	66 e0       	ldi	r22, 0x06	; 6
 6e4:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 6e8:	88 2f       	mov	r24, r24
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	88 0f       	add	r24, r24
 6ee:	99 1f       	adc	r25, r25
 6f0:	98 2f       	mov	r25, r24
 6f2:	89 81       	ldd	r24, Y+1	; 0x01
 6f4:	89 2b       	or	r24, r25
 6f6:	89 83       	std	Y+1, r24	; 0x01
   temp|=(DIO_u8GetPinValue(C2_PORT,C2_PIN)<<2);
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	65 e0       	ldi	r22, 0x05	; 5
 6fc:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 700:	88 2f       	mov	r24, r24
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	88 0f       	add	r24, r24
 70a:	99 1f       	adc	r25, r25
 70c:	98 2f       	mov	r25, r24
 70e:	89 81       	ldd	r24, Y+1	; 0x01
 710:	89 2b       	or	r24, r25
 712:	89 83       	std	Y+1, r24	; 0x01
   temp|=(DIO_u8GetPinValue(C1_PORT,C1_PIN)<<3);
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	64 e0       	ldi	r22, 0x04	; 4
 718:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 71c:	88 2f       	mov	r24, r24
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	88 0f       	add	r24, r24
 722:	99 1f       	adc	r25, r25
 724:	88 0f       	add	r24, r24
 726:	99 1f       	adc	r25, r25
 728:	88 0f       	add	r24, r24
 72a:	99 1f       	adc	r25, r25
 72c:	98 2f       	mov	r25, r24
 72e:	89 81       	ldd	r24, Y+1	; 0x01
 730:	89 2b       	or	r24, r25
 732:	89 83       	std	Y+1, r24	; 0x01

   switch(temp)
 734:	89 81       	ldd	r24, Y+1	; 0x01
 736:	28 2f       	mov	r18, r24
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	3a 87       	std	Y+10, r19	; 0x0a
 73c:	29 87       	std	Y+9, r18	; 0x09
 73e:	89 85       	ldd	r24, Y+9	; 0x09
 740:	9a 85       	ldd	r25, Y+10	; 0x0a
 742:	8b 30       	cpi	r24, 0x0B	; 11
 744:	91 05       	cpc	r25, r1
 746:	d9 f0       	breq	.+54     	; 0x77e <KEYPAD_u8GetKey+0xec>
 748:	29 85       	ldd	r18, Y+9	; 0x09
 74a:	3a 85       	ldd	r19, Y+10	; 0x0a
 74c:	2c 30       	cpi	r18, 0x0C	; 12
 74e:	31 05       	cpc	r19, r1
 750:	34 f4       	brge	.+12     	; 0x75e <KEYPAD_u8GetKey+0xcc>
 752:	89 85       	ldd	r24, Y+9	; 0x09
 754:	9a 85       	ldd	r25, Y+10	; 0x0a
 756:	87 30       	cpi	r24, 0x07	; 7
 758:	91 05       	cpc	r25, r1
 75a:	99 f0       	breq	.+38     	; 0x782 <KEYPAD_u8GetKey+0xf0>
 75c:	15 c0       	rjmp	.+42     	; 0x788 <KEYPAD_u8GetKey+0xf6>
 75e:	29 85       	ldd	r18, Y+9	; 0x09
 760:	3a 85       	ldd	r19, Y+10	; 0x0a
 762:	2d 30       	cpi	r18, 0x0D	; 13
 764:	31 05       	cpc	r19, r1
 766:	41 f0       	breq	.+16     	; 0x778 <KEYPAD_u8GetKey+0xe6>
 768:	89 85       	ldd	r24, Y+9	; 0x09
 76a:	9a 85       	ldd	r25, Y+10	; 0x0a
 76c:	8e 30       	cpi	r24, 0x0E	; 14
 76e:	91 05       	cpc	r25, r1
 770:	59 f4       	brne	.+22     	; 0x788 <KEYPAD_u8GetKey+0xf6>
   {
   case 0x0E:
	   return '*';
 772:	9a e2       	ldi	r25, 0x2A	; 42
 774:	98 87       	std	Y+8, r25	; 0x08
 776:	60 c1       	rjmp	.+704    	; 0xa38 <__stack+0x1d9>
   case 0x0D:
   	   return '#';
 778:	23 e2       	ldi	r18, 0x23	; 35
 77a:	28 87       	std	Y+8, r18	; 0x08
 77c:	5d c1       	rjmp	.+698    	; 0xa38 <__stack+0x1d9>
   case 0x0B:
   	   return 0;
 77e:	18 86       	std	Y+8, r1	; 0x08
 780:	5b c1       	rjmp	.+694    	; 0xa38 <__stack+0x1d9>
   case 0x07:
   	   return '=';
 782:	3d e3       	ldi	r19, 0x3D	; 61
 784:	38 87       	std	Y+8, r19	; 0x08
 786:	58 c1       	rjmp	.+688    	; 0xa38 <__stack+0x1d9>


   }

    DIO_voidSetPinValue(R1_PORT,R1_PIN,HIGH); //DETECT ONE PUTTON ROW
 788:	81 e0       	ldi	r24, 0x01	; 1
 78a:	60 e0       	ldi	r22, 0x00	; 0
 78c:	41 e0       	ldi	r20, 0x01	; 1
 78e:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
   	DIO_voidSetPinValue(R2_PORT,R2_PIN,LOW);
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	61 e0       	ldi	r22, 0x01	; 1
 796:	40 e0       	ldi	r20, 0x00	; 0
 798:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
   	DIO_voidSetPinValue(R3_PORT,R3_PIN,HIGH);
 79c:	81 e0       	ldi	r24, 0x01	; 1
 79e:	62 e0       	ldi	r22, 0x02	; 2
 7a0:	41 e0       	ldi	r20, 0x01	; 1
 7a2:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
   	DIO_voidSetPinValue(R4_PORT,R4_PIN,HIGH);
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	63 e0       	ldi	r22, 0x03	; 3
 7aa:	41 e0       	ldi	r20, 0x01	; 1
 7ac:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>

      temp=0;
 7b0:	19 82       	std	Y+1, r1	; 0x01
      temp|=(DIO_u8GetPinValue(C4_PORT,C4_PIN)<<0);
 7b2:	81 e0       	ldi	r24, 0x01	; 1
 7b4:	67 e0       	ldi	r22, 0x07	; 7
 7b6:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 7ba:	98 2f       	mov	r25, r24
 7bc:	89 81       	ldd	r24, Y+1	; 0x01
 7be:	89 2b       	or	r24, r25
 7c0:	89 83       	std	Y+1, r24	; 0x01
      temp|=(DIO_u8GetPinValue(C3_PORT,C3_PIN)<<1);
 7c2:	81 e0       	ldi	r24, 0x01	; 1
 7c4:	66 e0       	ldi	r22, 0x06	; 6
 7c6:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 7ca:	88 2f       	mov	r24, r24
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	88 0f       	add	r24, r24
 7d0:	99 1f       	adc	r25, r25
 7d2:	98 2f       	mov	r25, r24
 7d4:	89 81       	ldd	r24, Y+1	; 0x01
 7d6:	89 2b       	or	r24, r25
 7d8:	89 83       	std	Y+1, r24	; 0x01
      temp|=(DIO_u8GetPinValue(C2_PORT,C2_PIN)<<2);
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	65 e0       	ldi	r22, 0x05	; 5
 7de:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 7e2:	88 2f       	mov	r24, r24
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	88 0f       	add	r24, r24
 7e8:	99 1f       	adc	r25, r25
 7ea:	88 0f       	add	r24, r24
 7ec:	99 1f       	adc	r25, r25
 7ee:	98 2f       	mov	r25, r24
 7f0:	89 81       	ldd	r24, Y+1	; 0x01
 7f2:	89 2b       	or	r24, r25
 7f4:	89 83       	std	Y+1, r24	; 0x01
      temp|=(DIO_u8GetPinValue(C1_PORT,C1_PIN)<<3);
 7f6:	81 e0       	ldi	r24, 0x01	; 1
 7f8:	64 e0       	ldi	r22, 0x04	; 4
 7fa:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 7fe:	88 2f       	mov	r24, r24
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	88 0f       	add	r24, r24
 804:	99 1f       	adc	r25, r25
 806:	88 0f       	add	r24, r24
 808:	99 1f       	adc	r25, r25
 80a:	88 0f       	add	r24, r24
 80c:	99 1f       	adc	r25, r25
 80e:	98 2f       	mov	r25, r24
 810:	89 81       	ldd	r24, Y+1	; 0x01
 812:	89 2b       	or	r24, r25
 814:	89 83       	std	Y+1, r24	; 0x01

      switch(temp)
 816:	89 81       	ldd	r24, Y+1	; 0x01
 818:	28 2f       	mov	r18, r24
 81a:	30 e0       	ldi	r19, 0x00	; 0
 81c:	3f 83       	std	Y+7, r19	; 0x07
 81e:	2e 83       	std	Y+6, r18	; 0x06
 820:	8e 81       	ldd	r24, Y+6	; 0x06
 822:	9f 81       	ldd	r25, Y+7	; 0x07
 824:	8b 30       	cpi	r24, 0x0B	; 11
 826:	91 05       	cpc	r25, r1
 828:	d9 f0       	breq	.+54     	; 0x860 <__stack+0x1>
 82a:	2e 81       	ldd	r18, Y+6	; 0x06
 82c:	3f 81       	ldd	r19, Y+7	; 0x07
 82e:	2c 30       	cpi	r18, 0x0C	; 12
 830:	31 05       	cpc	r19, r1
 832:	34 f4       	brge	.+12     	; 0x840 <KEYPAD_u8GetKey+0x1ae>
 834:	8e 81       	ldd	r24, Y+6	; 0x06
 836:	9f 81       	ldd	r25, Y+7	; 0x07
 838:	87 30       	cpi	r24, 0x07	; 7
 83a:	91 05       	cpc	r25, r1
 83c:	a1 f0       	breq	.+40     	; 0x866 <__stack+0x7>
 83e:	16 c0       	rjmp	.+44     	; 0x86c <__stack+0xd>
 840:	2e 81       	ldd	r18, Y+6	; 0x06
 842:	3f 81       	ldd	r19, Y+7	; 0x07
 844:	2d 30       	cpi	r18, 0x0D	; 13
 846:	31 05       	cpc	r19, r1
 848:	41 f0       	breq	.+16     	; 0x85a <KEYPAD_u8GetKey+0x1c8>
 84a:	8e 81       	ldd	r24, Y+6	; 0x06
 84c:	9f 81       	ldd	r25, Y+7	; 0x07
 84e:	8e 30       	cpi	r24, 0x0E	; 14
 850:	91 05       	cpc	r25, r1
 852:	61 f4       	brne	.+24     	; 0x86c <__stack+0xd>
      {
      case 0x0E:
   	   return '/';
 854:	9f e2       	ldi	r25, 0x2F	; 47
 856:	98 87       	std	Y+8, r25	; 0x08
 858:	ef c0       	rjmp	.+478    	; 0xa38 <__stack+0x1d9>
      case 0x0D:
      	   return 9;
 85a:	29 e0       	ldi	r18, 0x09	; 9
 85c:	28 87       	std	Y+8, r18	; 0x08
 85e:	ec c0       	rjmp	.+472    	; 0xa38 <__stack+0x1d9>
      case 0x0B:
      	   return 8;
 860:	38 e0       	ldi	r19, 0x08	; 8
 862:	38 87       	std	Y+8, r19	; 0x08
 864:	e9 c0       	rjmp	.+466    	; 0xa38 <__stack+0x1d9>
      case 0x07:
      	   return 7;
 866:	87 e0       	ldi	r24, 0x07	; 7
 868:	88 87       	std	Y+8, r24	; 0x08
 86a:	e6 c0       	rjmp	.+460    	; 0xa38 <__stack+0x1d9>


      }
        DIO_voidSetPinValue(R1_PORT,R1_PIN,HIGH); //DETECT ONE PUTTON ROW
 86c:	81 e0       	ldi	r24, 0x01	; 1
 86e:	60 e0       	ldi	r22, 0x00	; 0
 870:	41 e0       	ldi	r20, 0x01	; 1
 872:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
      	DIO_voidSetPinValue(R2_PORT,R2_PIN,HIGH);
 876:	81 e0       	ldi	r24, 0x01	; 1
 878:	61 e0       	ldi	r22, 0x01	; 1
 87a:	41 e0       	ldi	r20, 0x01	; 1
 87c:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
      	DIO_voidSetPinValue(R3_PORT,R3_PIN,LOW);
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	62 e0       	ldi	r22, 0x02	; 2
 884:	40 e0       	ldi	r20, 0x00	; 0
 886:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
      	DIO_voidSetPinValue(R4_PORT,R4_PIN,HIGH);
 88a:	81 e0       	ldi	r24, 0x01	; 1
 88c:	63 e0       	ldi	r22, 0x03	; 3
 88e:	41 e0       	ldi	r20, 0x01	; 1
 890:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>

         temp=0;
 894:	19 82       	std	Y+1, r1	; 0x01
         temp|=(DIO_u8GetPinValue(C4_PORT,C4_PIN)<<0);
 896:	81 e0       	ldi	r24, 0x01	; 1
 898:	67 e0       	ldi	r22, 0x07	; 7
 89a:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 89e:	98 2f       	mov	r25, r24
 8a0:	89 81       	ldd	r24, Y+1	; 0x01
 8a2:	89 2b       	or	r24, r25
 8a4:	89 83       	std	Y+1, r24	; 0x01
         temp|=(DIO_u8GetPinValue(C3_PORT,C3_PIN)<<1);
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	66 e0       	ldi	r22, 0x06	; 6
 8aa:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 8ae:	88 2f       	mov	r24, r24
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	88 0f       	add	r24, r24
 8b4:	99 1f       	adc	r25, r25
 8b6:	98 2f       	mov	r25, r24
 8b8:	89 81       	ldd	r24, Y+1	; 0x01
 8ba:	89 2b       	or	r24, r25
 8bc:	89 83       	std	Y+1, r24	; 0x01
         temp|=(DIO_u8GetPinValue(C2_PORT,C2_PIN)<<2);
 8be:	81 e0       	ldi	r24, 0x01	; 1
 8c0:	65 e0       	ldi	r22, 0x05	; 5
 8c2:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 8c6:	88 2f       	mov	r24, r24
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	88 0f       	add	r24, r24
 8cc:	99 1f       	adc	r25, r25
 8ce:	88 0f       	add	r24, r24
 8d0:	99 1f       	adc	r25, r25
 8d2:	98 2f       	mov	r25, r24
 8d4:	89 81       	ldd	r24, Y+1	; 0x01
 8d6:	89 2b       	or	r24, r25
 8d8:	89 83       	std	Y+1, r24	; 0x01
         temp|=(DIO_u8GetPinValue(C1_PORT,C1_PIN)<<3);
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	64 e0       	ldi	r22, 0x04	; 4
 8de:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 8e2:	88 2f       	mov	r24, r24
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	88 0f       	add	r24, r24
 8e8:	99 1f       	adc	r25, r25
 8ea:	88 0f       	add	r24, r24
 8ec:	99 1f       	adc	r25, r25
 8ee:	88 0f       	add	r24, r24
 8f0:	99 1f       	adc	r25, r25
 8f2:	98 2f       	mov	r25, r24
 8f4:	89 81       	ldd	r24, Y+1	; 0x01
 8f6:	89 2b       	or	r24, r25
 8f8:	89 83       	std	Y+1, r24	; 0x01

         switch(temp)
 8fa:	89 81       	ldd	r24, Y+1	; 0x01
 8fc:	28 2f       	mov	r18, r24
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	3d 83       	std	Y+5, r19	; 0x05
 902:	2c 83       	std	Y+4, r18	; 0x04
 904:	8c 81       	ldd	r24, Y+4	; 0x04
 906:	9d 81       	ldd	r25, Y+5	; 0x05
 908:	8b 30       	cpi	r24, 0x0B	; 11
 90a:	91 05       	cpc	r25, r1
 90c:	d9 f0       	breq	.+54     	; 0x944 <__stack+0xe5>
 90e:	2c 81       	ldd	r18, Y+4	; 0x04
 910:	3d 81       	ldd	r19, Y+5	; 0x05
 912:	2c 30       	cpi	r18, 0x0C	; 12
 914:	31 05       	cpc	r19, r1
 916:	34 f4       	brge	.+12     	; 0x924 <__stack+0xc5>
 918:	8c 81       	ldd	r24, Y+4	; 0x04
 91a:	9d 81       	ldd	r25, Y+5	; 0x05
 91c:	87 30       	cpi	r24, 0x07	; 7
 91e:	91 05       	cpc	r25, r1
 920:	a1 f0       	breq	.+40     	; 0x94a <__stack+0xeb>
 922:	16 c0       	rjmp	.+44     	; 0x950 <__stack+0xf1>
 924:	2c 81       	ldd	r18, Y+4	; 0x04
 926:	3d 81       	ldd	r19, Y+5	; 0x05
 928:	2d 30       	cpi	r18, 0x0D	; 13
 92a:	31 05       	cpc	r19, r1
 92c:	41 f0       	breq	.+16     	; 0x93e <__stack+0xdf>
 92e:	8c 81       	ldd	r24, Y+4	; 0x04
 930:	9d 81       	ldd	r25, Y+5	; 0x05
 932:	8e 30       	cpi	r24, 0x0E	; 14
 934:	91 05       	cpc	r25, r1
 936:	61 f4       	brne	.+24     	; 0x950 <__stack+0xf1>
         {
         case 0x0E:
      	   return '-';
 938:	9d e2       	ldi	r25, 0x2D	; 45
 93a:	98 87       	std	Y+8, r25	; 0x08
 93c:	7d c0       	rjmp	.+250    	; 0xa38 <__stack+0x1d9>
         case 0x0D:
         	   return 6;
 93e:	26 e0       	ldi	r18, 0x06	; 6
 940:	28 87       	std	Y+8, r18	; 0x08
 942:	7a c0       	rjmp	.+244    	; 0xa38 <__stack+0x1d9>
         case 0x0B:
         	   return 5;
 944:	35 e0       	ldi	r19, 0x05	; 5
 946:	38 87       	std	Y+8, r19	; 0x08
 948:	77 c0       	rjmp	.+238    	; 0xa38 <__stack+0x1d9>
         case 0x07:
         	   return 4;
 94a:	84 e0       	ldi	r24, 0x04	; 4
 94c:	88 87       	std	Y+8, r24	; 0x08
 94e:	74 c0       	rjmp	.+232    	; 0xa38 <__stack+0x1d9>


         }

           DIO_voidSetPinValue(R1_PORT,R1_PIN,HIGH); //DETECT ONE PUTTON ROW
 950:	81 e0       	ldi	r24, 0x01	; 1
 952:	60 e0       	ldi	r22, 0x00	; 0
 954:	41 e0       	ldi	r20, 0x01	; 1
 956:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
         	DIO_voidSetPinValue(R2_PORT,R2_PIN,HIGH);
 95a:	81 e0       	ldi	r24, 0x01	; 1
 95c:	61 e0       	ldi	r22, 0x01	; 1
 95e:	41 e0       	ldi	r20, 0x01	; 1
 960:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
         	DIO_voidSetPinValue(R3_PORT,R3_PIN,HIGH);
 964:	81 e0       	ldi	r24, 0x01	; 1
 966:	62 e0       	ldi	r22, 0x02	; 2
 968:	41 e0       	ldi	r20, 0x01	; 1
 96a:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>
         	DIO_voidSetPinValue(R4_PORT,R4_PIN,LOW);
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	63 e0       	ldi	r22, 0x03	; 3
 972:	40 e0       	ldi	r20, 0x00	; 0
 974:	0e 94 24 01 	call	0x248	; 0x248 <DIO_voidSetPinValue>

            temp=0;
 978:	19 82       	std	Y+1, r1	; 0x01
            temp|=(DIO_u8GetPinValue(C4_PORT,C4_PIN)<<0);
 97a:	81 e0       	ldi	r24, 0x01	; 1
 97c:	67 e0       	ldi	r22, 0x07	; 7
 97e:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 982:	98 2f       	mov	r25, r24
 984:	89 81       	ldd	r24, Y+1	; 0x01
 986:	89 2b       	or	r24, r25
 988:	89 83       	std	Y+1, r24	; 0x01
            temp|=(DIO_u8GetPinValue(C3_PORT,C3_PIN)<<1);
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	66 e0       	ldi	r22, 0x06	; 6
 98e:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 992:	88 2f       	mov	r24, r24
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	88 0f       	add	r24, r24
 998:	99 1f       	adc	r25, r25
 99a:	98 2f       	mov	r25, r24
 99c:	89 81       	ldd	r24, Y+1	; 0x01
 99e:	89 2b       	or	r24, r25
 9a0:	89 83       	std	Y+1, r24	; 0x01
            temp|=(DIO_u8GetPinValue(C2_PORT,C2_PIN)<<2);
 9a2:	81 e0       	ldi	r24, 0x01	; 1
 9a4:	65 e0       	ldi	r22, 0x05	; 5
 9a6:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 9aa:	88 2f       	mov	r24, r24
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	88 0f       	add	r24, r24
 9b0:	99 1f       	adc	r25, r25
 9b2:	88 0f       	add	r24, r24
 9b4:	99 1f       	adc	r25, r25
 9b6:	98 2f       	mov	r25, r24
 9b8:	89 81       	ldd	r24, Y+1	; 0x01
 9ba:	89 2b       	or	r24, r25
 9bc:	89 83       	std	Y+1, r24	; 0x01
            temp|=(DIO_u8GetPinValue(C1_PORT,C1_PIN)<<3);
 9be:	81 e0       	ldi	r24, 0x01	; 1
 9c0:	64 e0       	ldi	r22, 0x04	; 4
 9c2:	0e 94 84 02 	call	0x508	; 0x508 <DIO_u8GetPinValue>
 9c6:	88 2f       	mov	r24, r24
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	88 0f       	add	r24, r24
 9cc:	99 1f       	adc	r25, r25
 9ce:	88 0f       	add	r24, r24
 9d0:	99 1f       	adc	r25, r25
 9d2:	88 0f       	add	r24, r24
 9d4:	99 1f       	adc	r25, r25
 9d6:	98 2f       	mov	r25, r24
 9d8:	89 81       	ldd	r24, Y+1	; 0x01
 9da:	89 2b       	or	r24, r25
 9dc:	89 83       	std	Y+1, r24	; 0x01

            switch(temp)
 9de:	89 81       	ldd	r24, Y+1	; 0x01
 9e0:	28 2f       	mov	r18, r24
 9e2:	30 e0       	ldi	r19, 0x00	; 0
 9e4:	3b 83       	std	Y+3, r19	; 0x03
 9e6:	2a 83       	std	Y+2, r18	; 0x02
 9e8:	8a 81       	ldd	r24, Y+2	; 0x02
 9ea:	9b 81       	ldd	r25, Y+3	; 0x03
 9ec:	8b 30       	cpi	r24, 0x0B	; 11
 9ee:	91 05       	cpc	r25, r1
 9f0:	d9 f0       	breq	.+54     	; 0xa28 <__stack+0x1c9>
 9f2:	2a 81       	ldd	r18, Y+2	; 0x02
 9f4:	3b 81       	ldd	r19, Y+3	; 0x03
 9f6:	2c 30       	cpi	r18, 0x0C	; 12
 9f8:	31 05       	cpc	r19, r1
 9fa:	34 f4       	brge	.+12     	; 0xa08 <__stack+0x1a9>
 9fc:	8a 81       	ldd	r24, Y+2	; 0x02
 9fe:	9b 81       	ldd	r25, Y+3	; 0x03
 a00:	87 30       	cpi	r24, 0x07	; 7
 a02:	91 05       	cpc	r25, r1
 a04:	a1 f0       	breq	.+40     	; 0xa2e <__stack+0x1cf>
 a06:	16 c0       	rjmp	.+44     	; 0xa34 <__stack+0x1d5>
 a08:	2a 81       	ldd	r18, Y+2	; 0x02
 a0a:	3b 81       	ldd	r19, Y+3	; 0x03
 a0c:	2d 30       	cpi	r18, 0x0D	; 13
 a0e:	31 05       	cpc	r19, r1
 a10:	41 f0       	breq	.+16     	; 0xa22 <__stack+0x1c3>
 a12:	8a 81       	ldd	r24, Y+2	; 0x02
 a14:	9b 81       	ldd	r25, Y+3	; 0x03
 a16:	8e 30       	cpi	r24, 0x0E	; 14
 a18:	91 05       	cpc	r25, r1
 a1a:	61 f4       	brne	.+24     	; 0xa34 <__stack+0x1d5>
            {
            case 0x0E:
         	   return '+';
 a1c:	9b e2       	ldi	r25, 0x2B	; 43
 a1e:	98 87       	std	Y+8, r25	; 0x08
 a20:	0b c0       	rjmp	.+22     	; 0xa38 <__stack+0x1d9>
            case 0x0D:
            	   return 3;
 a22:	23 e0       	ldi	r18, 0x03	; 3
 a24:	28 87       	std	Y+8, r18	; 0x08
 a26:	08 c0       	rjmp	.+16     	; 0xa38 <__stack+0x1d9>
            case 0x0B:
            	   return 2;
 a28:	32 e0       	ldi	r19, 0x02	; 2
 a2a:	38 87       	std	Y+8, r19	; 0x08
 a2c:	05 c0       	rjmp	.+10     	; 0xa38 <__stack+0x1d9>
            case 0x07:
            	   return 1;
 a2e:	81 e0       	ldi	r24, 0x01	; 1
 a30:	88 87       	std	Y+8, r24	; 0x08
 a32:	02 c0       	rjmp	.+4      	; 0xa38 <__stack+0x1d9>


            }

            return no_key;
 a34:	9f ef       	ldi	r25, 0xFF	; 255
 a36:	98 87       	std	Y+8, r25	; 0x08
 a38:	88 85       	ldd	r24, Y+8	; 0x08

}
 a3a:	2a 96       	adiw	r28, 0x0a	; 10
 a3c:	0f b6       	in	r0, 0x3f	; 63
 a3e:	f8 94       	cli
 a40:	de bf       	out	0x3e, r29	; 62
 a42:	0f be       	out	0x3f, r0	; 63
 a44:	cd bf       	out	0x3d, r28	; 61
 a46:	cf 91       	pop	r28
 a48:	df 91       	pop	r29
 a4a:	08 95       	ret

00000a4c <main>:

#include"keypad_interface.h"
#include<avr/io.h>

int main(void)
{
 a4c:	df 93       	push	r29
 a4e:	cf 93       	push	r28
 a50:	cd b7       	in	r28, 0x3d	; 61
 a52:	de b7       	in	r29, 0x3e	; 62
 a54:	60 97       	sbiw	r28, 0x10	; 16
 a56:	0f b6       	in	r0, 0x3f	; 63
 a58:	f8 94       	cli
 a5a:	de bf       	out	0x3e, r29	; 62
 a5c:	0f be       	out	0x3f, r0	; 63
 a5e:	cd bf       	out	0x3d, r28	; 61
	u8 seg[]={0b01011111,0b00000110,0b00111011,0b00101111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
 a60:	ce 01       	movw	r24, r28
 a62:	02 96       	adiw	r24, 0x02	; 2
 a64:	9d 87       	std	Y+13, r25	; 0x0d
 a66:	8c 87       	std	Y+12, r24	; 0x0c
 a68:	e0 e6       	ldi	r30, 0x60	; 96
 a6a:	f0 e0       	ldi	r31, 0x00	; 0
 a6c:	ff 87       	std	Y+15, r31	; 0x0f
 a6e:	ee 87       	std	Y+14, r30	; 0x0e
 a70:	fa e0       	ldi	r31, 0x0A	; 10
 a72:	f8 8b       	std	Y+16, r31	; 0x10
 a74:	ee 85       	ldd	r30, Y+14	; 0x0e
 a76:	ff 85       	ldd	r31, Y+15	; 0x0f
 a78:	00 80       	ld	r0, Z
 a7a:	8e 85       	ldd	r24, Y+14	; 0x0e
 a7c:	9f 85       	ldd	r25, Y+15	; 0x0f
 a7e:	01 96       	adiw	r24, 0x01	; 1
 a80:	9f 87       	std	Y+15, r25	; 0x0f
 a82:	8e 87       	std	Y+14, r24	; 0x0e
 a84:	ec 85       	ldd	r30, Y+12	; 0x0c
 a86:	fd 85       	ldd	r31, Y+13	; 0x0d
 a88:	00 82       	st	Z, r0
 a8a:	8c 85       	ldd	r24, Y+12	; 0x0c
 a8c:	9d 85       	ldd	r25, Y+13	; 0x0d
 a8e:	01 96       	adiw	r24, 0x01	; 1
 a90:	9d 87       	std	Y+13, r25	; 0x0d
 a92:	8c 87       	std	Y+12, r24	; 0x0c
 a94:	98 89       	ldd	r25, Y+16	; 0x10
 a96:	91 50       	subi	r25, 0x01	; 1
 a98:	98 8b       	std	Y+16, r25	; 0x10
 a9a:	e8 89       	ldd	r30, Y+16	; 0x10
 a9c:	ee 23       	and	r30, r30
 a9e:	51 f7       	brne	.-44     	; 0xa74 <main+0x28>
	KEYPAD_voidInit();
 aa0:	0e 94 06 03 	call	0x60c	; 0x60c <KEYPAD_voidInit>
	DDRB=0xFF;
 aa4:	e7 e3       	ldi	r30, 0x37	; 55
 aa6:	f0 e0       	ldi	r31, 0x00	; 0
 aa8:	8f ef       	ldi	r24, 0xFF	; 255
 aaa:	80 83       	st	Z, r24
	u8 x;
	while(1)
	{
	x=KEYPAD_u8GetKey();
 aac:	0e 94 49 03 	call	0x692	; 0x692 <KEYPAD_u8GetKey>
 ab0:	89 83       	std	Y+1, r24	; 0x01
	if(x!=no_key)
 ab2:	89 81       	ldd	r24, Y+1	; 0x01
 ab4:	8f 3f       	cpi	r24, 0xFF	; 255
 ab6:	69 f0       	breq	.+26     	; 0xad2 <main+0x86>
	{
		PORTB=seg[x];
 ab8:	a8 e3       	ldi	r26, 0x38	; 56
 aba:	b0 e0       	ldi	r27, 0x00	; 0
 abc:	89 81       	ldd	r24, Y+1	; 0x01
 abe:	28 2f       	mov	r18, r24
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	ce 01       	movw	r24, r28
 ac4:	02 96       	adiw	r24, 0x02	; 2
 ac6:	fc 01       	movw	r30, r24
 ac8:	e2 0f       	add	r30, r18
 aca:	f3 1f       	adc	r31, r19
 acc:	80 81       	ld	r24, Z
 ace:	8c 93       	st	X, r24
 ad0:	ed cf       	rjmp	.-38     	; 0xaac <main+0x60>
	}
	else
	{
		PORTB=0;
 ad2:	e8 e3       	ldi	r30, 0x38	; 56
 ad4:	f0 e0       	ldi	r31, 0x00	; 0
 ad6:	10 82       	st	Z, r1
 ad8:	e9 cf       	rjmp	.-46     	; 0xaac <main+0x60>

00000ada <_exit>:
 ada:	f8 94       	cli

00000adc <__stop_program>:
 adc:	ff cf       	rjmp	.-2      	; 0xadc <__stop_program>
