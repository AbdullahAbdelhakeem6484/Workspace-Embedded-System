
StepperMotorDriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003ccc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00003ccc  00003d40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002cf4  00000000  00000000  00003d48  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b06  00000000  00000000  00006a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00007542  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00007682  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000077f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000943b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000a326  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000b0d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000b234  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000b4c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000bc8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ec       	ldi	r30, 0xCC	; 204
      68:	fc e3       	ldi	r31, 0x3C	; 60
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 16 1e 	call	0x3c2c	; 0x3c2c <main>
      7a:	0c 94 64 1e 	jmp	0x3cc8	; 0x3cc8 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 2d 1e 	jmp	0x3c5a	; 0x3c5a <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 49 1e 	jmp	0x3c92	; 0x3c92 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 2d 1e 	jmp	0x3c5a	; 0x3c5a <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 49 1e 	jmp	0x3c92	; 0x3c92 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 55 1e 	jmp	0x3caa	; 0x3caa <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 3d 1e 	jmp	0x3c7a	; 0x3c7a <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 59 1e 	jmp	0x3cb2	; 0x3cb2 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_voidSetPinDir>:




void DIO_voidSetPinDir(u8 Port,u8 Pin,u8 Dir)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_voidSetPinDir+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_voidSetPinDir+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	89 83       	std	Y+1, r24	; 0x01
     b46:	6a 83       	std	Y+2, r22	; 0x02
     b48:	4b 83       	std	Y+3, r20	; 0x03

switch(Port)
     b4a:	89 81       	ldd	r24, Y+1	; 0x01
     b4c:	28 2f       	mov	r18, r24
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	3d 83       	std	Y+5, r19	; 0x05
     b52:	2c 83       	std	Y+4, r18	; 0x04
     b54:	8c 81       	ldd	r24, Y+4	; 0x04
     b56:	9d 81       	ldd	r25, Y+5	; 0x05
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	91 05       	cpc	r25, r1
     b5c:	09 f4       	brne	.+2      	; 0xb60 <DIO_voidSetPinDir+0x2a>
     b5e:	43 c0       	rjmp	.+134    	; 0xbe6 <DIO_voidSetPinDir+0xb0>
     b60:	2c 81       	ldd	r18, Y+4	; 0x04
     b62:	3d 81       	ldd	r19, Y+5	; 0x05
     b64:	22 30       	cpi	r18, 0x02	; 2
     b66:	31 05       	cpc	r19, r1
     b68:	2c f4       	brge	.+10     	; 0xb74 <DIO_voidSetPinDir+0x3e>
     b6a:	8c 81       	ldd	r24, Y+4	; 0x04
     b6c:	9d 81       	ldd	r25, Y+5	; 0x05
     b6e:	00 97       	sbiw	r24, 0x00	; 0
     b70:	71 f0       	breq	.+28     	; 0xb8e <DIO_voidSetPinDir+0x58>
     b72:	bc c0       	rjmp	.+376    	; 0xcec <DIO_voidSetPinDir+0x1b6>
     b74:	2c 81       	ldd	r18, Y+4	; 0x04
     b76:	3d 81       	ldd	r19, Y+5	; 0x05
     b78:	22 30       	cpi	r18, 0x02	; 2
     b7a:	31 05       	cpc	r19, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <DIO_voidSetPinDir+0x4a>
     b7e:	5f c0       	rjmp	.+190    	; 0xc3e <DIO_voidSetPinDir+0x108>
     b80:	8c 81       	ldd	r24, Y+4	; 0x04
     b82:	9d 81       	ldd	r25, Y+5	; 0x05
     b84:	83 30       	cpi	r24, 0x03	; 3
     b86:	91 05       	cpc	r25, r1
     b88:	09 f4       	brne	.+2      	; 0xb8c <DIO_voidSetPinDir+0x56>
     b8a:	85 c0       	rjmp	.+266    	; 0xc96 <DIO_voidSetPinDir+0x160>
     b8c:	af c0       	rjmp	.+350    	; 0xcec <DIO_voidSetPinDir+0x1b6>
{
	case 0:
		if(Dir==0)
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	88 23       	and	r24, r24
     b92:	a9 f4       	brne	.+42     	; 0xbbe <DIO_voidSetPinDir+0x88>
		{
			CLEAR_BIT(DDRA,Pin);
     b94:	aa e3       	ldi	r26, 0x3A	; 58
     b96:	b0 e0       	ldi	r27, 0x00	; 0
     b98:	ea e3       	ldi	r30, 0x3A	; 58
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	80 81       	ld	r24, Z
     b9e:	48 2f       	mov	r20, r24
     ba0:	8a 81       	ldd	r24, Y+2	; 0x02
     ba2:	28 2f       	mov	r18, r24
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	02 2e       	mov	r0, r18
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <DIO_voidSetPinDir+0x7c>
     bae:	88 0f       	add	r24, r24
     bb0:	99 1f       	adc	r25, r25
     bb2:	0a 94       	dec	r0
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <DIO_voidSetPinDir+0x78>
     bb6:	80 95       	com	r24
     bb8:	84 23       	and	r24, r20
     bba:	8c 93       	st	X, r24
     bbc:	97 c0       	rjmp	.+302    	; 0xcec <DIO_voidSetPinDir+0x1b6>

		}
		else
		{
			SET_BIT(DDRA,Pin);
     bbe:	aa e3       	ldi	r26, 0x3A	; 58
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	ea e3       	ldi	r30, 0x3A	; 58
     bc4:	f0 e0       	ldi	r31, 0x00	; 0
     bc6:	80 81       	ld	r24, Z
     bc8:	48 2f       	mov	r20, r24
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	28 2f       	mov	r18, r24
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	81 e0       	ldi	r24, 0x01	; 1
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	02 2e       	mov	r0, r18
     bd6:	02 c0       	rjmp	.+4      	; 0xbdc <DIO_voidSetPinDir+0xa6>
     bd8:	88 0f       	add	r24, r24
     bda:	99 1f       	adc	r25, r25
     bdc:	0a 94       	dec	r0
     bde:	e2 f7       	brpl	.-8      	; 0xbd8 <DIO_voidSetPinDir+0xa2>
     be0:	84 2b       	or	r24, r20
     be2:	8c 93       	st	X, r24
     be4:	83 c0       	rjmp	.+262    	; 0xcec <DIO_voidSetPinDir+0x1b6>



		break;
	case 1:
		if(Dir==0)
     be6:	8b 81       	ldd	r24, Y+3	; 0x03
     be8:	88 23       	and	r24, r24
     bea:	a9 f4       	brne	.+42     	; 0xc16 <DIO_voidSetPinDir+0xe0>
				{
					CLEAR_BIT(DDRB,Pin);
     bec:	a7 e3       	ldi	r26, 0x37	; 55
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	e7 e3       	ldi	r30, 0x37	; 55
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	80 81       	ld	r24, Z
     bf6:	48 2f       	mov	r20, r24
     bf8:	8a 81       	ldd	r24, Y+2	; 0x02
     bfa:	28 2f       	mov	r18, r24
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	02 2e       	mov	r0, r18
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <DIO_voidSetPinDir+0xd4>
     c06:	88 0f       	add	r24, r24
     c08:	99 1f       	adc	r25, r25
     c0a:	0a 94       	dec	r0
     c0c:	e2 f7       	brpl	.-8      	; 0xc06 <DIO_voidSetPinDir+0xd0>
     c0e:	80 95       	com	r24
     c10:	84 23       	and	r24, r20
     c12:	8c 93       	st	X, r24
     c14:	6b c0       	rjmp	.+214    	; 0xcec <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRB,Pin);
     c16:	a7 e3       	ldi	r26, 0x37	; 55
     c18:	b0 e0       	ldi	r27, 0x00	; 0
     c1a:	e7 e3       	ldi	r30, 0x37	; 55
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	80 81       	ld	r24, Z
     c20:	48 2f       	mov	r20, r24
     c22:	8a 81       	ldd	r24, Y+2	; 0x02
     c24:	28 2f       	mov	r18, r24
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	81 e0       	ldi	r24, 0x01	; 1
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	02 2e       	mov	r0, r18
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <DIO_voidSetPinDir+0xfe>
     c30:	88 0f       	add	r24, r24
     c32:	99 1f       	adc	r25, r25
     c34:	0a 94       	dec	r0
     c36:	e2 f7       	brpl	.-8      	; 0xc30 <DIO_voidSetPinDir+0xfa>
     c38:	84 2b       	or	r24, r20
     c3a:	8c 93       	st	X, r24
     c3c:	57 c0       	rjmp	.+174    	; 0xcec <DIO_voidSetPinDir+0x1b6>
				}


		break;
	case 2:
		if(Dir==0)
     c3e:	8b 81       	ldd	r24, Y+3	; 0x03
     c40:	88 23       	and	r24, r24
     c42:	a9 f4       	brne	.+42     	; 0xc6e <DIO_voidSetPinDir+0x138>
				{
					CLEAR_BIT(DDRC,Pin);
     c44:	a4 e3       	ldi	r26, 0x34	; 52
     c46:	b0 e0       	ldi	r27, 0x00	; 0
     c48:	e4 e3       	ldi	r30, 0x34	; 52
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	48 2f       	mov	r20, r24
     c50:	8a 81       	ldd	r24, Y+2	; 0x02
     c52:	28 2f       	mov	r18, r24
     c54:	30 e0       	ldi	r19, 0x00	; 0
     c56:	81 e0       	ldi	r24, 0x01	; 1
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	02 2e       	mov	r0, r18
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <DIO_voidSetPinDir+0x12c>
     c5e:	88 0f       	add	r24, r24
     c60:	99 1f       	adc	r25, r25
     c62:	0a 94       	dec	r0
     c64:	e2 f7       	brpl	.-8      	; 0xc5e <DIO_voidSetPinDir+0x128>
     c66:	80 95       	com	r24
     c68:	84 23       	and	r24, r20
     c6a:	8c 93       	st	X, r24
     c6c:	3f c0       	rjmp	.+126    	; 0xcec <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRC,Pin);
     c6e:	a4 e3       	ldi	r26, 0x34	; 52
     c70:	b0 e0       	ldi	r27, 0x00	; 0
     c72:	e4 e3       	ldi	r30, 0x34	; 52
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	80 81       	ld	r24, Z
     c78:	48 2f       	mov	r20, r24
     c7a:	8a 81       	ldd	r24, Y+2	; 0x02
     c7c:	28 2f       	mov	r18, r24
     c7e:	30 e0       	ldi	r19, 0x00	; 0
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	02 2e       	mov	r0, r18
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <DIO_voidSetPinDir+0x156>
     c88:	88 0f       	add	r24, r24
     c8a:	99 1f       	adc	r25, r25
     c8c:	0a 94       	dec	r0
     c8e:	e2 f7       	brpl	.-8      	; 0xc88 <DIO_voidSetPinDir+0x152>
     c90:	84 2b       	or	r24, r20
     c92:	8c 93       	st	X, r24
     c94:	2b c0       	rjmp	.+86     	; 0xcec <DIO_voidSetPinDir+0x1b6>


		break;

	case 3:
		if(Dir==0)
     c96:	8b 81       	ldd	r24, Y+3	; 0x03
     c98:	88 23       	and	r24, r24
     c9a:	a9 f4       	brne	.+42     	; 0xcc6 <DIO_voidSetPinDir+0x190>
				{
					CLEAR_BIT(DDRD,Pin);
     c9c:	a1 e3       	ldi	r26, 0x31	; 49
     c9e:	b0 e0       	ldi	r27, 0x00	; 0
     ca0:	e1 e3       	ldi	r30, 0x31	; 49
     ca2:	f0 e0       	ldi	r31, 0x00	; 0
     ca4:	80 81       	ld	r24, Z
     ca6:	48 2f       	mov	r20, r24
     ca8:	8a 81       	ldd	r24, Y+2	; 0x02
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	81 e0       	ldi	r24, 0x01	; 1
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	02 2e       	mov	r0, r18
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <DIO_voidSetPinDir+0x184>
     cb6:	88 0f       	add	r24, r24
     cb8:	99 1f       	adc	r25, r25
     cba:	0a 94       	dec	r0
     cbc:	e2 f7       	brpl	.-8      	; 0xcb6 <DIO_voidSetPinDir+0x180>
     cbe:	80 95       	com	r24
     cc0:	84 23       	and	r24, r20
     cc2:	8c 93       	st	X, r24
     cc4:	13 c0       	rjmp	.+38     	; 0xcec <DIO_voidSetPinDir+0x1b6>

				}
				else
				{
					SET_BIT(DDRD,Pin);
     cc6:	a1 e3       	ldi	r26, 0x31	; 49
     cc8:	b0 e0       	ldi	r27, 0x00	; 0
     cca:	e1 e3       	ldi	r30, 0x31	; 49
     ccc:	f0 e0       	ldi	r31, 0x00	; 0
     cce:	80 81       	ld	r24, Z
     cd0:	48 2f       	mov	r20, r24
     cd2:	8a 81       	ldd	r24, Y+2	; 0x02
     cd4:	28 2f       	mov	r18, r24
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	02 2e       	mov	r0, r18
     cde:	02 c0       	rjmp	.+4      	; 0xce4 <DIO_voidSetPinDir+0x1ae>
     ce0:	88 0f       	add	r24, r24
     ce2:	99 1f       	adc	r25, r25
     ce4:	0a 94       	dec	r0
     ce6:	e2 f7       	brpl	.-8      	; 0xce0 <DIO_voidSetPinDir+0x1aa>
     ce8:	84 2b       	or	r24, r20
     cea:	8c 93       	st	X, r24

		break;
}


}
     cec:	0f 90       	pop	r0
     cee:	0f 90       	pop	r0
     cf0:	0f 90       	pop	r0
     cf2:	0f 90       	pop	r0
     cf4:	0f 90       	pop	r0
     cf6:	cf 91       	pop	r28
     cf8:	df 91       	pop	r29
     cfa:	08 95       	ret

00000cfc <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Port,u8 Pin,u8 Value)
{
     cfc:	df 93       	push	r29
     cfe:	cf 93       	push	r28
     d00:	00 d0       	rcall	.+0      	; 0xd02 <DIO_voidSetPinValue+0x6>
     d02:	00 d0       	rcall	.+0      	; 0xd04 <DIO_voidSetPinValue+0x8>
     d04:	0f 92       	push	r0
     d06:	cd b7       	in	r28, 0x3d	; 61
     d08:	de b7       	in	r29, 0x3e	; 62
     d0a:	89 83       	std	Y+1, r24	; 0x01
     d0c:	6a 83       	std	Y+2, r22	; 0x02
     d0e:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	28 2f       	mov	r18, r24
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	3d 83       	std	Y+5, r19	; 0x05
     d18:	2c 83       	std	Y+4, r18	; 0x04
     d1a:	8c 81       	ldd	r24, Y+4	; 0x04
     d1c:	9d 81       	ldd	r25, Y+5	; 0x05
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	91 05       	cpc	r25, r1
     d22:	09 f4       	brne	.+2      	; 0xd26 <DIO_voidSetPinValue+0x2a>
     d24:	43 c0       	rjmp	.+134    	; 0xdac <DIO_voidSetPinValue+0xb0>
     d26:	2c 81       	ldd	r18, Y+4	; 0x04
     d28:	3d 81       	ldd	r19, Y+5	; 0x05
     d2a:	22 30       	cpi	r18, 0x02	; 2
     d2c:	31 05       	cpc	r19, r1
     d2e:	2c f4       	brge	.+10     	; 0xd3a <DIO_voidSetPinValue+0x3e>
     d30:	8c 81       	ldd	r24, Y+4	; 0x04
     d32:	9d 81       	ldd	r25, Y+5	; 0x05
     d34:	00 97       	sbiw	r24, 0x00	; 0
     d36:	71 f0       	breq	.+28     	; 0xd54 <DIO_voidSetPinValue+0x58>
     d38:	bc c0       	rjmp	.+376    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>
     d3a:	2c 81       	ldd	r18, Y+4	; 0x04
     d3c:	3d 81       	ldd	r19, Y+5	; 0x05
     d3e:	22 30       	cpi	r18, 0x02	; 2
     d40:	31 05       	cpc	r19, r1
     d42:	09 f4       	brne	.+2      	; 0xd46 <DIO_voidSetPinValue+0x4a>
     d44:	5f c0       	rjmp	.+190    	; 0xe04 <DIO_voidSetPinValue+0x108>
     d46:	8c 81       	ldd	r24, Y+4	; 0x04
     d48:	9d 81       	ldd	r25, Y+5	; 0x05
     d4a:	83 30       	cpi	r24, 0x03	; 3
     d4c:	91 05       	cpc	r25, r1
     d4e:	09 f4       	brne	.+2      	; 0xd52 <DIO_voidSetPinValue+0x56>
     d50:	85 c0       	rjmp	.+266    	; 0xe5c <DIO_voidSetPinValue+0x160>
     d52:	af c0       	rjmp	.+350    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>
	{
		case 0:
			if(Value==0)
     d54:	8b 81       	ldd	r24, Y+3	; 0x03
     d56:	88 23       	and	r24, r24
     d58:	a9 f4       	brne	.+42     	; 0xd84 <DIO_voidSetPinValue+0x88>
					{
						CLEAR_BIT(PORTA,Pin);
     d5a:	ab e3       	ldi	r26, 0x3B	; 59
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
     d5e:	eb e3       	ldi	r30, 0x3B	; 59
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	80 81       	ld	r24, Z
     d64:	48 2f       	mov	r20, r24
     d66:	8a 81       	ldd	r24, Y+2	; 0x02
     d68:	28 2f       	mov	r18, r24
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	02 2e       	mov	r0, r18
     d72:	02 c0       	rjmp	.+4      	; 0xd78 <DIO_voidSetPinValue+0x7c>
     d74:	88 0f       	add	r24, r24
     d76:	99 1f       	adc	r25, r25
     d78:	0a 94       	dec	r0
     d7a:	e2 f7       	brpl	.-8      	; 0xd74 <DIO_voidSetPinValue+0x78>
     d7c:	80 95       	com	r24
     d7e:	84 23       	and	r24, r20
     d80:	8c 93       	st	X, r24
     d82:	97 c0       	rjmp	.+302    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTA,Pin);
     d84:	ab e3       	ldi	r26, 0x3B	; 59
     d86:	b0 e0       	ldi	r27, 0x00	; 0
     d88:	eb e3       	ldi	r30, 0x3B	; 59
     d8a:	f0 e0       	ldi	r31, 0x00	; 0
     d8c:	80 81       	ld	r24, Z
     d8e:	48 2f       	mov	r20, r24
     d90:	8a 81       	ldd	r24, Y+2	; 0x02
     d92:	28 2f       	mov	r18, r24
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	02 2e       	mov	r0, r18
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <DIO_voidSetPinValue+0xa6>
     d9e:	88 0f       	add	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	0a 94       	dec	r0
     da4:	e2 f7       	brpl	.-8      	; 0xd9e <DIO_voidSetPinValue+0xa2>
     da6:	84 2b       	or	r24, r20
     da8:	8c 93       	st	X, r24
     daa:	83 c0       	rjmp	.+262    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>
					}


			break;
		case 1:
			if(Value==0)
     dac:	8b 81       	ldd	r24, Y+3	; 0x03
     dae:	88 23       	and	r24, r24
     db0:	a9 f4       	brne	.+42     	; 0xddc <DIO_voidSetPinValue+0xe0>
				{
				CLEAR_BIT(PORTB,Pin);
     db2:	a8 e3       	ldi	r26, 0x38	; 56
     db4:	b0 e0       	ldi	r27, 0x00	; 0
     db6:	e8 e3       	ldi	r30, 0x38	; 56
     db8:	f0 e0       	ldi	r31, 0x00	; 0
     dba:	80 81       	ld	r24, Z
     dbc:	48 2f       	mov	r20, r24
     dbe:	8a 81       	ldd	r24, Y+2	; 0x02
     dc0:	28 2f       	mov	r18, r24
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	81 e0       	ldi	r24, 0x01	; 1
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	02 2e       	mov	r0, r18
     dca:	02 c0       	rjmp	.+4      	; 0xdd0 <DIO_voidSetPinValue+0xd4>
     dcc:	88 0f       	add	r24, r24
     dce:	99 1f       	adc	r25, r25
     dd0:	0a 94       	dec	r0
     dd2:	e2 f7       	brpl	.-8      	; 0xdcc <DIO_voidSetPinValue+0xd0>
     dd4:	80 95       	com	r24
     dd6:	84 23       	and	r24, r20
     dd8:	8c 93       	st	X, r24
     dda:	6b c0       	rjmp	.+214    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
				SET_BIT(PORTB,Pin);
     ddc:	a8 e3       	ldi	r26, 0x38	; 56
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	e8 e3       	ldi	r30, 0x38	; 56
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	48 2f       	mov	r20, r24
     de8:	8a 81       	ldd	r24, Y+2	; 0x02
     dea:	28 2f       	mov	r18, r24
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	81 e0       	ldi	r24, 0x01	; 1
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	02 2e       	mov	r0, r18
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <DIO_voidSetPinValue+0xfe>
     df6:	88 0f       	add	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	0a 94       	dec	r0
     dfc:	e2 f7       	brpl	.-8      	; 0xdf6 <DIO_voidSetPinValue+0xfa>
     dfe:	84 2b       	or	r24, r20
     e00:	8c 93       	st	X, r24
     e02:	57 c0       	rjmp	.+174    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>
				}

			break;
		case 2:
			if(Value==0)
     e04:	8b 81       	ldd	r24, Y+3	; 0x03
     e06:	88 23       	and	r24, r24
     e08:	a9 f4       	brne	.+42     	; 0xe34 <DIO_voidSetPinValue+0x138>
				{
				CLEAR_BIT(PORTC,Pin);
     e0a:	a5 e3       	ldi	r26, 0x35	; 53
     e0c:	b0 e0       	ldi	r27, 0x00	; 0
     e0e:	e5 e3       	ldi	r30, 0x35	; 53
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	80 81       	ld	r24, Z
     e14:	48 2f       	mov	r20, r24
     e16:	8a 81       	ldd	r24, Y+2	; 0x02
     e18:	28 2f       	mov	r18, r24
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	02 2e       	mov	r0, r18
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <DIO_voidSetPinValue+0x12c>
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	0a 94       	dec	r0
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <DIO_voidSetPinValue+0x128>
     e2c:	80 95       	com	r24
     e2e:	84 23       	and	r24, r20
     e30:	8c 93       	st	X, r24
     e32:	3f c0       	rjmp	.+126    	; 0xeb2 <DIO_voidSetPinValue+0x1b6>

				}
				else
				{
					SET_BIT(PORTC,Pin);
     e34:	a5 e3       	ldi	r26, 0x35	; 53
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	e5 e3       	ldi	r30, 0x35	; 53
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	80 81       	ld	r24, Z
     e3e:	48 2f       	mov	r20, r24
     e40:	8a 81       	ldd	r24, Y+2	; 0x02
     e42:	28 2f       	mov	r18, r24
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	81 e0       	ldi	r24, 0x01	; 1
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	02 2e       	mov	r0, r18
     e4c:	02 c0       	rjmp	.+4      	; 0xe52 <DIO_voidSetPinValue+0x156>
     e4e:	88 0f       	add	r24, r24
     e50:	99 1f       	adc	r25, r25
     e52:	0a 94       	dec	r0
     e54:	e2 f7       	brpl	.-8      	; 0xe4e <DIO_voidSetPinValue+0x152>
     e56:	84 2b       	or	r24, r20
     e58:	8c 93       	st	X, r24
     e5a:	2b c0       	rjmp	.+86     	; 0xeb2 <DIO_voidSetPinValue+0x1b6>
				}
			break;

		case 3:
			if(Value==0)
     e5c:	8b 81       	ldd	r24, Y+3	; 0x03
     e5e:	88 23       	and	r24, r24
     e60:	a9 f4       	brne	.+42     	; 0xe8c <DIO_voidSetPinValue+0x190>
					{
					CLEAR_BIT(PORTD,Pin);
     e62:	a2 e3       	ldi	r26, 0x32	; 50
     e64:	b0 e0       	ldi	r27, 0x00	; 0
     e66:	e2 e3       	ldi	r30, 0x32	; 50
     e68:	f0 e0       	ldi	r31, 0x00	; 0
     e6a:	80 81       	ld	r24, Z
     e6c:	48 2f       	mov	r20, r24
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	28 2f       	mov	r18, r24
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	02 2e       	mov	r0, r18
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <DIO_voidSetPinValue+0x184>
     e7c:	88 0f       	add	r24, r24
     e7e:	99 1f       	adc	r25, r25
     e80:	0a 94       	dec	r0
     e82:	e2 f7       	brpl	.-8      	; 0xe7c <DIO_voidSetPinValue+0x180>
     e84:	80 95       	com	r24
     e86:	84 23       	and	r24, r20
     e88:	8c 93       	st	X, r24
     e8a:	13 c0       	rjmp	.+38     	; 0xeb2 <DIO_voidSetPinValue+0x1b6>

					}
					else
					{
						SET_BIT(PORTD,Pin);
     e8c:	a2 e3       	ldi	r26, 0x32	; 50
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	e2 e3       	ldi	r30, 0x32	; 50
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	80 81       	ld	r24, Z
     e96:	48 2f       	mov	r20, r24
     e98:	8a 81       	ldd	r24, Y+2	; 0x02
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	02 2e       	mov	r0, r18
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_voidSetPinValue+0x1ae>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	0a 94       	dec	r0
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_voidSetPinValue+0x1aa>
     eae:	84 2b       	or	r24, r20
     eb0:	8c 93       	st	X, r24

			break;
	}


}
     eb2:	0f 90       	pop	r0
     eb4:	0f 90       	pop	r0
     eb6:	0f 90       	pop	r0
     eb8:	0f 90       	pop	r0
     eba:	0f 90       	pop	r0
     ebc:	cf 91       	pop	r28
     ebe:	df 91       	pop	r29
     ec0:	08 95       	ret

00000ec2 <DIO_voidTogglePinValue>:
void DIO_voidTogglePinValue(u8 Port,u8 Pin)
{
     ec2:	df 93       	push	r29
     ec4:	cf 93       	push	r28
     ec6:	00 d0       	rcall	.+0      	; 0xec8 <DIO_voidTogglePinValue+0x6>
     ec8:	00 d0       	rcall	.+0      	; 0xeca <DIO_voidTogglePinValue+0x8>
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
     ece:	89 83       	std	Y+1, r24	; 0x01
     ed0:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port)
     ed2:	89 81       	ldd	r24, Y+1	; 0x01
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	3c 83       	std	Y+4, r19	; 0x04
     eda:	2b 83       	std	Y+3, r18	; 0x03
     edc:	8b 81       	ldd	r24, Y+3	; 0x03
     ede:	9c 81       	ldd	r25, Y+4	; 0x04
     ee0:	81 30       	cpi	r24, 0x01	; 1
     ee2:	91 05       	cpc	r25, r1
     ee4:	49 f1       	breq	.+82     	; 0xf38 <DIO_voidTogglePinValue+0x76>
     ee6:	2b 81       	ldd	r18, Y+3	; 0x03
     ee8:	3c 81       	ldd	r19, Y+4	; 0x04
     eea:	22 30       	cpi	r18, 0x02	; 2
     eec:	31 05       	cpc	r19, r1
     eee:	2c f4       	brge	.+10     	; 0xefa <DIO_voidTogglePinValue+0x38>
     ef0:	8b 81       	ldd	r24, Y+3	; 0x03
     ef2:	9c 81       	ldd	r25, Y+4	; 0x04
     ef4:	00 97       	sbiw	r24, 0x00	; 0
     ef6:	61 f0       	breq	.+24     	; 0xf10 <DIO_voidTogglePinValue+0x4e>
     ef8:	5a c0       	rjmp	.+180    	; 0xfae <DIO_voidTogglePinValue+0xec>
     efa:	2b 81       	ldd	r18, Y+3	; 0x03
     efc:	3c 81       	ldd	r19, Y+4	; 0x04
     efe:	22 30       	cpi	r18, 0x02	; 2
     f00:	31 05       	cpc	r19, r1
     f02:	71 f1       	breq	.+92     	; 0xf60 <DIO_voidTogglePinValue+0x9e>
     f04:	8b 81       	ldd	r24, Y+3	; 0x03
     f06:	9c 81       	ldd	r25, Y+4	; 0x04
     f08:	83 30       	cpi	r24, 0x03	; 3
     f0a:	91 05       	cpc	r25, r1
     f0c:	e9 f1       	breq	.+122    	; 0xf88 <DIO_voidTogglePinValue+0xc6>
     f0e:	4f c0       	rjmp	.+158    	; 0xfae <DIO_voidTogglePinValue+0xec>
	{
	case 0:
		TOGGLE_BIT(PORTA,Pin);
     f10:	ab e3       	ldi	r26, 0x3B	; 59
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	eb e3       	ldi	r30, 0x3B	; 59
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	48 2f       	mov	r20, r24
     f1c:	8a 81       	ldd	r24, Y+2	; 0x02
     f1e:	28 2f       	mov	r18, r24
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 2e       	mov	r0, r18
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <DIO_voidTogglePinValue+0x6c>
     f2a:	88 0f       	add	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	0a 94       	dec	r0
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <DIO_voidTogglePinValue+0x68>
     f32:	84 27       	eor	r24, r20
     f34:	8c 93       	st	X, r24
     f36:	3b c0       	rjmp	.+118    	; 0xfae <DIO_voidTogglePinValue+0xec>

		break;
	case 1:
		TOGGLE_BIT(PORTB,Pin);
     f38:	a8 e3       	ldi	r26, 0x38	; 56
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	e8 e3       	ldi	r30, 0x38	; 56
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	80 81       	ld	r24, Z
     f42:	48 2f       	mov	r20, r24
     f44:	8a 81       	ldd	r24, Y+2	; 0x02
     f46:	28 2f       	mov	r18, r24
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	02 2e       	mov	r0, r18
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <DIO_voidTogglePinValue+0x94>
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	0a 94       	dec	r0
     f58:	e2 f7       	brpl	.-8      	; 0xf52 <DIO_voidTogglePinValue+0x90>
     f5a:	84 27       	eor	r24, r20
     f5c:	8c 93       	st	X, r24
     f5e:	27 c0       	rjmp	.+78     	; 0xfae <DIO_voidTogglePinValue+0xec>

		break;
	case 2:
		TOGGLE_BIT(PORTC,Pin);
     f60:	a5 e3       	ldi	r26, 0x35	; 53
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e5 e3       	ldi	r30, 0x35	; 53
     f66:	f0 e0       	ldi	r31, 0x00	; 0
     f68:	80 81       	ld	r24, Z
     f6a:	48 2f       	mov	r20, r24
     f6c:	8a 81       	ldd	r24, Y+2	; 0x02
     f6e:	28 2f       	mov	r18, r24
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	02 2e       	mov	r0, r18
     f78:	02 c0       	rjmp	.+4      	; 0xf7e <DIO_voidTogglePinValue+0xbc>
     f7a:	88 0f       	add	r24, r24
     f7c:	99 1f       	adc	r25, r25
     f7e:	0a 94       	dec	r0
     f80:	e2 f7       	brpl	.-8      	; 0xf7a <DIO_voidTogglePinValue+0xb8>
     f82:	84 27       	eor	r24, r20
     f84:	8c 93       	st	X, r24
     f86:	13 c0       	rjmp	.+38     	; 0xfae <DIO_voidTogglePinValue+0xec>

		break;

	case 3:
		TOGGLE_BIT(PORTD,Pin);
     f88:	a2 e3       	ldi	r26, 0x32	; 50
     f8a:	b0 e0       	ldi	r27, 0x00	; 0
     f8c:	e2 e3       	ldi	r30, 0x32	; 50
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 81       	ld	r24, Z
     f92:	48 2f       	mov	r20, r24
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	28 2f       	mov	r18, r24
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	02 2e       	mov	r0, r18
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <DIO_voidTogglePinValue+0xe4>
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	0a 94       	dec	r0
     fa8:	e2 f7       	brpl	.-8      	; 0xfa2 <DIO_voidTogglePinValue+0xe0>
     faa:	84 27       	eor	r24, r20
     fac:	8c 93       	st	X, r24

		break;

	}

}
     fae:	0f 90       	pop	r0
     fb0:	0f 90       	pop	r0
     fb2:	0f 90       	pop	r0
     fb4:	0f 90       	pop	r0
     fb6:	cf 91       	pop	r28
     fb8:	df 91       	pop	r29
     fba:	08 95       	ret

00000fbc <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 PORT,u8 Pin)
{
     fbc:	df 93       	push	r29
     fbe:	cf 93       	push	r28
     fc0:	00 d0       	rcall	.+0      	; 0xfc2 <DIO_u8GetPinValue+0x6>
     fc2:	00 d0       	rcall	.+0      	; 0xfc4 <DIO_u8GetPinValue+0x8>
     fc4:	00 d0       	rcall	.+0      	; 0xfc6 <DIO_u8GetPinValue+0xa>
     fc6:	cd b7       	in	r28, 0x3d	; 61
     fc8:	de b7       	in	r29, 0x3e	; 62
     fca:	89 83       	std	Y+1, r24	; 0x01
     fcc:	6a 83       	std	Y+2, r22	; 0x02
switch(PORT)
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	3d 83       	std	Y+5, r19	; 0x05
     fd6:	2c 83       	std	Y+4, r18	; 0x04
     fd8:	4c 81       	ldd	r20, Y+4	; 0x04
     fda:	5d 81       	ldd	r21, Y+5	; 0x05
     fdc:	41 30       	cpi	r20, 0x01	; 1
     fde:	51 05       	cpc	r21, r1
     fe0:	49 f1       	breq	.+82     	; 0x1034 <DIO_u8GetPinValue+0x78>
     fe2:	8c 81       	ldd	r24, Y+4	; 0x04
     fe4:	9d 81       	ldd	r25, Y+5	; 0x05
     fe6:	82 30       	cpi	r24, 0x02	; 2
     fe8:	91 05       	cpc	r25, r1
     fea:	34 f4       	brge	.+12     	; 0xff8 <DIO_u8GetPinValue+0x3c>
     fec:	2c 81       	ldd	r18, Y+4	; 0x04
     fee:	3d 81       	ldd	r19, Y+5	; 0x05
     ff0:	21 15       	cp	r18, r1
     ff2:	31 05       	cpc	r19, r1
     ff4:	61 f0       	breq	.+24     	; 0x100e <DIO_u8GetPinValue+0x52>
     ff6:	57 c0       	rjmp	.+174    	; 0x10a6 <DIO_u8GetPinValue+0xea>
     ff8:	4c 81       	ldd	r20, Y+4	; 0x04
     ffa:	5d 81       	ldd	r21, Y+5	; 0x05
     ffc:	42 30       	cpi	r20, 0x02	; 2
     ffe:	51 05       	cpc	r21, r1
    1000:	61 f1       	breq	.+88     	; 0x105a <DIO_u8GetPinValue+0x9e>
    1002:	8c 81       	ldd	r24, Y+4	; 0x04
    1004:	9d 81       	ldd	r25, Y+5	; 0x05
    1006:	83 30       	cpi	r24, 0x03	; 3
    1008:	91 05       	cpc	r25, r1
    100a:	d1 f1       	breq	.+116    	; 0x1080 <DIO_u8GetPinValue+0xc4>
    100c:	4c c0       	rjmp	.+152    	; 0x10a6 <DIO_u8GetPinValue+0xea>
{
case 0:
	return  GET_BIT(PINA,Pin);
    100e:	e9 e3       	ldi	r30, 0x39	; 57
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	80 81       	ld	r24, Z
    1014:	28 2f       	mov	r18, r24
    1016:	30 e0       	ldi	r19, 0x00	; 0
    1018:	8a 81       	ldd	r24, Y+2	; 0x02
    101a:	88 2f       	mov	r24, r24
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	a9 01       	movw	r20, r18
    1020:	02 c0       	rjmp	.+4      	; 0x1026 <DIO_u8GetPinValue+0x6a>
    1022:	55 95       	asr	r21
    1024:	47 95       	ror	r20
    1026:	8a 95       	dec	r24
    1028:	e2 f7       	brpl	.-8      	; 0x1022 <DIO_u8GetPinValue+0x66>
    102a:	ca 01       	movw	r24, r20
    102c:	58 2f       	mov	r21, r24
    102e:	51 70       	andi	r21, 0x01	; 1
    1030:	5b 83       	std	Y+3, r21	; 0x03
    1032:	3a c0       	rjmp	.+116    	; 0x10a8 <DIO_u8GetPinValue+0xec>

case 1:
	return GET_BIT(PINB,Pin);
    1034:	e6 e3       	ldi	r30, 0x36	; 54
    1036:	f0 e0       	ldi	r31, 0x00	; 0
    1038:	80 81       	ld	r24, Z
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	8a 81       	ldd	r24, Y+2	; 0x02
    1040:	88 2f       	mov	r24, r24
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	a9 01       	movw	r20, r18
    1046:	02 c0       	rjmp	.+4      	; 0x104c <DIO_u8GetPinValue+0x90>
    1048:	55 95       	asr	r21
    104a:	47 95       	ror	r20
    104c:	8a 95       	dec	r24
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <DIO_u8GetPinValue+0x8c>
    1050:	ca 01       	movw	r24, r20
    1052:	58 2f       	mov	r21, r24
    1054:	51 70       	andi	r21, 0x01	; 1
    1056:	5b 83       	std	Y+3, r21	; 0x03
    1058:	27 c0       	rjmp	.+78     	; 0x10a8 <DIO_u8GetPinValue+0xec>
case 2:
	return GET_BIT(PINC,Pin);
    105a:	e3 e3       	ldi	r30, 0x33	; 51
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	80 81       	ld	r24, Z
    1060:	28 2f       	mov	r18, r24
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	8a 81       	ldd	r24, Y+2	; 0x02
    1066:	88 2f       	mov	r24, r24
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	a9 01       	movw	r20, r18
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <DIO_u8GetPinValue+0xb6>
    106e:	55 95       	asr	r21
    1070:	47 95       	ror	r20
    1072:	8a 95       	dec	r24
    1074:	e2 f7       	brpl	.-8      	; 0x106e <DIO_u8GetPinValue+0xb2>
    1076:	ca 01       	movw	r24, r20
    1078:	58 2f       	mov	r21, r24
    107a:	51 70       	andi	r21, 0x01	; 1
    107c:	5b 83       	std	Y+3, r21	; 0x03
    107e:	14 c0       	rjmp	.+40     	; 0x10a8 <DIO_u8GetPinValue+0xec>
case 3:
	return GET_BIT(PIND,Pin);
    1080:	e0 e3       	ldi	r30, 0x30	; 48
    1082:	f0 e0       	ldi	r31, 0x00	; 0
    1084:	80 81       	ld	r24, Z
    1086:	28 2f       	mov	r18, r24
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	8a 81       	ldd	r24, Y+2	; 0x02
    108c:	88 2f       	mov	r24, r24
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	a9 01       	movw	r20, r18
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <DIO_u8GetPinValue+0xdc>
    1094:	55 95       	asr	r21
    1096:	47 95       	ror	r20
    1098:	8a 95       	dec	r24
    109a:	e2 f7       	brpl	.-8      	; 0x1094 <DIO_u8GetPinValue+0xd8>
    109c:	ca 01       	movw	r24, r20
    109e:	58 2f       	mov	r21, r24
    10a0:	51 70       	andi	r21, 0x01	; 1
    10a2:	5b 83       	std	Y+3, r21	; 0x03
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <DIO_u8GetPinValue+0xec>
    10a6:	02 c0       	rjmp	.+4      	; 0x10ac <DIO_u8GetPinValue+0xf0>


}


}
    10a8:	8b 81       	ldd	r24, Y+3	; 0x03
    10aa:	8e 83       	std	Y+6, r24	; 0x06
    10ac:	8e 81       	ldd	r24, Y+6	; 0x06
    10ae:	26 96       	adiw	r28, 0x06	; 6
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	f8 94       	cli
    10b4:	de bf       	out	0x3e, r29	; 62
    10b6:	0f be       	out	0x3f, r0	; 63
    10b8:	cd bf       	out	0x3d, r28	; 61
    10ba:	cf 91       	pop	r28
    10bc:	df 91       	pop	r29
    10be:	08 95       	ret

000010c0 <stepper_voidInit>:
#include"STEPPER_interface.h"
#include<util/delay.h>
#define F_CPU 12000000

void stepper_voidInit(void)
{
    10c0:	df 93       	push	r29
    10c2:	cf 93       	push	r28
    10c4:	cd b7       	in	r28, 0x3d	; 61
    10c6:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDir(PORT_C,PIN_0,OUTPUT);
    10c8:	82 e0       	ldi	r24, 0x02	; 2
    10ca:	60 e0       	ldi	r22, 0x00	; 0
    10cc:	41 e0       	ldi	r20, 0x01	; 1
    10ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_1,OUTPUT);
    10d2:	82 e0       	ldi	r24, 0x02	; 2
    10d4:	61 e0       	ldi	r22, 0x01	; 1
    10d6:	41 e0       	ldi	r20, 0x01	; 1
    10d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_2,OUTPUT);
    10dc:	82 e0       	ldi	r24, 0x02	; 2
    10de:	62 e0       	ldi	r22, 0x02	; 2
    10e0:	41 e0       	ldi	r20, 0x01	; 1
    10e2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_3,OUTPUT);
    10e6:	82 e0       	ldi	r24, 0x02	; 2
    10e8:	63 e0       	ldi	r22, 0x03	; 3
    10ea:	41 e0       	ldi	r20, 0x01	; 1
    10ec:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_voidSetPinDir>
}
    10f0:	cf 91       	pop	r28
    10f2:	df 91       	pop	r29
    10f4:	08 95       	ret

000010f6 <stepper_voidRightForever>:
void stepper_voidRightForever(void)
{
    10f6:	df 93       	push	r29
    10f8:	cf 93       	push	r28
    10fa:	cd b7       	in	r28, 0x3d	; 61
    10fc:	de b7       	in	r29, 0x3e	; 62
    10fe:	e8 97       	sbiw	r28, 0x38	; 56
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61
		while(1)
			{
				DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    110a:	82 e0       	ldi	r24, 0x02	; 2
    110c:	60 e0       	ldi	r22, 0x00	; 0
    110e:	41 e0       	ldi	r20, 0x01	; 1
    1110:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1114:	82 e0       	ldi	r24, 0x02	; 2
    1116:	61 e0       	ldi	r22, 0x01	; 1
    1118:	40 e0       	ldi	r20, 0x00	; 0
    111a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    111e:	82 e0       	ldi	r24, 0x02	; 2
    1120:	62 e0       	ldi	r22, 0x02	; 2
    1122:	40 e0       	ldi	r20, 0x00	; 0
    1124:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1128:	82 e0       	ldi	r24, 0x02	; 2
    112a:	63 e0       	ldi	r22, 0x03	; 3
    112c:	40 e0       	ldi	r20, 0x00	; 0
    112e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	a0 e0       	ldi	r26, 0x00	; 0
    1138:	b0 e4       	ldi	r27, 0x40	; 64
    113a:	8d ab       	std	Y+53, r24	; 0x35
    113c:	9e ab       	std	Y+54, r25	; 0x36
    113e:	af ab       	std	Y+55, r26	; 0x37
    1140:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1142:	6d a9       	ldd	r22, Y+53	; 0x35
    1144:	7e a9       	ldd	r23, Y+54	; 0x36
    1146:	8f a9       	ldd	r24, Y+55	; 0x37
    1148:	98 ad       	ldd	r25, Y+56	; 0x38
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	30 e8       	ldi	r19, 0x80	; 128
    114e:	4b e3       	ldi	r20, 0x3B	; 59
    1150:	55 e4       	ldi	r21, 0x45	; 69
    1152:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1156:	dc 01       	movw	r26, r24
    1158:	cb 01       	movw	r24, r22
    115a:	89 ab       	std	Y+49, r24	; 0x31
    115c:	9a ab       	std	Y+50, r25	; 0x32
    115e:	ab ab       	std	Y+51, r26	; 0x33
    1160:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1162:	69 a9       	ldd	r22, Y+49	; 0x31
    1164:	7a a9       	ldd	r23, Y+50	; 0x32
    1166:	8b a9       	ldd	r24, Y+51	; 0x33
    1168:	9c a9       	ldd	r25, Y+52	; 0x34
    116a:	20 e0       	ldi	r18, 0x00	; 0
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	40 e8       	ldi	r20, 0x80	; 128
    1170:	5f e3       	ldi	r21, 0x3F	; 63
    1172:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1176:	88 23       	and	r24, r24
    1178:	2c f4       	brge	.+10     	; 0x1184 <stepper_voidRightForever+0x8e>
		__ticks = 1;
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	98 ab       	std	Y+48, r25	; 0x30
    1180:	8f a7       	std	Y+47, r24	; 0x2f
    1182:	3f c0       	rjmp	.+126    	; 0x1202 <stepper_voidRightForever+0x10c>
	else if (__tmp > 65535)
    1184:	69 a9       	ldd	r22, Y+49	; 0x31
    1186:	7a a9       	ldd	r23, Y+50	; 0x32
    1188:	8b a9       	ldd	r24, Y+51	; 0x33
    118a:	9c a9       	ldd	r25, Y+52	; 0x34
    118c:	20 e0       	ldi	r18, 0x00	; 0
    118e:	3f ef       	ldi	r19, 0xFF	; 255
    1190:	4f e7       	ldi	r20, 0x7F	; 127
    1192:	57 e4       	ldi	r21, 0x47	; 71
    1194:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1198:	18 16       	cp	r1, r24
    119a:	4c f5       	brge	.+82     	; 0x11ee <stepper_voidRightForever+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    119c:	6d a9       	ldd	r22, Y+53	; 0x35
    119e:	7e a9       	ldd	r23, Y+54	; 0x36
    11a0:	8f a9       	ldd	r24, Y+55	; 0x37
    11a2:	98 ad       	ldd	r25, Y+56	; 0x38
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	40 e2       	ldi	r20, 0x20	; 32
    11aa:	51 e4       	ldi	r21, 0x41	; 65
    11ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11b0:	dc 01       	movw	r26, r24
    11b2:	cb 01       	movw	r24, r22
    11b4:	bc 01       	movw	r22, r24
    11b6:	cd 01       	movw	r24, r26
    11b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11bc:	dc 01       	movw	r26, r24
    11be:	cb 01       	movw	r24, r22
    11c0:	98 ab       	std	Y+48, r25	; 0x30
    11c2:	8f a7       	std	Y+47, r24	; 0x2f
    11c4:	0f c0       	rjmp	.+30     	; 0x11e4 <stepper_voidRightForever+0xee>
    11c6:	8c e2       	ldi	r24, 0x2C	; 44
    11c8:	91 e0       	ldi	r25, 0x01	; 1
    11ca:	9e a7       	std	Y+46, r25	; 0x2e
    11cc:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    11d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    11d2:	01 97       	sbiw	r24, 0x01	; 1
    11d4:	f1 f7       	brne	.-4      	; 0x11d2 <stepper_voidRightForever+0xdc>
    11d6:	9e a7       	std	Y+46, r25	; 0x2e
    11d8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11da:	8f a5       	ldd	r24, Y+47	; 0x2f
    11dc:	98 a9       	ldd	r25, Y+48	; 0x30
    11de:	01 97       	sbiw	r24, 0x01	; 1
    11e0:	98 ab       	std	Y+48, r25	; 0x30
    11e2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    11e6:	98 a9       	ldd	r25, Y+48	; 0x30
    11e8:	00 97       	sbiw	r24, 0x00	; 0
    11ea:	69 f7       	brne	.-38     	; 0x11c6 <stepper_voidRightForever+0xd0>
    11ec:	14 c0       	rjmp	.+40     	; 0x1216 <stepper_voidRightForever+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11ee:	69 a9       	ldd	r22, Y+49	; 0x31
    11f0:	7a a9       	ldd	r23, Y+50	; 0x32
    11f2:	8b a9       	ldd	r24, Y+51	; 0x33
    11f4:	9c a9       	ldd	r25, Y+52	; 0x34
    11f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11fa:	dc 01       	movw	r26, r24
    11fc:	cb 01       	movw	r24, r22
    11fe:	98 ab       	std	Y+48, r25	; 0x30
    1200:	8f a7       	std	Y+47, r24	; 0x2f
    1202:	8f a5       	ldd	r24, Y+47	; 0x2f
    1204:	98 a9       	ldd	r25, Y+48	; 0x30
    1206:	9c a7       	std	Y+44, r25	; 0x2c
    1208:	8b a7       	std	Y+43, r24	; 0x2b
    120a:	8b a5       	ldd	r24, Y+43	; 0x2b
    120c:	9c a5       	ldd	r25, Y+44	; 0x2c
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	f1 f7       	brne	.-4      	; 0x120e <stepper_voidRightForever+0x118>
    1212:	9c a7       	std	Y+44, r25	; 0x2c
    1214:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(2);

				DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1216:	82 e0       	ldi	r24, 0x02	; 2
    1218:	60 e0       	ldi	r22, 0x00	; 0
    121a:	40 e0       	ldi	r20, 0x00	; 0
    121c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    1220:	82 e0       	ldi	r24, 0x02	; 2
    1222:	61 e0       	ldi	r22, 0x01	; 1
    1224:	41 e0       	ldi	r20, 0x01	; 1
    1226:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    122a:	82 e0       	ldi	r24, 0x02	; 2
    122c:	62 e0       	ldi	r22, 0x02	; 2
    122e:	40 e0       	ldi	r20, 0x00	; 0
    1230:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1234:	82 e0       	ldi	r24, 0x02	; 2
    1236:	63 e0       	ldi	r22, 0x03	; 3
    1238:	40 e0       	ldi	r20, 0x00	; 0
    123a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	a0 e0       	ldi	r26, 0x00	; 0
    1244:	b0 e4       	ldi	r27, 0x40	; 64
    1246:	8f a3       	std	Y+39, r24	; 0x27
    1248:	98 a7       	std	Y+40, r25	; 0x28
    124a:	a9 a7       	std	Y+41, r26	; 0x29
    124c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    124e:	6f a1       	ldd	r22, Y+39	; 0x27
    1250:	78 a5       	ldd	r23, Y+40	; 0x28
    1252:	89 a5       	ldd	r24, Y+41	; 0x29
    1254:	9a a5       	ldd	r25, Y+42	; 0x2a
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	30 e8       	ldi	r19, 0x80	; 128
    125a:	4b e3       	ldi	r20, 0x3B	; 59
    125c:	55 e4       	ldi	r21, 0x45	; 69
    125e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1262:	dc 01       	movw	r26, r24
    1264:	cb 01       	movw	r24, r22
    1266:	8b a3       	std	Y+35, r24	; 0x23
    1268:	9c a3       	std	Y+36, r25	; 0x24
    126a:	ad a3       	std	Y+37, r26	; 0x25
    126c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    126e:	6b a1       	ldd	r22, Y+35	; 0x23
    1270:	7c a1       	ldd	r23, Y+36	; 0x24
    1272:	8d a1       	ldd	r24, Y+37	; 0x25
    1274:	9e a1       	ldd	r25, Y+38	; 0x26
    1276:	20 e0       	ldi	r18, 0x00	; 0
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	40 e8       	ldi	r20, 0x80	; 128
    127c:	5f e3       	ldi	r21, 0x3F	; 63
    127e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1282:	88 23       	and	r24, r24
    1284:	2c f4       	brge	.+10     	; 0x1290 <stepper_voidRightForever+0x19a>
		__ticks = 1;
    1286:	81 e0       	ldi	r24, 0x01	; 1
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	9a a3       	std	Y+34, r25	; 0x22
    128c:	89 a3       	std	Y+33, r24	; 0x21
    128e:	3f c0       	rjmp	.+126    	; 0x130e <stepper_voidRightForever+0x218>
	else if (__tmp > 65535)
    1290:	6b a1       	ldd	r22, Y+35	; 0x23
    1292:	7c a1       	ldd	r23, Y+36	; 0x24
    1294:	8d a1       	ldd	r24, Y+37	; 0x25
    1296:	9e a1       	ldd	r25, Y+38	; 0x26
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	3f ef       	ldi	r19, 0xFF	; 255
    129c:	4f e7       	ldi	r20, 0x7F	; 127
    129e:	57 e4       	ldi	r21, 0x47	; 71
    12a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12a4:	18 16       	cp	r1, r24
    12a6:	4c f5       	brge	.+82     	; 0x12fa <stepper_voidRightForever+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12a8:	6f a1       	ldd	r22, Y+39	; 0x27
    12aa:	78 a5       	ldd	r23, Y+40	; 0x28
    12ac:	89 a5       	ldd	r24, Y+41	; 0x29
    12ae:	9a a5       	ldd	r25, Y+42	; 0x2a
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	40 e2       	ldi	r20, 0x20	; 32
    12b6:	51 e4       	ldi	r21, 0x41	; 65
    12b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12bc:	dc 01       	movw	r26, r24
    12be:	cb 01       	movw	r24, r22
    12c0:	bc 01       	movw	r22, r24
    12c2:	cd 01       	movw	r24, r26
    12c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12c8:	dc 01       	movw	r26, r24
    12ca:	cb 01       	movw	r24, r22
    12cc:	9a a3       	std	Y+34, r25	; 0x22
    12ce:	89 a3       	std	Y+33, r24	; 0x21
    12d0:	0f c0       	rjmp	.+30     	; 0x12f0 <stepper_voidRightForever+0x1fa>
    12d2:	8c e2       	ldi	r24, 0x2C	; 44
    12d4:	91 e0       	ldi	r25, 0x01	; 1
    12d6:	98 a3       	std	Y+32, r25	; 0x20
    12d8:	8f 8f       	std	Y+31, r24	; 0x1f
    12da:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12dc:	98 a1       	ldd	r25, Y+32	; 0x20
    12de:	01 97       	sbiw	r24, 0x01	; 1
    12e0:	f1 f7       	brne	.-4      	; 0x12de <stepper_voidRightForever+0x1e8>
    12e2:	98 a3       	std	Y+32, r25	; 0x20
    12e4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12e6:	89 a1       	ldd	r24, Y+33	; 0x21
    12e8:	9a a1       	ldd	r25, Y+34	; 0x22
    12ea:	01 97       	sbiw	r24, 0x01	; 1
    12ec:	9a a3       	std	Y+34, r25	; 0x22
    12ee:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12f0:	89 a1       	ldd	r24, Y+33	; 0x21
    12f2:	9a a1       	ldd	r25, Y+34	; 0x22
    12f4:	00 97       	sbiw	r24, 0x00	; 0
    12f6:	69 f7       	brne	.-38     	; 0x12d2 <stepper_voidRightForever+0x1dc>
    12f8:	14 c0       	rjmp	.+40     	; 0x1322 <stepper_voidRightForever+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12fa:	6b a1       	ldd	r22, Y+35	; 0x23
    12fc:	7c a1       	ldd	r23, Y+36	; 0x24
    12fe:	8d a1       	ldd	r24, Y+37	; 0x25
    1300:	9e a1       	ldd	r25, Y+38	; 0x26
    1302:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1306:	dc 01       	movw	r26, r24
    1308:	cb 01       	movw	r24, r22
    130a:	9a a3       	std	Y+34, r25	; 0x22
    130c:	89 a3       	std	Y+33, r24	; 0x21
    130e:	89 a1       	ldd	r24, Y+33	; 0x21
    1310:	9a a1       	ldd	r25, Y+34	; 0x22
    1312:	9e 8f       	std	Y+30, r25	; 0x1e
    1314:	8d 8f       	std	Y+29, r24	; 0x1d
    1316:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1318:	9e 8d       	ldd	r25, Y+30	; 0x1e
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	f1 f7       	brne	.-4      	; 0x131a <stepper_voidRightForever+0x224>
    131e:	9e 8f       	std	Y+30, r25	; 0x1e
    1320:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(2);
				DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1322:	82 e0       	ldi	r24, 0x02	; 2
    1324:	60 e0       	ldi	r22, 0x00	; 0
    1326:	40 e0       	ldi	r20, 0x00	; 0
    1328:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    132c:	82 e0       	ldi	r24, 0x02	; 2
    132e:	61 e0       	ldi	r22, 0x01	; 1
    1330:	40 e0       	ldi	r20, 0x00	; 0
    1332:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    1336:	82 e0       	ldi	r24, 0x02	; 2
    1338:	62 e0       	ldi	r22, 0x02	; 2
    133a:	41 e0       	ldi	r20, 0x01	; 1
    133c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1340:	82 e0       	ldi	r24, 0x02	; 2
    1342:	63 e0       	ldi	r22, 0x03	; 3
    1344:	40 e0       	ldi	r20, 0x00	; 0
    1346:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	a0 e0       	ldi	r26, 0x00	; 0
    1350:	b0 e4       	ldi	r27, 0x40	; 64
    1352:	89 8f       	std	Y+25, r24	; 0x19
    1354:	9a 8f       	std	Y+26, r25	; 0x1a
    1356:	ab 8f       	std	Y+27, r26	; 0x1b
    1358:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    135a:	69 8d       	ldd	r22, Y+25	; 0x19
    135c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    135e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1360:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e8       	ldi	r19, 0x80	; 128
    1366:	4b e3       	ldi	r20, 0x3B	; 59
    1368:	55 e4       	ldi	r21, 0x45	; 69
    136a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    136e:	dc 01       	movw	r26, r24
    1370:	cb 01       	movw	r24, r22
    1372:	8d 8b       	std	Y+21, r24	; 0x15
    1374:	9e 8b       	std	Y+22, r25	; 0x16
    1376:	af 8b       	std	Y+23, r26	; 0x17
    1378:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    137a:	6d 89       	ldd	r22, Y+21	; 0x15
    137c:	7e 89       	ldd	r23, Y+22	; 0x16
    137e:	8f 89       	ldd	r24, Y+23	; 0x17
    1380:	98 8d       	ldd	r25, Y+24	; 0x18
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	40 e8       	ldi	r20, 0x80	; 128
    1388:	5f e3       	ldi	r21, 0x3F	; 63
    138a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    138e:	88 23       	and	r24, r24
    1390:	2c f4       	brge	.+10     	; 0x139c <stepper_voidRightForever+0x2a6>
		__ticks = 1;
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	9c 8b       	std	Y+20, r25	; 0x14
    1398:	8b 8b       	std	Y+19, r24	; 0x13
    139a:	3f c0       	rjmp	.+126    	; 0x141a <stepper_voidRightForever+0x324>
	else if (__tmp > 65535)
    139c:	6d 89       	ldd	r22, Y+21	; 0x15
    139e:	7e 89       	ldd	r23, Y+22	; 0x16
    13a0:	8f 89       	ldd	r24, Y+23	; 0x17
    13a2:	98 8d       	ldd	r25, Y+24	; 0x18
    13a4:	20 e0       	ldi	r18, 0x00	; 0
    13a6:	3f ef       	ldi	r19, 0xFF	; 255
    13a8:	4f e7       	ldi	r20, 0x7F	; 127
    13aa:	57 e4       	ldi	r21, 0x47	; 71
    13ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13b0:	18 16       	cp	r1, r24
    13b2:	4c f5       	brge	.+82     	; 0x1406 <stepper_voidRightForever+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13b4:	69 8d       	ldd	r22, Y+25	; 0x19
    13b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    13b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	40 e2       	ldi	r20, 0x20	; 32
    13c2:	51 e4       	ldi	r21, 0x41	; 65
    13c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13c8:	dc 01       	movw	r26, r24
    13ca:	cb 01       	movw	r24, r22
    13cc:	bc 01       	movw	r22, r24
    13ce:	cd 01       	movw	r24, r26
    13d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13d4:	dc 01       	movw	r26, r24
    13d6:	cb 01       	movw	r24, r22
    13d8:	9c 8b       	std	Y+20, r25	; 0x14
    13da:	8b 8b       	std	Y+19, r24	; 0x13
    13dc:	0f c0       	rjmp	.+30     	; 0x13fc <stepper_voidRightForever+0x306>
    13de:	8c e2       	ldi	r24, 0x2C	; 44
    13e0:	91 e0       	ldi	r25, 0x01	; 1
    13e2:	9a 8b       	std	Y+18, r25	; 0x12
    13e4:	89 8b       	std	Y+17, r24	; 0x11
    13e6:	89 89       	ldd	r24, Y+17	; 0x11
    13e8:	9a 89       	ldd	r25, Y+18	; 0x12
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	f1 f7       	brne	.-4      	; 0x13ea <stepper_voidRightForever+0x2f4>
    13ee:	9a 8b       	std	Y+18, r25	; 0x12
    13f0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13f2:	8b 89       	ldd	r24, Y+19	; 0x13
    13f4:	9c 89       	ldd	r25, Y+20	; 0x14
    13f6:	01 97       	sbiw	r24, 0x01	; 1
    13f8:	9c 8b       	std	Y+20, r25	; 0x14
    13fa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13fc:	8b 89       	ldd	r24, Y+19	; 0x13
    13fe:	9c 89       	ldd	r25, Y+20	; 0x14
    1400:	00 97       	sbiw	r24, 0x00	; 0
    1402:	69 f7       	brne	.-38     	; 0x13de <stepper_voidRightForever+0x2e8>
    1404:	14 c0       	rjmp	.+40     	; 0x142e <stepper_voidRightForever+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1406:	6d 89       	ldd	r22, Y+21	; 0x15
    1408:	7e 89       	ldd	r23, Y+22	; 0x16
    140a:	8f 89       	ldd	r24, Y+23	; 0x17
    140c:	98 8d       	ldd	r25, Y+24	; 0x18
    140e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1412:	dc 01       	movw	r26, r24
    1414:	cb 01       	movw	r24, r22
    1416:	9c 8b       	std	Y+20, r25	; 0x14
    1418:	8b 8b       	std	Y+19, r24	; 0x13
    141a:	8b 89       	ldd	r24, Y+19	; 0x13
    141c:	9c 89       	ldd	r25, Y+20	; 0x14
    141e:	98 8b       	std	Y+16, r25	; 0x10
    1420:	8f 87       	std	Y+15, r24	; 0x0f
    1422:	8f 85       	ldd	r24, Y+15	; 0x0f
    1424:	98 89       	ldd	r25, Y+16	; 0x10
    1426:	01 97       	sbiw	r24, 0x01	; 1
    1428:	f1 f7       	brne	.-4      	; 0x1426 <stepper_voidRightForever+0x330>
    142a:	98 8b       	std	Y+16, r25	; 0x10
    142c:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(2);
				DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    142e:	82 e0       	ldi	r24, 0x02	; 2
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	40 e0       	ldi	r20, 0x00	; 0
    1434:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1438:	82 e0       	ldi	r24, 0x02	; 2
    143a:	61 e0       	ldi	r22, 0x01	; 1
    143c:	40 e0       	ldi	r20, 0x00	; 0
    143e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1442:	82 e0       	ldi	r24, 0x02	; 2
    1444:	62 e0       	ldi	r22, 0x02	; 2
    1446:	40 e0       	ldi	r20, 0x00	; 0
    1448:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
				DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    144c:	82 e0       	ldi	r24, 0x02	; 2
    144e:	63 e0       	ldi	r22, 0x03	; 3
    1450:	41 e0       	ldi	r20, 0x01	; 1
    1452:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	a0 e0       	ldi	r26, 0x00	; 0
    145c:	b0 e4       	ldi	r27, 0x40	; 64
    145e:	8b 87       	std	Y+11, r24	; 0x0b
    1460:	9c 87       	std	Y+12, r25	; 0x0c
    1462:	ad 87       	std	Y+13, r26	; 0x0d
    1464:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1466:	6b 85       	ldd	r22, Y+11	; 0x0b
    1468:	7c 85       	ldd	r23, Y+12	; 0x0c
    146a:	8d 85       	ldd	r24, Y+13	; 0x0d
    146c:	9e 85       	ldd	r25, Y+14	; 0x0e
    146e:	20 e0       	ldi	r18, 0x00	; 0
    1470:	30 e8       	ldi	r19, 0x80	; 128
    1472:	4b e3       	ldi	r20, 0x3B	; 59
    1474:	55 e4       	ldi	r21, 0x45	; 69
    1476:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    147a:	dc 01       	movw	r26, r24
    147c:	cb 01       	movw	r24, r22
    147e:	8f 83       	std	Y+7, r24	; 0x07
    1480:	98 87       	std	Y+8, r25	; 0x08
    1482:	a9 87       	std	Y+9, r26	; 0x09
    1484:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1486:	6f 81       	ldd	r22, Y+7	; 0x07
    1488:	78 85       	ldd	r23, Y+8	; 0x08
    148a:	89 85       	ldd	r24, Y+9	; 0x09
    148c:	9a 85       	ldd	r25, Y+10	; 0x0a
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	40 e8       	ldi	r20, 0x80	; 128
    1494:	5f e3       	ldi	r21, 0x3F	; 63
    1496:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    149a:	88 23       	and	r24, r24
    149c:	2c f4       	brge	.+10     	; 0x14a8 <stepper_voidRightForever+0x3b2>
		__ticks = 1;
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	9e 83       	std	Y+6, r25	; 0x06
    14a4:	8d 83       	std	Y+5, r24	; 0x05
    14a6:	3f c0       	rjmp	.+126    	; 0x1526 <stepper_voidRightForever+0x430>
	else if (__tmp > 65535)
    14a8:	6f 81       	ldd	r22, Y+7	; 0x07
    14aa:	78 85       	ldd	r23, Y+8	; 0x08
    14ac:	89 85       	ldd	r24, Y+9	; 0x09
    14ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    14b0:	20 e0       	ldi	r18, 0x00	; 0
    14b2:	3f ef       	ldi	r19, 0xFF	; 255
    14b4:	4f e7       	ldi	r20, 0x7F	; 127
    14b6:	57 e4       	ldi	r21, 0x47	; 71
    14b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14bc:	18 16       	cp	r1, r24
    14be:	4c f5       	brge	.+82     	; 0x1512 <stepper_voidRightForever+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    14c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    14c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    14c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    14c8:	20 e0       	ldi	r18, 0x00	; 0
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	40 e2       	ldi	r20, 0x20	; 32
    14ce:	51 e4       	ldi	r21, 0x41	; 65
    14d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14d4:	dc 01       	movw	r26, r24
    14d6:	cb 01       	movw	r24, r22
    14d8:	bc 01       	movw	r22, r24
    14da:	cd 01       	movw	r24, r26
    14dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	9e 83       	std	Y+6, r25	; 0x06
    14e6:	8d 83       	std	Y+5, r24	; 0x05
    14e8:	0f c0       	rjmp	.+30     	; 0x1508 <stepper_voidRightForever+0x412>
    14ea:	8c e2       	ldi	r24, 0x2C	; 44
    14ec:	91 e0       	ldi	r25, 0x01	; 1
    14ee:	9c 83       	std	Y+4, r25	; 0x04
    14f0:	8b 83       	std	Y+3, r24	; 0x03
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	01 97       	sbiw	r24, 0x01	; 1
    14f8:	f1 f7       	brne	.-4      	; 0x14f6 <stepper_voidRightForever+0x400>
    14fa:	9c 83       	std	Y+4, r25	; 0x04
    14fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1500:	9e 81       	ldd	r25, Y+6	; 0x06
    1502:	01 97       	sbiw	r24, 0x01	; 1
    1504:	9e 83       	std	Y+6, r25	; 0x06
    1506:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1508:	8d 81       	ldd	r24, Y+5	; 0x05
    150a:	9e 81       	ldd	r25, Y+6	; 0x06
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	69 f7       	brne	.-38     	; 0x14ea <stepper_voidRightForever+0x3f4>
    1510:	fc cd       	rjmp	.-1032   	; 0x110a <stepper_voidRightForever+0x14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1512:	6f 81       	ldd	r22, Y+7	; 0x07
    1514:	78 85       	ldd	r23, Y+8	; 0x08
    1516:	89 85       	ldd	r24, Y+9	; 0x09
    1518:	9a 85       	ldd	r25, Y+10	; 0x0a
    151a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	9e 83       	std	Y+6, r25	; 0x06
    1524:	8d 83       	std	Y+5, r24	; 0x05
    1526:	8d 81       	ldd	r24, Y+5	; 0x05
    1528:	9e 81       	ldd	r25, Y+6	; 0x06
    152a:	9a 83       	std	Y+2, r25	; 0x02
    152c:	89 83       	std	Y+1, r24	; 0x01
    152e:	89 81       	ldd	r24, Y+1	; 0x01
    1530:	9a 81       	ldd	r25, Y+2	; 0x02
    1532:	01 97       	sbiw	r24, 0x01	; 1
    1534:	f1 f7       	brne	.-4      	; 0x1532 <stepper_voidRightForever+0x43c>
    1536:	9a 83       	std	Y+2, r25	; 0x02
    1538:	89 83       	std	Y+1, r24	; 0x01
    153a:	e7 cd       	rjmp	.-1074   	; 0x110a <stepper_voidRightForever+0x14>

0000153c <stepper_voidLeftForever>:
				_delay_ms(2);
			}
}
void stepper_voidLeftForever(void)
{
    153c:	df 93       	push	r29
    153e:	cf 93       	push	r28
    1540:	cd b7       	in	r28, 0x3d	; 61
    1542:	de b7       	in	r29, 0x3e	; 62
    1544:	e8 97       	sbiw	r28, 0x38	; 56
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	f8 94       	cli
    154a:	de bf       	out	0x3e, r29	; 62
    154c:	0f be       	out	0x3f, r0	; 63
    154e:	cd bf       	out	0x3d, r28	; 61

	while(1)
	{
		DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1550:	82 e0       	ldi	r24, 0x02	; 2
    1552:	60 e0       	ldi	r22, 0x00	; 0
    1554:	40 e0       	ldi	r20, 0x00	; 0
    1556:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    155a:	82 e0       	ldi	r24, 0x02	; 2
    155c:	61 e0       	ldi	r22, 0x01	; 1
    155e:	40 e0       	ldi	r20, 0x00	; 0
    1560:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1564:	82 e0       	ldi	r24, 0x02	; 2
    1566:	62 e0       	ldi	r22, 0x02	; 2
    1568:	40 e0       	ldi	r20, 0x00	; 0
    156a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    156e:	82 e0       	ldi	r24, 0x02	; 2
    1570:	63 e0       	ldi	r22, 0x03	; 3
    1572:	41 e0       	ldi	r20, 0x01	; 1
    1574:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1578:	80 e0       	ldi	r24, 0x00	; 0
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	a0 e0       	ldi	r26, 0x00	; 0
    157e:	b0 e4       	ldi	r27, 0x40	; 64
    1580:	8d ab       	std	Y+53, r24	; 0x35
    1582:	9e ab       	std	Y+54, r25	; 0x36
    1584:	af ab       	std	Y+55, r26	; 0x37
    1586:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1588:	6d a9       	ldd	r22, Y+53	; 0x35
    158a:	7e a9       	ldd	r23, Y+54	; 0x36
    158c:	8f a9       	ldd	r24, Y+55	; 0x37
    158e:	98 ad       	ldd	r25, Y+56	; 0x38
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	30 e8       	ldi	r19, 0x80	; 128
    1594:	4b e3       	ldi	r20, 0x3B	; 59
    1596:	55 e4       	ldi	r21, 0x45	; 69
    1598:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    159c:	dc 01       	movw	r26, r24
    159e:	cb 01       	movw	r24, r22
    15a0:	89 ab       	std	Y+49, r24	; 0x31
    15a2:	9a ab       	std	Y+50, r25	; 0x32
    15a4:	ab ab       	std	Y+51, r26	; 0x33
    15a6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    15a8:	69 a9       	ldd	r22, Y+49	; 0x31
    15aa:	7a a9       	ldd	r23, Y+50	; 0x32
    15ac:	8b a9       	ldd	r24, Y+51	; 0x33
    15ae:	9c a9       	ldd	r25, Y+52	; 0x34
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	40 e8       	ldi	r20, 0x80	; 128
    15b6:	5f e3       	ldi	r21, 0x3F	; 63
    15b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15bc:	88 23       	and	r24, r24
    15be:	2c f4       	brge	.+10     	; 0x15ca <stepper_voidLeftForever+0x8e>
		__ticks = 1;
    15c0:	81 e0       	ldi	r24, 0x01	; 1
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	98 ab       	std	Y+48, r25	; 0x30
    15c6:	8f a7       	std	Y+47, r24	; 0x2f
    15c8:	3f c0       	rjmp	.+126    	; 0x1648 <stepper_voidLeftForever+0x10c>
	else if (__tmp > 65535)
    15ca:	69 a9       	ldd	r22, Y+49	; 0x31
    15cc:	7a a9       	ldd	r23, Y+50	; 0x32
    15ce:	8b a9       	ldd	r24, Y+51	; 0x33
    15d0:	9c a9       	ldd	r25, Y+52	; 0x34
    15d2:	20 e0       	ldi	r18, 0x00	; 0
    15d4:	3f ef       	ldi	r19, 0xFF	; 255
    15d6:	4f e7       	ldi	r20, 0x7F	; 127
    15d8:	57 e4       	ldi	r21, 0x47	; 71
    15da:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15de:	18 16       	cp	r1, r24
    15e0:	4c f5       	brge	.+82     	; 0x1634 <stepper_voidLeftForever+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15e2:	6d a9       	ldd	r22, Y+53	; 0x35
    15e4:	7e a9       	ldd	r23, Y+54	; 0x36
    15e6:	8f a9       	ldd	r24, Y+55	; 0x37
    15e8:	98 ad       	ldd	r25, Y+56	; 0x38
    15ea:	20 e0       	ldi	r18, 0x00	; 0
    15ec:	30 e0       	ldi	r19, 0x00	; 0
    15ee:	40 e2       	ldi	r20, 0x20	; 32
    15f0:	51 e4       	ldi	r21, 0x41	; 65
    15f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15f6:	dc 01       	movw	r26, r24
    15f8:	cb 01       	movw	r24, r22
    15fa:	bc 01       	movw	r22, r24
    15fc:	cd 01       	movw	r24, r26
    15fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1602:	dc 01       	movw	r26, r24
    1604:	cb 01       	movw	r24, r22
    1606:	98 ab       	std	Y+48, r25	; 0x30
    1608:	8f a7       	std	Y+47, r24	; 0x2f
    160a:	0f c0       	rjmp	.+30     	; 0x162a <stepper_voidLeftForever+0xee>
    160c:	8c e2       	ldi	r24, 0x2C	; 44
    160e:	91 e0       	ldi	r25, 0x01	; 1
    1610:	9e a7       	std	Y+46, r25	; 0x2e
    1612:	8d a7       	std	Y+45, r24	; 0x2d
    1614:	8d a5       	ldd	r24, Y+45	; 0x2d
    1616:	9e a5       	ldd	r25, Y+46	; 0x2e
    1618:	01 97       	sbiw	r24, 0x01	; 1
    161a:	f1 f7       	brne	.-4      	; 0x1618 <stepper_voidLeftForever+0xdc>
    161c:	9e a7       	std	Y+46, r25	; 0x2e
    161e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1620:	8f a5       	ldd	r24, Y+47	; 0x2f
    1622:	98 a9       	ldd	r25, Y+48	; 0x30
    1624:	01 97       	sbiw	r24, 0x01	; 1
    1626:	98 ab       	std	Y+48, r25	; 0x30
    1628:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    162a:	8f a5       	ldd	r24, Y+47	; 0x2f
    162c:	98 a9       	ldd	r25, Y+48	; 0x30
    162e:	00 97       	sbiw	r24, 0x00	; 0
    1630:	69 f7       	brne	.-38     	; 0x160c <stepper_voidLeftForever+0xd0>
    1632:	14 c0       	rjmp	.+40     	; 0x165c <stepper_voidLeftForever+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1634:	69 a9       	ldd	r22, Y+49	; 0x31
    1636:	7a a9       	ldd	r23, Y+50	; 0x32
    1638:	8b a9       	ldd	r24, Y+51	; 0x33
    163a:	9c a9       	ldd	r25, Y+52	; 0x34
    163c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1640:	dc 01       	movw	r26, r24
    1642:	cb 01       	movw	r24, r22
    1644:	98 ab       	std	Y+48, r25	; 0x30
    1646:	8f a7       	std	Y+47, r24	; 0x2f
    1648:	8f a5       	ldd	r24, Y+47	; 0x2f
    164a:	98 a9       	ldd	r25, Y+48	; 0x30
    164c:	9c a7       	std	Y+44, r25	; 0x2c
    164e:	8b a7       	std	Y+43, r24	; 0x2b
    1650:	8b a5       	ldd	r24, Y+43	; 0x2b
    1652:	9c a5       	ldd	r25, Y+44	; 0x2c
    1654:	01 97       	sbiw	r24, 0x01	; 1
    1656:	f1 f7       	brne	.-4      	; 0x1654 <stepper_voidLeftForever+0x118>
    1658:	9c a7       	std	Y+44, r25	; 0x2c
    165a:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(2);
		DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    165c:	82 e0       	ldi	r24, 0x02	; 2
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	40 e0       	ldi	r20, 0x00	; 0
    1662:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1666:	82 e0       	ldi	r24, 0x02	; 2
    1668:	61 e0       	ldi	r22, 0x01	; 1
    166a:	40 e0       	ldi	r20, 0x00	; 0
    166c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    1670:	82 e0       	ldi	r24, 0x02	; 2
    1672:	62 e0       	ldi	r22, 0x02	; 2
    1674:	41 e0       	ldi	r20, 0x01	; 1
    1676:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    167a:	82 e0       	ldi	r24, 0x02	; 2
    167c:	63 e0       	ldi	r22, 0x03	; 3
    167e:	40 e0       	ldi	r20, 0x00	; 0
    1680:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	a0 e0       	ldi	r26, 0x00	; 0
    168a:	b0 e4       	ldi	r27, 0x40	; 64
    168c:	8f a3       	std	Y+39, r24	; 0x27
    168e:	98 a7       	std	Y+40, r25	; 0x28
    1690:	a9 a7       	std	Y+41, r26	; 0x29
    1692:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1694:	6f a1       	ldd	r22, Y+39	; 0x27
    1696:	78 a5       	ldd	r23, Y+40	; 0x28
    1698:	89 a5       	ldd	r24, Y+41	; 0x29
    169a:	9a a5       	ldd	r25, Y+42	; 0x2a
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	30 e8       	ldi	r19, 0x80	; 128
    16a0:	4b e3       	ldi	r20, 0x3B	; 59
    16a2:	55 e4       	ldi	r21, 0x45	; 69
    16a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16a8:	dc 01       	movw	r26, r24
    16aa:	cb 01       	movw	r24, r22
    16ac:	8b a3       	std	Y+35, r24	; 0x23
    16ae:	9c a3       	std	Y+36, r25	; 0x24
    16b0:	ad a3       	std	Y+37, r26	; 0x25
    16b2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    16b4:	6b a1       	ldd	r22, Y+35	; 0x23
    16b6:	7c a1       	ldd	r23, Y+36	; 0x24
    16b8:	8d a1       	ldd	r24, Y+37	; 0x25
    16ba:	9e a1       	ldd	r25, Y+38	; 0x26
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 e8       	ldi	r20, 0x80	; 128
    16c2:	5f e3       	ldi	r21, 0x3F	; 63
    16c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16c8:	88 23       	and	r24, r24
    16ca:	2c f4       	brge	.+10     	; 0x16d6 <stepper_voidLeftForever+0x19a>
		__ticks = 1;
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	9a a3       	std	Y+34, r25	; 0x22
    16d2:	89 a3       	std	Y+33, r24	; 0x21
    16d4:	3f c0       	rjmp	.+126    	; 0x1754 <stepper_voidLeftForever+0x218>
	else if (__tmp > 65535)
    16d6:	6b a1       	ldd	r22, Y+35	; 0x23
    16d8:	7c a1       	ldd	r23, Y+36	; 0x24
    16da:	8d a1       	ldd	r24, Y+37	; 0x25
    16dc:	9e a1       	ldd	r25, Y+38	; 0x26
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	3f ef       	ldi	r19, 0xFF	; 255
    16e2:	4f e7       	ldi	r20, 0x7F	; 127
    16e4:	57 e4       	ldi	r21, 0x47	; 71
    16e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16ea:	18 16       	cp	r1, r24
    16ec:	4c f5       	brge	.+82     	; 0x1740 <stepper_voidLeftForever+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ee:	6f a1       	ldd	r22, Y+39	; 0x27
    16f0:	78 a5       	ldd	r23, Y+40	; 0x28
    16f2:	89 a5       	ldd	r24, Y+41	; 0x29
    16f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	40 e2       	ldi	r20, 0x20	; 32
    16fc:	51 e4       	ldi	r21, 0x41	; 65
    16fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1702:	dc 01       	movw	r26, r24
    1704:	cb 01       	movw	r24, r22
    1706:	bc 01       	movw	r22, r24
    1708:	cd 01       	movw	r24, r26
    170a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	9a a3       	std	Y+34, r25	; 0x22
    1714:	89 a3       	std	Y+33, r24	; 0x21
    1716:	0f c0       	rjmp	.+30     	; 0x1736 <stepper_voidLeftForever+0x1fa>
    1718:	8c e2       	ldi	r24, 0x2C	; 44
    171a:	91 e0       	ldi	r25, 0x01	; 1
    171c:	98 a3       	std	Y+32, r25	; 0x20
    171e:	8f 8f       	std	Y+31, r24	; 0x1f
    1720:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1722:	98 a1       	ldd	r25, Y+32	; 0x20
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	f1 f7       	brne	.-4      	; 0x1724 <stepper_voidLeftForever+0x1e8>
    1728:	98 a3       	std	Y+32, r25	; 0x20
    172a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    172c:	89 a1       	ldd	r24, Y+33	; 0x21
    172e:	9a a1       	ldd	r25, Y+34	; 0x22
    1730:	01 97       	sbiw	r24, 0x01	; 1
    1732:	9a a3       	std	Y+34, r25	; 0x22
    1734:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1736:	89 a1       	ldd	r24, Y+33	; 0x21
    1738:	9a a1       	ldd	r25, Y+34	; 0x22
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	69 f7       	brne	.-38     	; 0x1718 <stepper_voidLeftForever+0x1dc>
    173e:	14 c0       	rjmp	.+40     	; 0x1768 <stepper_voidLeftForever+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1740:	6b a1       	ldd	r22, Y+35	; 0x23
    1742:	7c a1       	ldd	r23, Y+36	; 0x24
    1744:	8d a1       	ldd	r24, Y+37	; 0x25
    1746:	9e a1       	ldd	r25, Y+38	; 0x26
    1748:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	9a a3       	std	Y+34, r25	; 0x22
    1752:	89 a3       	std	Y+33, r24	; 0x21
    1754:	89 a1       	ldd	r24, Y+33	; 0x21
    1756:	9a a1       	ldd	r25, Y+34	; 0x22
    1758:	9e 8f       	std	Y+30, r25	; 0x1e
    175a:	8d 8f       	std	Y+29, r24	; 0x1d
    175c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    175e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1760:	01 97       	sbiw	r24, 0x01	; 1
    1762:	f1 f7       	brne	.-4      	; 0x1760 <stepper_voidLeftForever+0x224>
    1764:	9e 8f       	std	Y+30, r25	; 0x1e
    1766:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(2);
		DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1768:	82 e0       	ldi	r24, 0x02	; 2
    176a:	60 e0       	ldi	r22, 0x00	; 0
    176c:	40 e0       	ldi	r20, 0x00	; 0
    176e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    1772:	82 e0       	ldi	r24, 0x02	; 2
    1774:	61 e0       	ldi	r22, 0x01	; 1
    1776:	41 e0       	ldi	r20, 0x01	; 1
    1778:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    177c:	82 e0       	ldi	r24, 0x02	; 2
    177e:	62 e0       	ldi	r22, 0x02	; 2
    1780:	40 e0       	ldi	r20, 0x00	; 0
    1782:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1786:	82 e0       	ldi	r24, 0x02	; 2
    1788:	63 e0       	ldi	r22, 0x03	; 3
    178a:	40 e0       	ldi	r20, 0x00	; 0
    178c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	a0 e0       	ldi	r26, 0x00	; 0
    1796:	b0 e4       	ldi	r27, 0x40	; 64
    1798:	89 8f       	std	Y+25, r24	; 0x19
    179a:	9a 8f       	std	Y+26, r25	; 0x1a
    179c:	ab 8f       	std	Y+27, r26	; 0x1b
    179e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a0:	69 8d       	ldd	r22, Y+25	; 0x19
    17a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17a4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17a6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e8       	ldi	r19, 0x80	; 128
    17ac:	4b e3       	ldi	r20, 0x3B	; 59
    17ae:	55 e4       	ldi	r21, 0x45	; 69
    17b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b4:	dc 01       	movw	r26, r24
    17b6:	cb 01       	movw	r24, r22
    17b8:	8d 8b       	std	Y+21, r24	; 0x15
    17ba:	9e 8b       	std	Y+22, r25	; 0x16
    17bc:	af 8b       	std	Y+23, r26	; 0x17
    17be:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    17c0:	6d 89       	ldd	r22, Y+21	; 0x15
    17c2:	7e 89       	ldd	r23, Y+22	; 0x16
    17c4:	8f 89       	ldd	r24, Y+23	; 0x17
    17c6:	98 8d       	ldd	r25, Y+24	; 0x18
    17c8:	20 e0       	ldi	r18, 0x00	; 0
    17ca:	30 e0       	ldi	r19, 0x00	; 0
    17cc:	40 e8       	ldi	r20, 0x80	; 128
    17ce:	5f e3       	ldi	r21, 0x3F	; 63
    17d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17d4:	88 23       	and	r24, r24
    17d6:	2c f4       	brge	.+10     	; 0x17e2 <stepper_voidLeftForever+0x2a6>
		__ticks = 1;
    17d8:	81 e0       	ldi	r24, 0x01	; 1
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	9c 8b       	std	Y+20, r25	; 0x14
    17de:	8b 8b       	std	Y+19, r24	; 0x13
    17e0:	3f c0       	rjmp	.+126    	; 0x1860 <stepper_voidLeftForever+0x324>
	else if (__tmp > 65535)
    17e2:	6d 89       	ldd	r22, Y+21	; 0x15
    17e4:	7e 89       	ldd	r23, Y+22	; 0x16
    17e6:	8f 89       	ldd	r24, Y+23	; 0x17
    17e8:	98 8d       	ldd	r25, Y+24	; 0x18
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	3f ef       	ldi	r19, 0xFF	; 255
    17ee:	4f e7       	ldi	r20, 0x7F	; 127
    17f0:	57 e4       	ldi	r21, 0x47	; 71
    17f2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17f6:	18 16       	cp	r1, r24
    17f8:	4c f5       	brge	.+82     	; 0x184c <stepper_voidLeftForever+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fa:	69 8d       	ldd	r22, Y+25	; 0x19
    17fc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17fe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1800:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e2       	ldi	r20, 0x20	; 32
    1808:	51 e4       	ldi	r21, 0x41	; 65
    180a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    180e:	dc 01       	movw	r26, r24
    1810:	cb 01       	movw	r24, r22
    1812:	bc 01       	movw	r22, r24
    1814:	cd 01       	movw	r24, r26
    1816:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    181a:	dc 01       	movw	r26, r24
    181c:	cb 01       	movw	r24, r22
    181e:	9c 8b       	std	Y+20, r25	; 0x14
    1820:	8b 8b       	std	Y+19, r24	; 0x13
    1822:	0f c0       	rjmp	.+30     	; 0x1842 <stepper_voidLeftForever+0x306>
    1824:	8c e2       	ldi	r24, 0x2C	; 44
    1826:	91 e0       	ldi	r25, 0x01	; 1
    1828:	9a 8b       	std	Y+18, r25	; 0x12
    182a:	89 8b       	std	Y+17, r24	; 0x11
    182c:	89 89       	ldd	r24, Y+17	; 0x11
    182e:	9a 89       	ldd	r25, Y+18	; 0x12
    1830:	01 97       	sbiw	r24, 0x01	; 1
    1832:	f1 f7       	brne	.-4      	; 0x1830 <stepper_voidLeftForever+0x2f4>
    1834:	9a 8b       	std	Y+18, r25	; 0x12
    1836:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1838:	8b 89       	ldd	r24, Y+19	; 0x13
    183a:	9c 89       	ldd	r25, Y+20	; 0x14
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	9c 8b       	std	Y+20, r25	; 0x14
    1840:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1842:	8b 89       	ldd	r24, Y+19	; 0x13
    1844:	9c 89       	ldd	r25, Y+20	; 0x14
    1846:	00 97       	sbiw	r24, 0x00	; 0
    1848:	69 f7       	brne	.-38     	; 0x1824 <stepper_voidLeftForever+0x2e8>
    184a:	14 c0       	rjmp	.+40     	; 0x1874 <stepper_voidLeftForever+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    184c:	6d 89       	ldd	r22, Y+21	; 0x15
    184e:	7e 89       	ldd	r23, Y+22	; 0x16
    1850:	8f 89       	ldd	r24, Y+23	; 0x17
    1852:	98 8d       	ldd	r25, Y+24	; 0x18
    1854:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1858:	dc 01       	movw	r26, r24
    185a:	cb 01       	movw	r24, r22
    185c:	9c 8b       	std	Y+20, r25	; 0x14
    185e:	8b 8b       	std	Y+19, r24	; 0x13
    1860:	8b 89       	ldd	r24, Y+19	; 0x13
    1862:	9c 89       	ldd	r25, Y+20	; 0x14
    1864:	98 8b       	std	Y+16, r25	; 0x10
    1866:	8f 87       	std	Y+15, r24	; 0x0f
    1868:	8f 85       	ldd	r24, Y+15	; 0x0f
    186a:	98 89       	ldd	r25, Y+16	; 0x10
    186c:	01 97       	sbiw	r24, 0x01	; 1
    186e:	f1 f7       	brne	.-4      	; 0x186c <stepper_voidLeftForever+0x330>
    1870:	98 8b       	std	Y+16, r25	; 0x10
    1872:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(2);
		DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    1874:	82 e0       	ldi	r24, 0x02	; 2
    1876:	60 e0       	ldi	r22, 0x00	; 0
    1878:	41 e0       	ldi	r20, 0x01	; 1
    187a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    187e:	82 e0       	ldi	r24, 0x02	; 2
    1880:	61 e0       	ldi	r22, 0x01	; 1
    1882:	40 e0       	ldi	r20, 0x00	; 0
    1884:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1888:	82 e0       	ldi	r24, 0x02	; 2
    188a:	62 e0       	ldi	r22, 0x02	; 2
    188c:	40 e0       	ldi	r20, 0x00	; 0
    188e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1892:	82 e0       	ldi	r24, 0x02	; 2
    1894:	63 e0       	ldi	r22, 0x03	; 3
    1896:	40 e0       	ldi	r20, 0x00	; 0
    1898:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	a0 e0       	ldi	r26, 0x00	; 0
    18a2:	b0 e4       	ldi	r27, 0x40	; 64
    18a4:	8b 87       	std	Y+11, r24	; 0x0b
    18a6:	9c 87       	std	Y+12, r25	; 0x0c
    18a8:	ad 87       	std	Y+13, r26	; 0x0d
    18aa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    18ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    18b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    18b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    18b4:	20 e0       	ldi	r18, 0x00	; 0
    18b6:	30 e8       	ldi	r19, 0x80	; 128
    18b8:	4b e3       	ldi	r20, 0x3B	; 59
    18ba:	55 e4       	ldi	r21, 0x45	; 69
    18bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18c0:	dc 01       	movw	r26, r24
    18c2:	cb 01       	movw	r24, r22
    18c4:	8f 83       	std	Y+7, r24	; 0x07
    18c6:	98 87       	std	Y+8, r25	; 0x08
    18c8:	a9 87       	std	Y+9, r26	; 0x09
    18ca:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18cc:	6f 81       	ldd	r22, Y+7	; 0x07
    18ce:	78 85       	ldd	r23, Y+8	; 0x08
    18d0:	89 85       	ldd	r24, Y+9	; 0x09
    18d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    18d4:	20 e0       	ldi	r18, 0x00	; 0
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	40 e8       	ldi	r20, 0x80	; 128
    18da:	5f e3       	ldi	r21, 0x3F	; 63
    18dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18e0:	88 23       	and	r24, r24
    18e2:	2c f4       	brge	.+10     	; 0x18ee <stepper_voidLeftForever+0x3b2>
		__ticks = 1;
    18e4:	81 e0       	ldi	r24, 0x01	; 1
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	9e 83       	std	Y+6, r25	; 0x06
    18ea:	8d 83       	std	Y+5, r24	; 0x05
    18ec:	3f c0       	rjmp	.+126    	; 0x196c <stepper_voidLeftForever+0x430>
	else if (__tmp > 65535)
    18ee:	6f 81       	ldd	r22, Y+7	; 0x07
    18f0:	78 85       	ldd	r23, Y+8	; 0x08
    18f2:	89 85       	ldd	r24, Y+9	; 0x09
    18f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	3f ef       	ldi	r19, 0xFF	; 255
    18fa:	4f e7       	ldi	r20, 0x7F	; 127
    18fc:	57 e4       	ldi	r21, 0x47	; 71
    18fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1902:	18 16       	cp	r1, r24
    1904:	4c f5       	brge	.+82     	; 0x1958 <stepper_voidLeftForever+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1906:	6b 85       	ldd	r22, Y+11	; 0x0b
    1908:	7c 85       	ldd	r23, Y+12	; 0x0c
    190a:	8d 85       	ldd	r24, Y+13	; 0x0d
    190c:	9e 85       	ldd	r25, Y+14	; 0x0e
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	40 e2       	ldi	r20, 0x20	; 32
    1914:	51 e4       	ldi	r21, 0x41	; 65
    1916:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	bc 01       	movw	r22, r24
    1920:	cd 01       	movw	r24, r26
    1922:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	9e 83       	std	Y+6, r25	; 0x06
    192c:	8d 83       	std	Y+5, r24	; 0x05
    192e:	0f c0       	rjmp	.+30     	; 0x194e <stepper_voidLeftForever+0x412>
    1930:	8c e2       	ldi	r24, 0x2C	; 44
    1932:	91 e0       	ldi	r25, 0x01	; 1
    1934:	9c 83       	std	Y+4, r25	; 0x04
    1936:	8b 83       	std	Y+3, r24	; 0x03
    1938:	8b 81       	ldd	r24, Y+3	; 0x03
    193a:	9c 81       	ldd	r25, Y+4	; 0x04
    193c:	01 97       	sbiw	r24, 0x01	; 1
    193e:	f1 f7       	brne	.-4      	; 0x193c <stepper_voidLeftForever+0x400>
    1940:	9c 83       	std	Y+4, r25	; 0x04
    1942:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1944:	8d 81       	ldd	r24, Y+5	; 0x05
    1946:	9e 81       	ldd	r25, Y+6	; 0x06
    1948:	01 97       	sbiw	r24, 0x01	; 1
    194a:	9e 83       	std	Y+6, r25	; 0x06
    194c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    194e:	8d 81       	ldd	r24, Y+5	; 0x05
    1950:	9e 81       	ldd	r25, Y+6	; 0x06
    1952:	00 97       	sbiw	r24, 0x00	; 0
    1954:	69 f7       	brne	.-38     	; 0x1930 <stepper_voidLeftForever+0x3f4>
    1956:	fc cd       	rjmp	.-1032   	; 0x1550 <stepper_voidLeftForever+0x14>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1958:	6f 81       	ldd	r22, Y+7	; 0x07
    195a:	78 85       	ldd	r23, Y+8	; 0x08
    195c:	89 85       	ldd	r24, Y+9	; 0x09
    195e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1960:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1964:	dc 01       	movw	r26, r24
    1966:	cb 01       	movw	r24, r22
    1968:	9e 83       	std	Y+6, r25	; 0x06
    196a:	8d 83       	std	Y+5, r24	; 0x05
    196c:	8d 81       	ldd	r24, Y+5	; 0x05
    196e:	9e 81       	ldd	r25, Y+6	; 0x06
    1970:	9a 83       	std	Y+2, r25	; 0x02
    1972:	89 83       	std	Y+1, r24	; 0x01
    1974:	89 81       	ldd	r24, Y+1	; 0x01
    1976:	9a 81       	ldd	r25, Y+2	; 0x02
    1978:	01 97       	sbiw	r24, 0x01	; 1
    197a:	f1 f7       	brne	.-4      	; 0x1978 <stepper_voidLeftForever+0x43c>
    197c:	9a 83       	std	Y+2, r25	; 0x02
    197e:	89 83       	std	Y+1, r24	; 0x01
    1980:	e7 cd       	rjmp	.-1074   	; 0x1550 <stepper_voidLeftForever+0x14>

00001982 <stepper_voidStop>:
		_delay_ms(2);
}
}
void stepper_voidStop(void)
{
    1982:	df 93       	push	r29
    1984:	cf 93       	push	r28
    1986:	cd b7       	in	r28, 0x3d	; 61
    1988:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    198a:	82 e0       	ldi	r24, 0x02	; 2
    198c:	60 e0       	ldi	r22, 0x00	; 0
    198e:	40 e0       	ldi	r20, 0x00	; 0
    1990:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1994:	82 e0       	ldi	r24, 0x02	; 2
    1996:	61 e0       	ldi	r22, 0x01	; 1
    1998:	40 e0       	ldi	r20, 0x00	; 0
    199a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    199e:	82 e0       	ldi	r24, 0x02	; 2
    19a0:	62 e0       	ldi	r22, 0x02	; 2
    19a2:	40 e0       	ldi	r20, 0x00	; 0
    19a4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    19a8:	82 e0       	ldi	r24, 0x02	; 2
    19aa:	63 e0       	ldi	r22, 0x03	; 3
    19ac:	40 e0       	ldi	r20, 0x00	; 0
    19ae:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
}
    19b2:	cf 91       	pop	r28
    19b4:	df 91       	pop	r29
    19b6:	08 95       	ret

000019b8 <stepper_void360Right>:

void stepper_void360Right(void)
{
    19b8:	0f 93       	push	r16
    19ba:	1f 93       	push	r17
    19bc:	df 93       	push	r29
    19be:	cf 93       	push	r28
    19c0:	cd b7       	in	r28, 0x3d	; 61
    19c2:	de b7       	in	r29, 0x3e	; 62
    19c4:	ca 54       	subi	r28, 0x4A	; 74
    19c6:	d0 40       	sbci	r29, 0x00	; 0
    19c8:	0f b6       	in	r0, 0x3f	; 63
    19ca:	f8 94       	cli
    19cc:	de bf       	out	0x3e, r29	; 62
    19ce:	0f be       	out	0x3f, r0	; 63
    19d0:	cd bf       	out	0x3d, r28	; 61


	u32 i;
	for( i=0;i<520;i++)
    19d2:	fe 01       	movw	r30, r28
    19d4:	e9 5b       	subi	r30, 0xB9	; 185
    19d6:	ff 4f       	sbci	r31, 0xFF	; 255
    19d8:	10 82       	st	Z, r1
    19da:	11 82       	std	Z+1, r1	; 0x01
    19dc:	12 82       	std	Z+2, r1	; 0x02
    19de:	13 82       	std	Z+3, r1	; 0x03
    19e0:	3d c2       	rjmp	.+1146   	; 0x1e5c <stepper_void360Right+0x4a4>
	{
					DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    19e2:	82 e0       	ldi	r24, 0x02	; 2
    19e4:	60 e0       	ldi	r22, 0x00	; 0
    19e6:	41 e0       	ldi	r20, 0x01	; 1
    19e8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    19ec:	82 e0       	ldi	r24, 0x02	; 2
    19ee:	61 e0       	ldi	r22, 0x01	; 1
    19f0:	40 e0       	ldi	r20, 0x00	; 0
    19f2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    19f6:	82 e0       	ldi	r24, 0x02	; 2
    19f8:	62 e0       	ldi	r22, 0x02	; 2
    19fa:	40 e0       	ldi	r20, 0x00	; 0
    19fc:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);
    1a00:	82 e0       	ldi	r24, 0x02	; 2
    1a02:	63 e0       	ldi	r22, 0x03	; 3
    1a04:	41 e0       	ldi	r20, 0x01	; 1
    1a06:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1a0a:	fe 01       	movw	r30, r28
    1a0c:	ed 5b       	subi	r30, 0xBD	; 189
    1a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a10:	80 e0       	ldi	r24, 0x00	; 0
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	a0 e0       	ldi	r26, 0x00	; 0
    1a16:	b0 e4       	ldi	r27, 0x40	; 64
    1a18:	80 83       	st	Z, r24
    1a1a:	91 83       	std	Z+1, r25	; 0x01
    1a1c:	a2 83       	std	Z+2, r26	; 0x02
    1a1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a20:	8e 01       	movw	r16, r28
    1a22:	01 5c       	subi	r16, 0xC1	; 193
    1a24:	1f 4f       	sbci	r17, 0xFF	; 255
    1a26:	fe 01       	movw	r30, r28
    1a28:	ed 5b       	subi	r30, 0xBD	; 189
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	60 81       	ld	r22, Z
    1a2e:	71 81       	ldd	r23, Z+1	; 0x01
    1a30:	82 81       	ldd	r24, Z+2	; 0x02
    1a32:	93 81       	ldd	r25, Z+3	; 0x03
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e8       	ldi	r19, 0x80	; 128
    1a38:	4b e3       	ldi	r20, 0x3B	; 59
    1a3a:	55 e4       	ldi	r21, 0x45	; 69
    1a3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a40:	dc 01       	movw	r26, r24
    1a42:	cb 01       	movw	r24, r22
    1a44:	f8 01       	movw	r30, r16
    1a46:	80 83       	st	Z, r24
    1a48:	91 83       	std	Z+1, r25	; 0x01
    1a4a:	a2 83       	std	Z+2, r26	; 0x02
    1a4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a4e:	fe 01       	movw	r30, r28
    1a50:	ff 96       	adiw	r30, 0x3f	; 63
    1a52:	60 81       	ld	r22, Z
    1a54:	71 81       	ldd	r23, Z+1	; 0x01
    1a56:	82 81       	ldd	r24, Z+2	; 0x02
    1a58:	93 81       	ldd	r25, Z+3	; 0x03
    1a5a:	20 e0       	ldi	r18, 0x00	; 0
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	40 e8       	ldi	r20, 0x80	; 128
    1a60:	5f e3       	ldi	r21, 0x3F	; 63
    1a62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a66:	88 23       	and	r24, r24
    1a68:	2c f4       	brge	.+10     	; 0x1a74 <stepper_void360Right+0xbc>
		__ticks = 1;
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	9e af       	std	Y+62, r25	; 0x3e
    1a70:	8d af       	std	Y+61, r24	; 0x3d
    1a72:	46 c0       	rjmp	.+140    	; 0x1b00 <stepper_void360Right+0x148>
	else if (__tmp > 65535)
    1a74:	fe 01       	movw	r30, r28
    1a76:	ff 96       	adiw	r30, 0x3f	; 63
    1a78:	60 81       	ld	r22, Z
    1a7a:	71 81       	ldd	r23, Z+1	; 0x01
    1a7c:	82 81       	ldd	r24, Z+2	; 0x02
    1a7e:	93 81       	ldd	r25, Z+3	; 0x03
    1a80:	20 e0       	ldi	r18, 0x00	; 0
    1a82:	3f ef       	ldi	r19, 0xFF	; 255
    1a84:	4f e7       	ldi	r20, 0x7F	; 127
    1a86:	57 e4       	ldi	r21, 0x47	; 71
    1a88:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a8c:	18 16       	cp	r1, r24
    1a8e:	64 f5       	brge	.+88     	; 0x1ae8 <stepper_void360Right+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a90:	fe 01       	movw	r30, r28
    1a92:	ed 5b       	subi	r30, 0xBD	; 189
    1a94:	ff 4f       	sbci	r31, 0xFF	; 255
    1a96:	60 81       	ld	r22, Z
    1a98:	71 81       	ldd	r23, Z+1	; 0x01
    1a9a:	82 81       	ldd	r24, Z+2	; 0x02
    1a9c:	93 81       	ldd	r25, Z+3	; 0x03
    1a9e:	20 e0       	ldi	r18, 0x00	; 0
    1aa0:	30 e0       	ldi	r19, 0x00	; 0
    1aa2:	40 e2       	ldi	r20, 0x20	; 32
    1aa4:	51 e4       	ldi	r21, 0x41	; 65
    1aa6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aaa:	dc 01       	movw	r26, r24
    1aac:	cb 01       	movw	r24, r22
    1aae:	bc 01       	movw	r22, r24
    1ab0:	cd 01       	movw	r24, r26
    1ab2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	9e af       	std	Y+62, r25	; 0x3e
    1abc:	8d af       	std	Y+61, r24	; 0x3d
    1abe:	0f c0       	rjmp	.+30     	; 0x1ade <stepper_void360Right+0x126>
    1ac0:	8c e2       	ldi	r24, 0x2C	; 44
    1ac2:	91 e0       	ldi	r25, 0x01	; 1
    1ac4:	9c af       	std	Y+60, r25	; 0x3c
    1ac6:	8b af       	std	Y+59, r24	; 0x3b
    1ac8:	8b ad       	ldd	r24, Y+59	; 0x3b
    1aca:	9c ad       	ldd	r25, Y+60	; 0x3c
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <stepper_void360Right+0x114>
    1ad0:	9c af       	std	Y+60, r25	; 0x3c
    1ad2:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ad4:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ad6:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	9e af       	std	Y+62, r25	; 0x3e
    1adc:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ade:	8d ad       	ldd	r24, Y+61	; 0x3d
    1ae0:	9e ad       	ldd	r25, Y+62	; 0x3e
    1ae2:	00 97       	sbiw	r24, 0x00	; 0
    1ae4:	69 f7       	brne	.-38     	; 0x1ac0 <stepper_void360Right+0x108>
    1ae6:	16 c0       	rjmp	.+44     	; 0x1b14 <stepper_void360Right+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ae8:	fe 01       	movw	r30, r28
    1aea:	ff 96       	adiw	r30, 0x3f	; 63
    1aec:	60 81       	ld	r22, Z
    1aee:	71 81       	ldd	r23, Z+1	; 0x01
    1af0:	82 81       	ldd	r24, Z+2	; 0x02
    1af2:	93 81       	ldd	r25, Z+3	; 0x03
    1af4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1af8:	dc 01       	movw	r26, r24
    1afa:	cb 01       	movw	r24, r22
    1afc:	9e af       	std	Y+62, r25	; 0x3e
    1afe:	8d af       	std	Y+61, r24	; 0x3d
    1b00:	8d ad       	ldd	r24, Y+61	; 0x3d
    1b02:	9e ad       	ldd	r25, Y+62	; 0x3e
    1b04:	9a af       	std	Y+58, r25	; 0x3a
    1b06:	89 af       	std	Y+57, r24	; 0x39
    1b08:	89 ad       	ldd	r24, Y+57	; 0x39
    1b0a:	9a ad       	ldd	r25, Y+58	; 0x3a
    1b0c:	01 97       	sbiw	r24, 0x01	; 1
    1b0e:	f1 f7       	brne	.-4      	; 0x1b0c <stepper_void360Right+0x154>
    1b10:	9a af       	std	Y+58, r25	; 0x3a
    1b12:	89 af       	std	Y+57, r24	; 0x39
					_delay_ms(period);

					DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);
    1b14:	82 e0       	ldi	r24, 0x02	; 2
    1b16:	60 e0       	ldi	r22, 0x00	; 0
    1b18:	41 e0       	ldi	r20, 0x01	; 1
    1b1a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    1b1e:	82 e0       	ldi	r24, 0x02	; 2
    1b20:	61 e0       	ldi	r22, 0x01	; 1
    1b22:	41 e0       	ldi	r20, 0x01	; 1
    1b24:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1b28:	82 e0       	ldi	r24, 0x02	; 2
    1b2a:	62 e0       	ldi	r22, 0x02	; 2
    1b2c:	40 e0       	ldi	r20, 0x00	; 0
    1b2e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1b32:	82 e0       	ldi	r24, 0x02	; 2
    1b34:	63 e0       	ldi	r22, 0x03	; 3
    1b36:	40 e0       	ldi	r20, 0x00	; 0
    1b38:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1b3c:	80 e0       	ldi	r24, 0x00	; 0
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	a0 e0       	ldi	r26, 0x00	; 0
    1b42:	b0 e4       	ldi	r27, 0x40	; 64
    1b44:	8d ab       	std	Y+53, r24	; 0x35
    1b46:	9e ab       	std	Y+54, r25	; 0x36
    1b48:	af ab       	std	Y+55, r26	; 0x37
    1b4a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b4c:	6d a9       	ldd	r22, Y+53	; 0x35
    1b4e:	7e a9       	ldd	r23, Y+54	; 0x36
    1b50:	8f a9       	ldd	r24, Y+55	; 0x37
    1b52:	98 ad       	ldd	r25, Y+56	; 0x38
    1b54:	20 e0       	ldi	r18, 0x00	; 0
    1b56:	30 e8       	ldi	r19, 0x80	; 128
    1b58:	4b e3       	ldi	r20, 0x3B	; 59
    1b5a:	55 e4       	ldi	r21, 0x45	; 69
    1b5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b60:	dc 01       	movw	r26, r24
    1b62:	cb 01       	movw	r24, r22
    1b64:	89 ab       	std	Y+49, r24	; 0x31
    1b66:	9a ab       	std	Y+50, r25	; 0x32
    1b68:	ab ab       	std	Y+51, r26	; 0x33
    1b6a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1b6c:	69 a9       	ldd	r22, Y+49	; 0x31
    1b6e:	7a a9       	ldd	r23, Y+50	; 0x32
    1b70:	8b a9       	ldd	r24, Y+51	; 0x33
    1b72:	9c a9       	ldd	r25, Y+52	; 0x34
    1b74:	20 e0       	ldi	r18, 0x00	; 0
    1b76:	30 e0       	ldi	r19, 0x00	; 0
    1b78:	40 e8       	ldi	r20, 0x80	; 128
    1b7a:	5f e3       	ldi	r21, 0x3F	; 63
    1b7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b80:	88 23       	and	r24, r24
    1b82:	2c f4       	brge	.+10     	; 0x1b8e <stepper_void360Right+0x1d6>
		__ticks = 1;
    1b84:	81 e0       	ldi	r24, 0x01	; 1
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	98 ab       	std	Y+48, r25	; 0x30
    1b8a:	8f a7       	std	Y+47, r24	; 0x2f
    1b8c:	3f c0       	rjmp	.+126    	; 0x1c0c <stepper_void360Right+0x254>
	else if (__tmp > 65535)
    1b8e:	69 a9       	ldd	r22, Y+49	; 0x31
    1b90:	7a a9       	ldd	r23, Y+50	; 0x32
    1b92:	8b a9       	ldd	r24, Y+51	; 0x33
    1b94:	9c a9       	ldd	r25, Y+52	; 0x34
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	3f ef       	ldi	r19, 0xFF	; 255
    1b9a:	4f e7       	ldi	r20, 0x7F	; 127
    1b9c:	57 e4       	ldi	r21, 0x47	; 71
    1b9e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ba2:	18 16       	cp	r1, r24
    1ba4:	4c f5       	brge	.+82     	; 0x1bf8 <stepper_void360Right+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba6:	6d a9       	ldd	r22, Y+53	; 0x35
    1ba8:	7e a9       	ldd	r23, Y+54	; 0x36
    1baa:	8f a9       	ldd	r24, Y+55	; 0x37
    1bac:	98 ad       	ldd	r25, Y+56	; 0x38
    1bae:	20 e0       	ldi	r18, 0x00	; 0
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	40 e2       	ldi	r20, 0x20	; 32
    1bb4:	51 e4       	ldi	r21, 0x41	; 65
    1bb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bba:	dc 01       	movw	r26, r24
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	bc 01       	movw	r22, r24
    1bc0:	cd 01       	movw	r24, r26
    1bc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bc6:	dc 01       	movw	r26, r24
    1bc8:	cb 01       	movw	r24, r22
    1bca:	98 ab       	std	Y+48, r25	; 0x30
    1bcc:	8f a7       	std	Y+47, r24	; 0x2f
    1bce:	0f c0       	rjmp	.+30     	; 0x1bee <stepper_void360Right+0x236>
    1bd0:	8c e2       	ldi	r24, 0x2C	; 44
    1bd2:	91 e0       	ldi	r25, 0x01	; 1
    1bd4:	9e a7       	std	Y+46, r25	; 0x2e
    1bd6:	8d a7       	std	Y+45, r24	; 0x2d
    1bd8:	8d a5       	ldd	r24, Y+45	; 0x2d
    1bda:	9e a5       	ldd	r25, Y+46	; 0x2e
    1bdc:	01 97       	sbiw	r24, 0x01	; 1
    1bde:	f1 f7       	brne	.-4      	; 0x1bdc <stepper_void360Right+0x224>
    1be0:	9e a7       	std	Y+46, r25	; 0x2e
    1be2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1be4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1be6:	98 a9       	ldd	r25, Y+48	; 0x30
    1be8:	01 97       	sbiw	r24, 0x01	; 1
    1bea:	98 ab       	std	Y+48, r25	; 0x30
    1bec:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bee:	8f a5       	ldd	r24, Y+47	; 0x2f
    1bf0:	98 a9       	ldd	r25, Y+48	; 0x30
    1bf2:	00 97       	sbiw	r24, 0x00	; 0
    1bf4:	69 f7       	brne	.-38     	; 0x1bd0 <stepper_void360Right+0x218>
    1bf6:	14 c0       	rjmp	.+40     	; 0x1c20 <stepper_void360Right+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bf8:	69 a9       	ldd	r22, Y+49	; 0x31
    1bfa:	7a a9       	ldd	r23, Y+50	; 0x32
    1bfc:	8b a9       	ldd	r24, Y+51	; 0x33
    1bfe:	9c a9       	ldd	r25, Y+52	; 0x34
    1c00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	98 ab       	std	Y+48, r25	; 0x30
    1c0a:	8f a7       	std	Y+47, r24	; 0x2f
    1c0c:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c0e:	98 a9       	ldd	r25, Y+48	; 0x30
    1c10:	9c a7       	std	Y+44, r25	; 0x2c
    1c12:	8b a7       	std	Y+43, r24	; 0x2b
    1c14:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c16:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c18:	01 97       	sbiw	r24, 0x01	; 1
    1c1a:	f1 f7       	brne	.-4      	; 0x1c18 <stepper_void360Right+0x260>
    1c1c:	9c a7       	std	Y+44, r25	; 0x2c
    1c1e:	8b a7       	std	Y+43, r24	; 0x2b
					_delay_ms(period);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1c20:	82 e0       	ldi	r24, 0x02	; 2
    1c22:	60 e0       	ldi	r22, 0x00	; 0
    1c24:	40 e0       	ldi	r20, 0x00	; 0
    1c26:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);
    1c2a:	82 e0       	ldi	r24, 0x02	; 2
    1c2c:	61 e0       	ldi	r22, 0x01	; 1
    1c2e:	41 e0       	ldi	r20, 0x01	; 1
    1c30:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    1c34:	82 e0       	ldi	r24, 0x02	; 2
    1c36:	62 e0       	ldi	r22, 0x02	; 2
    1c38:	41 e0       	ldi	r20, 0x01	; 1
    1c3a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    1c3e:	82 e0       	ldi	r24, 0x02	; 2
    1c40:	63 e0       	ldi	r22, 0x03	; 3
    1c42:	40 e0       	ldi	r20, 0x00	; 0
    1c44:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1c48:	80 e0       	ldi	r24, 0x00	; 0
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	a0 e0       	ldi	r26, 0x00	; 0
    1c4e:	b0 e4       	ldi	r27, 0x40	; 64
    1c50:	8f a3       	std	Y+39, r24	; 0x27
    1c52:	98 a7       	std	Y+40, r25	; 0x28
    1c54:	a9 a7       	std	Y+41, r26	; 0x29
    1c56:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c58:	6f a1       	ldd	r22, Y+39	; 0x27
    1c5a:	78 a5       	ldd	r23, Y+40	; 0x28
    1c5c:	89 a5       	ldd	r24, Y+41	; 0x29
    1c5e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1c60:	20 e0       	ldi	r18, 0x00	; 0
    1c62:	30 e8       	ldi	r19, 0x80	; 128
    1c64:	4b e3       	ldi	r20, 0x3B	; 59
    1c66:	55 e4       	ldi	r21, 0x45	; 69
    1c68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	cb 01       	movw	r24, r22
    1c70:	8b a3       	std	Y+35, r24	; 0x23
    1c72:	9c a3       	std	Y+36, r25	; 0x24
    1c74:	ad a3       	std	Y+37, r26	; 0x25
    1c76:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1c78:	6b a1       	ldd	r22, Y+35	; 0x23
    1c7a:	7c a1       	ldd	r23, Y+36	; 0x24
    1c7c:	8d a1       	ldd	r24, Y+37	; 0x25
    1c7e:	9e a1       	ldd	r25, Y+38	; 0x26
    1c80:	20 e0       	ldi	r18, 0x00	; 0
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	40 e8       	ldi	r20, 0x80	; 128
    1c86:	5f e3       	ldi	r21, 0x3F	; 63
    1c88:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c8c:	88 23       	and	r24, r24
    1c8e:	2c f4       	brge	.+10     	; 0x1c9a <stepper_void360Right+0x2e2>
		__ticks = 1;
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	9a a3       	std	Y+34, r25	; 0x22
    1c96:	89 a3       	std	Y+33, r24	; 0x21
    1c98:	3f c0       	rjmp	.+126    	; 0x1d18 <stepper_void360Right+0x360>
	else if (__tmp > 65535)
    1c9a:	6b a1       	ldd	r22, Y+35	; 0x23
    1c9c:	7c a1       	ldd	r23, Y+36	; 0x24
    1c9e:	8d a1       	ldd	r24, Y+37	; 0x25
    1ca0:	9e a1       	ldd	r25, Y+38	; 0x26
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	3f ef       	ldi	r19, 0xFF	; 255
    1ca6:	4f e7       	ldi	r20, 0x7F	; 127
    1ca8:	57 e4       	ldi	r21, 0x47	; 71
    1caa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1cae:	18 16       	cp	r1, r24
    1cb0:	4c f5       	brge	.+82     	; 0x1d04 <stepper_void360Right+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cb2:	6f a1       	ldd	r22, Y+39	; 0x27
    1cb4:	78 a5       	ldd	r23, Y+40	; 0x28
    1cb6:	89 a5       	ldd	r24, Y+41	; 0x29
    1cb8:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cba:	20 e0       	ldi	r18, 0x00	; 0
    1cbc:	30 e0       	ldi	r19, 0x00	; 0
    1cbe:	40 e2       	ldi	r20, 0x20	; 32
    1cc0:	51 e4       	ldi	r21, 0x41	; 65
    1cc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cc6:	dc 01       	movw	r26, r24
    1cc8:	cb 01       	movw	r24, r22
    1cca:	bc 01       	movw	r22, r24
    1ccc:	cd 01       	movw	r24, r26
    1cce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd2:	dc 01       	movw	r26, r24
    1cd4:	cb 01       	movw	r24, r22
    1cd6:	9a a3       	std	Y+34, r25	; 0x22
    1cd8:	89 a3       	std	Y+33, r24	; 0x21
    1cda:	0f c0       	rjmp	.+30     	; 0x1cfa <stepper_void360Right+0x342>
    1cdc:	8c e2       	ldi	r24, 0x2C	; 44
    1cde:	91 e0       	ldi	r25, 0x01	; 1
    1ce0:	98 a3       	std	Y+32, r25	; 0x20
    1ce2:	8f 8f       	std	Y+31, r24	; 0x1f
    1ce4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ce6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ce8:	01 97       	sbiw	r24, 0x01	; 1
    1cea:	f1 f7       	brne	.-4      	; 0x1ce8 <stepper_void360Right+0x330>
    1cec:	98 a3       	std	Y+32, r25	; 0x20
    1cee:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cf0:	89 a1       	ldd	r24, Y+33	; 0x21
    1cf2:	9a a1       	ldd	r25, Y+34	; 0x22
    1cf4:	01 97       	sbiw	r24, 0x01	; 1
    1cf6:	9a a3       	std	Y+34, r25	; 0x22
    1cf8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cfa:	89 a1       	ldd	r24, Y+33	; 0x21
    1cfc:	9a a1       	ldd	r25, Y+34	; 0x22
    1cfe:	00 97       	sbiw	r24, 0x00	; 0
    1d00:	69 f7       	brne	.-38     	; 0x1cdc <stepper_void360Right+0x324>
    1d02:	14 c0       	rjmp	.+40     	; 0x1d2c <stepper_void360Right+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d04:	6b a1       	ldd	r22, Y+35	; 0x23
    1d06:	7c a1       	ldd	r23, Y+36	; 0x24
    1d08:	8d a1       	ldd	r24, Y+37	; 0x25
    1d0a:	9e a1       	ldd	r25, Y+38	; 0x26
    1d0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d10:	dc 01       	movw	r26, r24
    1d12:	cb 01       	movw	r24, r22
    1d14:	9a a3       	std	Y+34, r25	; 0x22
    1d16:	89 a3       	std	Y+33, r24	; 0x21
    1d18:	89 a1       	ldd	r24, Y+33	; 0x21
    1d1a:	9a a1       	ldd	r25, Y+34	; 0x22
    1d1c:	9e 8f       	std	Y+30, r25	; 0x1e
    1d1e:	8d 8f       	std	Y+29, r24	; 0x1d
    1d20:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d22:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d24:	01 97       	sbiw	r24, 0x01	; 1
    1d26:	f1 f7       	brne	.-4      	; 0x1d24 <stepper_void360Right+0x36c>
    1d28:	9e 8f       	std	Y+30, r25	; 0x1e
    1d2a:	8d 8f       	std	Y+29, r24	; 0x1d
					_delay_ms(period);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1d2c:	82 e0       	ldi	r24, 0x02	; 2
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	40 e0       	ldi	r20, 0x00	; 0
    1d32:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1d36:	82 e0       	ldi	r24, 0x02	; 2
    1d38:	61 e0       	ldi	r22, 0x01	; 1
    1d3a:	40 e0       	ldi	r20, 0x00	; 0
    1d3c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);
    1d40:	82 e0       	ldi	r24, 0x02	; 2
    1d42:	62 e0       	ldi	r22, 0x02	; 2
    1d44:	41 e0       	ldi	r20, 0x01	; 1
    1d46:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    1d4a:	82 e0       	ldi	r24, 0x02	; 2
    1d4c:	63 e0       	ldi	r22, 0x03	; 3
    1d4e:	41 e0       	ldi	r20, 0x01	; 1
    1d50:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1d54:	80 e0       	ldi	r24, 0x00	; 0
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	a0 e0       	ldi	r26, 0x00	; 0
    1d5a:	b0 e4       	ldi	r27, 0x40	; 64
    1d5c:	89 8f       	std	Y+25, r24	; 0x19
    1d5e:	9a 8f       	std	Y+26, r25	; 0x1a
    1d60:	ab 8f       	std	Y+27, r26	; 0x1b
    1d62:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d64:	69 8d       	ldd	r22, Y+25	; 0x19
    1d66:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d68:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d6a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d6c:	20 e0       	ldi	r18, 0x00	; 0
    1d6e:	30 e8       	ldi	r19, 0x80	; 128
    1d70:	4b e3       	ldi	r20, 0x3B	; 59
    1d72:	55 e4       	ldi	r21, 0x45	; 69
    1d74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d78:	dc 01       	movw	r26, r24
    1d7a:	cb 01       	movw	r24, r22
    1d7c:	8d 8b       	std	Y+21, r24	; 0x15
    1d7e:	9e 8b       	std	Y+22, r25	; 0x16
    1d80:	af 8b       	std	Y+23, r26	; 0x17
    1d82:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1d84:	6d 89       	ldd	r22, Y+21	; 0x15
    1d86:	7e 89       	ldd	r23, Y+22	; 0x16
    1d88:	8f 89       	ldd	r24, Y+23	; 0x17
    1d8a:	98 8d       	ldd	r25, Y+24	; 0x18
    1d8c:	20 e0       	ldi	r18, 0x00	; 0
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	40 e8       	ldi	r20, 0x80	; 128
    1d92:	5f e3       	ldi	r21, 0x3F	; 63
    1d94:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d98:	88 23       	and	r24, r24
    1d9a:	2c f4       	brge	.+10     	; 0x1da6 <stepper_void360Right+0x3ee>
		__ticks = 1;
    1d9c:	81 e0       	ldi	r24, 0x01	; 1
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	9c 8b       	std	Y+20, r25	; 0x14
    1da2:	8b 8b       	std	Y+19, r24	; 0x13
    1da4:	3f c0       	rjmp	.+126    	; 0x1e24 <stepper_void360Right+0x46c>
	else if (__tmp > 65535)
    1da6:	6d 89       	ldd	r22, Y+21	; 0x15
    1da8:	7e 89       	ldd	r23, Y+22	; 0x16
    1daa:	8f 89       	ldd	r24, Y+23	; 0x17
    1dac:	98 8d       	ldd	r25, Y+24	; 0x18
    1dae:	20 e0       	ldi	r18, 0x00	; 0
    1db0:	3f ef       	ldi	r19, 0xFF	; 255
    1db2:	4f e7       	ldi	r20, 0x7F	; 127
    1db4:	57 e4       	ldi	r21, 0x47	; 71
    1db6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dba:	18 16       	cp	r1, r24
    1dbc:	4c f5       	brge	.+82     	; 0x1e10 <stepper_void360Right+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dbe:	69 8d       	ldd	r22, Y+25	; 0x19
    1dc0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dc2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dc4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	40 e2       	ldi	r20, 0x20	; 32
    1dcc:	51 e4       	ldi	r21, 0x41	; 65
    1dce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dd2:	dc 01       	movw	r26, r24
    1dd4:	cb 01       	movw	r24, r22
    1dd6:	bc 01       	movw	r22, r24
    1dd8:	cd 01       	movw	r24, r26
    1dda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dde:	dc 01       	movw	r26, r24
    1de0:	cb 01       	movw	r24, r22
    1de2:	9c 8b       	std	Y+20, r25	; 0x14
    1de4:	8b 8b       	std	Y+19, r24	; 0x13
    1de6:	0f c0       	rjmp	.+30     	; 0x1e06 <stepper_void360Right+0x44e>
    1de8:	8c e2       	ldi	r24, 0x2C	; 44
    1dea:	91 e0       	ldi	r25, 0x01	; 1
    1dec:	9a 8b       	std	Y+18, r25	; 0x12
    1dee:	89 8b       	std	Y+17, r24	; 0x11
    1df0:	89 89       	ldd	r24, Y+17	; 0x11
    1df2:	9a 89       	ldd	r25, Y+18	; 0x12
    1df4:	01 97       	sbiw	r24, 0x01	; 1
    1df6:	f1 f7       	brne	.-4      	; 0x1df4 <stepper_void360Right+0x43c>
    1df8:	9a 8b       	std	Y+18, r25	; 0x12
    1dfa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dfc:	8b 89       	ldd	r24, Y+19	; 0x13
    1dfe:	9c 89       	ldd	r25, Y+20	; 0x14
    1e00:	01 97       	sbiw	r24, 0x01	; 1
    1e02:	9c 8b       	std	Y+20, r25	; 0x14
    1e04:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e06:	8b 89       	ldd	r24, Y+19	; 0x13
    1e08:	9c 89       	ldd	r25, Y+20	; 0x14
    1e0a:	00 97       	sbiw	r24, 0x00	; 0
    1e0c:	69 f7       	brne	.-38     	; 0x1de8 <stepper_void360Right+0x430>
    1e0e:	14 c0       	rjmp	.+40     	; 0x1e38 <stepper_void360Right+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e10:	6d 89       	ldd	r22, Y+21	; 0x15
    1e12:	7e 89       	ldd	r23, Y+22	; 0x16
    1e14:	8f 89       	ldd	r24, Y+23	; 0x17
    1e16:	98 8d       	ldd	r25, Y+24	; 0x18
    1e18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e1c:	dc 01       	movw	r26, r24
    1e1e:	cb 01       	movw	r24, r22
    1e20:	9c 8b       	std	Y+20, r25	; 0x14
    1e22:	8b 8b       	std	Y+19, r24	; 0x13
    1e24:	8b 89       	ldd	r24, Y+19	; 0x13
    1e26:	9c 89       	ldd	r25, Y+20	; 0x14
    1e28:	98 8b       	std	Y+16, r25	; 0x10
    1e2a:	8f 87       	std	Y+15, r24	; 0x0f
    1e2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e2e:	98 89       	ldd	r25, Y+16	; 0x10
    1e30:	01 97       	sbiw	r24, 0x01	; 1
    1e32:	f1 f7       	brne	.-4      	; 0x1e30 <stepper_void360Right+0x478>
    1e34:	98 8b       	std	Y+16, r25	; 0x10
    1e36:	8f 87       	std	Y+15, r24	; 0x0f
void stepper_void360Right(void)
{


	u32 i;
	for( i=0;i<520;i++)
    1e38:	9e 01       	movw	r18, r28
    1e3a:	29 5b       	subi	r18, 0xB9	; 185
    1e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e3e:	fe 01       	movw	r30, r28
    1e40:	e9 5b       	subi	r30, 0xB9	; 185
    1e42:	ff 4f       	sbci	r31, 0xFF	; 255
    1e44:	80 81       	ld	r24, Z
    1e46:	91 81       	ldd	r25, Z+1	; 0x01
    1e48:	a2 81       	ldd	r26, Z+2	; 0x02
    1e4a:	b3 81       	ldd	r27, Z+3	; 0x03
    1e4c:	01 96       	adiw	r24, 0x01	; 1
    1e4e:	a1 1d       	adc	r26, r1
    1e50:	b1 1d       	adc	r27, r1
    1e52:	f9 01       	movw	r30, r18
    1e54:	80 83       	st	Z, r24
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	a2 83       	std	Z+2, r26	; 0x02
    1e5a:	b3 83       	std	Z+3, r27	; 0x03
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	e9 5b       	subi	r30, 0xB9	; 185
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	80 81       	ld	r24, Z
    1e64:	91 81       	ldd	r25, Z+1	; 0x01
    1e66:	a2 81       	ldd	r26, Z+2	; 0x02
    1e68:	b3 81       	ldd	r27, Z+3	; 0x03
    1e6a:	88 30       	cpi	r24, 0x08	; 8
    1e6c:	f2 e0       	ldi	r31, 0x02	; 2
    1e6e:	9f 07       	cpc	r25, r31
    1e70:	f0 e0       	ldi	r31, 0x00	; 0
    1e72:	af 07       	cpc	r26, r31
    1e74:	f0 e0       	ldi	r31, 0x00	; 0
    1e76:	bf 07       	cpc	r27, r31
    1e78:	08 f4       	brcc	.+2      	; 0x1e7c <stepper_void360Right+0x4c4>
    1e7a:	b3 cd       	rjmp	.-1178   	; 0x19e2 <stepper_void360Right+0x2a>
    1e7c:	80 e0       	ldi	r24, 0x00	; 0
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	aa e7       	ldi	r26, 0x7A	; 122
    1e82:	b4 e4       	ldi	r27, 0x44	; 68
    1e84:	8b 87       	std	Y+11, r24	; 0x0b
    1e86:	9c 87       	std	Y+12, r25	; 0x0c
    1e88:	ad 87       	std	Y+13, r26	; 0x0d
    1e8a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e8c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e8e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e90:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e92:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e94:	20 e0       	ldi	r18, 0x00	; 0
    1e96:	30 e8       	ldi	r19, 0x80	; 128
    1e98:	4b e3       	ldi	r20, 0x3B	; 59
    1e9a:	55 e4       	ldi	r21, 0x45	; 69
    1e9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea0:	dc 01       	movw	r26, r24
    1ea2:	cb 01       	movw	r24, r22
    1ea4:	8f 83       	std	Y+7, r24	; 0x07
    1ea6:	98 87       	std	Y+8, r25	; 0x08
    1ea8:	a9 87       	std	Y+9, r26	; 0x09
    1eaa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1eac:	6f 81       	ldd	r22, Y+7	; 0x07
    1eae:	78 85       	ldd	r23, Y+8	; 0x08
    1eb0:	89 85       	ldd	r24, Y+9	; 0x09
    1eb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eb4:	20 e0       	ldi	r18, 0x00	; 0
    1eb6:	30 e0       	ldi	r19, 0x00	; 0
    1eb8:	40 e8       	ldi	r20, 0x80	; 128
    1eba:	5f e3       	ldi	r21, 0x3F	; 63
    1ebc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ec0:	88 23       	and	r24, r24
    1ec2:	2c f4       	brge	.+10     	; 0x1ece <stepper_void360Right+0x516>
		__ticks = 1;
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	9e 83       	std	Y+6, r25	; 0x06
    1eca:	8d 83       	std	Y+5, r24	; 0x05
    1ecc:	3f c0       	rjmp	.+126    	; 0x1f4c <stepper_void360Right+0x594>
	else if (__tmp > 65535)
    1ece:	6f 81       	ldd	r22, Y+7	; 0x07
    1ed0:	78 85       	ldd	r23, Y+8	; 0x08
    1ed2:	89 85       	ldd	r24, Y+9	; 0x09
    1ed4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ed6:	20 e0       	ldi	r18, 0x00	; 0
    1ed8:	3f ef       	ldi	r19, 0xFF	; 255
    1eda:	4f e7       	ldi	r20, 0x7F	; 127
    1edc:	57 e4       	ldi	r21, 0x47	; 71
    1ede:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ee2:	18 16       	cp	r1, r24
    1ee4:	4c f5       	brge	.+82     	; 0x1f38 <stepper_void360Right+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ee6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ee8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1eea:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eec:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eee:	20 e0       	ldi	r18, 0x00	; 0
    1ef0:	30 e0       	ldi	r19, 0x00	; 0
    1ef2:	40 e2       	ldi	r20, 0x20	; 32
    1ef4:	51 e4       	ldi	r21, 0x41	; 65
    1ef6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1efa:	dc 01       	movw	r26, r24
    1efc:	cb 01       	movw	r24, r22
    1efe:	bc 01       	movw	r22, r24
    1f00:	cd 01       	movw	r24, r26
    1f02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f06:	dc 01       	movw	r26, r24
    1f08:	cb 01       	movw	r24, r22
    1f0a:	9e 83       	std	Y+6, r25	; 0x06
    1f0c:	8d 83       	std	Y+5, r24	; 0x05
    1f0e:	0f c0       	rjmp	.+30     	; 0x1f2e <stepper_void360Right+0x576>
    1f10:	8c e2       	ldi	r24, 0x2C	; 44
    1f12:	91 e0       	ldi	r25, 0x01	; 1
    1f14:	9c 83       	std	Y+4, r25	; 0x04
    1f16:	8b 83       	std	Y+3, r24	; 0x03
    1f18:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1f1c:	01 97       	sbiw	r24, 0x01	; 1
    1f1e:	f1 f7       	brne	.-4      	; 0x1f1c <stepper_void360Right+0x564>
    1f20:	9c 83       	std	Y+4, r25	; 0x04
    1f22:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f24:	8d 81       	ldd	r24, Y+5	; 0x05
    1f26:	9e 81       	ldd	r25, Y+6	; 0x06
    1f28:	01 97       	sbiw	r24, 0x01	; 1
    1f2a:	9e 83       	std	Y+6, r25	; 0x06
    1f2c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f2e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f30:	9e 81       	ldd	r25, Y+6	; 0x06
    1f32:	00 97       	sbiw	r24, 0x00	; 0
    1f34:	69 f7       	brne	.-38     	; 0x1f10 <stepper_void360Right+0x558>
    1f36:	14 c0       	rjmp	.+40     	; 0x1f60 <stepper_void360Right+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f38:	6f 81       	ldd	r22, Y+7	; 0x07
    1f3a:	78 85       	ldd	r23, Y+8	; 0x08
    1f3c:	89 85       	ldd	r24, Y+9	; 0x09
    1f3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f44:	dc 01       	movw	r26, r24
    1f46:	cb 01       	movw	r24, r22
    1f48:	9e 83       	std	Y+6, r25	; 0x06
    1f4a:	8d 83       	std	Y+5, r24	; 0x05
    1f4c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f4e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f50:	9a 83       	std	Y+2, r25	; 0x02
    1f52:	89 83       	std	Y+1, r24	; 0x01
    1f54:	89 81       	ldd	r24, Y+1	; 0x01
    1f56:	9a 81       	ldd	r25, Y+2	; 0x02
    1f58:	01 97       	sbiw	r24, 0x01	; 1
    1f5a:	f1 f7       	brne	.-4      	; 0x1f58 <stepper_void360Right+0x5a0>
    1f5c:	9a 83       	std	Y+2, r25	; 0x02
    1f5e:	89 83       	std	Y+1, r24	; 0x01

	}
	_delay_ms(1000);


}
    1f60:	c6 5b       	subi	r28, 0xB6	; 182
    1f62:	df 4f       	sbci	r29, 0xFF	; 255
    1f64:	0f b6       	in	r0, 0x3f	; 63
    1f66:	f8 94       	cli
    1f68:	de bf       	out	0x3e, r29	; 62
    1f6a:	0f be       	out	0x3f, r0	; 63
    1f6c:	cd bf       	out	0x3d, r28	; 61
    1f6e:	cf 91       	pop	r28
    1f70:	df 91       	pop	r29
    1f72:	1f 91       	pop	r17
    1f74:	0f 91       	pop	r16
    1f76:	08 95       	ret

00001f78 <stepper_void360Left>:

void stepper_void360Left(void)
{
    1f78:	0f 93       	push	r16
    1f7a:	1f 93       	push	r17
    1f7c:	df 93       	push	r29
    1f7e:	cf 93       	push	r28
    1f80:	cd b7       	in	r28, 0x3d	; 61
    1f82:	de b7       	in	r29, 0x3e	; 62
    1f84:	ca 54       	subi	r28, 0x4A	; 74
    1f86:	d0 40       	sbci	r29, 0x00	; 0
    1f88:	0f b6       	in	r0, 0x3f	; 63
    1f8a:	f8 94       	cli
    1f8c:	de bf       	out	0x3e, r29	; 62
    1f8e:	0f be       	out	0x3f, r0	; 63
    1f90:	cd bf       	out	0x3d, r28	; 61
	u32 i;
		for( i=0;i<520;i++)
    1f92:	fe 01       	movw	r30, r28
    1f94:	e9 5b       	subi	r30, 0xB9	; 185
    1f96:	ff 4f       	sbci	r31, 0xFF	; 255
    1f98:	10 82       	st	Z, r1
    1f9a:	11 82       	std	Z+1, r1	; 0x01
    1f9c:	12 82       	std	Z+2, r1	; 0x02
    1f9e:	13 82       	std	Z+3, r1	; 0x03
    1fa0:	3d c2       	rjmp	.+1146   	; 0x241c <stepper_void360Left+0x4a4>
	{
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    1fa2:	82 e0       	ldi	r24, 0x02	; 2
    1fa4:	60 e0       	ldi	r22, 0x00	; 0
    1fa6:	40 e0       	ldi	r20, 0x00	; 0
    1fa8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    1fac:	82 e0       	ldi	r24, 0x02	; 2
    1fae:	61 e0       	ldi	r22, 0x01	; 1
    1fb0:	40 e0       	ldi	r20, 0x00	; 0
    1fb2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    1fb6:	82 e0       	ldi	r24, 0x02	; 2
    1fb8:	62 e0       	ldi	r22, 0x02	; 2
    1fba:	40 e0       	ldi	r20, 0x00	; 0
    1fbc:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    1fc0:	82 e0       	ldi	r24, 0x02	; 2
    1fc2:	63 e0       	ldi	r22, 0x03	; 3
    1fc4:	41 e0       	ldi	r20, 0x01	; 1
    1fc6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    1fca:	fe 01       	movw	r30, r28
    1fcc:	ed 5b       	subi	r30, 0xBD	; 189
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	a0 e0       	ldi	r26, 0x00	; 0
    1fd6:	b0 e4       	ldi	r27, 0x40	; 64
    1fd8:	80 83       	st	Z, r24
    1fda:	91 83       	std	Z+1, r25	; 0x01
    1fdc:	a2 83       	std	Z+2, r26	; 0x02
    1fde:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fe0:	8e 01       	movw	r16, r28
    1fe2:	01 5c       	subi	r16, 0xC1	; 193
    1fe4:	1f 4f       	sbci	r17, 0xFF	; 255
    1fe6:	fe 01       	movw	r30, r28
    1fe8:	ed 5b       	subi	r30, 0xBD	; 189
    1fea:	ff 4f       	sbci	r31, 0xFF	; 255
    1fec:	60 81       	ld	r22, Z
    1fee:	71 81       	ldd	r23, Z+1	; 0x01
    1ff0:	82 81       	ldd	r24, Z+2	; 0x02
    1ff2:	93 81       	ldd	r25, Z+3	; 0x03
    1ff4:	20 e0       	ldi	r18, 0x00	; 0
    1ff6:	30 e8       	ldi	r19, 0x80	; 128
    1ff8:	4b e3       	ldi	r20, 0x3B	; 59
    1ffa:	55 e4       	ldi	r21, 0x45	; 69
    1ffc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2000:	dc 01       	movw	r26, r24
    2002:	cb 01       	movw	r24, r22
    2004:	f8 01       	movw	r30, r16
    2006:	80 83       	st	Z, r24
    2008:	91 83       	std	Z+1, r25	; 0x01
    200a:	a2 83       	std	Z+2, r26	; 0x02
    200c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    200e:	fe 01       	movw	r30, r28
    2010:	ff 96       	adiw	r30, 0x3f	; 63
    2012:	60 81       	ld	r22, Z
    2014:	71 81       	ldd	r23, Z+1	; 0x01
    2016:	82 81       	ldd	r24, Z+2	; 0x02
    2018:	93 81       	ldd	r25, Z+3	; 0x03
    201a:	20 e0       	ldi	r18, 0x00	; 0
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	40 e8       	ldi	r20, 0x80	; 128
    2020:	5f e3       	ldi	r21, 0x3F	; 63
    2022:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2026:	88 23       	and	r24, r24
    2028:	2c f4       	brge	.+10     	; 0x2034 <stepper_void360Left+0xbc>
		__ticks = 1;
    202a:	81 e0       	ldi	r24, 0x01	; 1
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	9e af       	std	Y+62, r25	; 0x3e
    2030:	8d af       	std	Y+61, r24	; 0x3d
    2032:	46 c0       	rjmp	.+140    	; 0x20c0 <stepper_void360Left+0x148>
	else if (__tmp > 65535)
    2034:	fe 01       	movw	r30, r28
    2036:	ff 96       	adiw	r30, 0x3f	; 63
    2038:	60 81       	ld	r22, Z
    203a:	71 81       	ldd	r23, Z+1	; 0x01
    203c:	82 81       	ldd	r24, Z+2	; 0x02
    203e:	93 81       	ldd	r25, Z+3	; 0x03
    2040:	20 e0       	ldi	r18, 0x00	; 0
    2042:	3f ef       	ldi	r19, 0xFF	; 255
    2044:	4f e7       	ldi	r20, 0x7F	; 127
    2046:	57 e4       	ldi	r21, 0x47	; 71
    2048:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    204c:	18 16       	cp	r1, r24
    204e:	64 f5       	brge	.+88     	; 0x20a8 <stepper_void360Left+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2050:	fe 01       	movw	r30, r28
    2052:	ed 5b       	subi	r30, 0xBD	; 189
    2054:	ff 4f       	sbci	r31, 0xFF	; 255
    2056:	60 81       	ld	r22, Z
    2058:	71 81       	ldd	r23, Z+1	; 0x01
    205a:	82 81       	ldd	r24, Z+2	; 0x02
    205c:	93 81       	ldd	r25, Z+3	; 0x03
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	30 e0       	ldi	r19, 0x00	; 0
    2062:	40 e2       	ldi	r20, 0x20	; 32
    2064:	51 e4       	ldi	r21, 0x41	; 65
    2066:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    206a:	dc 01       	movw	r26, r24
    206c:	cb 01       	movw	r24, r22
    206e:	bc 01       	movw	r22, r24
    2070:	cd 01       	movw	r24, r26
    2072:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2076:	dc 01       	movw	r26, r24
    2078:	cb 01       	movw	r24, r22
    207a:	9e af       	std	Y+62, r25	; 0x3e
    207c:	8d af       	std	Y+61, r24	; 0x3d
    207e:	0f c0       	rjmp	.+30     	; 0x209e <stepper_void360Left+0x126>
    2080:	8c e2       	ldi	r24, 0x2C	; 44
    2082:	91 e0       	ldi	r25, 0x01	; 1
    2084:	9c af       	std	Y+60, r25	; 0x3c
    2086:	8b af       	std	Y+59, r24	; 0x3b
    2088:	8b ad       	ldd	r24, Y+59	; 0x3b
    208a:	9c ad       	ldd	r25, Y+60	; 0x3c
    208c:	01 97       	sbiw	r24, 0x01	; 1
    208e:	f1 f7       	brne	.-4      	; 0x208c <stepper_void360Left+0x114>
    2090:	9c af       	std	Y+60, r25	; 0x3c
    2092:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2094:	8d ad       	ldd	r24, Y+61	; 0x3d
    2096:	9e ad       	ldd	r25, Y+62	; 0x3e
    2098:	01 97       	sbiw	r24, 0x01	; 1
    209a:	9e af       	std	Y+62, r25	; 0x3e
    209c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    209e:	8d ad       	ldd	r24, Y+61	; 0x3d
    20a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    20a2:	00 97       	sbiw	r24, 0x00	; 0
    20a4:	69 f7       	brne	.-38     	; 0x2080 <stepper_void360Left+0x108>
    20a6:	16 c0       	rjmp	.+44     	; 0x20d4 <stepper_void360Left+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20a8:	fe 01       	movw	r30, r28
    20aa:	ff 96       	adiw	r30, 0x3f	; 63
    20ac:	60 81       	ld	r22, Z
    20ae:	71 81       	ldd	r23, Z+1	; 0x01
    20b0:	82 81       	ldd	r24, Z+2	; 0x02
    20b2:	93 81       	ldd	r25, Z+3	; 0x03
    20b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20b8:	dc 01       	movw	r26, r24
    20ba:	cb 01       	movw	r24, r22
    20bc:	9e af       	std	Y+62, r25	; 0x3e
    20be:	8d af       	std	Y+61, r24	; 0x3d
    20c0:	8d ad       	ldd	r24, Y+61	; 0x3d
    20c2:	9e ad       	ldd	r25, Y+62	; 0x3e
    20c4:	9a af       	std	Y+58, r25	; 0x3a
    20c6:	89 af       	std	Y+57, r24	; 0x39
    20c8:	89 ad       	ldd	r24, Y+57	; 0x39
    20ca:	9a ad       	ldd	r25, Y+58	; 0x3a
    20cc:	01 97       	sbiw	r24, 0x01	; 1
    20ce:	f1 f7       	brne	.-4      	; 0x20cc <stepper_void360Left+0x154>
    20d0:	9a af       	std	Y+58, r25	; 0x3a
    20d2:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    20d4:	82 e0       	ldi	r24, 0x02	; 2
    20d6:	60 e0       	ldi	r22, 0x00	; 0
    20d8:	40 e0       	ldi	r20, 0x00	; 0
    20da:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    20de:	82 e0       	ldi	r24, 0x02	; 2
    20e0:	61 e0       	ldi	r22, 0x01	; 1
    20e2:	40 e0       	ldi	r20, 0x00	; 0
    20e4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    20e8:	82 e0       	ldi	r24, 0x02	; 2
    20ea:	62 e0       	ldi	r22, 0x02	; 2
    20ec:	41 e0       	ldi	r20, 0x01	; 1
    20ee:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    20f2:	82 e0       	ldi	r24, 0x02	; 2
    20f4:	63 e0       	ldi	r22, 0x03	; 3
    20f6:	40 e0       	ldi	r20, 0x00	; 0
    20f8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    20fc:	80 e0       	ldi	r24, 0x00	; 0
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	a0 e0       	ldi	r26, 0x00	; 0
    2102:	b0 e4       	ldi	r27, 0x40	; 64
    2104:	8d ab       	std	Y+53, r24	; 0x35
    2106:	9e ab       	std	Y+54, r25	; 0x36
    2108:	af ab       	std	Y+55, r26	; 0x37
    210a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    210c:	6d a9       	ldd	r22, Y+53	; 0x35
    210e:	7e a9       	ldd	r23, Y+54	; 0x36
    2110:	8f a9       	ldd	r24, Y+55	; 0x37
    2112:	98 ad       	ldd	r25, Y+56	; 0x38
    2114:	20 e0       	ldi	r18, 0x00	; 0
    2116:	30 e8       	ldi	r19, 0x80	; 128
    2118:	4b e3       	ldi	r20, 0x3B	; 59
    211a:	55 e4       	ldi	r21, 0x45	; 69
    211c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2120:	dc 01       	movw	r26, r24
    2122:	cb 01       	movw	r24, r22
    2124:	89 ab       	std	Y+49, r24	; 0x31
    2126:	9a ab       	std	Y+50, r25	; 0x32
    2128:	ab ab       	std	Y+51, r26	; 0x33
    212a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    212c:	69 a9       	ldd	r22, Y+49	; 0x31
    212e:	7a a9       	ldd	r23, Y+50	; 0x32
    2130:	8b a9       	ldd	r24, Y+51	; 0x33
    2132:	9c a9       	ldd	r25, Y+52	; 0x34
    2134:	20 e0       	ldi	r18, 0x00	; 0
    2136:	30 e0       	ldi	r19, 0x00	; 0
    2138:	40 e8       	ldi	r20, 0x80	; 128
    213a:	5f e3       	ldi	r21, 0x3F	; 63
    213c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2140:	88 23       	and	r24, r24
    2142:	2c f4       	brge	.+10     	; 0x214e <stepper_void360Left+0x1d6>
		__ticks = 1;
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	98 ab       	std	Y+48, r25	; 0x30
    214a:	8f a7       	std	Y+47, r24	; 0x2f
    214c:	3f c0       	rjmp	.+126    	; 0x21cc <stepper_void360Left+0x254>
	else if (__tmp > 65535)
    214e:	69 a9       	ldd	r22, Y+49	; 0x31
    2150:	7a a9       	ldd	r23, Y+50	; 0x32
    2152:	8b a9       	ldd	r24, Y+51	; 0x33
    2154:	9c a9       	ldd	r25, Y+52	; 0x34
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	3f ef       	ldi	r19, 0xFF	; 255
    215a:	4f e7       	ldi	r20, 0x7F	; 127
    215c:	57 e4       	ldi	r21, 0x47	; 71
    215e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2162:	18 16       	cp	r1, r24
    2164:	4c f5       	brge	.+82     	; 0x21b8 <stepper_void360Left+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2166:	6d a9       	ldd	r22, Y+53	; 0x35
    2168:	7e a9       	ldd	r23, Y+54	; 0x36
    216a:	8f a9       	ldd	r24, Y+55	; 0x37
    216c:	98 ad       	ldd	r25, Y+56	; 0x38
    216e:	20 e0       	ldi	r18, 0x00	; 0
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	40 e2       	ldi	r20, 0x20	; 32
    2174:	51 e4       	ldi	r21, 0x41	; 65
    2176:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    217a:	dc 01       	movw	r26, r24
    217c:	cb 01       	movw	r24, r22
    217e:	bc 01       	movw	r22, r24
    2180:	cd 01       	movw	r24, r26
    2182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2186:	dc 01       	movw	r26, r24
    2188:	cb 01       	movw	r24, r22
    218a:	98 ab       	std	Y+48, r25	; 0x30
    218c:	8f a7       	std	Y+47, r24	; 0x2f
    218e:	0f c0       	rjmp	.+30     	; 0x21ae <stepper_void360Left+0x236>
    2190:	8c e2       	ldi	r24, 0x2C	; 44
    2192:	91 e0       	ldi	r25, 0x01	; 1
    2194:	9e a7       	std	Y+46, r25	; 0x2e
    2196:	8d a7       	std	Y+45, r24	; 0x2d
    2198:	8d a5       	ldd	r24, Y+45	; 0x2d
    219a:	9e a5       	ldd	r25, Y+46	; 0x2e
    219c:	01 97       	sbiw	r24, 0x01	; 1
    219e:	f1 f7       	brne	.-4      	; 0x219c <stepper_void360Left+0x224>
    21a0:	9e a7       	std	Y+46, r25	; 0x2e
    21a2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21a4:	8f a5       	ldd	r24, Y+47	; 0x2f
    21a6:	98 a9       	ldd	r25, Y+48	; 0x30
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	98 ab       	std	Y+48, r25	; 0x30
    21ac:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21ae:	8f a5       	ldd	r24, Y+47	; 0x2f
    21b0:	98 a9       	ldd	r25, Y+48	; 0x30
    21b2:	00 97       	sbiw	r24, 0x00	; 0
    21b4:	69 f7       	brne	.-38     	; 0x2190 <stepper_void360Left+0x218>
    21b6:	14 c0       	rjmp	.+40     	; 0x21e0 <stepper_void360Left+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21b8:	69 a9       	ldd	r22, Y+49	; 0x31
    21ba:	7a a9       	ldd	r23, Y+50	; 0x32
    21bc:	8b a9       	ldd	r24, Y+51	; 0x33
    21be:	9c a9       	ldd	r25, Y+52	; 0x34
    21c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	98 ab       	std	Y+48, r25	; 0x30
    21ca:	8f a7       	std	Y+47, r24	; 0x2f
    21cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    21ce:	98 a9       	ldd	r25, Y+48	; 0x30
    21d0:	9c a7       	std	Y+44, r25	; 0x2c
    21d2:	8b a7       	std	Y+43, r24	; 0x2b
    21d4:	8b a5       	ldd	r24, Y+43	; 0x2b
    21d6:	9c a5       	ldd	r25, Y+44	; 0x2c
    21d8:	01 97       	sbiw	r24, 0x01	; 1
    21da:	f1 f7       	brne	.-4      	; 0x21d8 <stepper_void360Left+0x260>
    21dc:	9c a7       	std	Y+44, r25	; 0x2c
    21de:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    21e0:	82 e0       	ldi	r24, 0x02	; 2
    21e2:	60 e0       	ldi	r22, 0x00	; 0
    21e4:	40 e0       	ldi	r20, 0x00	; 0
    21e6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    21ea:	82 e0       	ldi	r24, 0x02	; 2
    21ec:	61 e0       	ldi	r22, 0x01	; 1
    21ee:	41 e0       	ldi	r20, 0x01	; 1
    21f0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    21f4:	82 e0       	ldi	r24, 0x02	; 2
    21f6:	62 e0       	ldi	r22, 0x02	; 2
    21f8:	40 e0       	ldi	r20, 0x00	; 0
    21fa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    21fe:	82 e0       	ldi	r24, 0x02	; 2
    2200:	63 e0       	ldi	r22, 0x03	; 3
    2202:	40 e0       	ldi	r20, 0x00	; 0
    2204:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2208:	80 e0       	ldi	r24, 0x00	; 0
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	a0 e0       	ldi	r26, 0x00	; 0
    220e:	b0 e4       	ldi	r27, 0x40	; 64
    2210:	8f a3       	std	Y+39, r24	; 0x27
    2212:	98 a7       	std	Y+40, r25	; 0x28
    2214:	a9 a7       	std	Y+41, r26	; 0x29
    2216:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2218:	6f a1       	ldd	r22, Y+39	; 0x27
    221a:	78 a5       	ldd	r23, Y+40	; 0x28
    221c:	89 a5       	ldd	r24, Y+41	; 0x29
    221e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2220:	20 e0       	ldi	r18, 0x00	; 0
    2222:	30 e8       	ldi	r19, 0x80	; 128
    2224:	4b e3       	ldi	r20, 0x3B	; 59
    2226:	55 e4       	ldi	r21, 0x45	; 69
    2228:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    222c:	dc 01       	movw	r26, r24
    222e:	cb 01       	movw	r24, r22
    2230:	8b a3       	std	Y+35, r24	; 0x23
    2232:	9c a3       	std	Y+36, r25	; 0x24
    2234:	ad a3       	std	Y+37, r26	; 0x25
    2236:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2238:	6b a1       	ldd	r22, Y+35	; 0x23
    223a:	7c a1       	ldd	r23, Y+36	; 0x24
    223c:	8d a1       	ldd	r24, Y+37	; 0x25
    223e:	9e a1       	ldd	r25, Y+38	; 0x26
    2240:	20 e0       	ldi	r18, 0x00	; 0
    2242:	30 e0       	ldi	r19, 0x00	; 0
    2244:	40 e8       	ldi	r20, 0x80	; 128
    2246:	5f e3       	ldi	r21, 0x3F	; 63
    2248:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    224c:	88 23       	and	r24, r24
    224e:	2c f4       	brge	.+10     	; 0x225a <stepper_void360Left+0x2e2>
		__ticks = 1;
    2250:	81 e0       	ldi	r24, 0x01	; 1
    2252:	90 e0       	ldi	r25, 0x00	; 0
    2254:	9a a3       	std	Y+34, r25	; 0x22
    2256:	89 a3       	std	Y+33, r24	; 0x21
    2258:	3f c0       	rjmp	.+126    	; 0x22d8 <stepper_void360Left+0x360>
	else if (__tmp > 65535)
    225a:	6b a1       	ldd	r22, Y+35	; 0x23
    225c:	7c a1       	ldd	r23, Y+36	; 0x24
    225e:	8d a1       	ldd	r24, Y+37	; 0x25
    2260:	9e a1       	ldd	r25, Y+38	; 0x26
    2262:	20 e0       	ldi	r18, 0x00	; 0
    2264:	3f ef       	ldi	r19, 0xFF	; 255
    2266:	4f e7       	ldi	r20, 0x7F	; 127
    2268:	57 e4       	ldi	r21, 0x47	; 71
    226a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    226e:	18 16       	cp	r1, r24
    2270:	4c f5       	brge	.+82     	; 0x22c4 <stepper_void360Left+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2272:	6f a1       	ldd	r22, Y+39	; 0x27
    2274:	78 a5       	ldd	r23, Y+40	; 0x28
    2276:	89 a5       	ldd	r24, Y+41	; 0x29
    2278:	9a a5       	ldd	r25, Y+42	; 0x2a
    227a:	20 e0       	ldi	r18, 0x00	; 0
    227c:	30 e0       	ldi	r19, 0x00	; 0
    227e:	40 e2       	ldi	r20, 0x20	; 32
    2280:	51 e4       	ldi	r21, 0x41	; 65
    2282:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2286:	dc 01       	movw	r26, r24
    2288:	cb 01       	movw	r24, r22
    228a:	bc 01       	movw	r22, r24
    228c:	cd 01       	movw	r24, r26
    228e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2292:	dc 01       	movw	r26, r24
    2294:	cb 01       	movw	r24, r22
    2296:	9a a3       	std	Y+34, r25	; 0x22
    2298:	89 a3       	std	Y+33, r24	; 0x21
    229a:	0f c0       	rjmp	.+30     	; 0x22ba <stepper_void360Left+0x342>
    229c:	8c e2       	ldi	r24, 0x2C	; 44
    229e:	91 e0       	ldi	r25, 0x01	; 1
    22a0:	98 a3       	std	Y+32, r25	; 0x20
    22a2:	8f 8f       	std	Y+31, r24	; 0x1f
    22a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22a6:	98 a1       	ldd	r25, Y+32	; 0x20
    22a8:	01 97       	sbiw	r24, 0x01	; 1
    22aa:	f1 f7       	brne	.-4      	; 0x22a8 <stepper_void360Left+0x330>
    22ac:	98 a3       	std	Y+32, r25	; 0x20
    22ae:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b0:	89 a1       	ldd	r24, Y+33	; 0x21
    22b2:	9a a1       	ldd	r25, Y+34	; 0x22
    22b4:	01 97       	sbiw	r24, 0x01	; 1
    22b6:	9a a3       	std	Y+34, r25	; 0x22
    22b8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ba:	89 a1       	ldd	r24, Y+33	; 0x21
    22bc:	9a a1       	ldd	r25, Y+34	; 0x22
    22be:	00 97       	sbiw	r24, 0x00	; 0
    22c0:	69 f7       	brne	.-38     	; 0x229c <stepper_void360Left+0x324>
    22c2:	14 c0       	rjmp	.+40     	; 0x22ec <stepper_void360Left+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22c4:	6b a1       	ldd	r22, Y+35	; 0x23
    22c6:	7c a1       	ldd	r23, Y+36	; 0x24
    22c8:	8d a1       	ldd	r24, Y+37	; 0x25
    22ca:	9e a1       	ldd	r25, Y+38	; 0x26
    22cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22d0:	dc 01       	movw	r26, r24
    22d2:	cb 01       	movw	r24, r22
    22d4:	9a a3       	std	Y+34, r25	; 0x22
    22d6:	89 a3       	std	Y+33, r24	; 0x21
    22d8:	89 a1       	ldd	r24, Y+33	; 0x21
    22da:	9a a1       	ldd	r25, Y+34	; 0x22
    22dc:	9e 8f       	std	Y+30, r25	; 0x1e
    22de:	8d 8f       	std	Y+29, r24	; 0x1d
    22e0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    22e2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    22e4:	01 97       	sbiw	r24, 0x01	; 1
    22e6:	f1 f7       	brne	.-4      	; 0x22e4 <stepper_void360Left+0x36c>
    22e8:	9e 8f       	std	Y+30, r25	; 0x1e
    22ea:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    22ec:	82 e0       	ldi	r24, 0x02	; 2
    22ee:	60 e0       	ldi	r22, 0x00	; 0
    22f0:	41 e0       	ldi	r20, 0x01	; 1
    22f2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    22f6:	82 e0       	ldi	r24, 0x02	; 2
    22f8:	61 e0       	ldi	r22, 0x01	; 1
    22fa:	40 e0       	ldi	r20, 0x00	; 0
    22fc:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2300:	82 e0       	ldi	r24, 0x02	; 2
    2302:	62 e0       	ldi	r22, 0x02	; 2
    2304:	40 e0       	ldi	r20, 0x00	; 0
    2306:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    230a:	82 e0       	ldi	r24, 0x02	; 2
    230c:	63 e0       	ldi	r22, 0x03	; 3
    230e:	40 e0       	ldi	r20, 0x00	; 0
    2310:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2314:	80 e0       	ldi	r24, 0x00	; 0
    2316:	90 e0       	ldi	r25, 0x00	; 0
    2318:	a0 e0       	ldi	r26, 0x00	; 0
    231a:	b0 e4       	ldi	r27, 0x40	; 64
    231c:	89 8f       	std	Y+25, r24	; 0x19
    231e:	9a 8f       	std	Y+26, r25	; 0x1a
    2320:	ab 8f       	std	Y+27, r26	; 0x1b
    2322:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2324:	69 8d       	ldd	r22, Y+25	; 0x19
    2326:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2328:	8b 8d       	ldd	r24, Y+27	; 0x1b
    232a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    232c:	20 e0       	ldi	r18, 0x00	; 0
    232e:	30 e8       	ldi	r19, 0x80	; 128
    2330:	4b e3       	ldi	r20, 0x3B	; 59
    2332:	55 e4       	ldi	r21, 0x45	; 69
    2334:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2338:	dc 01       	movw	r26, r24
    233a:	cb 01       	movw	r24, r22
    233c:	8d 8b       	std	Y+21, r24	; 0x15
    233e:	9e 8b       	std	Y+22, r25	; 0x16
    2340:	af 8b       	std	Y+23, r26	; 0x17
    2342:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2344:	6d 89       	ldd	r22, Y+21	; 0x15
    2346:	7e 89       	ldd	r23, Y+22	; 0x16
    2348:	8f 89       	ldd	r24, Y+23	; 0x17
    234a:	98 8d       	ldd	r25, Y+24	; 0x18
    234c:	20 e0       	ldi	r18, 0x00	; 0
    234e:	30 e0       	ldi	r19, 0x00	; 0
    2350:	40 e8       	ldi	r20, 0x80	; 128
    2352:	5f e3       	ldi	r21, 0x3F	; 63
    2354:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2358:	88 23       	and	r24, r24
    235a:	2c f4       	brge	.+10     	; 0x2366 <stepper_void360Left+0x3ee>
		__ticks = 1;
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	9c 8b       	std	Y+20, r25	; 0x14
    2362:	8b 8b       	std	Y+19, r24	; 0x13
    2364:	3f c0       	rjmp	.+126    	; 0x23e4 <stepper_void360Left+0x46c>
	else if (__tmp > 65535)
    2366:	6d 89       	ldd	r22, Y+21	; 0x15
    2368:	7e 89       	ldd	r23, Y+22	; 0x16
    236a:	8f 89       	ldd	r24, Y+23	; 0x17
    236c:	98 8d       	ldd	r25, Y+24	; 0x18
    236e:	20 e0       	ldi	r18, 0x00	; 0
    2370:	3f ef       	ldi	r19, 0xFF	; 255
    2372:	4f e7       	ldi	r20, 0x7F	; 127
    2374:	57 e4       	ldi	r21, 0x47	; 71
    2376:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    237a:	18 16       	cp	r1, r24
    237c:	4c f5       	brge	.+82     	; 0x23d0 <stepper_void360Left+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    237e:	69 8d       	ldd	r22, Y+25	; 0x19
    2380:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2382:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2384:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2386:	20 e0       	ldi	r18, 0x00	; 0
    2388:	30 e0       	ldi	r19, 0x00	; 0
    238a:	40 e2       	ldi	r20, 0x20	; 32
    238c:	51 e4       	ldi	r21, 0x41	; 65
    238e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2392:	dc 01       	movw	r26, r24
    2394:	cb 01       	movw	r24, r22
    2396:	bc 01       	movw	r22, r24
    2398:	cd 01       	movw	r24, r26
    239a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    239e:	dc 01       	movw	r26, r24
    23a0:	cb 01       	movw	r24, r22
    23a2:	9c 8b       	std	Y+20, r25	; 0x14
    23a4:	8b 8b       	std	Y+19, r24	; 0x13
    23a6:	0f c0       	rjmp	.+30     	; 0x23c6 <stepper_void360Left+0x44e>
    23a8:	8c e2       	ldi	r24, 0x2C	; 44
    23aa:	91 e0       	ldi	r25, 0x01	; 1
    23ac:	9a 8b       	std	Y+18, r25	; 0x12
    23ae:	89 8b       	std	Y+17, r24	; 0x11
    23b0:	89 89       	ldd	r24, Y+17	; 0x11
    23b2:	9a 89       	ldd	r25, Y+18	; 0x12
    23b4:	01 97       	sbiw	r24, 0x01	; 1
    23b6:	f1 f7       	brne	.-4      	; 0x23b4 <stepper_void360Left+0x43c>
    23b8:	9a 8b       	std	Y+18, r25	; 0x12
    23ba:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23bc:	8b 89       	ldd	r24, Y+19	; 0x13
    23be:	9c 89       	ldd	r25, Y+20	; 0x14
    23c0:	01 97       	sbiw	r24, 0x01	; 1
    23c2:	9c 8b       	std	Y+20, r25	; 0x14
    23c4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23c6:	8b 89       	ldd	r24, Y+19	; 0x13
    23c8:	9c 89       	ldd	r25, Y+20	; 0x14
    23ca:	00 97       	sbiw	r24, 0x00	; 0
    23cc:	69 f7       	brne	.-38     	; 0x23a8 <stepper_void360Left+0x430>
    23ce:	14 c0       	rjmp	.+40     	; 0x23f8 <stepper_void360Left+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23d0:	6d 89       	ldd	r22, Y+21	; 0x15
    23d2:	7e 89       	ldd	r23, Y+22	; 0x16
    23d4:	8f 89       	ldd	r24, Y+23	; 0x17
    23d6:	98 8d       	ldd	r25, Y+24	; 0x18
    23d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23dc:	dc 01       	movw	r26, r24
    23de:	cb 01       	movw	r24, r22
    23e0:	9c 8b       	std	Y+20, r25	; 0x14
    23e2:	8b 8b       	std	Y+19, r24	; 0x13
    23e4:	8b 89       	ldd	r24, Y+19	; 0x13
    23e6:	9c 89       	ldd	r25, Y+20	; 0x14
    23e8:	98 8b       	std	Y+16, r25	; 0x10
    23ea:	8f 87       	std	Y+15, r24	; 0x0f
    23ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    23ee:	98 89       	ldd	r25, Y+16	; 0x10
    23f0:	01 97       	sbiw	r24, 0x01	; 1
    23f2:	f1 f7       	brne	.-4      	; 0x23f0 <stepper_void360Left+0x478>
    23f4:	98 8b       	std	Y+16, r25	; 0x10
    23f6:	8f 87       	std	Y+15, r24	; 0x0f
}

void stepper_void360Left(void)
{
	u32 i;
		for( i=0;i<520;i++)
    23f8:	9e 01       	movw	r18, r28
    23fa:	29 5b       	subi	r18, 0xB9	; 185
    23fc:	3f 4f       	sbci	r19, 0xFF	; 255
    23fe:	fe 01       	movw	r30, r28
    2400:	e9 5b       	subi	r30, 0xB9	; 185
    2402:	ff 4f       	sbci	r31, 0xFF	; 255
    2404:	80 81       	ld	r24, Z
    2406:	91 81       	ldd	r25, Z+1	; 0x01
    2408:	a2 81       	ldd	r26, Z+2	; 0x02
    240a:	b3 81       	ldd	r27, Z+3	; 0x03
    240c:	01 96       	adiw	r24, 0x01	; 1
    240e:	a1 1d       	adc	r26, r1
    2410:	b1 1d       	adc	r27, r1
    2412:	f9 01       	movw	r30, r18
    2414:	80 83       	st	Z, r24
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	a2 83       	std	Z+2, r26	; 0x02
    241a:	b3 83       	std	Z+3, r27	; 0x03
    241c:	fe 01       	movw	r30, r28
    241e:	e9 5b       	subi	r30, 0xB9	; 185
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	80 81       	ld	r24, Z
    2424:	91 81       	ldd	r25, Z+1	; 0x01
    2426:	a2 81       	ldd	r26, Z+2	; 0x02
    2428:	b3 81       	ldd	r27, Z+3	; 0x03
    242a:	88 30       	cpi	r24, 0x08	; 8
    242c:	f2 e0       	ldi	r31, 0x02	; 2
    242e:	9f 07       	cpc	r25, r31
    2430:	f0 e0       	ldi	r31, 0x00	; 0
    2432:	af 07       	cpc	r26, r31
    2434:	f0 e0       	ldi	r31, 0x00	; 0
    2436:	bf 07       	cpc	r27, r31
    2438:	08 f4       	brcc	.+2      	; 0x243c <stepper_void360Left+0x4c4>
    243a:	b3 cd       	rjmp	.-1178   	; 0x1fa2 <stepper_void360Left+0x2a>
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	aa e7       	ldi	r26, 0x7A	; 122
    2442:	b4 e4       	ldi	r27, 0x44	; 68
    2444:	8b 87       	std	Y+11, r24	; 0x0b
    2446:	9c 87       	std	Y+12, r25	; 0x0c
    2448:	ad 87       	std	Y+13, r26	; 0x0d
    244a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    244c:	6b 85       	ldd	r22, Y+11	; 0x0b
    244e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2450:	8d 85       	ldd	r24, Y+13	; 0x0d
    2452:	9e 85       	ldd	r25, Y+14	; 0x0e
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e8       	ldi	r19, 0x80	; 128
    2458:	4b e3       	ldi	r20, 0x3B	; 59
    245a:	55 e4       	ldi	r21, 0x45	; 69
    245c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2460:	dc 01       	movw	r26, r24
    2462:	cb 01       	movw	r24, r22
    2464:	8f 83       	std	Y+7, r24	; 0x07
    2466:	98 87       	std	Y+8, r25	; 0x08
    2468:	a9 87       	std	Y+9, r26	; 0x09
    246a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    246c:	6f 81       	ldd	r22, Y+7	; 0x07
    246e:	78 85       	ldd	r23, Y+8	; 0x08
    2470:	89 85       	ldd	r24, Y+9	; 0x09
    2472:	9a 85       	ldd	r25, Y+10	; 0x0a
    2474:	20 e0       	ldi	r18, 0x00	; 0
    2476:	30 e0       	ldi	r19, 0x00	; 0
    2478:	40 e8       	ldi	r20, 0x80	; 128
    247a:	5f e3       	ldi	r21, 0x3F	; 63
    247c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2480:	88 23       	and	r24, r24
    2482:	2c f4       	brge	.+10     	; 0x248e <stepper_void360Left+0x516>
		__ticks = 1;
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	9e 83       	std	Y+6, r25	; 0x06
    248a:	8d 83       	std	Y+5, r24	; 0x05
    248c:	3f c0       	rjmp	.+126    	; 0x250c <stepper_void360Left+0x594>
	else if (__tmp > 65535)
    248e:	6f 81       	ldd	r22, Y+7	; 0x07
    2490:	78 85       	ldd	r23, Y+8	; 0x08
    2492:	89 85       	ldd	r24, Y+9	; 0x09
    2494:	9a 85       	ldd	r25, Y+10	; 0x0a
    2496:	20 e0       	ldi	r18, 0x00	; 0
    2498:	3f ef       	ldi	r19, 0xFF	; 255
    249a:	4f e7       	ldi	r20, 0x7F	; 127
    249c:	57 e4       	ldi	r21, 0x47	; 71
    249e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24a2:	18 16       	cp	r1, r24
    24a4:	4c f5       	brge	.+82     	; 0x24f8 <stepper_void360Left+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    24a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    24aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    24ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	40 e2       	ldi	r20, 0x20	; 32
    24b4:	51 e4       	ldi	r21, 0x41	; 65
    24b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24ba:	dc 01       	movw	r26, r24
    24bc:	cb 01       	movw	r24, r22
    24be:	bc 01       	movw	r22, r24
    24c0:	cd 01       	movw	r24, r26
    24c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	9e 83       	std	Y+6, r25	; 0x06
    24cc:	8d 83       	std	Y+5, r24	; 0x05
    24ce:	0f c0       	rjmp	.+30     	; 0x24ee <stepper_void360Left+0x576>
    24d0:	8c e2       	ldi	r24, 0x2C	; 44
    24d2:	91 e0       	ldi	r25, 0x01	; 1
    24d4:	9c 83       	std	Y+4, r25	; 0x04
    24d6:	8b 83       	std	Y+3, r24	; 0x03
    24d8:	8b 81       	ldd	r24, Y+3	; 0x03
    24da:	9c 81       	ldd	r25, Y+4	; 0x04
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	f1 f7       	brne	.-4      	; 0x24dc <stepper_void360Left+0x564>
    24e0:	9c 83       	std	Y+4, r25	; 0x04
    24e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24e4:	8d 81       	ldd	r24, Y+5	; 0x05
    24e6:	9e 81       	ldd	r25, Y+6	; 0x06
    24e8:	01 97       	sbiw	r24, 0x01	; 1
    24ea:	9e 83       	std	Y+6, r25	; 0x06
    24ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24ee:	8d 81       	ldd	r24, Y+5	; 0x05
    24f0:	9e 81       	ldd	r25, Y+6	; 0x06
    24f2:	00 97       	sbiw	r24, 0x00	; 0
    24f4:	69 f7       	brne	.-38     	; 0x24d0 <stepper_void360Left+0x558>
    24f6:	14 c0       	rjmp	.+40     	; 0x2520 <stepper_void360Left+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f8:	6f 81       	ldd	r22, Y+7	; 0x07
    24fa:	78 85       	ldd	r23, Y+8	; 0x08
    24fc:	89 85       	ldd	r24, Y+9	; 0x09
    24fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2500:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2504:	dc 01       	movw	r26, r24
    2506:	cb 01       	movw	r24, r22
    2508:	9e 83       	std	Y+6, r25	; 0x06
    250a:	8d 83       	std	Y+5, r24	; 0x05
    250c:	8d 81       	ldd	r24, Y+5	; 0x05
    250e:	9e 81       	ldd	r25, Y+6	; 0x06
    2510:	9a 83       	std	Y+2, r25	; 0x02
    2512:	89 83       	std	Y+1, r24	; 0x01
    2514:	89 81       	ldd	r24, Y+1	; 0x01
    2516:	9a 81       	ldd	r25, Y+2	; 0x02
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f1 f7       	brne	.-4      	; 0x2518 <stepper_void360Left+0x5a0>
    251c:	9a 83       	std	Y+2, r25	; 0x02
    251e:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
			_delay_ms(2);
	}
		_delay_ms(1000);

}
    2520:	c6 5b       	subi	r28, 0xB6	; 182
    2522:	df 4f       	sbci	r29, 0xFF	; 255
    2524:	0f b6       	in	r0, 0x3f	; 63
    2526:	f8 94       	cli
    2528:	de bf       	out	0x3e, r29	; 62
    252a:	0f be       	out	0x3f, r0	; 63
    252c:	cd bf       	out	0x3d, r28	; 61
    252e:	cf 91       	pop	r28
    2530:	df 91       	pop	r29
    2532:	1f 91       	pop	r17
    2534:	0f 91       	pop	r16
    2536:	08 95       	ret

00002538 <stepper_void90Right>:

void stepper_void90Right(void)
{u32 i;
    2538:	0f 93       	push	r16
    253a:	1f 93       	push	r17
    253c:	df 93       	push	r29
    253e:	cf 93       	push	r28
    2540:	cd b7       	in	r28, 0x3d	; 61
    2542:	de b7       	in	r29, 0x3e	; 62
    2544:	ca 54       	subi	r28, 0x4A	; 74
    2546:	d0 40       	sbci	r29, 0x00	; 0
    2548:	0f b6       	in	r0, 0x3f	; 63
    254a:	f8 94       	cli
    254c:	de bf       	out	0x3e, r29	; 62
    254e:	0f be       	out	0x3f, r0	; 63
    2550:	cd bf       	out	0x3d, r28	; 61
for( i=0;i<130;i++)
    2552:	fe 01       	movw	r30, r28
    2554:	e9 5b       	subi	r30, 0xB9	; 185
    2556:	ff 4f       	sbci	r31, 0xFF	; 255
    2558:	10 82       	st	Z, r1
    255a:	11 82       	std	Z+1, r1	; 0x01
    255c:	12 82       	std	Z+2, r1	; 0x02
    255e:	13 82       	std	Z+3, r1	; 0x03
    2560:	3d c2       	rjmp	.+1146   	; 0x29dc <stepper_void90Right+0x4a4>
	{
					DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    2562:	82 e0       	ldi	r24, 0x02	; 2
    2564:	60 e0       	ldi	r22, 0x00	; 0
    2566:	41 e0       	ldi	r20, 0x01	; 1
    2568:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    256c:	82 e0       	ldi	r24, 0x02	; 2
    256e:	61 e0       	ldi	r22, 0x01	; 1
    2570:	40 e0       	ldi	r20, 0x00	; 0
    2572:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2576:	82 e0       	ldi	r24, 0x02	; 2
    2578:	62 e0       	ldi	r22, 0x02	; 2
    257a:	40 e0       	ldi	r20, 0x00	; 0
    257c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    2580:	82 e0       	ldi	r24, 0x02	; 2
    2582:	63 e0       	ldi	r22, 0x03	; 3
    2584:	40 e0       	ldi	r20, 0x00	; 0
    2586:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    258a:	fe 01       	movw	r30, r28
    258c:	ed 5b       	subi	r30, 0xBD	; 189
    258e:	ff 4f       	sbci	r31, 0xFF	; 255
    2590:	80 e0       	ldi	r24, 0x00	; 0
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	a0 e0       	ldi	r26, 0x00	; 0
    2596:	b0 e4       	ldi	r27, 0x40	; 64
    2598:	80 83       	st	Z, r24
    259a:	91 83       	std	Z+1, r25	; 0x01
    259c:	a2 83       	std	Z+2, r26	; 0x02
    259e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25a0:	8e 01       	movw	r16, r28
    25a2:	01 5c       	subi	r16, 0xC1	; 193
    25a4:	1f 4f       	sbci	r17, 0xFF	; 255
    25a6:	fe 01       	movw	r30, r28
    25a8:	ed 5b       	subi	r30, 0xBD	; 189
    25aa:	ff 4f       	sbci	r31, 0xFF	; 255
    25ac:	60 81       	ld	r22, Z
    25ae:	71 81       	ldd	r23, Z+1	; 0x01
    25b0:	82 81       	ldd	r24, Z+2	; 0x02
    25b2:	93 81       	ldd	r25, Z+3	; 0x03
    25b4:	20 e0       	ldi	r18, 0x00	; 0
    25b6:	30 e8       	ldi	r19, 0x80	; 128
    25b8:	4b e3       	ldi	r20, 0x3B	; 59
    25ba:	55 e4       	ldi	r21, 0x45	; 69
    25bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25c0:	dc 01       	movw	r26, r24
    25c2:	cb 01       	movw	r24, r22
    25c4:	f8 01       	movw	r30, r16
    25c6:	80 83       	st	Z, r24
    25c8:	91 83       	std	Z+1, r25	; 0x01
    25ca:	a2 83       	std	Z+2, r26	; 0x02
    25cc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25ce:	fe 01       	movw	r30, r28
    25d0:	ff 96       	adiw	r30, 0x3f	; 63
    25d2:	60 81       	ld	r22, Z
    25d4:	71 81       	ldd	r23, Z+1	; 0x01
    25d6:	82 81       	ldd	r24, Z+2	; 0x02
    25d8:	93 81       	ldd	r25, Z+3	; 0x03
    25da:	20 e0       	ldi	r18, 0x00	; 0
    25dc:	30 e0       	ldi	r19, 0x00	; 0
    25de:	40 e8       	ldi	r20, 0x80	; 128
    25e0:	5f e3       	ldi	r21, 0x3F	; 63
    25e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25e6:	88 23       	and	r24, r24
    25e8:	2c f4       	brge	.+10     	; 0x25f4 <stepper_void90Right+0xbc>
		__ticks = 1;
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	9e af       	std	Y+62, r25	; 0x3e
    25f0:	8d af       	std	Y+61, r24	; 0x3d
    25f2:	46 c0       	rjmp	.+140    	; 0x2680 <stepper_void90Right+0x148>
	else if (__tmp > 65535)
    25f4:	fe 01       	movw	r30, r28
    25f6:	ff 96       	adiw	r30, 0x3f	; 63
    25f8:	60 81       	ld	r22, Z
    25fa:	71 81       	ldd	r23, Z+1	; 0x01
    25fc:	82 81       	ldd	r24, Z+2	; 0x02
    25fe:	93 81       	ldd	r25, Z+3	; 0x03
    2600:	20 e0       	ldi	r18, 0x00	; 0
    2602:	3f ef       	ldi	r19, 0xFF	; 255
    2604:	4f e7       	ldi	r20, 0x7F	; 127
    2606:	57 e4       	ldi	r21, 0x47	; 71
    2608:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    260c:	18 16       	cp	r1, r24
    260e:	64 f5       	brge	.+88     	; 0x2668 <stepper_void90Right+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2610:	fe 01       	movw	r30, r28
    2612:	ed 5b       	subi	r30, 0xBD	; 189
    2614:	ff 4f       	sbci	r31, 0xFF	; 255
    2616:	60 81       	ld	r22, Z
    2618:	71 81       	ldd	r23, Z+1	; 0x01
    261a:	82 81       	ldd	r24, Z+2	; 0x02
    261c:	93 81       	ldd	r25, Z+3	; 0x03
    261e:	20 e0       	ldi	r18, 0x00	; 0
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	40 e2       	ldi	r20, 0x20	; 32
    2624:	51 e4       	ldi	r21, 0x41	; 65
    2626:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    262a:	dc 01       	movw	r26, r24
    262c:	cb 01       	movw	r24, r22
    262e:	bc 01       	movw	r22, r24
    2630:	cd 01       	movw	r24, r26
    2632:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2636:	dc 01       	movw	r26, r24
    2638:	cb 01       	movw	r24, r22
    263a:	9e af       	std	Y+62, r25	; 0x3e
    263c:	8d af       	std	Y+61, r24	; 0x3d
    263e:	0f c0       	rjmp	.+30     	; 0x265e <stepper_void90Right+0x126>
    2640:	8c e2       	ldi	r24, 0x2C	; 44
    2642:	91 e0       	ldi	r25, 0x01	; 1
    2644:	9c af       	std	Y+60, r25	; 0x3c
    2646:	8b af       	std	Y+59, r24	; 0x3b
    2648:	8b ad       	ldd	r24, Y+59	; 0x3b
    264a:	9c ad       	ldd	r25, Y+60	; 0x3c
    264c:	01 97       	sbiw	r24, 0x01	; 1
    264e:	f1 f7       	brne	.-4      	; 0x264c <stepper_void90Right+0x114>
    2650:	9c af       	std	Y+60, r25	; 0x3c
    2652:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2654:	8d ad       	ldd	r24, Y+61	; 0x3d
    2656:	9e ad       	ldd	r25, Y+62	; 0x3e
    2658:	01 97       	sbiw	r24, 0x01	; 1
    265a:	9e af       	std	Y+62, r25	; 0x3e
    265c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    265e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2660:	9e ad       	ldd	r25, Y+62	; 0x3e
    2662:	00 97       	sbiw	r24, 0x00	; 0
    2664:	69 f7       	brne	.-38     	; 0x2640 <stepper_void90Right+0x108>
    2666:	16 c0       	rjmp	.+44     	; 0x2694 <stepper_void90Right+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2668:	fe 01       	movw	r30, r28
    266a:	ff 96       	adiw	r30, 0x3f	; 63
    266c:	60 81       	ld	r22, Z
    266e:	71 81       	ldd	r23, Z+1	; 0x01
    2670:	82 81       	ldd	r24, Z+2	; 0x02
    2672:	93 81       	ldd	r25, Z+3	; 0x03
    2674:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2678:	dc 01       	movw	r26, r24
    267a:	cb 01       	movw	r24, r22
    267c:	9e af       	std	Y+62, r25	; 0x3e
    267e:	8d af       	std	Y+61, r24	; 0x3d
    2680:	8d ad       	ldd	r24, Y+61	; 0x3d
    2682:	9e ad       	ldd	r25, Y+62	; 0x3e
    2684:	9a af       	std	Y+58, r25	; 0x3a
    2686:	89 af       	std	Y+57, r24	; 0x39
    2688:	89 ad       	ldd	r24, Y+57	; 0x39
    268a:	9a ad       	ldd	r25, Y+58	; 0x3a
    268c:	01 97       	sbiw	r24, 0x01	; 1
    268e:	f1 f7       	brne	.-4      	; 0x268c <stepper_void90Right+0x154>
    2690:	9a af       	std	Y+58, r25	; 0x3a
    2692:	89 af       	std	Y+57, r24	; 0x39
					_delay_ms(2);

					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    2694:	82 e0       	ldi	r24, 0x02	; 2
    2696:	60 e0       	ldi	r22, 0x00	; 0
    2698:	40 e0       	ldi	r20, 0x00	; 0
    269a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    269e:	82 e0       	ldi	r24, 0x02	; 2
    26a0:	61 e0       	ldi	r22, 0x01	; 1
    26a2:	41 e0       	ldi	r20, 0x01	; 1
    26a4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    26a8:	82 e0       	ldi	r24, 0x02	; 2
    26aa:	62 e0       	ldi	r22, 0x02	; 2
    26ac:	40 e0       	ldi	r20, 0x00	; 0
    26ae:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    26b2:	82 e0       	ldi	r24, 0x02	; 2
    26b4:	63 e0       	ldi	r22, 0x03	; 3
    26b6:	40 e0       	ldi	r20, 0x00	; 0
    26b8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    26bc:	80 e0       	ldi	r24, 0x00	; 0
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	a0 e0       	ldi	r26, 0x00	; 0
    26c2:	b0 e4       	ldi	r27, 0x40	; 64
    26c4:	8d ab       	std	Y+53, r24	; 0x35
    26c6:	9e ab       	std	Y+54, r25	; 0x36
    26c8:	af ab       	std	Y+55, r26	; 0x37
    26ca:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26cc:	6d a9       	ldd	r22, Y+53	; 0x35
    26ce:	7e a9       	ldd	r23, Y+54	; 0x36
    26d0:	8f a9       	ldd	r24, Y+55	; 0x37
    26d2:	98 ad       	ldd	r25, Y+56	; 0x38
    26d4:	20 e0       	ldi	r18, 0x00	; 0
    26d6:	30 e8       	ldi	r19, 0x80	; 128
    26d8:	4b e3       	ldi	r20, 0x3B	; 59
    26da:	55 e4       	ldi	r21, 0x45	; 69
    26dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e0:	dc 01       	movw	r26, r24
    26e2:	cb 01       	movw	r24, r22
    26e4:	89 ab       	std	Y+49, r24	; 0x31
    26e6:	9a ab       	std	Y+50, r25	; 0x32
    26e8:	ab ab       	std	Y+51, r26	; 0x33
    26ea:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    26ec:	69 a9       	ldd	r22, Y+49	; 0x31
    26ee:	7a a9       	ldd	r23, Y+50	; 0x32
    26f0:	8b a9       	ldd	r24, Y+51	; 0x33
    26f2:	9c a9       	ldd	r25, Y+52	; 0x34
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	40 e8       	ldi	r20, 0x80	; 128
    26fa:	5f e3       	ldi	r21, 0x3F	; 63
    26fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2700:	88 23       	and	r24, r24
    2702:	2c f4       	brge	.+10     	; 0x270e <stepper_void90Right+0x1d6>
		__ticks = 1;
    2704:	81 e0       	ldi	r24, 0x01	; 1
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	98 ab       	std	Y+48, r25	; 0x30
    270a:	8f a7       	std	Y+47, r24	; 0x2f
    270c:	3f c0       	rjmp	.+126    	; 0x278c <stepper_void90Right+0x254>
	else if (__tmp > 65535)
    270e:	69 a9       	ldd	r22, Y+49	; 0x31
    2710:	7a a9       	ldd	r23, Y+50	; 0x32
    2712:	8b a9       	ldd	r24, Y+51	; 0x33
    2714:	9c a9       	ldd	r25, Y+52	; 0x34
    2716:	20 e0       	ldi	r18, 0x00	; 0
    2718:	3f ef       	ldi	r19, 0xFF	; 255
    271a:	4f e7       	ldi	r20, 0x7F	; 127
    271c:	57 e4       	ldi	r21, 0x47	; 71
    271e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2722:	18 16       	cp	r1, r24
    2724:	4c f5       	brge	.+82     	; 0x2778 <stepper_void90Right+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2726:	6d a9       	ldd	r22, Y+53	; 0x35
    2728:	7e a9       	ldd	r23, Y+54	; 0x36
    272a:	8f a9       	ldd	r24, Y+55	; 0x37
    272c:	98 ad       	ldd	r25, Y+56	; 0x38
    272e:	20 e0       	ldi	r18, 0x00	; 0
    2730:	30 e0       	ldi	r19, 0x00	; 0
    2732:	40 e2       	ldi	r20, 0x20	; 32
    2734:	51 e4       	ldi	r21, 0x41	; 65
    2736:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    273a:	dc 01       	movw	r26, r24
    273c:	cb 01       	movw	r24, r22
    273e:	bc 01       	movw	r22, r24
    2740:	cd 01       	movw	r24, r26
    2742:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2746:	dc 01       	movw	r26, r24
    2748:	cb 01       	movw	r24, r22
    274a:	98 ab       	std	Y+48, r25	; 0x30
    274c:	8f a7       	std	Y+47, r24	; 0x2f
    274e:	0f c0       	rjmp	.+30     	; 0x276e <stepper_void90Right+0x236>
    2750:	8c e2       	ldi	r24, 0x2C	; 44
    2752:	91 e0       	ldi	r25, 0x01	; 1
    2754:	9e a7       	std	Y+46, r25	; 0x2e
    2756:	8d a7       	std	Y+45, r24	; 0x2d
    2758:	8d a5       	ldd	r24, Y+45	; 0x2d
    275a:	9e a5       	ldd	r25, Y+46	; 0x2e
    275c:	01 97       	sbiw	r24, 0x01	; 1
    275e:	f1 f7       	brne	.-4      	; 0x275c <stepper_void90Right+0x224>
    2760:	9e a7       	std	Y+46, r25	; 0x2e
    2762:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2764:	8f a5       	ldd	r24, Y+47	; 0x2f
    2766:	98 a9       	ldd	r25, Y+48	; 0x30
    2768:	01 97       	sbiw	r24, 0x01	; 1
    276a:	98 ab       	std	Y+48, r25	; 0x30
    276c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    276e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2770:	98 a9       	ldd	r25, Y+48	; 0x30
    2772:	00 97       	sbiw	r24, 0x00	; 0
    2774:	69 f7       	brne	.-38     	; 0x2750 <stepper_void90Right+0x218>
    2776:	14 c0       	rjmp	.+40     	; 0x27a0 <stepper_void90Right+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2778:	69 a9       	ldd	r22, Y+49	; 0x31
    277a:	7a a9       	ldd	r23, Y+50	; 0x32
    277c:	8b a9       	ldd	r24, Y+51	; 0x33
    277e:	9c a9       	ldd	r25, Y+52	; 0x34
    2780:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2784:	dc 01       	movw	r26, r24
    2786:	cb 01       	movw	r24, r22
    2788:	98 ab       	std	Y+48, r25	; 0x30
    278a:	8f a7       	std	Y+47, r24	; 0x2f
    278c:	8f a5       	ldd	r24, Y+47	; 0x2f
    278e:	98 a9       	ldd	r25, Y+48	; 0x30
    2790:	9c a7       	std	Y+44, r25	; 0x2c
    2792:	8b a7       	std	Y+43, r24	; 0x2b
    2794:	8b a5       	ldd	r24, Y+43	; 0x2b
    2796:	9c a5       	ldd	r25, Y+44	; 0x2c
    2798:	01 97       	sbiw	r24, 0x01	; 1
    279a:	f1 f7       	brne	.-4      	; 0x2798 <stepper_void90Right+0x260>
    279c:	9c a7       	std	Y+44, r25	; 0x2c
    279e:	8b a7       	std	Y+43, r24	; 0x2b
					_delay_ms(2);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    27a0:	82 e0       	ldi	r24, 0x02	; 2
    27a2:	60 e0       	ldi	r22, 0x00	; 0
    27a4:	40 e0       	ldi	r20, 0x00	; 0
    27a6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    27aa:	82 e0       	ldi	r24, 0x02	; 2
    27ac:	61 e0       	ldi	r22, 0x01	; 1
    27ae:	40 e0       	ldi	r20, 0x00	; 0
    27b0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    27b4:	82 e0       	ldi	r24, 0x02	; 2
    27b6:	62 e0       	ldi	r22, 0x02	; 2
    27b8:	41 e0       	ldi	r20, 0x01	; 1
    27ba:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    27be:	82 e0       	ldi	r24, 0x02	; 2
    27c0:	63 e0       	ldi	r22, 0x03	; 3
    27c2:	40 e0       	ldi	r20, 0x00	; 0
    27c4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    27c8:	80 e0       	ldi	r24, 0x00	; 0
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	a0 e0       	ldi	r26, 0x00	; 0
    27ce:	b0 e4       	ldi	r27, 0x40	; 64
    27d0:	8f a3       	std	Y+39, r24	; 0x27
    27d2:	98 a7       	std	Y+40, r25	; 0x28
    27d4:	a9 a7       	std	Y+41, r26	; 0x29
    27d6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27d8:	6f a1       	ldd	r22, Y+39	; 0x27
    27da:	78 a5       	ldd	r23, Y+40	; 0x28
    27dc:	89 a5       	ldd	r24, Y+41	; 0x29
    27de:	9a a5       	ldd	r25, Y+42	; 0x2a
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	30 e8       	ldi	r19, 0x80	; 128
    27e4:	4b e3       	ldi	r20, 0x3B	; 59
    27e6:	55 e4       	ldi	r21, 0x45	; 69
    27e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27ec:	dc 01       	movw	r26, r24
    27ee:	cb 01       	movw	r24, r22
    27f0:	8b a3       	std	Y+35, r24	; 0x23
    27f2:	9c a3       	std	Y+36, r25	; 0x24
    27f4:	ad a3       	std	Y+37, r26	; 0x25
    27f6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    27f8:	6b a1       	ldd	r22, Y+35	; 0x23
    27fa:	7c a1       	ldd	r23, Y+36	; 0x24
    27fc:	8d a1       	ldd	r24, Y+37	; 0x25
    27fe:	9e a1       	ldd	r25, Y+38	; 0x26
    2800:	20 e0       	ldi	r18, 0x00	; 0
    2802:	30 e0       	ldi	r19, 0x00	; 0
    2804:	40 e8       	ldi	r20, 0x80	; 128
    2806:	5f e3       	ldi	r21, 0x3F	; 63
    2808:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    280c:	88 23       	and	r24, r24
    280e:	2c f4       	brge	.+10     	; 0x281a <stepper_void90Right+0x2e2>
		__ticks = 1;
    2810:	81 e0       	ldi	r24, 0x01	; 1
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	9a a3       	std	Y+34, r25	; 0x22
    2816:	89 a3       	std	Y+33, r24	; 0x21
    2818:	3f c0       	rjmp	.+126    	; 0x2898 <stepper_void90Right+0x360>
	else if (__tmp > 65535)
    281a:	6b a1       	ldd	r22, Y+35	; 0x23
    281c:	7c a1       	ldd	r23, Y+36	; 0x24
    281e:	8d a1       	ldd	r24, Y+37	; 0x25
    2820:	9e a1       	ldd	r25, Y+38	; 0x26
    2822:	20 e0       	ldi	r18, 0x00	; 0
    2824:	3f ef       	ldi	r19, 0xFF	; 255
    2826:	4f e7       	ldi	r20, 0x7F	; 127
    2828:	57 e4       	ldi	r21, 0x47	; 71
    282a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    282e:	18 16       	cp	r1, r24
    2830:	4c f5       	brge	.+82     	; 0x2884 <stepper_void90Right+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2832:	6f a1       	ldd	r22, Y+39	; 0x27
    2834:	78 a5       	ldd	r23, Y+40	; 0x28
    2836:	89 a5       	ldd	r24, Y+41	; 0x29
    2838:	9a a5       	ldd	r25, Y+42	; 0x2a
    283a:	20 e0       	ldi	r18, 0x00	; 0
    283c:	30 e0       	ldi	r19, 0x00	; 0
    283e:	40 e2       	ldi	r20, 0x20	; 32
    2840:	51 e4       	ldi	r21, 0x41	; 65
    2842:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2846:	dc 01       	movw	r26, r24
    2848:	cb 01       	movw	r24, r22
    284a:	bc 01       	movw	r22, r24
    284c:	cd 01       	movw	r24, r26
    284e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	9a a3       	std	Y+34, r25	; 0x22
    2858:	89 a3       	std	Y+33, r24	; 0x21
    285a:	0f c0       	rjmp	.+30     	; 0x287a <stepper_void90Right+0x342>
    285c:	8c e2       	ldi	r24, 0x2C	; 44
    285e:	91 e0       	ldi	r25, 0x01	; 1
    2860:	98 a3       	std	Y+32, r25	; 0x20
    2862:	8f 8f       	std	Y+31, r24	; 0x1f
    2864:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2866:	98 a1       	ldd	r25, Y+32	; 0x20
    2868:	01 97       	sbiw	r24, 0x01	; 1
    286a:	f1 f7       	brne	.-4      	; 0x2868 <stepper_void90Right+0x330>
    286c:	98 a3       	std	Y+32, r25	; 0x20
    286e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2870:	89 a1       	ldd	r24, Y+33	; 0x21
    2872:	9a a1       	ldd	r25, Y+34	; 0x22
    2874:	01 97       	sbiw	r24, 0x01	; 1
    2876:	9a a3       	std	Y+34, r25	; 0x22
    2878:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    287a:	89 a1       	ldd	r24, Y+33	; 0x21
    287c:	9a a1       	ldd	r25, Y+34	; 0x22
    287e:	00 97       	sbiw	r24, 0x00	; 0
    2880:	69 f7       	brne	.-38     	; 0x285c <stepper_void90Right+0x324>
    2882:	14 c0       	rjmp	.+40     	; 0x28ac <stepper_void90Right+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2884:	6b a1       	ldd	r22, Y+35	; 0x23
    2886:	7c a1       	ldd	r23, Y+36	; 0x24
    2888:	8d a1       	ldd	r24, Y+37	; 0x25
    288a:	9e a1       	ldd	r25, Y+38	; 0x26
    288c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2890:	dc 01       	movw	r26, r24
    2892:	cb 01       	movw	r24, r22
    2894:	9a a3       	std	Y+34, r25	; 0x22
    2896:	89 a3       	std	Y+33, r24	; 0x21
    2898:	89 a1       	ldd	r24, Y+33	; 0x21
    289a:	9a a1       	ldd	r25, Y+34	; 0x22
    289c:	9e 8f       	std	Y+30, r25	; 0x1e
    289e:	8d 8f       	std	Y+29, r24	; 0x1d
    28a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    28a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    28a4:	01 97       	sbiw	r24, 0x01	; 1
    28a6:	f1 f7       	brne	.-4      	; 0x28a4 <stepper_void90Right+0x36c>
    28a8:	9e 8f       	std	Y+30, r25	; 0x1e
    28aa:	8d 8f       	std	Y+29, r24	; 0x1d
					_delay_ms(2);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    28ac:	82 e0       	ldi	r24, 0x02	; 2
    28ae:	60 e0       	ldi	r22, 0x00	; 0
    28b0:	40 e0       	ldi	r20, 0x00	; 0
    28b2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    28b6:	82 e0       	ldi	r24, 0x02	; 2
    28b8:	61 e0       	ldi	r22, 0x01	; 1
    28ba:	40 e0       	ldi	r20, 0x00	; 0
    28bc:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    28c0:	82 e0       	ldi	r24, 0x02	; 2
    28c2:	62 e0       	ldi	r22, 0x02	; 2
    28c4:	40 e0       	ldi	r20, 0x00	; 0
    28c6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    28ca:	82 e0       	ldi	r24, 0x02	; 2
    28cc:	63 e0       	ldi	r22, 0x03	; 3
    28ce:	41 e0       	ldi	r20, 0x01	; 1
    28d0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    28d4:	80 e0       	ldi	r24, 0x00	; 0
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	a0 e0       	ldi	r26, 0x00	; 0
    28da:	b0 e4       	ldi	r27, 0x40	; 64
    28dc:	89 8f       	std	Y+25, r24	; 0x19
    28de:	9a 8f       	std	Y+26, r25	; 0x1a
    28e0:	ab 8f       	std	Y+27, r26	; 0x1b
    28e2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28e4:	69 8d       	ldd	r22, Y+25	; 0x19
    28e6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    28e8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    28ea:	9c 8d       	ldd	r25, Y+28	; 0x1c
    28ec:	20 e0       	ldi	r18, 0x00	; 0
    28ee:	30 e8       	ldi	r19, 0x80	; 128
    28f0:	4b e3       	ldi	r20, 0x3B	; 59
    28f2:	55 e4       	ldi	r21, 0x45	; 69
    28f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28f8:	dc 01       	movw	r26, r24
    28fa:	cb 01       	movw	r24, r22
    28fc:	8d 8b       	std	Y+21, r24	; 0x15
    28fe:	9e 8b       	std	Y+22, r25	; 0x16
    2900:	af 8b       	std	Y+23, r26	; 0x17
    2902:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2904:	6d 89       	ldd	r22, Y+21	; 0x15
    2906:	7e 89       	ldd	r23, Y+22	; 0x16
    2908:	8f 89       	ldd	r24, Y+23	; 0x17
    290a:	98 8d       	ldd	r25, Y+24	; 0x18
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	40 e8       	ldi	r20, 0x80	; 128
    2912:	5f e3       	ldi	r21, 0x3F	; 63
    2914:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2918:	88 23       	and	r24, r24
    291a:	2c f4       	brge	.+10     	; 0x2926 <stepper_void90Right+0x3ee>
		__ticks = 1;
    291c:	81 e0       	ldi	r24, 0x01	; 1
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	9c 8b       	std	Y+20, r25	; 0x14
    2922:	8b 8b       	std	Y+19, r24	; 0x13
    2924:	3f c0       	rjmp	.+126    	; 0x29a4 <stepper_void90Right+0x46c>
	else if (__tmp > 65535)
    2926:	6d 89       	ldd	r22, Y+21	; 0x15
    2928:	7e 89       	ldd	r23, Y+22	; 0x16
    292a:	8f 89       	ldd	r24, Y+23	; 0x17
    292c:	98 8d       	ldd	r25, Y+24	; 0x18
    292e:	20 e0       	ldi	r18, 0x00	; 0
    2930:	3f ef       	ldi	r19, 0xFF	; 255
    2932:	4f e7       	ldi	r20, 0x7F	; 127
    2934:	57 e4       	ldi	r21, 0x47	; 71
    2936:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    293a:	18 16       	cp	r1, r24
    293c:	4c f5       	brge	.+82     	; 0x2990 <stepper_void90Right+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    293e:	69 8d       	ldd	r22, Y+25	; 0x19
    2940:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2942:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2944:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2946:	20 e0       	ldi	r18, 0x00	; 0
    2948:	30 e0       	ldi	r19, 0x00	; 0
    294a:	40 e2       	ldi	r20, 0x20	; 32
    294c:	51 e4       	ldi	r21, 0x41	; 65
    294e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2952:	dc 01       	movw	r26, r24
    2954:	cb 01       	movw	r24, r22
    2956:	bc 01       	movw	r22, r24
    2958:	cd 01       	movw	r24, r26
    295a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    295e:	dc 01       	movw	r26, r24
    2960:	cb 01       	movw	r24, r22
    2962:	9c 8b       	std	Y+20, r25	; 0x14
    2964:	8b 8b       	std	Y+19, r24	; 0x13
    2966:	0f c0       	rjmp	.+30     	; 0x2986 <stepper_void90Right+0x44e>
    2968:	8c e2       	ldi	r24, 0x2C	; 44
    296a:	91 e0       	ldi	r25, 0x01	; 1
    296c:	9a 8b       	std	Y+18, r25	; 0x12
    296e:	89 8b       	std	Y+17, r24	; 0x11
    2970:	89 89       	ldd	r24, Y+17	; 0x11
    2972:	9a 89       	ldd	r25, Y+18	; 0x12
    2974:	01 97       	sbiw	r24, 0x01	; 1
    2976:	f1 f7       	brne	.-4      	; 0x2974 <stepper_void90Right+0x43c>
    2978:	9a 8b       	std	Y+18, r25	; 0x12
    297a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    297c:	8b 89       	ldd	r24, Y+19	; 0x13
    297e:	9c 89       	ldd	r25, Y+20	; 0x14
    2980:	01 97       	sbiw	r24, 0x01	; 1
    2982:	9c 8b       	std	Y+20, r25	; 0x14
    2984:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2986:	8b 89       	ldd	r24, Y+19	; 0x13
    2988:	9c 89       	ldd	r25, Y+20	; 0x14
    298a:	00 97       	sbiw	r24, 0x00	; 0
    298c:	69 f7       	brne	.-38     	; 0x2968 <stepper_void90Right+0x430>
    298e:	14 c0       	rjmp	.+40     	; 0x29b8 <stepper_void90Right+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2990:	6d 89       	ldd	r22, Y+21	; 0x15
    2992:	7e 89       	ldd	r23, Y+22	; 0x16
    2994:	8f 89       	ldd	r24, Y+23	; 0x17
    2996:	98 8d       	ldd	r25, Y+24	; 0x18
    2998:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    299c:	dc 01       	movw	r26, r24
    299e:	cb 01       	movw	r24, r22
    29a0:	9c 8b       	std	Y+20, r25	; 0x14
    29a2:	8b 8b       	std	Y+19, r24	; 0x13
    29a4:	8b 89       	ldd	r24, Y+19	; 0x13
    29a6:	9c 89       	ldd	r25, Y+20	; 0x14
    29a8:	98 8b       	std	Y+16, r25	; 0x10
    29aa:	8f 87       	std	Y+15, r24	; 0x0f
    29ac:	8f 85       	ldd	r24, Y+15	; 0x0f
    29ae:	98 89       	ldd	r25, Y+16	; 0x10
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	f1 f7       	brne	.-4      	; 0x29b0 <stepper_void90Right+0x478>
    29b4:	98 8b       	std	Y+16, r25	; 0x10
    29b6:	8f 87       	std	Y+15, r24	; 0x0f

}

void stepper_void90Right(void)
{u32 i;
for( i=0;i<130;i++)
    29b8:	9e 01       	movw	r18, r28
    29ba:	29 5b       	subi	r18, 0xB9	; 185
    29bc:	3f 4f       	sbci	r19, 0xFF	; 255
    29be:	fe 01       	movw	r30, r28
    29c0:	e9 5b       	subi	r30, 0xB9	; 185
    29c2:	ff 4f       	sbci	r31, 0xFF	; 255
    29c4:	80 81       	ld	r24, Z
    29c6:	91 81       	ldd	r25, Z+1	; 0x01
    29c8:	a2 81       	ldd	r26, Z+2	; 0x02
    29ca:	b3 81       	ldd	r27, Z+3	; 0x03
    29cc:	01 96       	adiw	r24, 0x01	; 1
    29ce:	a1 1d       	adc	r26, r1
    29d0:	b1 1d       	adc	r27, r1
    29d2:	f9 01       	movw	r30, r18
    29d4:	80 83       	st	Z, r24
    29d6:	91 83       	std	Z+1, r25	; 0x01
    29d8:	a2 83       	std	Z+2, r26	; 0x02
    29da:	b3 83       	std	Z+3, r27	; 0x03
    29dc:	fe 01       	movw	r30, r28
    29de:	e9 5b       	subi	r30, 0xB9	; 185
    29e0:	ff 4f       	sbci	r31, 0xFF	; 255
    29e2:	80 81       	ld	r24, Z
    29e4:	91 81       	ldd	r25, Z+1	; 0x01
    29e6:	a2 81       	ldd	r26, Z+2	; 0x02
    29e8:	b3 81       	ldd	r27, Z+3	; 0x03
    29ea:	82 38       	cpi	r24, 0x82	; 130
    29ec:	91 05       	cpc	r25, r1
    29ee:	a1 05       	cpc	r26, r1
    29f0:	b1 05       	cpc	r27, r1
    29f2:	08 f4       	brcc	.+2      	; 0x29f6 <stepper_void90Right+0x4be>
    29f4:	b6 cd       	rjmp	.-1172   	; 0x2562 <stepper_void90Right+0x2a>
    29f6:	80 e0       	ldi	r24, 0x00	; 0
    29f8:	90 e0       	ldi	r25, 0x00	; 0
    29fa:	aa e7       	ldi	r26, 0x7A	; 122
    29fc:	b4 e4       	ldi	r27, 0x44	; 68
    29fe:	8b 87       	std	Y+11, r24	; 0x0b
    2a00:	9c 87       	std	Y+12, r25	; 0x0c
    2a02:	ad 87       	std	Y+13, r26	; 0x0d
    2a04:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a06:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a08:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	30 e8       	ldi	r19, 0x80	; 128
    2a12:	4b e3       	ldi	r20, 0x3B	; 59
    2a14:	55 e4       	ldi	r21, 0x45	; 69
    2a16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a1a:	dc 01       	movw	r26, r24
    2a1c:	cb 01       	movw	r24, r22
    2a1e:	8f 83       	std	Y+7, r24	; 0x07
    2a20:	98 87       	std	Y+8, r25	; 0x08
    2a22:	a9 87       	std	Y+9, r26	; 0x09
    2a24:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2a26:	6f 81       	ldd	r22, Y+7	; 0x07
    2a28:	78 85       	ldd	r23, Y+8	; 0x08
    2a2a:	89 85       	ldd	r24, Y+9	; 0x09
    2a2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a2e:	20 e0       	ldi	r18, 0x00	; 0
    2a30:	30 e0       	ldi	r19, 0x00	; 0
    2a32:	40 e8       	ldi	r20, 0x80	; 128
    2a34:	5f e3       	ldi	r21, 0x3F	; 63
    2a36:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a3a:	88 23       	and	r24, r24
    2a3c:	2c f4       	brge	.+10     	; 0x2a48 <stepper_void90Right+0x510>
		__ticks = 1;
    2a3e:	81 e0       	ldi	r24, 0x01	; 1
    2a40:	90 e0       	ldi	r25, 0x00	; 0
    2a42:	9e 83       	std	Y+6, r25	; 0x06
    2a44:	8d 83       	std	Y+5, r24	; 0x05
    2a46:	3f c0       	rjmp	.+126    	; 0x2ac6 <stepper_void90Right+0x58e>
	else if (__tmp > 65535)
    2a48:	6f 81       	ldd	r22, Y+7	; 0x07
    2a4a:	78 85       	ldd	r23, Y+8	; 0x08
    2a4c:	89 85       	ldd	r24, Y+9	; 0x09
    2a4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2a50:	20 e0       	ldi	r18, 0x00	; 0
    2a52:	3f ef       	ldi	r19, 0xFF	; 255
    2a54:	4f e7       	ldi	r20, 0x7F	; 127
    2a56:	57 e4       	ldi	r21, 0x47	; 71
    2a58:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a5c:	18 16       	cp	r1, r24
    2a5e:	4c f5       	brge	.+82     	; 0x2ab2 <stepper_void90Right+0x57a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a60:	6b 85       	ldd	r22, Y+11	; 0x0b
    2a62:	7c 85       	ldd	r23, Y+12	; 0x0c
    2a64:	8d 85       	ldd	r24, Y+13	; 0x0d
    2a66:	9e 85       	ldd	r25, Y+14	; 0x0e
    2a68:	20 e0       	ldi	r18, 0x00	; 0
    2a6a:	30 e0       	ldi	r19, 0x00	; 0
    2a6c:	40 e2       	ldi	r20, 0x20	; 32
    2a6e:	51 e4       	ldi	r21, 0x41	; 65
    2a70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a74:	dc 01       	movw	r26, r24
    2a76:	cb 01       	movw	r24, r22
    2a78:	bc 01       	movw	r22, r24
    2a7a:	cd 01       	movw	r24, r26
    2a7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a80:	dc 01       	movw	r26, r24
    2a82:	cb 01       	movw	r24, r22
    2a84:	9e 83       	std	Y+6, r25	; 0x06
    2a86:	8d 83       	std	Y+5, r24	; 0x05
    2a88:	0f c0       	rjmp	.+30     	; 0x2aa8 <stepper_void90Right+0x570>
    2a8a:	8c e2       	ldi	r24, 0x2C	; 44
    2a8c:	91 e0       	ldi	r25, 0x01	; 1
    2a8e:	9c 83       	std	Y+4, r25	; 0x04
    2a90:	8b 83       	std	Y+3, r24	; 0x03
    2a92:	8b 81       	ldd	r24, Y+3	; 0x03
    2a94:	9c 81       	ldd	r25, Y+4	; 0x04
    2a96:	01 97       	sbiw	r24, 0x01	; 1
    2a98:	f1 f7       	brne	.-4      	; 0x2a96 <stepper_void90Right+0x55e>
    2a9a:	9c 83       	std	Y+4, r25	; 0x04
    2a9c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    2aa0:	9e 81       	ldd	r25, Y+6	; 0x06
    2aa2:	01 97       	sbiw	r24, 0x01	; 1
    2aa4:	9e 83       	std	Y+6, r25	; 0x06
    2aa6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aa8:	8d 81       	ldd	r24, Y+5	; 0x05
    2aaa:	9e 81       	ldd	r25, Y+6	; 0x06
    2aac:	00 97       	sbiw	r24, 0x00	; 0
    2aae:	69 f7       	brne	.-38     	; 0x2a8a <stepper_void90Right+0x552>
    2ab0:	14 c0       	rjmp	.+40     	; 0x2ada <stepper_void90Right+0x5a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ab2:	6f 81       	ldd	r22, Y+7	; 0x07
    2ab4:	78 85       	ldd	r23, Y+8	; 0x08
    2ab6:	89 85       	ldd	r24, Y+9	; 0x09
    2ab8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2aba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2abe:	dc 01       	movw	r26, r24
    2ac0:	cb 01       	movw	r24, r22
    2ac2:	9e 83       	std	Y+6, r25	; 0x06
    2ac4:	8d 83       	std	Y+5, r24	; 0x05
    2ac6:	8d 81       	ldd	r24, Y+5	; 0x05
    2ac8:	9e 81       	ldd	r25, Y+6	; 0x06
    2aca:	9a 83       	std	Y+2, r25	; 0x02
    2acc:	89 83       	std	Y+1, r24	; 0x01
    2ace:	89 81       	ldd	r24, Y+1	; 0x01
    2ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ad2:	01 97       	sbiw	r24, 0x01	; 1
    2ad4:	f1 f7       	brne	.-4      	; 0x2ad2 <stepper_void90Right+0x59a>
    2ad6:	9a 83       	std	Y+2, r25	; 0x02
    2ad8:	89 83       	std	Y+1, r24	; 0x01
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
					_delay_ms(2);
				}
_delay_ms(1000);

}
    2ada:	c6 5b       	subi	r28, 0xB6	; 182
    2adc:	df 4f       	sbci	r29, 0xFF	; 255
    2ade:	0f b6       	in	r0, 0x3f	; 63
    2ae0:	f8 94       	cli
    2ae2:	de bf       	out	0x3e, r29	; 62
    2ae4:	0f be       	out	0x3f, r0	; 63
    2ae6:	cd bf       	out	0x3d, r28	; 61
    2ae8:	cf 91       	pop	r28
    2aea:	df 91       	pop	r29
    2aec:	1f 91       	pop	r17
    2aee:	0f 91       	pop	r16
    2af0:	08 95       	ret

00002af2 <stepper_void90Left>:
void stepper_void90Left(void)
{
    2af2:	0f 93       	push	r16
    2af4:	1f 93       	push	r17
    2af6:	df 93       	push	r29
    2af8:	cf 93       	push	r28
    2afa:	cd b7       	in	r28, 0x3d	; 61
    2afc:	de b7       	in	r29, 0x3e	; 62
    2afe:	ca 54       	subi	r28, 0x4A	; 74
    2b00:	d0 40       	sbci	r29, 0x00	; 0
    2b02:	0f b6       	in	r0, 0x3f	; 63
    2b04:	f8 94       	cli
    2b06:	de bf       	out	0x3e, r29	; 62
    2b08:	0f be       	out	0x3f, r0	; 63
    2b0a:	cd bf       	out	0x3d, r28	; 61
	u32 i;
	for( i=0;i<130;i++)
    2b0c:	fe 01       	movw	r30, r28
    2b0e:	e9 5b       	subi	r30, 0xB9	; 185
    2b10:	ff 4f       	sbci	r31, 0xFF	; 255
    2b12:	10 82       	st	Z, r1
    2b14:	11 82       	std	Z+1, r1	; 0x01
    2b16:	12 82       	std	Z+2, r1	; 0x02
    2b18:	13 82       	std	Z+3, r1	; 0x03
    2b1a:	3d c2       	rjmp	.+1146   	; 0x2f96 <stepper_void90Left+0x4a4>
	{
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    2b1c:	82 e0       	ldi	r24, 0x02	; 2
    2b1e:	60 e0       	ldi	r22, 0x00	; 0
    2b20:	40 e0       	ldi	r20, 0x00	; 0
    2b22:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    2b26:	82 e0       	ldi	r24, 0x02	; 2
    2b28:	61 e0       	ldi	r22, 0x01	; 1
    2b2a:	40 e0       	ldi	r20, 0x00	; 0
    2b2c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2b30:	82 e0       	ldi	r24, 0x02	; 2
    2b32:	62 e0       	ldi	r22, 0x02	; 2
    2b34:	40 e0       	ldi	r20, 0x00	; 0
    2b36:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    2b3a:	82 e0       	ldi	r24, 0x02	; 2
    2b3c:	63 e0       	ldi	r22, 0x03	; 3
    2b3e:	41 e0       	ldi	r20, 0x01	; 1
    2b40:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2b44:	fe 01       	movw	r30, r28
    2b46:	ed 5b       	subi	r30, 0xBD	; 189
    2b48:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4a:	80 e0       	ldi	r24, 0x00	; 0
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	a0 e0       	ldi	r26, 0x00	; 0
    2b50:	b0 e4       	ldi	r27, 0x40	; 64
    2b52:	80 83       	st	Z, r24
    2b54:	91 83       	std	Z+1, r25	; 0x01
    2b56:	a2 83       	std	Z+2, r26	; 0x02
    2b58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b5a:	8e 01       	movw	r16, r28
    2b5c:	01 5c       	subi	r16, 0xC1	; 193
    2b5e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b60:	fe 01       	movw	r30, r28
    2b62:	ed 5b       	subi	r30, 0xBD	; 189
    2b64:	ff 4f       	sbci	r31, 0xFF	; 255
    2b66:	60 81       	ld	r22, Z
    2b68:	71 81       	ldd	r23, Z+1	; 0x01
    2b6a:	82 81       	ldd	r24, Z+2	; 0x02
    2b6c:	93 81       	ldd	r25, Z+3	; 0x03
    2b6e:	20 e0       	ldi	r18, 0x00	; 0
    2b70:	30 e8       	ldi	r19, 0x80	; 128
    2b72:	4b e3       	ldi	r20, 0x3B	; 59
    2b74:	55 e4       	ldi	r21, 0x45	; 69
    2b76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b7a:	dc 01       	movw	r26, r24
    2b7c:	cb 01       	movw	r24, r22
    2b7e:	f8 01       	movw	r30, r16
    2b80:	80 83       	st	Z, r24
    2b82:	91 83       	std	Z+1, r25	; 0x01
    2b84:	a2 83       	std	Z+2, r26	; 0x02
    2b86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b88:	fe 01       	movw	r30, r28
    2b8a:	ff 96       	adiw	r30, 0x3f	; 63
    2b8c:	60 81       	ld	r22, Z
    2b8e:	71 81       	ldd	r23, Z+1	; 0x01
    2b90:	82 81       	ldd	r24, Z+2	; 0x02
    2b92:	93 81       	ldd	r25, Z+3	; 0x03
    2b94:	20 e0       	ldi	r18, 0x00	; 0
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	40 e8       	ldi	r20, 0x80	; 128
    2b9a:	5f e3       	ldi	r21, 0x3F	; 63
    2b9c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ba0:	88 23       	and	r24, r24
    2ba2:	2c f4       	brge	.+10     	; 0x2bae <stepper_void90Left+0xbc>
		__ticks = 1;
    2ba4:	81 e0       	ldi	r24, 0x01	; 1
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	9e af       	std	Y+62, r25	; 0x3e
    2baa:	8d af       	std	Y+61, r24	; 0x3d
    2bac:	46 c0       	rjmp	.+140    	; 0x2c3a <stepper_void90Left+0x148>
	else if (__tmp > 65535)
    2bae:	fe 01       	movw	r30, r28
    2bb0:	ff 96       	adiw	r30, 0x3f	; 63
    2bb2:	60 81       	ld	r22, Z
    2bb4:	71 81       	ldd	r23, Z+1	; 0x01
    2bb6:	82 81       	ldd	r24, Z+2	; 0x02
    2bb8:	93 81       	ldd	r25, Z+3	; 0x03
    2bba:	20 e0       	ldi	r18, 0x00	; 0
    2bbc:	3f ef       	ldi	r19, 0xFF	; 255
    2bbe:	4f e7       	ldi	r20, 0x7F	; 127
    2bc0:	57 e4       	ldi	r21, 0x47	; 71
    2bc2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bc6:	18 16       	cp	r1, r24
    2bc8:	64 f5       	brge	.+88     	; 0x2c22 <stepper_void90Left+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bca:	fe 01       	movw	r30, r28
    2bcc:	ed 5b       	subi	r30, 0xBD	; 189
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	60 81       	ld	r22, Z
    2bd2:	71 81       	ldd	r23, Z+1	; 0x01
    2bd4:	82 81       	ldd	r24, Z+2	; 0x02
    2bd6:	93 81       	ldd	r25, Z+3	; 0x03
    2bd8:	20 e0       	ldi	r18, 0x00	; 0
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	40 e2       	ldi	r20, 0x20	; 32
    2bde:	51 e4       	ldi	r21, 0x41	; 65
    2be0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2be4:	dc 01       	movw	r26, r24
    2be6:	cb 01       	movw	r24, r22
    2be8:	bc 01       	movw	r22, r24
    2bea:	cd 01       	movw	r24, r26
    2bec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf0:	dc 01       	movw	r26, r24
    2bf2:	cb 01       	movw	r24, r22
    2bf4:	9e af       	std	Y+62, r25	; 0x3e
    2bf6:	8d af       	std	Y+61, r24	; 0x3d
    2bf8:	0f c0       	rjmp	.+30     	; 0x2c18 <stepper_void90Left+0x126>
    2bfa:	8c e2       	ldi	r24, 0x2C	; 44
    2bfc:	91 e0       	ldi	r25, 0x01	; 1
    2bfe:	9c af       	std	Y+60, r25	; 0x3c
    2c00:	8b af       	std	Y+59, r24	; 0x3b
    2c02:	8b ad       	ldd	r24, Y+59	; 0x3b
    2c04:	9c ad       	ldd	r25, Y+60	; 0x3c
    2c06:	01 97       	sbiw	r24, 0x01	; 1
    2c08:	f1 f7       	brne	.-4      	; 0x2c06 <stepper_void90Left+0x114>
    2c0a:	9c af       	std	Y+60, r25	; 0x3c
    2c0c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c0e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c10:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c12:	01 97       	sbiw	r24, 0x01	; 1
    2c14:	9e af       	std	Y+62, r25	; 0x3e
    2c16:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c18:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c1a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c1c:	00 97       	sbiw	r24, 0x00	; 0
    2c1e:	69 f7       	brne	.-38     	; 0x2bfa <stepper_void90Left+0x108>
    2c20:	16 c0       	rjmp	.+44     	; 0x2c4e <stepper_void90Left+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c22:	fe 01       	movw	r30, r28
    2c24:	ff 96       	adiw	r30, 0x3f	; 63
    2c26:	60 81       	ld	r22, Z
    2c28:	71 81       	ldd	r23, Z+1	; 0x01
    2c2a:	82 81       	ldd	r24, Z+2	; 0x02
    2c2c:	93 81       	ldd	r25, Z+3	; 0x03
    2c2e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c32:	dc 01       	movw	r26, r24
    2c34:	cb 01       	movw	r24, r22
    2c36:	9e af       	std	Y+62, r25	; 0x3e
    2c38:	8d af       	std	Y+61, r24	; 0x3d
    2c3a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c3c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c3e:	9a af       	std	Y+58, r25	; 0x3a
    2c40:	89 af       	std	Y+57, r24	; 0x39
    2c42:	89 ad       	ldd	r24, Y+57	; 0x39
    2c44:	9a ad       	ldd	r25, Y+58	; 0x3a
    2c46:	01 97       	sbiw	r24, 0x01	; 1
    2c48:	f1 f7       	brne	.-4      	; 0x2c46 <stepper_void90Left+0x154>
    2c4a:	9a af       	std	Y+58, r25	; 0x3a
    2c4c:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    2c4e:	82 e0       	ldi	r24, 0x02	; 2
    2c50:	60 e0       	ldi	r22, 0x00	; 0
    2c52:	40 e0       	ldi	r20, 0x00	; 0
    2c54:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    2c58:	82 e0       	ldi	r24, 0x02	; 2
    2c5a:	61 e0       	ldi	r22, 0x01	; 1
    2c5c:	40 e0       	ldi	r20, 0x00	; 0
    2c5e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    2c62:	82 e0       	ldi	r24, 0x02	; 2
    2c64:	62 e0       	ldi	r22, 0x02	; 2
    2c66:	41 e0       	ldi	r20, 0x01	; 1
    2c68:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    2c6c:	82 e0       	ldi	r24, 0x02	; 2
    2c6e:	63 e0       	ldi	r22, 0x03	; 3
    2c70:	40 e0       	ldi	r20, 0x00	; 0
    2c72:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2c76:	80 e0       	ldi	r24, 0x00	; 0
    2c78:	90 e0       	ldi	r25, 0x00	; 0
    2c7a:	a0 e0       	ldi	r26, 0x00	; 0
    2c7c:	b0 e4       	ldi	r27, 0x40	; 64
    2c7e:	8d ab       	std	Y+53, r24	; 0x35
    2c80:	9e ab       	std	Y+54, r25	; 0x36
    2c82:	af ab       	std	Y+55, r26	; 0x37
    2c84:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c86:	6d a9       	ldd	r22, Y+53	; 0x35
    2c88:	7e a9       	ldd	r23, Y+54	; 0x36
    2c8a:	8f a9       	ldd	r24, Y+55	; 0x37
    2c8c:	98 ad       	ldd	r25, Y+56	; 0x38
    2c8e:	20 e0       	ldi	r18, 0x00	; 0
    2c90:	30 e8       	ldi	r19, 0x80	; 128
    2c92:	4b e3       	ldi	r20, 0x3B	; 59
    2c94:	55 e4       	ldi	r21, 0x45	; 69
    2c96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c9a:	dc 01       	movw	r26, r24
    2c9c:	cb 01       	movw	r24, r22
    2c9e:	89 ab       	std	Y+49, r24	; 0x31
    2ca0:	9a ab       	std	Y+50, r25	; 0x32
    2ca2:	ab ab       	std	Y+51, r26	; 0x33
    2ca4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ca6:	69 a9       	ldd	r22, Y+49	; 0x31
    2ca8:	7a a9       	ldd	r23, Y+50	; 0x32
    2caa:	8b a9       	ldd	r24, Y+51	; 0x33
    2cac:	9c a9       	ldd	r25, Y+52	; 0x34
    2cae:	20 e0       	ldi	r18, 0x00	; 0
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	40 e8       	ldi	r20, 0x80	; 128
    2cb4:	5f e3       	ldi	r21, 0x3F	; 63
    2cb6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cba:	88 23       	and	r24, r24
    2cbc:	2c f4       	brge	.+10     	; 0x2cc8 <stepper_void90Left+0x1d6>
		__ticks = 1;
    2cbe:	81 e0       	ldi	r24, 0x01	; 1
    2cc0:	90 e0       	ldi	r25, 0x00	; 0
    2cc2:	98 ab       	std	Y+48, r25	; 0x30
    2cc4:	8f a7       	std	Y+47, r24	; 0x2f
    2cc6:	3f c0       	rjmp	.+126    	; 0x2d46 <stepper_void90Left+0x254>
	else if (__tmp > 65535)
    2cc8:	69 a9       	ldd	r22, Y+49	; 0x31
    2cca:	7a a9       	ldd	r23, Y+50	; 0x32
    2ccc:	8b a9       	ldd	r24, Y+51	; 0x33
    2cce:	9c a9       	ldd	r25, Y+52	; 0x34
    2cd0:	20 e0       	ldi	r18, 0x00	; 0
    2cd2:	3f ef       	ldi	r19, 0xFF	; 255
    2cd4:	4f e7       	ldi	r20, 0x7F	; 127
    2cd6:	57 e4       	ldi	r21, 0x47	; 71
    2cd8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cdc:	18 16       	cp	r1, r24
    2cde:	4c f5       	brge	.+82     	; 0x2d32 <stepper_void90Left+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ce0:	6d a9       	ldd	r22, Y+53	; 0x35
    2ce2:	7e a9       	ldd	r23, Y+54	; 0x36
    2ce4:	8f a9       	ldd	r24, Y+55	; 0x37
    2ce6:	98 ad       	ldd	r25, Y+56	; 0x38
    2ce8:	20 e0       	ldi	r18, 0x00	; 0
    2cea:	30 e0       	ldi	r19, 0x00	; 0
    2cec:	40 e2       	ldi	r20, 0x20	; 32
    2cee:	51 e4       	ldi	r21, 0x41	; 65
    2cf0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cf4:	dc 01       	movw	r26, r24
    2cf6:	cb 01       	movw	r24, r22
    2cf8:	bc 01       	movw	r22, r24
    2cfa:	cd 01       	movw	r24, r26
    2cfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d00:	dc 01       	movw	r26, r24
    2d02:	cb 01       	movw	r24, r22
    2d04:	98 ab       	std	Y+48, r25	; 0x30
    2d06:	8f a7       	std	Y+47, r24	; 0x2f
    2d08:	0f c0       	rjmp	.+30     	; 0x2d28 <stepper_void90Left+0x236>
    2d0a:	8c e2       	ldi	r24, 0x2C	; 44
    2d0c:	91 e0       	ldi	r25, 0x01	; 1
    2d0e:	9e a7       	std	Y+46, r25	; 0x2e
    2d10:	8d a7       	std	Y+45, r24	; 0x2d
    2d12:	8d a5       	ldd	r24, Y+45	; 0x2d
    2d14:	9e a5       	ldd	r25, Y+46	; 0x2e
    2d16:	01 97       	sbiw	r24, 0x01	; 1
    2d18:	f1 f7       	brne	.-4      	; 0x2d16 <stepper_void90Left+0x224>
    2d1a:	9e a7       	std	Y+46, r25	; 0x2e
    2d1c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d1e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d20:	98 a9       	ldd	r25, Y+48	; 0x30
    2d22:	01 97       	sbiw	r24, 0x01	; 1
    2d24:	98 ab       	std	Y+48, r25	; 0x30
    2d26:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d28:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d2a:	98 a9       	ldd	r25, Y+48	; 0x30
    2d2c:	00 97       	sbiw	r24, 0x00	; 0
    2d2e:	69 f7       	brne	.-38     	; 0x2d0a <stepper_void90Left+0x218>
    2d30:	14 c0       	rjmp	.+40     	; 0x2d5a <stepper_void90Left+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d32:	69 a9       	ldd	r22, Y+49	; 0x31
    2d34:	7a a9       	ldd	r23, Y+50	; 0x32
    2d36:	8b a9       	ldd	r24, Y+51	; 0x33
    2d38:	9c a9       	ldd	r25, Y+52	; 0x34
    2d3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d3e:	dc 01       	movw	r26, r24
    2d40:	cb 01       	movw	r24, r22
    2d42:	98 ab       	std	Y+48, r25	; 0x30
    2d44:	8f a7       	std	Y+47, r24	; 0x2f
    2d46:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d48:	98 a9       	ldd	r25, Y+48	; 0x30
    2d4a:	9c a7       	std	Y+44, r25	; 0x2c
    2d4c:	8b a7       	std	Y+43, r24	; 0x2b
    2d4e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2d50:	9c a5       	ldd	r25, Y+44	; 0x2c
    2d52:	01 97       	sbiw	r24, 0x01	; 1
    2d54:	f1 f7       	brne	.-4      	; 0x2d52 <stepper_void90Left+0x260>
    2d56:	9c a7       	std	Y+44, r25	; 0x2c
    2d58:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    2d5a:	82 e0       	ldi	r24, 0x02	; 2
    2d5c:	60 e0       	ldi	r22, 0x00	; 0
    2d5e:	40 e0       	ldi	r20, 0x00	; 0
    2d60:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    2d64:	82 e0       	ldi	r24, 0x02	; 2
    2d66:	61 e0       	ldi	r22, 0x01	; 1
    2d68:	41 e0       	ldi	r20, 0x01	; 1
    2d6a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2d6e:	82 e0       	ldi	r24, 0x02	; 2
    2d70:	62 e0       	ldi	r22, 0x02	; 2
    2d72:	40 e0       	ldi	r20, 0x00	; 0
    2d74:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    2d78:	82 e0       	ldi	r24, 0x02	; 2
    2d7a:	63 e0       	ldi	r22, 0x03	; 3
    2d7c:	40 e0       	ldi	r20, 0x00	; 0
    2d7e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2d82:	80 e0       	ldi	r24, 0x00	; 0
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	a0 e0       	ldi	r26, 0x00	; 0
    2d88:	b0 e4       	ldi	r27, 0x40	; 64
    2d8a:	8f a3       	std	Y+39, r24	; 0x27
    2d8c:	98 a7       	std	Y+40, r25	; 0x28
    2d8e:	a9 a7       	std	Y+41, r26	; 0x29
    2d90:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d92:	6f a1       	ldd	r22, Y+39	; 0x27
    2d94:	78 a5       	ldd	r23, Y+40	; 0x28
    2d96:	89 a5       	ldd	r24, Y+41	; 0x29
    2d98:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d9a:	20 e0       	ldi	r18, 0x00	; 0
    2d9c:	30 e8       	ldi	r19, 0x80	; 128
    2d9e:	4b e3       	ldi	r20, 0x3B	; 59
    2da0:	55 e4       	ldi	r21, 0x45	; 69
    2da2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2da6:	dc 01       	movw	r26, r24
    2da8:	cb 01       	movw	r24, r22
    2daa:	8b a3       	std	Y+35, r24	; 0x23
    2dac:	9c a3       	std	Y+36, r25	; 0x24
    2dae:	ad a3       	std	Y+37, r26	; 0x25
    2db0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2db2:	6b a1       	ldd	r22, Y+35	; 0x23
    2db4:	7c a1       	ldd	r23, Y+36	; 0x24
    2db6:	8d a1       	ldd	r24, Y+37	; 0x25
    2db8:	9e a1       	ldd	r25, Y+38	; 0x26
    2dba:	20 e0       	ldi	r18, 0x00	; 0
    2dbc:	30 e0       	ldi	r19, 0x00	; 0
    2dbe:	40 e8       	ldi	r20, 0x80	; 128
    2dc0:	5f e3       	ldi	r21, 0x3F	; 63
    2dc2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2dc6:	88 23       	and	r24, r24
    2dc8:	2c f4       	brge	.+10     	; 0x2dd4 <stepper_void90Left+0x2e2>
		__ticks = 1;
    2dca:	81 e0       	ldi	r24, 0x01	; 1
    2dcc:	90 e0       	ldi	r25, 0x00	; 0
    2dce:	9a a3       	std	Y+34, r25	; 0x22
    2dd0:	89 a3       	std	Y+33, r24	; 0x21
    2dd2:	3f c0       	rjmp	.+126    	; 0x2e52 <stepper_void90Left+0x360>
	else if (__tmp > 65535)
    2dd4:	6b a1       	ldd	r22, Y+35	; 0x23
    2dd6:	7c a1       	ldd	r23, Y+36	; 0x24
    2dd8:	8d a1       	ldd	r24, Y+37	; 0x25
    2dda:	9e a1       	ldd	r25, Y+38	; 0x26
    2ddc:	20 e0       	ldi	r18, 0x00	; 0
    2dde:	3f ef       	ldi	r19, 0xFF	; 255
    2de0:	4f e7       	ldi	r20, 0x7F	; 127
    2de2:	57 e4       	ldi	r21, 0x47	; 71
    2de4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2de8:	18 16       	cp	r1, r24
    2dea:	4c f5       	brge	.+82     	; 0x2e3e <stepper_void90Left+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dec:	6f a1       	ldd	r22, Y+39	; 0x27
    2dee:	78 a5       	ldd	r23, Y+40	; 0x28
    2df0:	89 a5       	ldd	r24, Y+41	; 0x29
    2df2:	9a a5       	ldd	r25, Y+42	; 0x2a
    2df4:	20 e0       	ldi	r18, 0x00	; 0
    2df6:	30 e0       	ldi	r19, 0x00	; 0
    2df8:	40 e2       	ldi	r20, 0x20	; 32
    2dfa:	51 e4       	ldi	r21, 0x41	; 65
    2dfc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	bc 01       	movw	r22, r24
    2e06:	cd 01       	movw	r24, r26
    2e08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e0c:	dc 01       	movw	r26, r24
    2e0e:	cb 01       	movw	r24, r22
    2e10:	9a a3       	std	Y+34, r25	; 0x22
    2e12:	89 a3       	std	Y+33, r24	; 0x21
    2e14:	0f c0       	rjmp	.+30     	; 0x2e34 <stepper_void90Left+0x342>
    2e16:	8c e2       	ldi	r24, 0x2C	; 44
    2e18:	91 e0       	ldi	r25, 0x01	; 1
    2e1a:	98 a3       	std	Y+32, r25	; 0x20
    2e1c:	8f 8f       	std	Y+31, r24	; 0x1f
    2e1e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e20:	98 a1       	ldd	r25, Y+32	; 0x20
    2e22:	01 97       	sbiw	r24, 0x01	; 1
    2e24:	f1 f7       	brne	.-4      	; 0x2e22 <stepper_void90Left+0x330>
    2e26:	98 a3       	std	Y+32, r25	; 0x20
    2e28:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e2a:	89 a1       	ldd	r24, Y+33	; 0x21
    2e2c:	9a a1       	ldd	r25, Y+34	; 0x22
    2e2e:	01 97       	sbiw	r24, 0x01	; 1
    2e30:	9a a3       	std	Y+34, r25	; 0x22
    2e32:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e34:	89 a1       	ldd	r24, Y+33	; 0x21
    2e36:	9a a1       	ldd	r25, Y+34	; 0x22
    2e38:	00 97       	sbiw	r24, 0x00	; 0
    2e3a:	69 f7       	brne	.-38     	; 0x2e16 <stepper_void90Left+0x324>
    2e3c:	14 c0       	rjmp	.+40     	; 0x2e66 <stepper_void90Left+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e3e:	6b a1       	ldd	r22, Y+35	; 0x23
    2e40:	7c a1       	ldd	r23, Y+36	; 0x24
    2e42:	8d a1       	ldd	r24, Y+37	; 0x25
    2e44:	9e a1       	ldd	r25, Y+38	; 0x26
    2e46:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e4a:	dc 01       	movw	r26, r24
    2e4c:	cb 01       	movw	r24, r22
    2e4e:	9a a3       	std	Y+34, r25	; 0x22
    2e50:	89 a3       	std	Y+33, r24	; 0x21
    2e52:	89 a1       	ldd	r24, Y+33	; 0x21
    2e54:	9a a1       	ldd	r25, Y+34	; 0x22
    2e56:	9e 8f       	std	Y+30, r25	; 0x1e
    2e58:	8d 8f       	std	Y+29, r24	; 0x1d
    2e5a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e5c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e5e:	01 97       	sbiw	r24, 0x01	; 1
    2e60:	f1 f7       	brne	.-4      	; 0x2e5e <stepper_void90Left+0x36c>
    2e62:	9e 8f       	std	Y+30, r25	; 0x1e
    2e64:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    2e66:	82 e0       	ldi	r24, 0x02	; 2
    2e68:	60 e0       	ldi	r22, 0x00	; 0
    2e6a:	41 e0       	ldi	r20, 0x01	; 1
    2e6c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    2e70:	82 e0       	ldi	r24, 0x02	; 2
    2e72:	61 e0       	ldi	r22, 0x01	; 1
    2e74:	40 e0       	ldi	r20, 0x00	; 0
    2e76:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    2e7a:	82 e0       	ldi	r24, 0x02	; 2
    2e7c:	62 e0       	ldi	r22, 0x02	; 2
    2e7e:	40 e0       	ldi	r20, 0x00	; 0
    2e80:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    2e84:	82 e0       	ldi	r24, 0x02	; 2
    2e86:	63 e0       	ldi	r22, 0x03	; 3
    2e88:	40 e0       	ldi	r20, 0x00	; 0
    2e8a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    2e8e:	80 e0       	ldi	r24, 0x00	; 0
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	a0 e0       	ldi	r26, 0x00	; 0
    2e94:	b0 e4       	ldi	r27, 0x40	; 64
    2e96:	89 8f       	std	Y+25, r24	; 0x19
    2e98:	9a 8f       	std	Y+26, r25	; 0x1a
    2e9a:	ab 8f       	std	Y+27, r26	; 0x1b
    2e9c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e9e:	69 8d       	ldd	r22, Y+25	; 0x19
    2ea0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ea2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ea4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ea6:	20 e0       	ldi	r18, 0x00	; 0
    2ea8:	30 e8       	ldi	r19, 0x80	; 128
    2eaa:	4b e3       	ldi	r20, 0x3B	; 59
    2eac:	55 e4       	ldi	r21, 0x45	; 69
    2eae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eb2:	dc 01       	movw	r26, r24
    2eb4:	cb 01       	movw	r24, r22
    2eb6:	8d 8b       	std	Y+21, r24	; 0x15
    2eb8:	9e 8b       	std	Y+22, r25	; 0x16
    2eba:	af 8b       	std	Y+23, r26	; 0x17
    2ebc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2ebe:	6d 89       	ldd	r22, Y+21	; 0x15
    2ec0:	7e 89       	ldd	r23, Y+22	; 0x16
    2ec2:	8f 89       	ldd	r24, Y+23	; 0x17
    2ec4:	98 8d       	ldd	r25, Y+24	; 0x18
    2ec6:	20 e0       	ldi	r18, 0x00	; 0
    2ec8:	30 e0       	ldi	r19, 0x00	; 0
    2eca:	40 e8       	ldi	r20, 0x80	; 128
    2ecc:	5f e3       	ldi	r21, 0x3F	; 63
    2ece:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ed2:	88 23       	and	r24, r24
    2ed4:	2c f4       	brge	.+10     	; 0x2ee0 <stepper_void90Left+0x3ee>
		__ticks = 1;
    2ed6:	81 e0       	ldi	r24, 0x01	; 1
    2ed8:	90 e0       	ldi	r25, 0x00	; 0
    2eda:	9c 8b       	std	Y+20, r25	; 0x14
    2edc:	8b 8b       	std	Y+19, r24	; 0x13
    2ede:	3f c0       	rjmp	.+126    	; 0x2f5e <stepper_void90Left+0x46c>
	else if (__tmp > 65535)
    2ee0:	6d 89       	ldd	r22, Y+21	; 0x15
    2ee2:	7e 89       	ldd	r23, Y+22	; 0x16
    2ee4:	8f 89       	ldd	r24, Y+23	; 0x17
    2ee6:	98 8d       	ldd	r25, Y+24	; 0x18
    2ee8:	20 e0       	ldi	r18, 0x00	; 0
    2eea:	3f ef       	ldi	r19, 0xFF	; 255
    2eec:	4f e7       	ldi	r20, 0x7F	; 127
    2eee:	57 e4       	ldi	r21, 0x47	; 71
    2ef0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ef4:	18 16       	cp	r1, r24
    2ef6:	4c f5       	brge	.+82     	; 0x2f4a <stepper_void90Left+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ef8:	69 8d       	ldd	r22, Y+25	; 0x19
    2efa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2efc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2efe:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f00:	20 e0       	ldi	r18, 0x00	; 0
    2f02:	30 e0       	ldi	r19, 0x00	; 0
    2f04:	40 e2       	ldi	r20, 0x20	; 32
    2f06:	51 e4       	ldi	r21, 0x41	; 65
    2f08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f0c:	dc 01       	movw	r26, r24
    2f0e:	cb 01       	movw	r24, r22
    2f10:	bc 01       	movw	r22, r24
    2f12:	cd 01       	movw	r24, r26
    2f14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f18:	dc 01       	movw	r26, r24
    2f1a:	cb 01       	movw	r24, r22
    2f1c:	9c 8b       	std	Y+20, r25	; 0x14
    2f1e:	8b 8b       	std	Y+19, r24	; 0x13
    2f20:	0f c0       	rjmp	.+30     	; 0x2f40 <stepper_void90Left+0x44e>
    2f22:	8c e2       	ldi	r24, 0x2C	; 44
    2f24:	91 e0       	ldi	r25, 0x01	; 1
    2f26:	9a 8b       	std	Y+18, r25	; 0x12
    2f28:	89 8b       	std	Y+17, r24	; 0x11
    2f2a:	89 89       	ldd	r24, Y+17	; 0x11
    2f2c:	9a 89       	ldd	r25, Y+18	; 0x12
    2f2e:	01 97       	sbiw	r24, 0x01	; 1
    2f30:	f1 f7       	brne	.-4      	; 0x2f2e <stepper_void90Left+0x43c>
    2f32:	9a 8b       	std	Y+18, r25	; 0x12
    2f34:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f36:	8b 89       	ldd	r24, Y+19	; 0x13
    2f38:	9c 89       	ldd	r25, Y+20	; 0x14
    2f3a:	01 97       	sbiw	r24, 0x01	; 1
    2f3c:	9c 8b       	std	Y+20, r25	; 0x14
    2f3e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f40:	8b 89       	ldd	r24, Y+19	; 0x13
    2f42:	9c 89       	ldd	r25, Y+20	; 0x14
    2f44:	00 97       	sbiw	r24, 0x00	; 0
    2f46:	69 f7       	brne	.-38     	; 0x2f22 <stepper_void90Left+0x430>
    2f48:	14 c0       	rjmp	.+40     	; 0x2f72 <stepper_void90Left+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f4a:	6d 89       	ldd	r22, Y+21	; 0x15
    2f4c:	7e 89       	ldd	r23, Y+22	; 0x16
    2f4e:	8f 89       	ldd	r24, Y+23	; 0x17
    2f50:	98 8d       	ldd	r25, Y+24	; 0x18
    2f52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f56:	dc 01       	movw	r26, r24
    2f58:	cb 01       	movw	r24, r22
    2f5a:	9c 8b       	std	Y+20, r25	; 0x14
    2f5c:	8b 8b       	std	Y+19, r24	; 0x13
    2f5e:	8b 89       	ldd	r24, Y+19	; 0x13
    2f60:	9c 89       	ldd	r25, Y+20	; 0x14
    2f62:	98 8b       	std	Y+16, r25	; 0x10
    2f64:	8f 87       	std	Y+15, r24	; 0x0f
    2f66:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f68:	98 89       	ldd	r25, Y+16	; 0x10
    2f6a:	01 97       	sbiw	r24, 0x01	; 1
    2f6c:	f1 f7       	brne	.-4      	; 0x2f6a <stepper_void90Left+0x478>
    2f6e:	98 8b       	std	Y+16, r25	; 0x10
    2f70:	8f 87       	std	Y+15, r24	; 0x0f

}
void stepper_void90Left(void)
{
	u32 i;
	for( i=0;i<130;i++)
    2f72:	9e 01       	movw	r18, r28
    2f74:	29 5b       	subi	r18, 0xB9	; 185
    2f76:	3f 4f       	sbci	r19, 0xFF	; 255
    2f78:	fe 01       	movw	r30, r28
    2f7a:	e9 5b       	subi	r30, 0xB9	; 185
    2f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f7e:	80 81       	ld	r24, Z
    2f80:	91 81       	ldd	r25, Z+1	; 0x01
    2f82:	a2 81       	ldd	r26, Z+2	; 0x02
    2f84:	b3 81       	ldd	r27, Z+3	; 0x03
    2f86:	01 96       	adiw	r24, 0x01	; 1
    2f88:	a1 1d       	adc	r26, r1
    2f8a:	b1 1d       	adc	r27, r1
    2f8c:	f9 01       	movw	r30, r18
    2f8e:	80 83       	st	Z, r24
    2f90:	91 83       	std	Z+1, r25	; 0x01
    2f92:	a2 83       	std	Z+2, r26	; 0x02
    2f94:	b3 83       	std	Z+3, r27	; 0x03
    2f96:	fe 01       	movw	r30, r28
    2f98:	e9 5b       	subi	r30, 0xB9	; 185
    2f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9c:	80 81       	ld	r24, Z
    2f9e:	91 81       	ldd	r25, Z+1	; 0x01
    2fa0:	a2 81       	ldd	r26, Z+2	; 0x02
    2fa2:	b3 81       	ldd	r27, Z+3	; 0x03
    2fa4:	82 38       	cpi	r24, 0x82	; 130
    2fa6:	91 05       	cpc	r25, r1
    2fa8:	a1 05       	cpc	r26, r1
    2faa:	b1 05       	cpc	r27, r1
    2fac:	08 f4       	brcc	.+2      	; 0x2fb0 <stepper_void90Left+0x4be>
    2fae:	b6 cd       	rjmp	.-1172   	; 0x2b1c <stepper_void90Left+0x2a>
    2fb0:	80 e0       	ldi	r24, 0x00	; 0
    2fb2:	90 e0       	ldi	r25, 0x00	; 0
    2fb4:	aa e7       	ldi	r26, 0x7A	; 122
    2fb6:	b4 e4       	ldi	r27, 0x44	; 68
    2fb8:	8b 87       	std	Y+11, r24	; 0x0b
    2fba:	9c 87       	std	Y+12, r25	; 0x0c
    2fbc:	ad 87       	std	Y+13, r26	; 0x0d
    2fbe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fc0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fc2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fc4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fc6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fc8:	20 e0       	ldi	r18, 0x00	; 0
    2fca:	30 e8       	ldi	r19, 0x80	; 128
    2fcc:	4b e3       	ldi	r20, 0x3B	; 59
    2fce:	55 e4       	ldi	r21, 0x45	; 69
    2fd0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fd4:	dc 01       	movw	r26, r24
    2fd6:	cb 01       	movw	r24, r22
    2fd8:	8f 83       	std	Y+7, r24	; 0x07
    2fda:	98 87       	std	Y+8, r25	; 0x08
    2fdc:	a9 87       	std	Y+9, r26	; 0x09
    2fde:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2fe0:	6f 81       	ldd	r22, Y+7	; 0x07
    2fe2:	78 85       	ldd	r23, Y+8	; 0x08
    2fe4:	89 85       	ldd	r24, Y+9	; 0x09
    2fe6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fe8:	20 e0       	ldi	r18, 0x00	; 0
    2fea:	30 e0       	ldi	r19, 0x00	; 0
    2fec:	40 e8       	ldi	r20, 0x80	; 128
    2fee:	5f e3       	ldi	r21, 0x3F	; 63
    2ff0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ff4:	88 23       	and	r24, r24
    2ff6:	2c f4       	brge	.+10     	; 0x3002 <stepper_void90Left+0x510>
		__ticks = 1;
    2ff8:	81 e0       	ldi	r24, 0x01	; 1
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	9e 83       	std	Y+6, r25	; 0x06
    2ffe:	8d 83       	std	Y+5, r24	; 0x05
    3000:	3f c0       	rjmp	.+126    	; 0x3080 <stepper_void90Left+0x58e>
	else if (__tmp > 65535)
    3002:	6f 81       	ldd	r22, Y+7	; 0x07
    3004:	78 85       	ldd	r23, Y+8	; 0x08
    3006:	89 85       	ldd	r24, Y+9	; 0x09
    3008:	9a 85       	ldd	r25, Y+10	; 0x0a
    300a:	20 e0       	ldi	r18, 0x00	; 0
    300c:	3f ef       	ldi	r19, 0xFF	; 255
    300e:	4f e7       	ldi	r20, 0x7F	; 127
    3010:	57 e4       	ldi	r21, 0x47	; 71
    3012:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3016:	18 16       	cp	r1, r24
    3018:	4c f5       	brge	.+82     	; 0x306c <stepper_void90Left+0x57a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    301a:	6b 85       	ldd	r22, Y+11	; 0x0b
    301c:	7c 85       	ldd	r23, Y+12	; 0x0c
    301e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3020:	9e 85       	ldd	r25, Y+14	; 0x0e
    3022:	20 e0       	ldi	r18, 0x00	; 0
    3024:	30 e0       	ldi	r19, 0x00	; 0
    3026:	40 e2       	ldi	r20, 0x20	; 32
    3028:	51 e4       	ldi	r21, 0x41	; 65
    302a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    302e:	dc 01       	movw	r26, r24
    3030:	cb 01       	movw	r24, r22
    3032:	bc 01       	movw	r22, r24
    3034:	cd 01       	movw	r24, r26
    3036:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    303a:	dc 01       	movw	r26, r24
    303c:	cb 01       	movw	r24, r22
    303e:	9e 83       	std	Y+6, r25	; 0x06
    3040:	8d 83       	std	Y+5, r24	; 0x05
    3042:	0f c0       	rjmp	.+30     	; 0x3062 <stepper_void90Left+0x570>
    3044:	8c e2       	ldi	r24, 0x2C	; 44
    3046:	91 e0       	ldi	r25, 0x01	; 1
    3048:	9c 83       	std	Y+4, r25	; 0x04
    304a:	8b 83       	std	Y+3, r24	; 0x03
    304c:	8b 81       	ldd	r24, Y+3	; 0x03
    304e:	9c 81       	ldd	r25, Y+4	; 0x04
    3050:	01 97       	sbiw	r24, 0x01	; 1
    3052:	f1 f7       	brne	.-4      	; 0x3050 <stepper_void90Left+0x55e>
    3054:	9c 83       	std	Y+4, r25	; 0x04
    3056:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3058:	8d 81       	ldd	r24, Y+5	; 0x05
    305a:	9e 81       	ldd	r25, Y+6	; 0x06
    305c:	01 97       	sbiw	r24, 0x01	; 1
    305e:	9e 83       	std	Y+6, r25	; 0x06
    3060:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3062:	8d 81       	ldd	r24, Y+5	; 0x05
    3064:	9e 81       	ldd	r25, Y+6	; 0x06
    3066:	00 97       	sbiw	r24, 0x00	; 0
    3068:	69 f7       	brne	.-38     	; 0x3044 <stepper_void90Left+0x552>
    306a:	14 c0       	rjmp	.+40     	; 0x3094 <stepper_void90Left+0x5a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    306c:	6f 81       	ldd	r22, Y+7	; 0x07
    306e:	78 85       	ldd	r23, Y+8	; 0x08
    3070:	89 85       	ldd	r24, Y+9	; 0x09
    3072:	9a 85       	ldd	r25, Y+10	; 0x0a
    3074:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3078:	dc 01       	movw	r26, r24
    307a:	cb 01       	movw	r24, r22
    307c:	9e 83       	std	Y+6, r25	; 0x06
    307e:	8d 83       	std	Y+5, r24	; 0x05
    3080:	8d 81       	ldd	r24, Y+5	; 0x05
    3082:	9e 81       	ldd	r25, Y+6	; 0x06
    3084:	9a 83       	std	Y+2, r25	; 0x02
    3086:	89 83       	std	Y+1, r24	; 0x01
    3088:	89 81       	ldd	r24, Y+1	; 0x01
    308a:	9a 81       	ldd	r25, Y+2	; 0x02
    308c:	01 97       	sbiw	r24, 0x01	; 1
    308e:	f1 f7       	brne	.-4      	; 0x308c <stepper_void90Left+0x59a>
    3090:	9a 83       	std	Y+2, r25	; 0x02
    3092:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
			_delay_ms(2);
	}
	_delay_ms(1000);
}
    3094:	c6 5b       	subi	r28, 0xB6	; 182
    3096:	df 4f       	sbci	r29, 0xFF	; 255
    3098:	0f b6       	in	r0, 0x3f	; 63
    309a:	f8 94       	cli
    309c:	de bf       	out	0x3e, r29	; 62
    309e:	0f be       	out	0x3f, r0	; 63
    30a0:	cd bf       	out	0x3d, r28	; 61
    30a2:	cf 91       	pop	r28
    30a4:	df 91       	pop	r29
    30a6:	1f 91       	pop	r17
    30a8:	0f 91       	pop	r16
    30aa:	08 95       	ret

000030ac <stepper_void270Right>:
void stepper_void270Right(void)
{
    30ac:	0f 93       	push	r16
    30ae:	1f 93       	push	r17
    30b0:	df 93       	push	r29
    30b2:	cf 93       	push	r28
    30b4:	cd b7       	in	r28, 0x3d	; 61
    30b6:	de b7       	in	r29, 0x3e	; 62
    30b8:	ca 54       	subi	r28, 0x4A	; 74
    30ba:	d0 40       	sbci	r29, 0x00	; 0
    30bc:	0f b6       	in	r0, 0x3f	; 63
    30be:	f8 94       	cli
    30c0:	de bf       	out	0x3e, r29	; 62
    30c2:	0f be       	out	0x3f, r0	; 63
    30c4:	cd bf       	out	0x3d, r28	; 61
	u32 i;
	for( i=0;i<390;i++)
    30c6:	fe 01       	movw	r30, r28
    30c8:	e9 5b       	subi	r30, 0xB9	; 185
    30ca:	ff 4f       	sbci	r31, 0xFF	; 255
    30cc:	10 82       	st	Z, r1
    30ce:	11 82       	std	Z+1, r1	; 0x01
    30d0:	12 82       	std	Z+2, r1	; 0x02
    30d2:	13 82       	std	Z+3, r1	; 0x03
    30d4:	3d c2       	rjmp	.+1146   	; 0x3550 <stepper_void270Right+0x4a4>
	{
					DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    30d6:	82 e0       	ldi	r24, 0x02	; 2
    30d8:	60 e0       	ldi	r22, 0x00	; 0
    30da:	41 e0       	ldi	r20, 0x01	; 1
    30dc:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    30e0:	82 e0       	ldi	r24, 0x02	; 2
    30e2:	61 e0       	ldi	r22, 0x01	; 1
    30e4:	40 e0       	ldi	r20, 0x00	; 0
    30e6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    30ea:	82 e0       	ldi	r24, 0x02	; 2
    30ec:	62 e0       	ldi	r22, 0x02	; 2
    30ee:	40 e0       	ldi	r20, 0x00	; 0
    30f0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    30f4:	82 e0       	ldi	r24, 0x02	; 2
    30f6:	63 e0       	ldi	r22, 0x03	; 3
    30f8:	40 e0       	ldi	r20, 0x00	; 0
    30fa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    30fe:	fe 01       	movw	r30, r28
    3100:	ed 5b       	subi	r30, 0xBD	; 189
    3102:	ff 4f       	sbci	r31, 0xFF	; 255
    3104:	80 e0       	ldi	r24, 0x00	; 0
    3106:	90 e0       	ldi	r25, 0x00	; 0
    3108:	a0 e0       	ldi	r26, 0x00	; 0
    310a:	b0 e4       	ldi	r27, 0x40	; 64
    310c:	80 83       	st	Z, r24
    310e:	91 83       	std	Z+1, r25	; 0x01
    3110:	a2 83       	std	Z+2, r26	; 0x02
    3112:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3114:	8e 01       	movw	r16, r28
    3116:	01 5c       	subi	r16, 0xC1	; 193
    3118:	1f 4f       	sbci	r17, 0xFF	; 255
    311a:	fe 01       	movw	r30, r28
    311c:	ed 5b       	subi	r30, 0xBD	; 189
    311e:	ff 4f       	sbci	r31, 0xFF	; 255
    3120:	60 81       	ld	r22, Z
    3122:	71 81       	ldd	r23, Z+1	; 0x01
    3124:	82 81       	ldd	r24, Z+2	; 0x02
    3126:	93 81       	ldd	r25, Z+3	; 0x03
    3128:	20 e0       	ldi	r18, 0x00	; 0
    312a:	30 e8       	ldi	r19, 0x80	; 128
    312c:	4b e3       	ldi	r20, 0x3B	; 59
    312e:	55 e4       	ldi	r21, 0x45	; 69
    3130:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3134:	dc 01       	movw	r26, r24
    3136:	cb 01       	movw	r24, r22
    3138:	f8 01       	movw	r30, r16
    313a:	80 83       	st	Z, r24
    313c:	91 83       	std	Z+1, r25	; 0x01
    313e:	a2 83       	std	Z+2, r26	; 0x02
    3140:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3142:	fe 01       	movw	r30, r28
    3144:	ff 96       	adiw	r30, 0x3f	; 63
    3146:	60 81       	ld	r22, Z
    3148:	71 81       	ldd	r23, Z+1	; 0x01
    314a:	82 81       	ldd	r24, Z+2	; 0x02
    314c:	93 81       	ldd	r25, Z+3	; 0x03
    314e:	20 e0       	ldi	r18, 0x00	; 0
    3150:	30 e0       	ldi	r19, 0x00	; 0
    3152:	40 e8       	ldi	r20, 0x80	; 128
    3154:	5f e3       	ldi	r21, 0x3F	; 63
    3156:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    315a:	88 23       	and	r24, r24
    315c:	2c f4       	brge	.+10     	; 0x3168 <stepper_void270Right+0xbc>
		__ticks = 1;
    315e:	81 e0       	ldi	r24, 0x01	; 1
    3160:	90 e0       	ldi	r25, 0x00	; 0
    3162:	9e af       	std	Y+62, r25	; 0x3e
    3164:	8d af       	std	Y+61, r24	; 0x3d
    3166:	46 c0       	rjmp	.+140    	; 0x31f4 <stepper_void270Right+0x148>
	else if (__tmp > 65535)
    3168:	fe 01       	movw	r30, r28
    316a:	ff 96       	adiw	r30, 0x3f	; 63
    316c:	60 81       	ld	r22, Z
    316e:	71 81       	ldd	r23, Z+1	; 0x01
    3170:	82 81       	ldd	r24, Z+2	; 0x02
    3172:	93 81       	ldd	r25, Z+3	; 0x03
    3174:	20 e0       	ldi	r18, 0x00	; 0
    3176:	3f ef       	ldi	r19, 0xFF	; 255
    3178:	4f e7       	ldi	r20, 0x7F	; 127
    317a:	57 e4       	ldi	r21, 0x47	; 71
    317c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3180:	18 16       	cp	r1, r24
    3182:	64 f5       	brge	.+88     	; 0x31dc <stepper_void270Right+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3184:	fe 01       	movw	r30, r28
    3186:	ed 5b       	subi	r30, 0xBD	; 189
    3188:	ff 4f       	sbci	r31, 0xFF	; 255
    318a:	60 81       	ld	r22, Z
    318c:	71 81       	ldd	r23, Z+1	; 0x01
    318e:	82 81       	ldd	r24, Z+2	; 0x02
    3190:	93 81       	ldd	r25, Z+3	; 0x03
    3192:	20 e0       	ldi	r18, 0x00	; 0
    3194:	30 e0       	ldi	r19, 0x00	; 0
    3196:	40 e2       	ldi	r20, 0x20	; 32
    3198:	51 e4       	ldi	r21, 0x41	; 65
    319a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    319e:	dc 01       	movw	r26, r24
    31a0:	cb 01       	movw	r24, r22
    31a2:	bc 01       	movw	r22, r24
    31a4:	cd 01       	movw	r24, r26
    31a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31aa:	dc 01       	movw	r26, r24
    31ac:	cb 01       	movw	r24, r22
    31ae:	9e af       	std	Y+62, r25	; 0x3e
    31b0:	8d af       	std	Y+61, r24	; 0x3d
    31b2:	0f c0       	rjmp	.+30     	; 0x31d2 <stepper_void270Right+0x126>
    31b4:	8c e2       	ldi	r24, 0x2C	; 44
    31b6:	91 e0       	ldi	r25, 0x01	; 1
    31b8:	9c af       	std	Y+60, r25	; 0x3c
    31ba:	8b af       	std	Y+59, r24	; 0x3b
    31bc:	8b ad       	ldd	r24, Y+59	; 0x3b
    31be:	9c ad       	ldd	r25, Y+60	; 0x3c
    31c0:	01 97       	sbiw	r24, 0x01	; 1
    31c2:	f1 f7       	brne	.-4      	; 0x31c0 <stepper_void270Right+0x114>
    31c4:	9c af       	std	Y+60, r25	; 0x3c
    31c6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c8:	8d ad       	ldd	r24, Y+61	; 0x3d
    31ca:	9e ad       	ldd	r25, Y+62	; 0x3e
    31cc:	01 97       	sbiw	r24, 0x01	; 1
    31ce:	9e af       	std	Y+62, r25	; 0x3e
    31d0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31d2:	8d ad       	ldd	r24, Y+61	; 0x3d
    31d4:	9e ad       	ldd	r25, Y+62	; 0x3e
    31d6:	00 97       	sbiw	r24, 0x00	; 0
    31d8:	69 f7       	brne	.-38     	; 0x31b4 <stepper_void270Right+0x108>
    31da:	16 c0       	rjmp	.+44     	; 0x3208 <stepper_void270Right+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31dc:	fe 01       	movw	r30, r28
    31de:	ff 96       	adiw	r30, 0x3f	; 63
    31e0:	60 81       	ld	r22, Z
    31e2:	71 81       	ldd	r23, Z+1	; 0x01
    31e4:	82 81       	ldd	r24, Z+2	; 0x02
    31e6:	93 81       	ldd	r25, Z+3	; 0x03
    31e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31ec:	dc 01       	movw	r26, r24
    31ee:	cb 01       	movw	r24, r22
    31f0:	9e af       	std	Y+62, r25	; 0x3e
    31f2:	8d af       	std	Y+61, r24	; 0x3d
    31f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    31f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    31f8:	9a af       	std	Y+58, r25	; 0x3a
    31fa:	89 af       	std	Y+57, r24	; 0x39
    31fc:	89 ad       	ldd	r24, Y+57	; 0x39
    31fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    3200:	01 97       	sbiw	r24, 0x01	; 1
    3202:	f1 f7       	brne	.-4      	; 0x3200 <stepper_void270Right+0x154>
    3204:	9a af       	std	Y+58, r25	; 0x3a
    3206:	89 af       	std	Y+57, r24	; 0x39
					_delay_ms(2);

					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    3208:	82 e0       	ldi	r24, 0x02	; 2
    320a:	60 e0       	ldi	r22, 0x00	; 0
    320c:	40 e0       	ldi	r20, 0x00	; 0
    320e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    3212:	82 e0       	ldi	r24, 0x02	; 2
    3214:	61 e0       	ldi	r22, 0x01	; 1
    3216:	41 e0       	ldi	r20, 0x01	; 1
    3218:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    321c:	82 e0       	ldi	r24, 0x02	; 2
    321e:	62 e0       	ldi	r22, 0x02	; 2
    3220:	40 e0       	ldi	r20, 0x00	; 0
    3222:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    3226:	82 e0       	ldi	r24, 0x02	; 2
    3228:	63 e0       	ldi	r22, 0x03	; 3
    322a:	40 e0       	ldi	r20, 0x00	; 0
    322c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    3230:	80 e0       	ldi	r24, 0x00	; 0
    3232:	90 e0       	ldi	r25, 0x00	; 0
    3234:	a0 e0       	ldi	r26, 0x00	; 0
    3236:	b0 e4       	ldi	r27, 0x40	; 64
    3238:	8d ab       	std	Y+53, r24	; 0x35
    323a:	9e ab       	std	Y+54, r25	; 0x36
    323c:	af ab       	std	Y+55, r26	; 0x37
    323e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3240:	6d a9       	ldd	r22, Y+53	; 0x35
    3242:	7e a9       	ldd	r23, Y+54	; 0x36
    3244:	8f a9       	ldd	r24, Y+55	; 0x37
    3246:	98 ad       	ldd	r25, Y+56	; 0x38
    3248:	20 e0       	ldi	r18, 0x00	; 0
    324a:	30 e8       	ldi	r19, 0x80	; 128
    324c:	4b e3       	ldi	r20, 0x3B	; 59
    324e:	55 e4       	ldi	r21, 0x45	; 69
    3250:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3254:	dc 01       	movw	r26, r24
    3256:	cb 01       	movw	r24, r22
    3258:	89 ab       	std	Y+49, r24	; 0x31
    325a:	9a ab       	std	Y+50, r25	; 0x32
    325c:	ab ab       	std	Y+51, r26	; 0x33
    325e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3260:	69 a9       	ldd	r22, Y+49	; 0x31
    3262:	7a a9       	ldd	r23, Y+50	; 0x32
    3264:	8b a9       	ldd	r24, Y+51	; 0x33
    3266:	9c a9       	ldd	r25, Y+52	; 0x34
    3268:	20 e0       	ldi	r18, 0x00	; 0
    326a:	30 e0       	ldi	r19, 0x00	; 0
    326c:	40 e8       	ldi	r20, 0x80	; 128
    326e:	5f e3       	ldi	r21, 0x3F	; 63
    3270:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3274:	88 23       	and	r24, r24
    3276:	2c f4       	brge	.+10     	; 0x3282 <stepper_void270Right+0x1d6>
		__ticks = 1;
    3278:	81 e0       	ldi	r24, 0x01	; 1
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	98 ab       	std	Y+48, r25	; 0x30
    327e:	8f a7       	std	Y+47, r24	; 0x2f
    3280:	3f c0       	rjmp	.+126    	; 0x3300 <stepper_void270Right+0x254>
	else if (__tmp > 65535)
    3282:	69 a9       	ldd	r22, Y+49	; 0x31
    3284:	7a a9       	ldd	r23, Y+50	; 0x32
    3286:	8b a9       	ldd	r24, Y+51	; 0x33
    3288:	9c a9       	ldd	r25, Y+52	; 0x34
    328a:	20 e0       	ldi	r18, 0x00	; 0
    328c:	3f ef       	ldi	r19, 0xFF	; 255
    328e:	4f e7       	ldi	r20, 0x7F	; 127
    3290:	57 e4       	ldi	r21, 0x47	; 71
    3292:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3296:	18 16       	cp	r1, r24
    3298:	4c f5       	brge	.+82     	; 0x32ec <stepper_void270Right+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    329a:	6d a9       	ldd	r22, Y+53	; 0x35
    329c:	7e a9       	ldd	r23, Y+54	; 0x36
    329e:	8f a9       	ldd	r24, Y+55	; 0x37
    32a0:	98 ad       	ldd	r25, Y+56	; 0x38
    32a2:	20 e0       	ldi	r18, 0x00	; 0
    32a4:	30 e0       	ldi	r19, 0x00	; 0
    32a6:	40 e2       	ldi	r20, 0x20	; 32
    32a8:	51 e4       	ldi	r21, 0x41	; 65
    32aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32ae:	dc 01       	movw	r26, r24
    32b0:	cb 01       	movw	r24, r22
    32b2:	bc 01       	movw	r22, r24
    32b4:	cd 01       	movw	r24, r26
    32b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32ba:	dc 01       	movw	r26, r24
    32bc:	cb 01       	movw	r24, r22
    32be:	98 ab       	std	Y+48, r25	; 0x30
    32c0:	8f a7       	std	Y+47, r24	; 0x2f
    32c2:	0f c0       	rjmp	.+30     	; 0x32e2 <stepper_void270Right+0x236>
    32c4:	8c e2       	ldi	r24, 0x2C	; 44
    32c6:	91 e0       	ldi	r25, 0x01	; 1
    32c8:	9e a7       	std	Y+46, r25	; 0x2e
    32ca:	8d a7       	std	Y+45, r24	; 0x2d
    32cc:	8d a5       	ldd	r24, Y+45	; 0x2d
    32ce:	9e a5       	ldd	r25, Y+46	; 0x2e
    32d0:	01 97       	sbiw	r24, 0x01	; 1
    32d2:	f1 f7       	brne	.-4      	; 0x32d0 <stepper_void270Right+0x224>
    32d4:	9e a7       	std	Y+46, r25	; 0x2e
    32d6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32d8:	8f a5       	ldd	r24, Y+47	; 0x2f
    32da:	98 a9       	ldd	r25, Y+48	; 0x30
    32dc:	01 97       	sbiw	r24, 0x01	; 1
    32de:	98 ab       	std	Y+48, r25	; 0x30
    32e0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32e2:	8f a5       	ldd	r24, Y+47	; 0x2f
    32e4:	98 a9       	ldd	r25, Y+48	; 0x30
    32e6:	00 97       	sbiw	r24, 0x00	; 0
    32e8:	69 f7       	brne	.-38     	; 0x32c4 <stepper_void270Right+0x218>
    32ea:	14 c0       	rjmp	.+40     	; 0x3314 <stepper_void270Right+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32ec:	69 a9       	ldd	r22, Y+49	; 0x31
    32ee:	7a a9       	ldd	r23, Y+50	; 0x32
    32f0:	8b a9       	ldd	r24, Y+51	; 0x33
    32f2:	9c a9       	ldd	r25, Y+52	; 0x34
    32f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32f8:	dc 01       	movw	r26, r24
    32fa:	cb 01       	movw	r24, r22
    32fc:	98 ab       	std	Y+48, r25	; 0x30
    32fe:	8f a7       	std	Y+47, r24	; 0x2f
    3300:	8f a5       	ldd	r24, Y+47	; 0x2f
    3302:	98 a9       	ldd	r25, Y+48	; 0x30
    3304:	9c a7       	std	Y+44, r25	; 0x2c
    3306:	8b a7       	std	Y+43, r24	; 0x2b
    3308:	8b a5       	ldd	r24, Y+43	; 0x2b
    330a:	9c a5       	ldd	r25, Y+44	; 0x2c
    330c:	01 97       	sbiw	r24, 0x01	; 1
    330e:	f1 f7       	brne	.-4      	; 0x330c <stepper_void270Right+0x260>
    3310:	9c a7       	std	Y+44, r25	; 0x2c
    3312:	8b a7       	std	Y+43, r24	; 0x2b
					_delay_ms(2);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    3314:	82 e0       	ldi	r24, 0x02	; 2
    3316:	60 e0       	ldi	r22, 0x00	; 0
    3318:	40 e0       	ldi	r20, 0x00	; 0
    331a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    331e:	82 e0       	ldi	r24, 0x02	; 2
    3320:	61 e0       	ldi	r22, 0x01	; 1
    3322:	40 e0       	ldi	r20, 0x00	; 0
    3324:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    3328:	82 e0       	ldi	r24, 0x02	; 2
    332a:	62 e0       	ldi	r22, 0x02	; 2
    332c:	41 e0       	ldi	r20, 0x01	; 1
    332e:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    3332:	82 e0       	ldi	r24, 0x02	; 2
    3334:	63 e0       	ldi	r22, 0x03	; 3
    3336:	40 e0       	ldi	r20, 0x00	; 0
    3338:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    333c:	80 e0       	ldi	r24, 0x00	; 0
    333e:	90 e0       	ldi	r25, 0x00	; 0
    3340:	a0 e0       	ldi	r26, 0x00	; 0
    3342:	b0 e4       	ldi	r27, 0x40	; 64
    3344:	8f a3       	std	Y+39, r24	; 0x27
    3346:	98 a7       	std	Y+40, r25	; 0x28
    3348:	a9 a7       	std	Y+41, r26	; 0x29
    334a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    334c:	6f a1       	ldd	r22, Y+39	; 0x27
    334e:	78 a5       	ldd	r23, Y+40	; 0x28
    3350:	89 a5       	ldd	r24, Y+41	; 0x29
    3352:	9a a5       	ldd	r25, Y+42	; 0x2a
    3354:	20 e0       	ldi	r18, 0x00	; 0
    3356:	30 e8       	ldi	r19, 0x80	; 128
    3358:	4b e3       	ldi	r20, 0x3B	; 59
    335a:	55 e4       	ldi	r21, 0x45	; 69
    335c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3360:	dc 01       	movw	r26, r24
    3362:	cb 01       	movw	r24, r22
    3364:	8b a3       	std	Y+35, r24	; 0x23
    3366:	9c a3       	std	Y+36, r25	; 0x24
    3368:	ad a3       	std	Y+37, r26	; 0x25
    336a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    336c:	6b a1       	ldd	r22, Y+35	; 0x23
    336e:	7c a1       	ldd	r23, Y+36	; 0x24
    3370:	8d a1       	ldd	r24, Y+37	; 0x25
    3372:	9e a1       	ldd	r25, Y+38	; 0x26
    3374:	20 e0       	ldi	r18, 0x00	; 0
    3376:	30 e0       	ldi	r19, 0x00	; 0
    3378:	40 e8       	ldi	r20, 0x80	; 128
    337a:	5f e3       	ldi	r21, 0x3F	; 63
    337c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3380:	88 23       	and	r24, r24
    3382:	2c f4       	brge	.+10     	; 0x338e <stepper_void270Right+0x2e2>
		__ticks = 1;
    3384:	81 e0       	ldi	r24, 0x01	; 1
    3386:	90 e0       	ldi	r25, 0x00	; 0
    3388:	9a a3       	std	Y+34, r25	; 0x22
    338a:	89 a3       	std	Y+33, r24	; 0x21
    338c:	3f c0       	rjmp	.+126    	; 0x340c <stepper_void270Right+0x360>
	else if (__tmp > 65535)
    338e:	6b a1       	ldd	r22, Y+35	; 0x23
    3390:	7c a1       	ldd	r23, Y+36	; 0x24
    3392:	8d a1       	ldd	r24, Y+37	; 0x25
    3394:	9e a1       	ldd	r25, Y+38	; 0x26
    3396:	20 e0       	ldi	r18, 0x00	; 0
    3398:	3f ef       	ldi	r19, 0xFF	; 255
    339a:	4f e7       	ldi	r20, 0x7F	; 127
    339c:	57 e4       	ldi	r21, 0x47	; 71
    339e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    33a2:	18 16       	cp	r1, r24
    33a4:	4c f5       	brge	.+82     	; 0x33f8 <stepper_void270Right+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33a6:	6f a1       	ldd	r22, Y+39	; 0x27
    33a8:	78 a5       	ldd	r23, Y+40	; 0x28
    33aa:	89 a5       	ldd	r24, Y+41	; 0x29
    33ac:	9a a5       	ldd	r25, Y+42	; 0x2a
    33ae:	20 e0       	ldi	r18, 0x00	; 0
    33b0:	30 e0       	ldi	r19, 0x00	; 0
    33b2:	40 e2       	ldi	r20, 0x20	; 32
    33b4:	51 e4       	ldi	r21, 0x41	; 65
    33b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33ba:	dc 01       	movw	r26, r24
    33bc:	cb 01       	movw	r24, r22
    33be:	bc 01       	movw	r22, r24
    33c0:	cd 01       	movw	r24, r26
    33c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33c6:	dc 01       	movw	r26, r24
    33c8:	cb 01       	movw	r24, r22
    33ca:	9a a3       	std	Y+34, r25	; 0x22
    33cc:	89 a3       	std	Y+33, r24	; 0x21
    33ce:	0f c0       	rjmp	.+30     	; 0x33ee <stepper_void270Right+0x342>
    33d0:	8c e2       	ldi	r24, 0x2C	; 44
    33d2:	91 e0       	ldi	r25, 0x01	; 1
    33d4:	98 a3       	std	Y+32, r25	; 0x20
    33d6:	8f 8f       	std	Y+31, r24	; 0x1f
    33d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    33da:	98 a1       	ldd	r25, Y+32	; 0x20
    33dc:	01 97       	sbiw	r24, 0x01	; 1
    33de:	f1 f7       	brne	.-4      	; 0x33dc <stepper_void270Right+0x330>
    33e0:	98 a3       	std	Y+32, r25	; 0x20
    33e2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33e4:	89 a1       	ldd	r24, Y+33	; 0x21
    33e6:	9a a1       	ldd	r25, Y+34	; 0x22
    33e8:	01 97       	sbiw	r24, 0x01	; 1
    33ea:	9a a3       	std	Y+34, r25	; 0x22
    33ec:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33ee:	89 a1       	ldd	r24, Y+33	; 0x21
    33f0:	9a a1       	ldd	r25, Y+34	; 0x22
    33f2:	00 97       	sbiw	r24, 0x00	; 0
    33f4:	69 f7       	brne	.-38     	; 0x33d0 <stepper_void270Right+0x324>
    33f6:	14 c0       	rjmp	.+40     	; 0x3420 <stepper_void270Right+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33f8:	6b a1       	ldd	r22, Y+35	; 0x23
    33fa:	7c a1       	ldd	r23, Y+36	; 0x24
    33fc:	8d a1       	ldd	r24, Y+37	; 0x25
    33fe:	9e a1       	ldd	r25, Y+38	; 0x26
    3400:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	9a a3       	std	Y+34, r25	; 0x22
    340a:	89 a3       	std	Y+33, r24	; 0x21
    340c:	89 a1       	ldd	r24, Y+33	; 0x21
    340e:	9a a1       	ldd	r25, Y+34	; 0x22
    3410:	9e 8f       	std	Y+30, r25	; 0x1e
    3412:	8d 8f       	std	Y+29, r24	; 0x1d
    3414:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3416:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3418:	01 97       	sbiw	r24, 0x01	; 1
    341a:	f1 f7       	brne	.-4      	; 0x3418 <stepper_void270Right+0x36c>
    341c:	9e 8f       	std	Y+30, r25	; 0x1e
    341e:	8d 8f       	std	Y+29, r24	; 0x1d
					_delay_ms(2);
					DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    3420:	82 e0       	ldi	r24, 0x02	; 2
    3422:	60 e0       	ldi	r22, 0x00	; 0
    3424:	40 e0       	ldi	r20, 0x00	; 0
    3426:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    342a:	82 e0       	ldi	r24, 0x02	; 2
    342c:	61 e0       	ldi	r22, 0x01	; 1
    342e:	40 e0       	ldi	r20, 0x00	; 0
    3430:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    3434:	82 e0       	ldi	r24, 0x02	; 2
    3436:	62 e0       	ldi	r22, 0x02	; 2
    3438:	40 e0       	ldi	r20, 0x00	; 0
    343a:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    343e:	82 e0       	ldi	r24, 0x02	; 2
    3440:	63 e0       	ldi	r22, 0x03	; 3
    3442:	41 e0       	ldi	r20, 0x01	; 1
    3444:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    3448:	80 e0       	ldi	r24, 0x00	; 0
    344a:	90 e0       	ldi	r25, 0x00	; 0
    344c:	a0 e0       	ldi	r26, 0x00	; 0
    344e:	b0 e4       	ldi	r27, 0x40	; 64
    3450:	89 8f       	std	Y+25, r24	; 0x19
    3452:	9a 8f       	std	Y+26, r25	; 0x1a
    3454:	ab 8f       	std	Y+27, r26	; 0x1b
    3456:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3458:	69 8d       	ldd	r22, Y+25	; 0x19
    345a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    345c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    345e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3460:	20 e0       	ldi	r18, 0x00	; 0
    3462:	30 e8       	ldi	r19, 0x80	; 128
    3464:	4b e3       	ldi	r20, 0x3B	; 59
    3466:	55 e4       	ldi	r21, 0x45	; 69
    3468:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    346c:	dc 01       	movw	r26, r24
    346e:	cb 01       	movw	r24, r22
    3470:	8d 8b       	std	Y+21, r24	; 0x15
    3472:	9e 8b       	std	Y+22, r25	; 0x16
    3474:	af 8b       	std	Y+23, r26	; 0x17
    3476:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3478:	6d 89       	ldd	r22, Y+21	; 0x15
    347a:	7e 89       	ldd	r23, Y+22	; 0x16
    347c:	8f 89       	ldd	r24, Y+23	; 0x17
    347e:	98 8d       	ldd	r25, Y+24	; 0x18
    3480:	20 e0       	ldi	r18, 0x00	; 0
    3482:	30 e0       	ldi	r19, 0x00	; 0
    3484:	40 e8       	ldi	r20, 0x80	; 128
    3486:	5f e3       	ldi	r21, 0x3F	; 63
    3488:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    348c:	88 23       	and	r24, r24
    348e:	2c f4       	brge	.+10     	; 0x349a <stepper_void270Right+0x3ee>
		__ticks = 1;
    3490:	81 e0       	ldi	r24, 0x01	; 1
    3492:	90 e0       	ldi	r25, 0x00	; 0
    3494:	9c 8b       	std	Y+20, r25	; 0x14
    3496:	8b 8b       	std	Y+19, r24	; 0x13
    3498:	3f c0       	rjmp	.+126    	; 0x3518 <stepper_void270Right+0x46c>
	else if (__tmp > 65535)
    349a:	6d 89       	ldd	r22, Y+21	; 0x15
    349c:	7e 89       	ldd	r23, Y+22	; 0x16
    349e:	8f 89       	ldd	r24, Y+23	; 0x17
    34a0:	98 8d       	ldd	r25, Y+24	; 0x18
    34a2:	20 e0       	ldi	r18, 0x00	; 0
    34a4:	3f ef       	ldi	r19, 0xFF	; 255
    34a6:	4f e7       	ldi	r20, 0x7F	; 127
    34a8:	57 e4       	ldi	r21, 0x47	; 71
    34aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34ae:	18 16       	cp	r1, r24
    34b0:	4c f5       	brge	.+82     	; 0x3504 <stepper_void270Right+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34b2:	69 8d       	ldd	r22, Y+25	; 0x19
    34b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    34b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    34b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    34ba:	20 e0       	ldi	r18, 0x00	; 0
    34bc:	30 e0       	ldi	r19, 0x00	; 0
    34be:	40 e2       	ldi	r20, 0x20	; 32
    34c0:	51 e4       	ldi	r21, 0x41	; 65
    34c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34c6:	dc 01       	movw	r26, r24
    34c8:	cb 01       	movw	r24, r22
    34ca:	bc 01       	movw	r22, r24
    34cc:	cd 01       	movw	r24, r26
    34ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	9c 8b       	std	Y+20, r25	; 0x14
    34d8:	8b 8b       	std	Y+19, r24	; 0x13
    34da:	0f c0       	rjmp	.+30     	; 0x34fa <stepper_void270Right+0x44e>
    34dc:	8c e2       	ldi	r24, 0x2C	; 44
    34de:	91 e0       	ldi	r25, 0x01	; 1
    34e0:	9a 8b       	std	Y+18, r25	; 0x12
    34e2:	89 8b       	std	Y+17, r24	; 0x11
    34e4:	89 89       	ldd	r24, Y+17	; 0x11
    34e6:	9a 89       	ldd	r25, Y+18	; 0x12
    34e8:	01 97       	sbiw	r24, 0x01	; 1
    34ea:	f1 f7       	brne	.-4      	; 0x34e8 <stepper_void270Right+0x43c>
    34ec:	9a 8b       	std	Y+18, r25	; 0x12
    34ee:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34f0:	8b 89       	ldd	r24, Y+19	; 0x13
    34f2:	9c 89       	ldd	r25, Y+20	; 0x14
    34f4:	01 97       	sbiw	r24, 0x01	; 1
    34f6:	9c 8b       	std	Y+20, r25	; 0x14
    34f8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34fa:	8b 89       	ldd	r24, Y+19	; 0x13
    34fc:	9c 89       	ldd	r25, Y+20	; 0x14
    34fe:	00 97       	sbiw	r24, 0x00	; 0
    3500:	69 f7       	brne	.-38     	; 0x34dc <stepper_void270Right+0x430>
    3502:	14 c0       	rjmp	.+40     	; 0x352c <stepper_void270Right+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3504:	6d 89       	ldd	r22, Y+21	; 0x15
    3506:	7e 89       	ldd	r23, Y+22	; 0x16
    3508:	8f 89       	ldd	r24, Y+23	; 0x17
    350a:	98 8d       	ldd	r25, Y+24	; 0x18
    350c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3510:	dc 01       	movw	r26, r24
    3512:	cb 01       	movw	r24, r22
    3514:	9c 8b       	std	Y+20, r25	; 0x14
    3516:	8b 8b       	std	Y+19, r24	; 0x13
    3518:	8b 89       	ldd	r24, Y+19	; 0x13
    351a:	9c 89       	ldd	r25, Y+20	; 0x14
    351c:	98 8b       	std	Y+16, r25	; 0x10
    351e:	8f 87       	std	Y+15, r24	; 0x0f
    3520:	8f 85       	ldd	r24, Y+15	; 0x0f
    3522:	98 89       	ldd	r25, Y+16	; 0x10
    3524:	01 97       	sbiw	r24, 0x01	; 1
    3526:	f1 f7       	brne	.-4      	; 0x3524 <stepper_void270Right+0x478>
    3528:	98 8b       	std	Y+16, r25	; 0x10
    352a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1000);
}
void stepper_void270Right(void)
{
	u32 i;
	for( i=0;i<390;i++)
    352c:	9e 01       	movw	r18, r28
    352e:	29 5b       	subi	r18, 0xB9	; 185
    3530:	3f 4f       	sbci	r19, 0xFF	; 255
    3532:	fe 01       	movw	r30, r28
    3534:	e9 5b       	subi	r30, 0xB9	; 185
    3536:	ff 4f       	sbci	r31, 0xFF	; 255
    3538:	80 81       	ld	r24, Z
    353a:	91 81       	ldd	r25, Z+1	; 0x01
    353c:	a2 81       	ldd	r26, Z+2	; 0x02
    353e:	b3 81       	ldd	r27, Z+3	; 0x03
    3540:	01 96       	adiw	r24, 0x01	; 1
    3542:	a1 1d       	adc	r26, r1
    3544:	b1 1d       	adc	r27, r1
    3546:	f9 01       	movw	r30, r18
    3548:	80 83       	st	Z, r24
    354a:	91 83       	std	Z+1, r25	; 0x01
    354c:	a2 83       	std	Z+2, r26	; 0x02
    354e:	b3 83       	std	Z+3, r27	; 0x03
    3550:	fe 01       	movw	r30, r28
    3552:	e9 5b       	subi	r30, 0xB9	; 185
    3554:	ff 4f       	sbci	r31, 0xFF	; 255
    3556:	80 81       	ld	r24, Z
    3558:	91 81       	ldd	r25, Z+1	; 0x01
    355a:	a2 81       	ldd	r26, Z+2	; 0x02
    355c:	b3 81       	ldd	r27, Z+3	; 0x03
    355e:	86 38       	cpi	r24, 0x86	; 134
    3560:	f1 e0       	ldi	r31, 0x01	; 1
    3562:	9f 07       	cpc	r25, r31
    3564:	f0 e0       	ldi	r31, 0x00	; 0
    3566:	af 07       	cpc	r26, r31
    3568:	f0 e0       	ldi	r31, 0x00	; 0
    356a:	bf 07       	cpc	r27, r31
    356c:	08 f4       	brcc	.+2      	; 0x3570 <stepper_void270Right+0x4c4>
    356e:	b3 cd       	rjmp	.-1178   	; 0x30d6 <stepper_void270Right+0x2a>
    3570:	80 e0       	ldi	r24, 0x00	; 0
    3572:	90 e0       	ldi	r25, 0x00	; 0
    3574:	aa e7       	ldi	r26, 0x7A	; 122
    3576:	b4 e4       	ldi	r27, 0x44	; 68
    3578:	8b 87       	std	Y+11, r24	; 0x0b
    357a:	9c 87       	std	Y+12, r25	; 0x0c
    357c:	ad 87       	std	Y+13, r26	; 0x0d
    357e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3580:	6b 85       	ldd	r22, Y+11	; 0x0b
    3582:	7c 85       	ldd	r23, Y+12	; 0x0c
    3584:	8d 85       	ldd	r24, Y+13	; 0x0d
    3586:	9e 85       	ldd	r25, Y+14	; 0x0e
    3588:	20 e0       	ldi	r18, 0x00	; 0
    358a:	30 e8       	ldi	r19, 0x80	; 128
    358c:	4b e3       	ldi	r20, 0x3B	; 59
    358e:	55 e4       	ldi	r21, 0x45	; 69
    3590:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3594:	dc 01       	movw	r26, r24
    3596:	cb 01       	movw	r24, r22
    3598:	8f 83       	std	Y+7, r24	; 0x07
    359a:	98 87       	std	Y+8, r25	; 0x08
    359c:	a9 87       	std	Y+9, r26	; 0x09
    359e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    35a0:	6f 81       	ldd	r22, Y+7	; 0x07
    35a2:	78 85       	ldd	r23, Y+8	; 0x08
    35a4:	89 85       	ldd	r24, Y+9	; 0x09
    35a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    35a8:	20 e0       	ldi	r18, 0x00	; 0
    35aa:	30 e0       	ldi	r19, 0x00	; 0
    35ac:	40 e8       	ldi	r20, 0x80	; 128
    35ae:	5f e3       	ldi	r21, 0x3F	; 63
    35b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35b4:	88 23       	and	r24, r24
    35b6:	2c f4       	brge	.+10     	; 0x35c2 <stepper_void270Right+0x516>
		__ticks = 1;
    35b8:	81 e0       	ldi	r24, 0x01	; 1
    35ba:	90 e0       	ldi	r25, 0x00	; 0
    35bc:	9e 83       	std	Y+6, r25	; 0x06
    35be:	8d 83       	std	Y+5, r24	; 0x05
    35c0:	3f c0       	rjmp	.+126    	; 0x3640 <stepper_void270Right+0x594>
	else if (__tmp > 65535)
    35c2:	6f 81       	ldd	r22, Y+7	; 0x07
    35c4:	78 85       	ldd	r23, Y+8	; 0x08
    35c6:	89 85       	ldd	r24, Y+9	; 0x09
    35c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    35ca:	20 e0       	ldi	r18, 0x00	; 0
    35cc:	3f ef       	ldi	r19, 0xFF	; 255
    35ce:	4f e7       	ldi	r20, 0x7F	; 127
    35d0:	57 e4       	ldi	r21, 0x47	; 71
    35d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35d6:	18 16       	cp	r1, r24
    35d8:	4c f5       	brge	.+82     	; 0x362c <stepper_void270Right+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35da:	6b 85       	ldd	r22, Y+11	; 0x0b
    35dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    35de:	8d 85       	ldd	r24, Y+13	; 0x0d
    35e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    35e2:	20 e0       	ldi	r18, 0x00	; 0
    35e4:	30 e0       	ldi	r19, 0x00	; 0
    35e6:	40 e2       	ldi	r20, 0x20	; 32
    35e8:	51 e4       	ldi	r21, 0x41	; 65
    35ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35ee:	dc 01       	movw	r26, r24
    35f0:	cb 01       	movw	r24, r22
    35f2:	bc 01       	movw	r22, r24
    35f4:	cd 01       	movw	r24, r26
    35f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35fa:	dc 01       	movw	r26, r24
    35fc:	cb 01       	movw	r24, r22
    35fe:	9e 83       	std	Y+6, r25	; 0x06
    3600:	8d 83       	std	Y+5, r24	; 0x05
    3602:	0f c0       	rjmp	.+30     	; 0x3622 <stepper_void270Right+0x576>
    3604:	8c e2       	ldi	r24, 0x2C	; 44
    3606:	91 e0       	ldi	r25, 0x01	; 1
    3608:	9c 83       	std	Y+4, r25	; 0x04
    360a:	8b 83       	std	Y+3, r24	; 0x03
    360c:	8b 81       	ldd	r24, Y+3	; 0x03
    360e:	9c 81       	ldd	r25, Y+4	; 0x04
    3610:	01 97       	sbiw	r24, 0x01	; 1
    3612:	f1 f7       	brne	.-4      	; 0x3610 <stepper_void270Right+0x564>
    3614:	9c 83       	std	Y+4, r25	; 0x04
    3616:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3618:	8d 81       	ldd	r24, Y+5	; 0x05
    361a:	9e 81       	ldd	r25, Y+6	; 0x06
    361c:	01 97       	sbiw	r24, 0x01	; 1
    361e:	9e 83       	std	Y+6, r25	; 0x06
    3620:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3622:	8d 81       	ldd	r24, Y+5	; 0x05
    3624:	9e 81       	ldd	r25, Y+6	; 0x06
    3626:	00 97       	sbiw	r24, 0x00	; 0
    3628:	69 f7       	brne	.-38     	; 0x3604 <stepper_void270Right+0x558>
    362a:	14 c0       	rjmp	.+40     	; 0x3654 <stepper_void270Right+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    362c:	6f 81       	ldd	r22, Y+7	; 0x07
    362e:	78 85       	ldd	r23, Y+8	; 0x08
    3630:	89 85       	ldd	r24, Y+9	; 0x09
    3632:	9a 85       	ldd	r25, Y+10	; 0x0a
    3634:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3638:	dc 01       	movw	r26, r24
    363a:	cb 01       	movw	r24, r22
    363c:	9e 83       	std	Y+6, r25	; 0x06
    363e:	8d 83       	std	Y+5, r24	; 0x05
    3640:	8d 81       	ldd	r24, Y+5	; 0x05
    3642:	9e 81       	ldd	r25, Y+6	; 0x06
    3644:	9a 83       	std	Y+2, r25	; 0x02
    3646:	89 83       	std	Y+1, r24	; 0x01
    3648:	89 81       	ldd	r24, Y+1	; 0x01
    364a:	9a 81       	ldd	r25, Y+2	; 0x02
    364c:	01 97       	sbiw	r24, 0x01	; 1
    364e:	f1 f7       	brne	.-4      	; 0x364c <stepper_void270Right+0x5a0>
    3650:	9a 83       	std	Y+2, r25	; 0x02
    3652:	89 83       	std	Y+1, r24	; 0x01
					DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
					_delay_ms(2);
				}
	_delay_ms(1000);

}
    3654:	c6 5b       	subi	r28, 0xB6	; 182
    3656:	df 4f       	sbci	r29, 0xFF	; 255
    3658:	0f b6       	in	r0, 0x3f	; 63
    365a:	f8 94       	cli
    365c:	de bf       	out	0x3e, r29	; 62
    365e:	0f be       	out	0x3f, r0	; 63
    3660:	cd bf       	out	0x3d, r28	; 61
    3662:	cf 91       	pop	r28
    3664:	df 91       	pop	r29
    3666:	1f 91       	pop	r17
    3668:	0f 91       	pop	r16
    366a:	08 95       	ret

0000366c <stepper_void270Left>:
void stepper_void270Left(void)
{
    366c:	0f 93       	push	r16
    366e:	1f 93       	push	r17
    3670:	df 93       	push	r29
    3672:	cf 93       	push	r28
    3674:	cd b7       	in	r28, 0x3d	; 61
    3676:	de b7       	in	r29, 0x3e	; 62
    3678:	ca 54       	subi	r28, 0x4A	; 74
    367a:	d0 40       	sbci	r29, 0x00	; 0
    367c:	0f b6       	in	r0, 0x3f	; 63
    367e:	f8 94       	cli
    3680:	de bf       	out	0x3e, r29	; 62
    3682:	0f be       	out	0x3f, r0	; 63
    3684:	cd bf       	out	0x3d, r28	; 61
	u32 i;
		for( i=0;i<390;i++)
    3686:	fe 01       	movw	r30, r28
    3688:	e9 5b       	subi	r30, 0xB9	; 185
    368a:	ff 4f       	sbci	r31, 0xFF	; 255
    368c:	10 82       	st	Z, r1
    368e:	11 82       	std	Z+1, r1	; 0x01
    3690:	12 82       	std	Z+2, r1	; 0x02
    3692:	13 82       	std	Z+3, r1	; 0x03
    3694:	3d c2       	rjmp	.+1146   	; 0x3b10 <stepper_void270Left+0x4a4>
	{
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    3696:	82 e0       	ldi	r24, 0x02	; 2
    3698:	60 e0       	ldi	r22, 0x00	; 0
    369a:	40 e0       	ldi	r20, 0x00	; 0
    369c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    36a0:	82 e0       	ldi	r24, 0x02	; 2
    36a2:	61 e0       	ldi	r22, 0x01	; 1
    36a4:	40 e0       	ldi	r20, 0x00	; 0
    36a6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    36aa:	82 e0       	ldi	r24, 0x02	; 2
    36ac:	62 e0       	ldi	r22, 0x02	; 2
    36ae:	40 e0       	ldi	r20, 0x00	; 0
    36b0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,HIGH);//PIN_3
    36b4:	82 e0       	ldi	r24, 0x02	; 2
    36b6:	63 e0       	ldi	r22, 0x03	; 3
    36b8:	41 e0       	ldi	r20, 0x01	; 1
    36ba:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    36be:	fe 01       	movw	r30, r28
    36c0:	ed 5b       	subi	r30, 0xBD	; 189
    36c2:	ff 4f       	sbci	r31, 0xFF	; 255
    36c4:	80 e0       	ldi	r24, 0x00	; 0
    36c6:	90 e0       	ldi	r25, 0x00	; 0
    36c8:	a0 e0       	ldi	r26, 0x00	; 0
    36ca:	b0 e4       	ldi	r27, 0x40	; 64
    36cc:	80 83       	st	Z, r24
    36ce:	91 83       	std	Z+1, r25	; 0x01
    36d0:	a2 83       	std	Z+2, r26	; 0x02
    36d2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36d4:	8e 01       	movw	r16, r28
    36d6:	01 5c       	subi	r16, 0xC1	; 193
    36d8:	1f 4f       	sbci	r17, 0xFF	; 255
    36da:	fe 01       	movw	r30, r28
    36dc:	ed 5b       	subi	r30, 0xBD	; 189
    36de:	ff 4f       	sbci	r31, 0xFF	; 255
    36e0:	60 81       	ld	r22, Z
    36e2:	71 81       	ldd	r23, Z+1	; 0x01
    36e4:	82 81       	ldd	r24, Z+2	; 0x02
    36e6:	93 81       	ldd	r25, Z+3	; 0x03
    36e8:	20 e0       	ldi	r18, 0x00	; 0
    36ea:	30 e8       	ldi	r19, 0x80	; 128
    36ec:	4b e3       	ldi	r20, 0x3B	; 59
    36ee:	55 e4       	ldi	r21, 0x45	; 69
    36f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36f4:	dc 01       	movw	r26, r24
    36f6:	cb 01       	movw	r24, r22
    36f8:	f8 01       	movw	r30, r16
    36fa:	80 83       	st	Z, r24
    36fc:	91 83       	std	Z+1, r25	; 0x01
    36fe:	a2 83       	std	Z+2, r26	; 0x02
    3700:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3702:	fe 01       	movw	r30, r28
    3704:	ff 96       	adiw	r30, 0x3f	; 63
    3706:	60 81       	ld	r22, Z
    3708:	71 81       	ldd	r23, Z+1	; 0x01
    370a:	82 81       	ldd	r24, Z+2	; 0x02
    370c:	93 81       	ldd	r25, Z+3	; 0x03
    370e:	20 e0       	ldi	r18, 0x00	; 0
    3710:	30 e0       	ldi	r19, 0x00	; 0
    3712:	40 e8       	ldi	r20, 0x80	; 128
    3714:	5f e3       	ldi	r21, 0x3F	; 63
    3716:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    371a:	88 23       	and	r24, r24
    371c:	2c f4       	brge	.+10     	; 0x3728 <stepper_void270Left+0xbc>
		__ticks = 1;
    371e:	81 e0       	ldi	r24, 0x01	; 1
    3720:	90 e0       	ldi	r25, 0x00	; 0
    3722:	9e af       	std	Y+62, r25	; 0x3e
    3724:	8d af       	std	Y+61, r24	; 0x3d
    3726:	46 c0       	rjmp	.+140    	; 0x37b4 <stepper_void270Left+0x148>
	else if (__tmp > 65535)
    3728:	fe 01       	movw	r30, r28
    372a:	ff 96       	adiw	r30, 0x3f	; 63
    372c:	60 81       	ld	r22, Z
    372e:	71 81       	ldd	r23, Z+1	; 0x01
    3730:	82 81       	ldd	r24, Z+2	; 0x02
    3732:	93 81       	ldd	r25, Z+3	; 0x03
    3734:	20 e0       	ldi	r18, 0x00	; 0
    3736:	3f ef       	ldi	r19, 0xFF	; 255
    3738:	4f e7       	ldi	r20, 0x7F	; 127
    373a:	57 e4       	ldi	r21, 0x47	; 71
    373c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3740:	18 16       	cp	r1, r24
    3742:	64 f5       	brge	.+88     	; 0x379c <stepper_void270Left+0x130>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3744:	fe 01       	movw	r30, r28
    3746:	ed 5b       	subi	r30, 0xBD	; 189
    3748:	ff 4f       	sbci	r31, 0xFF	; 255
    374a:	60 81       	ld	r22, Z
    374c:	71 81       	ldd	r23, Z+1	; 0x01
    374e:	82 81       	ldd	r24, Z+2	; 0x02
    3750:	93 81       	ldd	r25, Z+3	; 0x03
    3752:	20 e0       	ldi	r18, 0x00	; 0
    3754:	30 e0       	ldi	r19, 0x00	; 0
    3756:	40 e2       	ldi	r20, 0x20	; 32
    3758:	51 e4       	ldi	r21, 0x41	; 65
    375a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    375e:	dc 01       	movw	r26, r24
    3760:	cb 01       	movw	r24, r22
    3762:	bc 01       	movw	r22, r24
    3764:	cd 01       	movw	r24, r26
    3766:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    376a:	dc 01       	movw	r26, r24
    376c:	cb 01       	movw	r24, r22
    376e:	9e af       	std	Y+62, r25	; 0x3e
    3770:	8d af       	std	Y+61, r24	; 0x3d
    3772:	0f c0       	rjmp	.+30     	; 0x3792 <stepper_void270Left+0x126>
    3774:	8c e2       	ldi	r24, 0x2C	; 44
    3776:	91 e0       	ldi	r25, 0x01	; 1
    3778:	9c af       	std	Y+60, r25	; 0x3c
    377a:	8b af       	std	Y+59, r24	; 0x3b
    377c:	8b ad       	ldd	r24, Y+59	; 0x3b
    377e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3780:	01 97       	sbiw	r24, 0x01	; 1
    3782:	f1 f7       	brne	.-4      	; 0x3780 <stepper_void270Left+0x114>
    3784:	9c af       	std	Y+60, r25	; 0x3c
    3786:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3788:	8d ad       	ldd	r24, Y+61	; 0x3d
    378a:	9e ad       	ldd	r25, Y+62	; 0x3e
    378c:	01 97       	sbiw	r24, 0x01	; 1
    378e:	9e af       	std	Y+62, r25	; 0x3e
    3790:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3792:	8d ad       	ldd	r24, Y+61	; 0x3d
    3794:	9e ad       	ldd	r25, Y+62	; 0x3e
    3796:	00 97       	sbiw	r24, 0x00	; 0
    3798:	69 f7       	brne	.-38     	; 0x3774 <stepper_void270Left+0x108>
    379a:	16 c0       	rjmp	.+44     	; 0x37c8 <stepper_void270Left+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    379c:	fe 01       	movw	r30, r28
    379e:	ff 96       	adiw	r30, 0x3f	; 63
    37a0:	60 81       	ld	r22, Z
    37a2:	71 81       	ldd	r23, Z+1	; 0x01
    37a4:	82 81       	ldd	r24, Z+2	; 0x02
    37a6:	93 81       	ldd	r25, Z+3	; 0x03
    37a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37ac:	dc 01       	movw	r26, r24
    37ae:	cb 01       	movw	r24, r22
    37b0:	9e af       	std	Y+62, r25	; 0x3e
    37b2:	8d af       	std	Y+61, r24	; 0x3d
    37b4:	8d ad       	ldd	r24, Y+61	; 0x3d
    37b6:	9e ad       	ldd	r25, Y+62	; 0x3e
    37b8:	9a af       	std	Y+58, r25	; 0x3a
    37ba:	89 af       	std	Y+57, r24	; 0x39
    37bc:	89 ad       	ldd	r24, Y+57	; 0x39
    37be:	9a ad       	ldd	r25, Y+58	; 0x3a
    37c0:	01 97       	sbiw	r24, 0x01	; 1
    37c2:	f1 f7       	brne	.-4      	; 0x37c0 <stepper_void270Left+0x154>
    37c4:	9a af       	std	Y+58, r25	; 0x3a
    37c6:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    37c8:	82 e0       	ldi	r24, 0x02	; 2
    37ca:	60 e0       	ldi	r22, 0x00	; 0
    37cc:	40 e0       	ldi	r20, 0x00	; 0
    37ce:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    37d2:	82 e0       	ldi	r24, 0x02	; 2
    37d4:	61 e0       	ldi	r22, 0x01	; 1
    37d6:	40 e0       	ldi	r20, 0x00	; 0
    37d8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,HIGH);//PIN_2
    37dc:	82 e0       	ldi	r24, 0x02	; 2
    37de:	62 e0       	ldi	r22, 0x02	; 2
    37e0:	41 e0       	ldi	r20, 0x01	; 1
    37e2:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    37e6:	82 e0       	ldi	r24, 0x02	; 2
    37e8:	63 e0       	ldi	r22, 0x03	; 3
    37ea:	40 e0       	ldi	r20, 0x00	; 0
    37ec:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    37f0:	80 e0       	ldi	r24, 0x00	; 0
    37f2:	90 e0       	ldi	r25, 0x00	; 0
    37f4:	a0 e0       	ldi	r26, 0x00	; 0
    37f6:	b0 e4       	ldi	r27, 0x40	; 64
    37f8:	8d ab       	std	Y+53, r24	; 0x35
    37fa:	9e ab       	std	Y+54, r25	; 0x36
    37fc:	af ab       	std	Y+55, r26	; 0x37
    37fe:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3800:	6d a9       	ldd	r22, Y+53	; 0x35
    3802:	7e a9       	ldd	r23, Y+54	; 0x36
    3804:	8f a9       	ldd	r24, Y+55	; 0x37
    3806:	98 ad       	ldd	r25, Y+56	; 0x38
    3808:	20 e0       	ldi	r18, 0x00	; 0
    380a:	30 e8       	ldi	r19, 0x80	; 128
    380c:	4b e3       	ldi	r20, 0x3B	; 59
    380e:	55 e4       	ldi	r21, 0x45	; 69
    3810:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3814:	dc 01       	movw	r26, r24
    3816:	cb 01       	movw	r24, r22
    3818:	89 ab       	std	Y+49, r24	; 0x31
    381a:	9a ab       	std	Y+50, r25	; 0x32
    381c:	ab ab       	std	Y+51, r26	; 0x33
    381e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3820:	69 a9       	ldd	r22, Y+49	; 0x31
    3822:	7a a9       	ldd	r23, Y+50	; 0x32
    3824:	8b a9       	ldd	r24, Y+51	; 0x33
    3826:	9c a9       	ldd	r25, Y+52	; 0x34
    3828:	20 e0       	ldi	r18, 0x00	; 0
    382a:	30 e0       	ldi	r19, 0x00	; 0
    382c:	40 e8       	ldi	r20, 0x80	; 128
    382e:	5f e3       	ldi	r21, 0x3F	; 63
    3830:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3834:	88 23       	and	r24, r24
    3836:	2c f4       	brge	.+10     	; 0x3842 <stepper_void270Left+0x1d6>
		__ticks = 1;
    3838:	81 e0       	ldi	r24, 0x01	; 1
    383a:	90 e0       	ldi	r25, 0x00	; 0
    383c:	98 ab       	std	Y+48, r25	; 0x30
    383e:	8f a7       	std	Y+47, r24	; 0x2f
    3840:	3f c0       	rjmp	.+126    	; 0x38c0 <stepper_void270Left+0x254>
	else if (__tmp > 65535)
    3842:	69 a9       	ldd	r22, Y+49	; 0x31
    3844:	7a a9       	ldd	r23, Y+50	; 0x32
    3846:	8b a9       	ldd	r24, Y+51	; 0x33
    3848:	9c a9       	ldd	r25, Y+52	; 0x34
    384a:	20 e0       	ldi	r18, 0x00	; 0
    384c:	3f ef       	ldi	r19, 0xFF	; 255
    384e:	4f e7       	ldi	r20, 0x7F	; 127
    3850:	57 e4       	ldi	r21, 0x47	; 71
    3852:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3856:	18 16       	cp	r1, r24
    3858:	4c f5       	brge	.+82     	; 0x38ac <stepper_void270Left+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    385a:	6d a9       	ldd	r22, Y+53	; 0x35
    385c:	7e a9       	ldd	r23, Y+54	; 0x36
    385e:	8f a9       	ldd	r24, Y+55	; 0x37
    3860:	98 ad       	ldd	r25, Y+56	; 0x38
    3862:	20 e0       	ldi	r18, 0x00	; 0
    3864:	30 e0       	ldi	r19, 0x00	; 0
    3866:	40 e2       	ldi	r20, 0x20	; 32
    3868:	51 e4       	ldi	r21, 0x41	; 65
    386a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	bc 01       	movw	r22, r24
    3874:	cd 01       	movw	r24, r26
    3876:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    387a:	dc 01       	movw	r26, r24
    387c:	cb 01       	movw	r24, r22
    387e:	98 ab       	std	Y+48, r25	; 0x30
    3880:	8f a7       	std	Y+47, r24	; 0x2f
    3882:	0f c0       	rjmp	.+30     	; 0x38a2 <stepper_void270Left+0x236>
    3884:	8c e2       	ldi	r24, 0x2C	; 44
    3886:	91 e0       	ldi	r25, 0x01	; 1
    3888:	9e a7       	std	Y+46, r25	; 0x2e
    388a:	8d a7       	std	Y+45, r24	; 0x2d
    388c:	8d a5       	ldd	r24, Y+45	; 0x2d
    388e:	9e a5       	ldd	r25, Y+46	; 0x2e
    3890:	01 97       	sbiw	r24, 0x01	; 1
    3892:	f1 f7       	brne	.-4      	; 0x3890 <stepper_void270Left+0x224>
    3894:	9e a7       	std	Y+46, r25	; 0x2e
    3896:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3898:	8f a5       	ldd	r24, Y+47	; 0x2f
    389a:	98 a9       	ldd	r25, Y+48	; 0x30
    389c:	01 97       	sbiw	r24, 0x01	; 1
    389e:	98 ab       	std	Y+48, r25	; 0x30
    38a0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    38a4:	98 a9       	ldd	r25, Y+48	; 0x30
    38a6:	00 97       	sbiw	r24, 0x00	; 0
    38a8:	69 f7       	brne	.-38     	; 0x3884 <stepper_void270Left+0x218>
    38aa:	14 c0       	rjmp	.+40     	; 0x38d4 <stepper_void270Left+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38ac:	69 a9       	ldd	r22, Y+49	; 0x31
    38ae:	7a a9       	ldd	r23, Y+50	; 0x32
    38b0:	8b a9       	ldd	r24, Y+51	; 0x33
    38b2:	9c a9       	ldd	r25, Y+52	; 0x34
    38b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38b8:	dc 01       	movw	r26, r24
    38ba:	cb 01       	movw	r24, r22
    38bc:	98 ab       	std	Y+48, r25	; 0x30
    38be:	8f a7       	std	Y+47, r24	; 0x2f
    38c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    38c2:	98 a9       	ldd	r25, Y+48	; 0x30
    38c4:	9c a7       	std	Y+44, r25	; 0x2c
    38c6:	8b a7       	std	Y+43, r24	; 0x2b
    38c8:	8b a5       	ldd	r24, Y+43	; 0x2b
    38ca:	9c a5       	ldd	r25, Y+44	; 0x2c
    38cc:	01 97       	sbiw	r24, 0x01	; 1
    38ce:	f1 f7       	brne	.-4      	; 0x38cc <stepper_void270Left+0x260>
    38d0:	9c a7       	std	Y+44, r25	; 0x2c
    38d2:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,LOW);
    38d4:	82 e0       	ldi	r24, 0x02	; 2
    38d6:	60 e0       	ldi	r22, 0x00	; 0
    38d8:	40 e0       	ldi	r20, 0x00	; 0
    38da:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,HIGH);//PIN_1
    38de:	82 e0       	ldi	r24, 0x02	; 2
    38e0:	61 e0       	ldi	r22, 0x01	; 1
    38e2:	41 e0       	ldi	r20, 0x01	; 1
    38e4:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    38e8:	82 e0       	ldi	r24, 0x02	; 2
    38ea:	62 e0       	ldi	r22, 0x02	; 2
    38ec:	40 e0       	ldi	r20, 0x00	; 0
    38ee:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    38f2:	82 e0       	ldi	r24, 0x02	; 2
    38f4:	63 e0       	ldi	r22, 0x03	; 3
    38f6:	40 e0       	ldi	r20, 0x00	; 0
    38f8:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    38fc:	80 e0       	ldi	r24, 0x00	; 0
    38fe:	90 e0       	ldi	r25, 0x00	; 0
    3900:	a0 e0       	ldi	r26, 0x00	; 0
    3902:	b0 e4       	ldi	r27, 0x40	; 64
    3904:	8f a3       	std	Y+39, r24	; 0x27
    3906:	98 a7       	std	Y+40, r25	; 0x28
    3908:	a9 a7       	std	Y+41, r26	; 0x29
    390a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    390c:	6f a1       	ldd	r22, Y+39	; 0x27
    390e:	78 a5       	ldd	r23, Y+40	; 0x28
    3910:	89 a5       	ldd	r24, Y+41	; 0x29
    3912:	9a a5       	ldd	r25, Y+42	; 0x2a
    3914:	20 e0       	ldi	r18, 0x00	; 0
    3916:	30 e8       	ldi	r19, 0x80	; 128
    3918:	4b e3       	ldi	r20, 0x3B	; 59
    391a:	55 e4       	ldi	r21, 0x45	; 69
    391c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3920:	dc 01       	movw	r26, r24
    3922:	cb 01       	movw	r24, r22
    3924:	8b a3       	std	Y+35, r24	; 0x23
    3926:	9c a3       	std	Y+36, r25	; 0x24
    3928:	ad a3       	std	Y+37, r26	; 0x25
    392a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    392c:	6b a1       	ldd	r22, Y+35	; 0x23
    392e:	7c a1       	ldd	r23, Y+36	; 0x24
    3930:	8d a1       	ldd	r24, Y+37	; 0x25
    3932:	9e a1       	ldd	r25, Y+38	; 0x26
    3934:	20 e0       	ldi	r18, 0x00	; 0
    3936:	30 e0       	ldi	r19, 0x00	; 0
    3938:	40 e8       	ldi	r20, 0x80	; 128
    393a:	5f e3       	ldi	r21, 0x3F	; 63
    393c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3940:	88 23       	and	r24, r24
    3942:	2c f4       	brge	.+10     	; 0x394e <stepper_void270Left+0x2e2>
		__ticks = 1;
    3944:	81 e0       	ldi	r24, 0x01	; 1
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	9a a3       	std	Y+34, r25	; 0x22
    394a:	89 a3       	std	Y+33, r24	; 0x21
    394c:	3f c0       	rjmp	.+126    	; 0x39cc <stepper_void270Left+0x360>
	else if (__tmp > 65535)
    394e:	6b a1       	ldd	r22, Y+35	; 0x23
    3950:	7c a1       	ldd	r23, Y+36	; 0x24
    3952:	8d a1       	ldd	r24, Y+37	; 0x25
    3954:	9e a1       	ldd	r25, Y+38	; 0x26
    3956:	20 e0       	ldi	r18, 0x00	; 0
    3958:	3f ef       	ldi	r19, 0xFF	; 255
    395a:	4f e7       	ldi	r20, 0x7F	; 127
    395c:	57 e4       	ldi	r21, 0x47	; 71
    395e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3962:	18 16       	cp	r1, r24
    3964:	4c f5       	brge	.+82     	; 0x39b8 <stepper_void270Left+0x34c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3966:	6f a1       	ldd	r22, Y+39	; 0x27
    3968:	78 a5       	ldd	r23, Y+40	; 0x28
    396a:	89 a5       	ldd	r24, Y+41	; 0x29
    396c:	9a a5       	ldd	r25, Y+42	; 0x2a
    396e:	20 e0       	ldi	r18, 0x00	; 0
    3970:	30 e0       	ldi	r19, 0x00	; 0
    3972:	40 e2       	ldi	r20, 0x20	; 32
    3974:	51 e4       	ldi	r21, 0x41	; 65
    3976:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    397a:	dc 01       	movw	r26, r24
    397c:	cb 01       	movw	r24, r22
    397e:	bc 01       	movw	r22, r24
    3980:	cd 01       	movw	r24, r26
    3982:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3986:	dc 01       	movw	r26, r24
    3988:	cb 01       	movw	r24, r22
    398a:	9a a3       	std	Y+34, r25	; 0x22
    398c:	89 a3       	std	Y+33, r24	; 0x21
    398e:	0f c0       	rjmp	.+30     	; 0x39ae <stepper_void270Left+0x342>
    3990:	8c e2       	ldi	r24, 0x2C	; 44
    3992:	91 e0       	ldi	r25, 0x01	; 1
    3994:	98 a3       	std	Y+32, r25	; 0x20
    3996:	8f 8f       	std	Y+31, r24	; 0x1f
    3998:	8f 8d       	ldd	r24, Y+31	; 0x1f
    399a:	98 a1       	ldd	r25, Y+32	; 0x20
    399c:	01 97       	sbiw	r24, 0x01	; 1
    399e:	f1 f7       	brne	.-4      	; 0x399c <stepper_void270Left+0x330>
    39a0:	98 a3       	std	Y+32, r25	; 0x20
    39a2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39a4:	89 a1       	ldd	r24, Y+33	; 0x21
    39a6:	9a a1       	ldd	r25, Y+34	; 0x22
    39a8:	01 97       	sbiw	r24, 0x01	; 1
    39aa:	9a a3       	std	Y+34, r25	; 0x22
    39ac:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ae:	89 a1       	ldd	r24, Y+33	; 0x21
    39b0:	9a a1       	ldd	r25, Y+34	; 0x22
    39b2:	00 97       	sbiw	r24, 0x00	; 0
    39b4:	69 f7       	brne	.-38     	; 0x3990 <stepper_void270Left+0x324>
    39b6:	14 c0       	rjmp	.+40     	; 0x39e0 <stepper_void270Left+0x374>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39b8:	6b a1       	ldd	r22, Y+35	; 0x23
    39ba:	7c a1       	ldd	r23, Y+36	; 0x24
    39bc:	8d a1       	ldd	r24, Y+37	; 0x25
    39be:	9e a1       	ldd	r25, Y+38	; 0x26
    39c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39c4:	dc 01       	movw	r26, r24
    39c6:	cb 01       	movw	r24, r22
    39c8:	9a a3       	std	Y+34, r25	; 0x22
    39ca:	89 a3       	std	Y+33, r24	; 0x21
    39cc:	89 a1       	ldd	r24, Y+33	; 0x21
    39ce:	9a a1       	ldd	r25, Y+34	; 0x22
    39d0:	9e 8f       	std	Y+30, r25	; 0x1e
    39d2:	8d 8f       	std	Y+29, r24	; 0x1d
    39d4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    39d6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    39d8:	01 97       	sbiw	r24, 0x01	; 1
    39da:	f1 f7       	brne	.-4      	; 0x39d8 <stepper_void270Left+0x36c>
    39dc:	9e 8f       	std	Y+30, r25	; 0x1e
    39de:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(2);
			DIO_voidSetPinValue(PORT_C,PIN_0,HIGH);//PIN_0
    39e0:	82 e0       	ldi	r24, 0x02	; 2
    39e2:	60 e0       	ldi	r22, 0x00	; 0
    39e4:	41 e0       	ldi	r20, 0x01	; 1
    39e6:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_1,LOW);
    39ea:	82 e0       	ldi	r24, 0x02	; 2
    39ec:	61 e0       	ldi	r22, 0x01	; 1
    39ee:	40 e0       	ldi	r20, 0x00	; 0
    39f0:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_2,LOW);
    39f4:	82 e0       	ldi	r24, 0x02	; 2
    39f6:	62 e0       	ldi	r22, 0x02	; 2
    39f8:	40 e0       	ldi	r20, 0x00	; 0
    39fa:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
    39fe:	82 e0       	ldi	r24, 0x02	; 2
    3a00:	63 e0       	ldi	r22, 0x03	; 3
    3a02:	40 e0       	ldi	r20, 0x00	; 0
    3a04:	0e 94 7e 06 	call	0xcfc	; 0xcfc <DIO_voidSetPinValue>
    3a08:	80 e0       	ldi	r24, 0x00	; 0
    3a0a:	90 e0       	ldi	r25, 0x00	; 0
    3a0c:	a0 e0       	ldi	r26, 0x00	; 0
    3a0e:	b0 e4       	ldi	r27, 0x40	; 64
    3a10:	89 8f       	std	Y+25, r24	; 0x19
    3a12:	9a 8f       	std	Y+26, r25	; 0x1a
    3a14:	ab 8f       	std	Y+27, r26	; 0x1b
    3a16:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a18:	69 8d       	ldd	r22, Y+25	; 0x19
    3a1a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a1c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a1e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a20:	20 e0       	ldi	r18, 0x00	; 0
    3a22:	30 e8       	ldi	r19, 0x80	; 128
    3a24:	4b e3       	ldi	r20, 0x3B	; 59
    3a26:	55 e4       	ldi	r21, 0x45	; 69
    3a28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a2c:	dc 01       	movw	r26, r24
    3a2e:	cb 01       	movw	r24, r22
    3a30:	8d 8b       	std	Y+21, r24	; 0x15
    3a32:	9e 8b       	std	Y+22, r25	; 0x16
    3a34:	af 8b       	std	Y+23, r26	; 0x17
    3a36:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3a38:	6d 89       	ldd	r22, Y+21	; 0x15
    3a3a:	7e 89       	ldd	r23, Y+22	; 0x16
    3a3c:	8f 89       	ldd	r24, Y+23	; 0x17
    3a3e:	98 8d       	ldd	r25, Y+24	; 0x18
    3a40:	20 e0       	ldi	r18, 0x00	; 0
    3a42:	30 e0       	ldi	r19, 0x00	; 0
    3a44:	40 e8       	ldi	r20, 0x80	; 128
    3a46:	5f e3       	ldi	r21, 0x3F	; 63
    3a48:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a4c:	88 23       	and	r24, r24
    3a4e:	2c f4       	brge	.+10     	; 0x3a5a <stepper_void270Left+0x3ee>
		__ticks = 1;
    3a50:	81 e0       	ldi	r24, 0x01	; 1
    3a52:	90 e0       	ldi	r25, 0x00	; 0
    3a54:	9c 8b       	std	Y+20, r25	; 0x14
    3a56:	8b 8b       	std	Y+19, r24	; 0x13
    3a58:	3f c0       	rjmp	.+126    	; 0x3ad8 <stepper_void270Left+0x46c>
	else if (__tmp > 65535)
    3a5a:	6d 89       	ldd	r22, Y+21	; 0x15
    3a5c:	7e 89       	ldd	r23, Y+22	; 0x16
    3a5e:	8f 89       	ldd	r24, Y+23	; 0x17
    3a60:	98 8d       	ldd	r25, Y+24	; 0x18
    3a62:	20 e0       	ldi	r18, 0x00	; 0
    3a64:	3f ef       	ldi	r19, 0xFF	; 255
    3a66:	4f e7       	ldi	r20, 0x7F	; 127
    3a68:	57 e4       	ldi	r21, 0x47	; 71
    3a6a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a6e:	18 16       	cp	r1, r24
    3a70:	4c f5       	brge	.+82     	; 0x3ac4 <stepper_void270Left+0x458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a72:	69 8d       	ldd	r22, Y+25	; 0x19
    3a74:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3a76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3a78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3a7a:	20 e0       	ldi	r18, 0x00	; 0
    3a7c:	30 e0       	ldi	r19, 0x00	; 0
    3a7e:	40 e2       	ldi	r20, 0x20	; 32
    3a80:	51 e4       	ldi	r21, 0x41	; 65
    3a82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a86:	dc 01       	movw	r26, r24
    3a88:	cb 01       	movw	r24, r22
    3a8a:	bc 01       	movw	r22, r24
    3a8c:	cd 01       	movw	r24, r26
    3a8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	9c 8b       	std	Y+20, r25	; 0x14
    3a98:	8b 8b       	std	Y+19, r24	; 0x13
    3a9a:	0f c0       	rjmp	.+30     	; 0x3aba <stepper_void270Left+0x44e>
    3a9c:	8c e2       	ldi	r24, 0x2C	; 44
    3a9e:	91 e0       	ldi	r25, 0x01	; 1
    3aa0:	9a 8b       	std	Y+18, r25	; 0x12
    3aa2:	89 8b       	std	Y+17, r24	; 0x11
    3aa4:	89 89       	ldd	r24, Y+17	; 0x11
    3aa6:	9a 89       	ldd	r25, Y+18	; 0x12
    3aa8:	01 97       	sbiw	r24, 0x01	; 1
    3aaa:	f1 f7       	brne	.-4      	; 0x3aa8 <stepper_void270Left+0x43c>
    3aac:	9a 8b       	std	Y+18, r25	; 0x12
    3aae:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ab0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ab2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ab4:	01 97       	sbiw	r24, 0x01	; 1
    3ab6:	9c 8b       	std	Y+20, r25	; 0x14
    3ab8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3aba:	8b 89       	ldd	r24, Y+19	; 0x13
    3abc:	9c 89       	ldd	r25, Y+20	; 0x14
    3abe:	00 97       	sbiw	r24, 0x00	; 0
    3ac0:	69 f7       	brne	.-38     	; 0x3a9c <stepper_void270Left+0x430>
    3ac2:	14 c0       	rjmp	.+40     	; 0x3aec <stepper_void270Left+0x480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ac4:	6d 89       	ldd	r22, Y+21	; 0x15
    3ac6:	7e 89       	ldd	r23, Y+22	; 0x16
    3ac8:	8f 89       	ldd	r24, Y+23	; 0x17
    3aca:	98 8d       	ldd	r25, Y+24	; 0x18
    3acc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ad0:	dc 01       	movw	r26, r24
    3ad2:	cb 01       	movw	r24, r22
    3ad4:	9c 8b       	std	Y+20, r25	; 0x14
    3ad6:	8b 8b       	std	Y+19, r24	; 0x13
    3ad8:	8b 89       	ldd	r24, Y+19	; 0x13
    3ada:	9c 89       	ldd	r25, Y+20	; 0x14
    3adc:	98 8b       	std	Y+16, r25	; 0x10
    3ade:	8f 87       	std	Y+15, r24	; 0x0f
    3ae0:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ae2:	98 89       	ldd	r25, Y+16	; 0x10
    3ae4:	01 97       	sbiw	r24, 0x01	; 1
    3ae6:	f1 f7       	brne	.-4      	; 0x3ae4 <stepper_void270Left+0x478>
    3ae8:	98 8b       	std	Y+16, r25	; 0x10
    3aea:	8f 87       	std	Y+15, r24	; 0x0f

}
void stepper_void270Left(void)
{
	u32 i;
		for( i=0;i<390;i++)
    3aec:	9e 01       	movw	r18, r28
    3aee:	29 5b       	subi	r18, 0xB9	; 185
    3af0:	3f 4f       	sbci	r19, 0xFF	; 255
    3af2:	fe 01       	movw	r30, r28
    3af4:	e9 5b       	subi	r30, 0xB9	; 185
    3af6:	ff 4f       	sbci	r31, 0xFF	; 255
    3af8:	80 81       	ld	r24, Z
    3afa:	91 81       	ldd	r25, Z+1	; 0x01
    3afc:	a2 81       	ldd	r26, Z+2	; 0x02
    3afe:	b3 81       	ldd	r27, Z+3	; 0x03
    3b00:	01 96       	adiw	r24, 0x01	; 1
    3b02:	a1 1d       	adc	r26, r1
    3b04:	b1 1d       	adc	r27, r1
    3b06:	f9 01       	movw	r30, r18
    3b08:	80 83       	st	Z, r24
    3b0a:	91 83       	std	Z+1, r25	; 0x01
    3b0c:	a2 83       	std	Z+2, r26	; 0x02
    3b0e:	b3 83       	std	Z+3, r27	; 0x03
    3b10:	fe 01       	movw	r30, r28
    3b12:	e9 5b       	subi	r30, 0xB9	; 185
    3b14:	ff 4f       	sbci	r31, 0xFF	; 255
    3b16:	80 81       	ld	r24, Z
    3b18:	91 81       	ldd	r25, Z+1	; 0x01
    3b1a:	a2 81       	ldd	r26, Z+2	; 0x02
    3b1c:	b3 81       	ldd	r27, Z+3	; 0x03
    3b1e:	86 38       	cpi	r24, 0x86	; 134
    3b20:	f1 e0       	ldi	r31, 0x01	; 1
    3b22:	9f 07       	cpc	r25, r31
    3b24:	f0 e0       	ldi	r31, 0x00	; 0
    3b26:	af 07       	cpc	r26, r31
    3b28:	f0 e0       	ldi	r31, 0x00	; 0
    3b2a:	bf 07       	cpc	r27, r31
    3b2c:	08 f4       	brcc	.+2      	; 0x3b30 <stepper_void270Left+0x4c4>
    3b2e:	b3 cd       	rjmp	.-1178   	; 0x3696 <stepper_void270Left+0x2a>
    3b30:	80 e0       	ldi	r24, 0x00	; 0
    3b32:	90 e0       	ldi	r25, 0x00	; 0
    3b34:	aa e7       	ldi	r26, 0x7A	; 122
    3b36:	b4 e4       	ldi	r27, 0x44	; 68
    3b38:	8b 87       	std	Y+11, r24	; 0x0b
    3b3a:	9c 87       	std	Y+12, r25	; 0x0c
    3b3c:	ad 87       	std	Y+13, r26	; 0x0d
    3b3e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b40:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b42:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b44:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b46:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b48:	20 e0       	ldi	r18, 0x00	; 0
    3b4a:	30 e8       	ldi	r19, 0x80	; 128
    3b4c:	4b e3       	ldi	r20, 0x3B	; 59
    3b4e:	55 e4       	ldi	r21, 0x45	; 69
    3b50:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b54:	dc 01       	movw	r26, r24
    3b56:	cb 01       	movw	r24, r22
    3b58:	8f 83       	std	Y+7, r24	; 0x07
    3b5a:	98 87       	std	Y+8, r25	; 0x08
    3b5c:	a9 87       	std	Y+9, r26	; 0x09
    3b5e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b60:	6f 81       	ldd	r22, Y+7	; 0x07
    3b62:	78 85       	ldd	r23, Y+8	; 0x08
    3b64:	89 85       	ldd	r24, Y+9	; 0x09
    3b66:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b68:	20 e0       	ldi	r18, 0x00	; 0
    3b6a:	30 e0       	ldi	r19, 0x00	; 0
    3b6c:	40 e8       	ldi	r20, 0x80	; 128
    3b6e:	5f e3       	ldi	r21, 0x3F	; 63
    3b70:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b74:	88 23       	and	r24, r24
    3b76:	2c f4       	brge	.+10     	; 0x3b82 <stepper_void270Left+0x516>
		__ticks = 1;
    3b78:	81 e0       	ldi	r24, 0x01	; 1
    3b7a:	90 e0       	ldi	r25, 0x00	; 0
    3b7c:	9e 83       	std	Y+6, r25	; 0x06
    3b7e:	8d 83       	std	Y+5, r24	; 0x05
    3b80:	3f c0       	rjmp	.+126    	; 0x3c00 <stepper_void270Left+0x594>
	else if (__tmp > 65535)
    3b82:	6f 81       	ldd	r22, Y+7	; 0x07
    3b84:	78 85       	ldd	r23, Y+8	; 0x08
    3b86:	89 85       	ldd	r24, Y+9	; 0x09
    3b88:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b8a:	20 e0       	ldi	r18, 0x00	; 0
    3b8c:	3f ef       	ldi	r19, 0xFF	; 255
    3b8e:	4f e7       	ldi	r20, 0x7F	; 127
    3b90:	57 e4       	ldi	r21, 0x47	; 71
    3b92:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b96:	18 16       	cp	r1, r24
    3b98:	4c f5       	brge	.+82     	; 0x3bec <stepper_void270Left+0x580>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b9a:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b9c:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b9e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ba0:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ba2:	20 e0       	ldi	r18, 0x00	; 0
    3ba4:	30 e0       	ldi	r19, 0x00	; 0
    3ba6:	40 e2       	ldi	r20, 0x20	; 32
    3ba8:	51 e4       	ldi	r21, 0x41	; 65
    3baa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bae:	dc 01       	movw	r26, r24
    3bb0:	cb 01       	movw	r24, r22
    3bb2:	bc 01       	movw	r22, r24
    3bb4:	cd 01       	movw	r24, r26
    3bb6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bba:	dc 01       	movw	r26, r24
    3bbc:	cb 01       	movw	r24, r22
    3bbe:	9e 83       	std	Y+6, r25	; 0x06
    3bc0:	8d 83       	std	Y+5, r24	; 0x05
    3bc2:	0f c0       	rjmp	.+30     	; 0x3be2 <stepper_void270Left+0x576>
    3bc4:	8c e2       	ldi	r24, 0x2C	; 44
    3bc6:	91 e0       	ldi	r25, 0x01	; 1
    3bc8:	9c 83       	std	Y+4, r25	; 0x04
    3bca:	8b 83       	std	Y+3, r24	; 0x03
    3bcc:	8b 81       	ldd	r24, Y+3	; 0x03
    3bce:	9c 81       	ldd	r25, Y+4	; 0x04
    3bd0:	01 97       	sbiw	r24, 0x01	; 1
    3bd2:	f1 f7       	brne	.-4      	; 0x3bd0 <stepper_void270Left+0x564>
    3bd4:	9c 83       	std	Y+4, r25	; 0x04
    3bd6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bd8:	8d 81       	ldd	r24, Y+5	; 0x05
    3bda:	9e 81       	ldd	r25, Y+6	; 0x06
    3bdc:	01 97       	sbiw	r24, 0x01	; 1
    3bde:	9e 83       	std	Y+6, r25	; 0x06
    3be0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3be2:	8d 81       	ldd	r24, Y+5	; 0x05
    3be4:	9e 81       	ldd	r25, Y+6	; 0x06
    3be6:	00 97       	sbiw	r24, 0x00	; 0
    3be8:	69 f7       	brne	.-38     	; 0x3bc4 <stepper_void270Left+0x558>
    3bea:	14 c0       	rjmp	.+40     	; 0x3c14 <stepper_void270Left+0x5a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bec:	6f 81       	ldd	r22, Y+7	; 0x07
    3bee:	78 85       	ldd	r23, Y+8	; 0x08
    3bf0:	89 85       	ldd	r24, Y+9	; 0x09
    3bf2:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bf4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bf8:	dc 01       	movw	r26, r24
    3bfa:	cb 01       	movw	r24, r22
    3bfc:	9e 83       	std	Y+6, r25	; 0x06
    3bfe:	8d 83       	std	Y+5, r24	; 0x05
    3c00:	8d 81       	ldd	r24, Y+5	; 0x05
    3c02:	9e 81       	ldd	r25, Y+6	; 0x06
    3c04:	9a 83       	std	Y+2, r25	; 0x02
    3c06:	89 83       	std	Y+1, r24	; 0x01
    3c08:	89 81       	ldd	r24, Y+1	; 0x01
    3c0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c0c:	01 97       	sbiw	r24, 0x01	; 1
    3c0e:	f1 f7       	brne	.-4      	; 0x3c0c <stepper_void270Left+0x5a0>
    3c10:	9a 83       	std	Y+2, r25	; 0x02
    3c12:	89 83       	std	Y+1, r24	; 0x01
			DIO_voidSetPinValue(PORT_C,PIN_3,LOW);
			_delay_ms(2);
	}
		_delay_ms(1000);

}
    3c14:	c6 5b       	subi	r28, 0xB6	; 182
    3c16:	df 4f       	sbci	r29, 0xFF	; 255
    3c18:	0f b6       	in	r0, 0x3f	; 63
    3c1a:	f8 94       	cli
    3c1c:	de bf       	out	0x3e, r29	; 62
    3c1e:	0f be       	out	0x3f, r0	; 63
    3c20:	cd bf       	out	0x3d, r28	; 61
    3c22:	cf 91       	pop	r28
    3c24:	df 91       	pop	r29
    3c26:	1f 91       	pop	r17
    3c28:	0f 91       	pop	r16
    3c2a:	08 95       	ret

00003c2c <main>:
#include"STEPPER_interface.h"
#include<util/delay.h>
#define F_CPU 12000000

int main(void)
{
    3c2c:	df 93       	push	r29
    3c2e:	cf 93       	push	r28
    3c30:	cd b7       	in	r28, 0x3d	; 61
    3c32:	de b7       	in	r29, 0x3e	; 62
	stepper_voidInit();
    3c34:	0e 94 60 08 	call	0x10c0	; 0x10c0 <stepper_voidInit>

	stepper_void90Right();
    3c38:	0e 94 9c 12 	call	0x2538	; 0x2538 <stepper_void90Right>
	stepper_void90Left();
    3c3c:	0e 94 79 15 	call	0x2af2	; 0x2af2 <stepper_void90Left>

	stepper_void270Right();
    3c40:	0e 94 56 18 	call	0x30ac	; 0x30ac <stepper_void270Right>
	stepper_void270Left();
    3c44:	0e 94 36 1b 	call	0x366c	; 0x366c <stepper_void270Left>

	stepper_void360Right();
    3c48:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <stepper_void360Right>
	stepper_void360Left();
    3c4c:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <stepper_void360Left>
    3c50:	80 e0       	ldi	r24, 0x00	; 0
    3c52:	90 e0       	ldi	r25, 0x00	; 0



}
    3c54:	cf 91       	pop	r28
    3c56:	df 91       	pop	r29
    3c58:	08 95       	ret

00003c5a <__prologue_saves__>:
    3c5a:	2f 92       	push	r2
    3c5c:	3f 92       	push	r3
    3c5e:	4f 92       	push	r4
    3c60:	5f 92       	push	r5
    3c62:	6f 92       	push	r6
    3c64:	7f 92       	push	r7
    3c66:	8f 92       	push	r8
    3c68:	9f 92       	push	r9
    3c6a:	af 92       	push	r10
    3c6c:	bf 92       	push	r11
    3c6e:	cf 92       	push	r12
    3c70:	df 92       	push	r13
    3c72:	ef 92       	push	r14
    3c74:	ff 92       	push	r15
    3c76:	0f 93       	push	r16
    3c78:	1f 93       	push	r17
    3c7a:	cf 93       	push	r28
    3c7c:	df 93       	push	r29
    3c7e:	cd b7       	in	r28, 0x3d	; 61
    3c80:	de b7       	in	r29, 0x3e	; 62
    3c82:	ca 1b       	sub	r28, r26
    3c84:	db 0b       	sbc	r29, r27
    3c86:	0f b6       	in	r0, 0x3f	; 63
    3c88:	f8 94       	cli
    3c8a:	de bf       	out	0x3e, r29	; 62
    3c8c:	0f be       	out	0x3f, r0	; 63
    3c8e:	cd bf       	out	0x3d, r28	; 61
    3c90:	09 94       	ijmp

00003c92 <__epilogue_restores__>:
    3c92:	2a 88       	ldd	r2, Y+18	; 0x12
    3c94:	39 88       	ldd	r3, Y+17	; 0x11
    3c96:	48 88       	ldd	r4, Y+16	; 0x10
    3c98:	5f 84       	ldd	r5, Y+15	; 0x0f
    3c9a:	6e 84       	ldd	r6, Y+14	; 0x0e
    3c9c:	7d 84       	ldd	r7, Y+13	; 0x0d
    3c9e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3ca0:	9b 84       	ldd	r9, Y+11	; 0x0b
    3ca2:	aa 84       	ldd	r10, Y+10	; 0x0a
    3ca4:	b9 84       	ldd	r11, Y+9	; 0x09
    3ca6:	c8 84       	ldd	r12, Y+8	; 0x08
    3ca8:	df 80       	ldd	r13, Y+7	; 0x07
    3caa:	ee 80       	ldd	r14, Y+6	; 0x06
    3cac:	fd 80       	ldd	r15, Y+5	; 0x05
    3cae:	0c 81       	ldd	r16, Y+4	; 0x04
    3cb0:	1b 81       	ldd	r17, Y+3	; 0x03
    3cb2:	aa 81       	ldd	r26, Y+2	; 0x02
    3cb4:	b9 81       	ldd	r27, Y+1	; 0x01
    3cb6:	ce 0f       	add	r28, r30
    3cb8:	d1 1d       	adc	r29, r1
    3cba:	0f b6       	in	r0, 0x3f	; 63
    3cbc:	f8 94       	cli
    3cbe:	de bf       	out	0x3e, r29	; 62
    3cc0:	0f be       	out	0x3f, r0	; 63
    3cc2:	cd bf       	out	0x3d, r28	; 61
    3cc4:	ed 01       	movw	r28, r26
    3cc6:	08 95       	ret

00003cc8 <_exit>:
    3cc8:	f8 94       	cli

00003cca <__stop_program>:
    3cca:	ff cf       	rjmp	.-2      	; 0x3cca <__stop_program>
