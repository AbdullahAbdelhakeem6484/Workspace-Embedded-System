
TEST_ULTRASONIC_LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002d26  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000122  00800060  00002d26  00002dba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800182  00800182  00002edc  2**0
                  ALLOC
  3 .stab         00001aac  00000000  00000000  00002edc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e90  00000000  00000000  00004988  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00005818  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f0  00000000  00000000  000059b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240c  00000000  00000000  00005ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001377  00000000  00000000  00007fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d8  00000000  00000000  0000932b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000a504  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f3  00000000  00000000  0000a6c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009ce  00000000  00000000  0000a9b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000b385  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 72 11 	jmp	0x22e4	; 0x22e4 <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__floatsisf+0xa>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__CCP__+0x8>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <__mulsf3+0x162>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__SREG__+0x31>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z+
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__SREG__+0x75>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <_fpadd_parts+0x1e8>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__SREG__+0xbd>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <__fixunssfsi+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	11 e0       	ldi	r17, 0x01	; 1
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e6 e2       	ldi	r30, 0x26	; 38
     162:	fd e2       	ldi	r31, 0x2D	; 45
     164:	02 c0       	rjmp	.+4      	; 0x16a <.do_copy_data_start>

00000166 <.do_copy_data_loop>:
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0

0000016a <.do_copy_data_start>:
     16a:	a2 38       	cpi	r26, 0x82	; 130
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <.do_copy_data_loop>

00000170 <__do_clear_bss>:
     170:	11 e0       	ldi	r17, 0x01	; 1
     172:	a2 e8       	ldi	r26, 0x82	; 130
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a4 38       	cpi	r26, 0x84	; 132
     17c:	b1 07       	cpc	r27, r17
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 8f 11 	call	0x231e	; 0x231e <main>
     184:	0c 94 91 16 	jmp	0x2d22	; 0x2d22 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__fixunssfsi>:
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	7b 01       	movw	r14, r22
     196:	8c 01       	movw	r16, r24
     198:	20 e0       	ldi	r18, 0x00	; 0
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	40 e0       	ldi	r20, 0x00	; 0
     19e:	5f e4       	ldi	r21, 0x4F	; 79
     1a0:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__gesf2>
     1a4:	88 23       	and	r24, r24
     1a6:	8c f0       	brlt	.+34     	; 0x1ca <__fixunssfsi+0x3e>
     1a8:	c8 01       	movw	r24, r16
     1aa:	b7 01       	movw	r22, r14
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e0       	ldi	r20, 0x00	; 0
     1b2:	5f e4       	ldi	r21, 0x4F	; 79
     1b4:	0e 94 3e 02 	call	0x47c	; 0x47c <__subsf3>
     1b8:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     1bc:	9b 01       	movw	r18, r22
     1be:	ac 01       	movw	r20, r24
     1c0:	20 50       	subi	r18, 0x00	; 0
     1c2:	30 40       	sbci	r19, 0x00	; 0
     1c4:	40 40       	sbci	r20, 0x00	; 0
     1c6:	50 48       	sbci	r21, 0x80	; 128
     1c8:	06 c0       	rjmp	.+12     	; 0x1d6 <__fixunssfsi+0x4a>
     1ca:	c8 01       	movw	r24, r16
     1cc:	b7 01       	movw	r22, r14
     1ce:	0e 94 30 05 	call	0xa60	; 0xa60 <__fixsfsi>
     1d2:	9b 01       	movw	r18, r22
     1d4:	ac 01       	movw	r20, r24
     1d6:	b9 01       	movw	r22, r18
     1d8:	ca 01       	movw	r24, r20
     1da:	1f 91       	pop	r17
     1dc:	0f 91       	pop	r16
     1de:	ff 90       	pop	r15
     1e0:	ef 90       	pop	r14
     1e2:	08 95       	ret

000001e4 <_fpadd_parts>:
     1e4:	a0 e0       	ldi	r26, 0x00	; 0
     1e6:	b0 e0       	ldi	r27, 0x00	; 0
     1e8:	e8 ef       	ldi	r30, 0xF8	; 248
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	0c 94 ed 13 	jmp	0x27da	; 0x27da <__prologue_saves__>
     1f0:	dc 01       	movw	r26, r24
     1f2:	2b 01       	movw	r4, r22
     1f4:	fa 01       	movw	r30, r20
     1f6:	9c 91       	ld	r25, X
     1f8:	92 30       	cpi	r25, 0x02	; 2
     1fa:	08 f4       	brcc	.+2      	; 0x1fe <_fpadd_parts+0x1a>
     1fc:	39 c1       	rjmp	.+626    	; 0x470 <_fpadd_parts+0x28c>
     1fe:	eb 01       	movw	r28, r22
     200:	88 81       	ld	r24, Y
     202:	82 30       	cpi	r24, 0x02	; 2
     204:	08 f4       	brcc	.+2      	; 0x208 <_fpadd_parts+0x24>
     206:	33 c1       	rjmp	.+614    	; 0x46e <_fpadd_parts+0x28a>
     208:	94 30       	cpi	r25, 0x04	; 4
     20a:	69 f4       	brne	.+26     	; 0x226 <_fpadd_parts+0x42>
     20c:	84 30       	cpi	r24, 0x04	; 4
     20e:	09 f0       	breq	.+2      	; 0x212 <_fpadd_parts+0x2e>
     210:	2f c1       	rjmp	.+606    	; 0x470 <_fpadd_parts+0x28c>
     212:	11 96       	adiw	r26, 0x01	; 1
     214:	9c 91       	ld	r25, X
     216:	11 97       	sbiw	r26, 0x01	; 1
     218:	89 81       	ldd	r24, Y+1	; 0x01
     21a:	98 17       	cp	r25, r24
     21c:	09 f4       	brne	.+2      	; 0x220 <_fpadd_parts+0x3c>
     21e:	28 c1       	rjmp	.+592    	; 0x470 <_fpadd_parts+0x28c>
     220:	aa e7       	ldi	r26, 0x7A	; 122
     222:	b0 e0       	ldi	r27, 0x00	; 0
     224:	25 c1       	rjmp	.+586    	; 0x470 <_fpadd_parts+0x28c>
     226:	84 30       	cpi	r24, 0x04	; 4
     228:	09 f4       	brne	.+2      	; 0x22c <_fpadd_parts+0x48>
     22a:	21 c1       	rjmp	.+578    	; 0x46e <_fpadd_parts+0x28a>
     22c:	82 30       	cpi	r24, 0x02	; 2
     22e:	a9 f4       	brne	.+42     	; 0x25a <_fpadd_parts+0x76>
     230:	92 30       	cpi	r25, 0x02	; 2
     232:	09 f0       	breq	.+2      	; 0x236 <_fpadd_parts+0x52>
     234:	1d c1       	rjmp	.+570    	; 0x470 <_fpadd_parts+0x28c>
     236:	9a 01       	movw	r18, r20
     238:	ad 01       	movw	r20, r26
     23a:	88 e0       	ldi	r24, 0x08	; 8
     23c:	ea 01       	movw	r28, r20
     23e:	09 90       	ld	r0, Y+
     240:	ae 01       	movw	r20, r28
     242:	e9 01       	movw	r28, r18
     244:	09 92       	st	Y+, r0
     246:	9e 01       	movw	r18, r28
     248:	81 50       	subi	r24, 0x01	; 1
     24a:	c1 f7       	brne	.-16     	; 0x23c <_fpadd_parts+0x58>
     24c:	e2 01       	movw	r28, r4
     24e:	89 81       	ldd	r24, Y+1	; 0x01
     250:	11 96       	adiw	r26, 0x01	; 1
     252:	9c 91       	ld	r25, X
     254:	89 23       	and	r24, r25
     256:	81 83       	std	Z+1, r24	; 0x01
     258:	08 c1       	rjmp	.+528    	; 0x46a <_fpadd_parts+0x286>
     25a:	92 30       	cpi	r25, 0x02	; 2
     25c:	09 f4       	brne	.+2      	; 0x260 <_fpadd_parts+0x7c>
     25e:	07 c1       	rjmp	.+526    	; 0x46e <_fpadd_parts+0x28a>
     260:	12 96       	adiw	r26, 0x02	; 2
     262:	2d 90       	ld	r2, X+
     264:	3c 90       	ld	r3, X
     266:	13 97       	sbiw	r26, 0x03	; 3
     268:	eb 01       	movw	r28, r22
     26a:	8a 81       	ldd	r24, Y+2	; 0x02
     26c:	9b 81       	ldd	r25, Y+3	; 0x03
     26e:	14 96       	adiw	r26, 0x04	; 4
     270:	ad 90       	ld	r10, X+
     272:	bd 90       	ld	r11, X+
     274:	cd 90       	ld	r12, X+
     276:	dc 90       	ld	r13, X
     278:	17 97       	sbiw	r26, 0x07	; 7
     27a:	ec 80       	ldd	r14, Y+4	; 0x04
     27c:	fd 80       	ldd	r15, Y+5	; 0x05
     27e:	0e 81       	ldd	r16, Y+6	; 0x06
     280:	1f 81       	ldd	r17, Y+7	; 0x07
     282:	91 01       	movw	r18, r2
     284:	28 1b       	sub	r18, r24
     286:	39 0b       	sbc	r19, r25
     288:	b9 01       	movw	r22, r18
     28a:	37 ff       	sbrs	r19, 7
     28c:	04 c0       	rjmp	.+8      	; 0x296 <_fpadd_parts+0xb2>
     28e:	66 27       	eor	r22, r22
     290:	77 27       	eor	r23, r23
     292:	62 1b       	sub	r22, r18
     294:	73 0b       	sbc	r23, r19
     296:	60 32       	cpi	r22, 0x20	; 32
     298:	71 05       	cpc	r23, r1
     29a:	0c f0       	brlt	.+2      	; 0x29e <_fpadd_parts+0xba>
     29c:	61 c0       	rjmp	.+194    	; 0x360 <_fpadd_parts+0x17c>
     29e:	12 16       	cp	r1, r18
     2a0:	13 06       	cpc	r1, r19
     2a2:	6c f5       	brge	.+90     	; 0x2fe <_fpadd_parts+0x11a>
     2a4:	37 01       	movw	r6, r14
     2a6:	48 01       	movw	r8, r16
     2a8:	06 2e       	mov	r0, r22
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <_fpadd_parts+0xd0>
     2ac:	96 94       	lsr	r9
     2ae:	87 94       	ror	r8
     2b0:	77 94       	ror	r7
     2b2:	67 94       	ror	r6
     2b4:	0a 94       	dec	r0
     2b6:	d2 f7       	brpl	.-12     	; 0x2ac <_fpadd_parts+0xc8>
     2b8:	21 e0       	ldi	r18, 0x01	; 1
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e0       	ldi	r20, 0x00	; 0
     2be:	50 e0       	ldi	r21, 0x00	; 0
     2c0:	04 c0       	rjmp	.+8      	; 0x2ca <_fpadd_parts+0xe6>
     2c2:	22 0f       	add	r18, r18
     2c4:	33 1f       	adc	r19, r19
     2c6:	44 1f       	adc	r20, r20
     2c8:	55 1f       	adc	r21, r21
     2ca:	6a 95       	dec	r22
     2cc:	d2 f7       	brpl	.-12     	; 0x2c2 <_fpadd_parts+0xde>
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	30 40       	sbci	r19, 0x00	; 0
     2d2:	40 40       	sbci	r20, 0x00	; 0
     2d4:	50 40       	sbci	r21, 0x00	; 0
     2d6:	2e 21       	and	r18, r14
     2d8:	3f 21       	and	r19, r15
     2da:	40 23       	and	r20, r16
     2dc:	51 23       	and	r21, r17
     2de:	21 15       	cp	r18, r1
     2e0:	31 05       	cpc	r19, r1
     2e2:	41 05       	cpc	r20, r1
     2e4:	51 05       	cpc	r21, r1
     2e6:	21 f0       	breq	.+8      	; 0x2f0 <_fpadd_parts+0x10c>
     2e8:	21 e0       	ldi	r18, 0x01	; 1
     2ea:	30 e0       	ldi	r19, 0x00	; 0
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	79 01       	movw	r14, r18
     2f2:	8a 01       	movw	r16, r20
     2f4:	e6 28       	or	r14, r6
     2f6:	f7 28       	or	r15, r7
     2f8:	08 29       	or	r16, r8
     2fa:	19 29       	or	r17, r9
     2fc:	3c c0       	rjmp	.+120    	; 0x376 <_fpadd_parts+0x192>
     2fe:	23 2b       	or	r18, r19
     300:	d1 f1       	breq	.+116    	; 0x376 <_fpadd_parts+0x192>
     302:	26 0e       	add	r2, r22
     304:	37 1e       	adc	r3, r23
     306:	35 01       	movw	r6, r10
     308:	46 01       	movw	r8, r12
     30a:	06 2e       	mov	r0, r22
     30c:	04 c0       	rjmp	.+8      	; 0x316 <_fpadd_parts+0x132>
     30e:	96 94       	lsr	r9
     310:	87 94       	ror	r8
     312:	77 94       	ror	r7
     314:	67 94       	ror	r6
     316:	0a 94       	dec	r0
     318:	d2 f7       	brpl	.-12     	; 0x30e <_fpadd_parts+0x12a>
     31a:	21 e0       	ldi	r18, 0x01	; 1
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	04 c0       	rjmp	.+8      	; 0x32c <_fpadd_parts+0x148>
     324:	22 0f       	add	r18, r18
     326:	33 1f       	adc	r19, r19
     328:	44 1f       	adc	r20, r20
     32a:	55 1f       	adc	r21, r21
     32c:	6a 95       	dec	r22
     32e:	d2 f7       	brpl	.-12     	; 0x324 <_fpadd_parts+0x140>
     330:	21 50       	subi	r18, 0x01	; 1
     332:	30 40       	sbci	r19, 0x00	; 0
     334:	40 40       	sbci	r20, 0x00	; 0
     336:	50 40       	sbci	r21, 0x00	; 0
     338:	2a 21       	and	r18, r10
     33a:	3b 21       	and	r19, r11
     33c:	4c 21       	and	r20, r12
     33e:	5d 21       	and	r21, r13
     340:	21 15       	cp	r18, r1
     342:	31 05       	cpc	r19, r1
     344:	41 05       	cpc	r20, r1
     346:	51 05       	cpc	r21, r1
     348:	21 f0       	breq	.+8      	; 0x352 <_fpadd_parts+0x16e>
     34a:	21 e0       	ldi	r18, 0x01	; 1
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	40 e0       	ldi	r20, 0x00	; 0
     350:	50 e0       	ldi	r21, 0x00	; 0
     352:	59 01       	movw	r10, r18
     354:	6a 01       	movw	r12, r20
     356:	a6 28       	or	r10, r6
     358:	b7 28       	or	r11, r7
     35a:	c8 28       	or	r12, r8
     35c:	d9 28       	or	r13, r9
     35e:	0b c0       	rjmp	.+22     	; 0x376 <_fpadd_parts+0x192>
     360:	82 15       	cp	r24, r2
     362:	93 05       	cpc	r25, r3
     364:	2c f0       	brlt	.+10     	; 0x370 <_fpadd_parts+0x18c>
     366:	1c 01       	movw	r2, r24
     368:	aa 24       	eor	r10, r10
     36a:	bb 24       	eor	r11, r11
     36c:	65 01       	movw	r12, r10
     36e:	03 c0       	rjmp	.+6      	; 0x376 <_fpadd_parts+0x192>
     370:	ee 24       	eor	r14, r14
     372:	ff 24       	eor	r15, r15
     374:	87 01       	movw	r16, r14
     376:	11 96       	adiw	r26, 0x01	; 1
     378:	9c 91       	ld	r25, X
     37a:	d2 01       	movw	r26, r4
     37c:	11 96       	adiw	r26, 0x01	; 1
     37e:	8c 91       	ld	r24, X
     380:	98 17       	cp	r25, r24
     382:	09 f4       	brne	.+2      	; 0x386 <_fpadd_parts+0x1a2>
     384:	45 c0       	rjmp	.+138    	; 0x410 <_fpadd_parts+0x22c>
     386:	99 23       	and	r25, r25
     388:	39 f0       	breq	.+14     	; 0x398 <_fpadd_parts+0x1b4>
     38a:	a8 01       	movw	r20, r16
     38c:	97 01       	movw	r18, r14
     38e:	2a 19       	sub	r18, r10
     390:	3b 09       	sbc	r19, r11
     392:	4c 09       	sbc	r20, r12
     394:	5d 09       	sbc	r21, r13
     396:	06 c0       	rjmp	.+12     	; 0x3a4 <_fpadd_parts+0x1c0>
     398:	a6 01       	movw	r20, r12
     39a:	95 01       	movw	r18, r10
     39c:	2e 19       	sub	r18, r14
     39e:	3f 09       	sbc	r19, r15
     3a0:	40 0b       	sbc	r20, r16
     3a2:	51 0b       	sbc	r21, r17
     3a4:	57 fd       	sbrc	r21, 7
     3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <_fpadd_parts+0x1d4>
     3a8:	11 82       	std	Z+1, r1	; 0x01
     3aa:	33 82       	std	Z+3, r3	; 0x03
     3ac:	22 82       	std	Z+2, r2	; 0x02
     3ae:	24 83       	std	Z+4, r18	; 0x04
     3b0:	35 83       	std	Z+5, r19	; 0x05
     3b2:	46 83       	std	Z+6, r20	; 0x06
     3b4:	57 83       	std	Z+7, r21	; 0x07
     3b6:	1d c0       	rjmp	.+58     	; 0x3f2 <_fpadd_parts+0x20e>
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	81 83       	std	Z+1, r24	; 0x01
     3bc:	33 82       	std	Z+3, r3	; 0x03
     3be:	22 82       	std	Z+2, r2	; 0x02
     3c0:	88 27       	eor	r24, r24
     3c2:	99 27       	eor	r25, r25
     3c4:	dc 01       	movw	r26, r24
     3c6:	82 1b       	sub	r24, r18
     3c8:	93 0b       	sbc	r25, r19
     3ca:	a4 0b       	sbc	r26, r20
     3cc:	b5 0b       	sbc	r27, r21
     3ce:	84 83       	std	Z+4, r24	; 0x04
     3d0:	95 83       	std	Z+5, r25	; 0x05
     3d2:	a6 83       	std	Z+6, r26	; 0x06
     3d4:	b7 83       	std	Z+7, r27	; 0x07
     3d6:	0d c0       	rjmp	.+26     	; 0x3f2 <_fpadd_parts+0x20e>
     3d8:	22 0f       	add	r18, r18
     3da:	33 1f       	adc	r19, r19
     3dc:	44 1f       	adc	r20, r20
     3de:	55 1f       	adc	r21, r21
     3e0:	24 83       	std	Z+4, r18	; 0x04
     3e2:	35 83       	std	Z+5, r19	; 0x05
     3e4:	46 83       	std	Z+6, r20	; 0x06
     3e6:	57 83       	std	Z+7, r21	; 0x07
     3e8:	82 81       	ldd	r24, Z+2	; 0x02
     3ea:	93 81       	ldd	r25, Z+3	; 0x03
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	93 83       	std	Z+3, r25	; 0x03
     3f0:	82 83       	std	Z+2, r24	; 0x02
     3f2:	24 81       	ldd	r18, Z+4	; 0x04
     3f4:	35 81       	ldd	r19, Z+5	; 0x05
     3f6:	46 81       	ldd	r20, Z+6	; 0x06
     3f8:	57 81       	ldd	r21, Z+7	; 0x07
     3fa:	da 01       	movw	r26, r20
     3fc:	c9 01       	movw	r24, r18
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	a1 09       	sbc	r26, r1
     402:	b1 09       	sbc	r27, r1
     404:	8f 5f       	subi	r24, 0xFF	; 255
     406:	9f 4f       	sbci	r25, 0xFF	; 255
     408:	af 4f       	sbci	r26, 0xFF	; 255
     40a:	bf 43       	sbci	r27, 0x3F	; 63
     40c:	28 f3       	brcs	.-54     	; 0x3d8 <_fpadd_parts+0x1f4>
     40e:	0b c0       	rjmp	.+22     	; 0x426 <_fpadd_parts+0x242>
     410:	91 83       	std	Z+1, r25	; 0x01
     412:	33 82       	std	Z+3, r3	; 0x03
     414:	22 82       	std	Z+2, r2	; 0x02
     416:	ea 0c       	add	r14, r10
     418:	fb 1c       	adc	r15, r11
     41a:	0c 1d       	adc	r16, r12
     41c:	1d 1d       	adc	r17, r13
     41e:	e4 82       	std	Z+4, r14	; 0x04
     420:	f5 82       	std	Z+5, r15	; 0x05
     422:	06 83       	std	Z+6, r16	; 0x06
     424:	17 83       	std	Z+7, r17	; 0x07
     426:	83 e0       	ldi	r24, 0x03	; 3
     428:	80 83       	st	Z, r24
     42a:	24 81       	ldd	r18, Z+4	; 0x04
     42c:	35 81       	ldd	r19, Z+5	; 0x05
     42e:	46 81       	ldd	r20, Z+6	; 0x06
     430:	57 81       	ldd	r21, Z+7	; 0x07
     432:	57 ff       	sbrs	r21, 7
     434:	1a c0       	rjmp	.+52     	; 0x46a <_fpadd_parts+0x286>
     436:	c9 01       	movw	r24, r18
     438:	aa 27       	eor	r26, r26
     43a:	97 fd       	sbrc	r25, 7
     43c:	a0 95       	com	r26
     43e:	ba 2f       	mov	r27, r26
     440:	81 70       	andi	r24, 0x01	; 1
     442:	90 70       	andi	r25, 0x00	; 0
     444:	a0 70       	andi	r26, 0x00	; 0
     446:	b0 70       	andi	r27, 0x00	; 0
     448:	56 95       	lsr	r21
     44a:	47 95       	ror	r20
     44c:	37 95       	ror	r19
     44e:	27 95       	ror	r18
     450:	82 2b       	or	r24, r18
     452:	93 2b       	or	r25, r19
     454:	a4 2b       	or	r26, r20
     456:	b5 2b       	or	r27, r21
     458:	84 83       	std	Z+4, r24	; 0x04
     45a:	95 83       	std	Z+5, r25	; 0x05
     45c:	a6 83       	std	Z+6, r26	; 0x06
     45e:	b7 83       	std	Z+7, r27	; 0x07
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	93 81       	ldd	r25, Z+3	; 0x03
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	93 83       	std	Z+3, r25	; 0x03
     468:	82 83       	std	Z+2, r24	; 0x02
     46a:	df 01       	movw	r26, r30
     46c:	01 c0       	rjmp	.+2      	; 0x470 <_fpadd_parts+0x28c>
     46e:	d2 01       	movw	r26, r4
     470:	cd 01       	movw	r24, r26
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
     476:	e2 e1       	ldi	r30, 0x12	; 18
     478:	0c 94 09 14 	jmp	0x2812	; 0x2812 <__epilogue_restores__>

0000047c <__subsf3>:
     47c:	a0 e2       	ldi	r26, 0x20	; 32
     47e:	b0 e0       	ldi	r27, 0x00	; 0
     480:	e4 e4       	ldi	r30, 0x44	; 68
     482:	f2 e0       	ldi	r31, 0x02	; 2
     484:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__+0x18>
     488:	69 83       	std	Y+1, r22	; 0x01
     48a:	7a 83       	std	Y+2, r23	; 0x02
     48c:	8b 83       	std	Y+3, r24	; 0x03
     48e:	9c 83       	std	Y+4, r25	; 0x04
     490:	2d 83       	std	Y+5, r18	; 0x05
     492:	3e 83       	std	Y+6, r19	; 0x06
     494:	4f 83       	std	Y+7, r20	; 0x07
     496:	58 87       	std	Y+8, r21	; 0x08
     498:	e9 e0       	ldi	r30, 0x09	; 9
     49a:	ee 2e       	mov	r14, r30
     49c:	f1 2c       	mov	r15, r1
     49e:	ec 0e       	add	r14, r28
     4a0:	fd 1e       	adc	r15, r29
     4a2:	ce 01       	movw	r24, r28
     4a4:	01 96       	adiw	r24, 0x01	; 1
     4a6:	b7 01       	movw	r22, r14
     4a8:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     4ac:	8e 01       	movw	r16, r28
     4ae:	0f 5e       	subi	r16, 0xEF	; 239
     4b0:	1f 4f       	sbci	r17, 0xFF	; 255
     4b2:	ce 01       	movw	r24, r28
     4b4:	05 96       	adiw	r24, 0x05	; 5
     4b6:	b8 01       	movw	r22, r16
     4b8:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     4bc:	8a 89       	ldd	r24, Y+18	; 0x12
     4be:	91 e0       	ldi	r25, 0x01	; 1
     4c0:	89 27       	eor	r24, r25
     4c2:	8a 8b       	std	Y+18, r24	; 0x12
     4c4:	c7 01       	movw	r24, r14
     4c6:	b8 01       	movw	r22, r16
     4c8:	ae 01       	movw	r20, r28
     4ca:	47 5e       	subi	r20, 0xE7	; 231
     4cc:	5f 4f       	sbci	r21, 0xFF	; 255
     4ce:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     4d2:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     4d6:	a0 96       	adiw	r28, 0x20	; 32
     4d8:	e6 e0       	ldi	r30, 0x06	; 6
     4da:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__+0x18>

000004de <__addsf3>:
     4de:	a0 e2       	ldi	r26, 0x20	; 32
     4e0:	b0 e0       	ldi	r27, 0x00	; 0
     4e2:	e5 e7       	ldi	r30, 0x75	; 117
     4e4:	f2 e0       	ldi	r31, 0x02	; 2
     4e6:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__+0x18>
     4ea:	69 83       	std	Y+1, r22	; 0x01
     4ec:	7a 83       	std	Y+2, r23	; 0x02
     4ee:	8b 83       	std	Y+3, r24	; 0x03
     4f0:	9c 83       	std	Y+4, r25	; 0x04
     4f2:	2d 83       	std	Y+5, r18	; 0x05
     4f4:	3e 83       	std	Y+6, r19	; 0x06
     4f6:	4f 83       	std	Y+7, r20	; 0x07
     4f8:	58 87       	std	Y+8, r21	; 0x08
     4fa:	f9 e0       	ldi	r31, 0x09	; 9
     4fc:	ef 2e       	mov	r14, r31
     4fe:	f1 2c       	mov	r15, r1
     500:	ec 0e       	add	r14, r28
     502:	fd 1e       	adc	r15, r29
     504:	ce 01       	movw	r24, r28
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	b7 01       	movw	r22, r14
     50a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     50e:	8e 01       	movw	r16, r28
     510:	0f 5e       	subi	r16, 0xEF	; 239
     512:	1f 4f       	sbci	r17, 0xFF	; 255
     514:	ce 01       	movw	r24, r28
     516:	05 96       	adiw	r24, 0x05	; 5
     518:	b8 01       	movw	r22, r16
     51a:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     51e:	c7 01       	movw	r24, r14
     520:	b8 01       	movw	r22, r16
     522:	ae 01       	movw	r20, r28
     524:	47 5e       	subi	r20, 0xE7	; 231
     526:	5f 4f       	sbci	r21, 0xFF	; 255
     528:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <_fpadd_parts>
     52c:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     530:	a0 96       	adiw	r28, 0x20	; 32
     532:	e6 e0       	ldi	r30, 0x06	; 6
     534:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__+0x18>

00000538 <__mulsf3>:
     538:	a0 e2       	ldi	r26, 0x20	; 32
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	e2 ea       	ldi	r30, 0xA2	; 162
     53e:	f2 e0       	ldi	r31, 0x02	; 2
     540:	0c 94 ed 13 	jmp	0x27da	; 0x27da <__prologue_saves__>
     544:	69 83       	std	Y+1, r22	; 0x01
     546:	7a 83       	std	Y+2, r23	; 0x02
     548:	8b 83       	std	Y+3, r24	; 0x03
     54a:	9c 83       	std	Y+4, r25	; 0x04
     54c:	2d 83       	std	Y+5, r18	; 0x05
     54e:	3e 83       	std	Y+6, r19	; 0x06
     550:	4f 83       	std	Y+7, r20	; 0x07
     552:	58 87       	std	Y+8, r21	; 0x08
     554:	ce 01       	movw	r24, r28
     556:	01 96       	adiw	r24, 0x01	; 1
     558:	be 01       	movw	r22, r28
     55a:	67 5f       	subi	r22, 0xF7	; 247
     55c:	7f 4f       	sbci	r23, 0xFF	; 255
     55e:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     562:	ce 01       	movw	r24, r28
     564:	05 96       	adiw	r24, 0x05	; 5
     566:	be 01       	movw	r22, r28
     568:	6f 5e       	subi	r22, 0xEF	; 239
     56a:	7f 4f       	sbci	r23, 0xFF	; 255
     56c:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     570:	99 85       	ldd	r25, Y+9	; 0x09
     572:	92 30       	cpi	r25, 0x02	; 2
     574:	88 f0       	brcs	.+34     	; 0x598 <__mulsf3+0x60>
     576:	89 89       	ldd	r24, Y+17	; 0x11
     578:	82 30       	cpi	r24, 0x02	; 2
     57a:	c8 f0       	brcs	.+50     	; 0x5ae <__mulsf3+0x76>
     57c:	94 30       	cpi	r25, 0x04	; 4
     57e:	19 f4       	brne	.+6      	; 0x586 <__mulsf3+0x4e>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	51 f4       	brne	.+20     	; 0x598 <__mulsf3+0x60>
     584:	04 c0       	rjmp	.+8      	; 0x58e <__mulsf3+0x56>
     586:	84 30       	cpi	r24, 0x04	; 4
     588:	29 f4       	brne	.+10     	; 0x594 <__mulsf3+0x5c>
     58a:	92 30       	cpi	r25, 0x02	; 2
     58c:	81 f4       	brne	.+32     	; 0x5ae <__mulsf3+0x76>
     58e:	8a e7       	ldi	r24, 0x7A	; 122
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	c6 c0       	rjmp	.+396    	; 0x720 <__mulsf3+0x1e8>
     594:	92 30       	cpi	r25, 0x02	; 2
     596:	49 f4       	brne	.+18     	; 0x5aa <__mulsf3+0x72>
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	9a 85       	ldd	r25, Y+10	; 0x0a
     59c:	8a 89       	ldd	r24, Y+18	; 0x12
     59e:	98 13       	cpse	r25, r24
     5a0:	21 e0       	ldi	r18, 0x01	; 1
     5a2:	2a 87       	std	Y+10, r18	; 0x0a
     5a4:	ce 01       	movw	r24, r28
     5a6:	09 96       	adiw	r24, 0x09	; 9
     5a8:	bb c0       	rjmp	.+374    	; 0x720 <__mulsf3+0x1e8>
     5aa:	82 30       	cpi	r24, 0x02	; 2
     5ac:	49 f4       	brne	.+18     	; 0x5c0 <__mulsf3+0x88>
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     5b2:	8a 89       	ldd	r24, Y+18	; 0x12
     5b4:	98 13       	cpse	r25, r24
     5b6:	21 e0       	ldi	r18, 0x01	; 1
     5b8:	2a 8b       	std	Y+18, r18	; 0x12
     5ba:	ce 01       	movw	r24, r28
     5bc:	41 96       	adiw	r24, 0x11	; 17
     5be:	b0 c0       	rjmp	.+352    	; 0x720 <__mulsf3+0x1e8>
     5c0:	2d 84       	ldd	r2, Y+13	; 0x0d
     5c2:	3e 84       	ldd	r3, Y+14	; 0x0e
     5c4:	4f 84       	ldd	r4, Y+15	; 0x0f
     5c6:	58 88       	ldd	r5, Y+16	; 0x10
     5c8:	6d 88       	ldd	r6, Y+21	; 0x15
     5ca:	7e 88       	ldd	r7, Y+22	; 0x16
     5cc:	8f 88       	ldd	r8, Y+23	; 0x17
     5ce:	98 8c       	ldd	r9, Y+24	; 0x18
     5d0:	ee 24       	eor	r14, r14
     5d2:	ff 24       	eor	r15, r15
     5d4:	87 01       	movw	r16, r14
     5d6:	aa 24       	eor	r10, r10
     5d8:	bb 24       	eor	r11, r11
     5da:	65 01       	movw	r12, r10
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	60 e0       	ldi	r22, 0x00	; 0
     5e2:	70 e0       	ldi	r23, 0x00	; 0
     5e4:	e0 e0       	ldi	r30, 0x00	; 0
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	c1 01       	movw	r24, r2
     5ea:	81 70       	andi	r24, 0x01	; 1
     5ec:	90 70       	andi	r25, 0x00	; 0
     5ee:	89 2b       	or	r24, r25
     5f0:	e9 f0       	breq	.+58     	; 0x62c <__mulsf3+0xf4>
     5f2:	e6 0c       	add	r14, r6
     5f4:	f7 1c       	adc	r15, r7
     5f6:	08 1d       	adc	r16, r8
     5f8:	19 1d       	adc	r17, r9
     5fa:	9a 01       	movw	r18, r20
     5fc:	ab 01       	movw	r20, r22
     5fe:	2a 0d       	add	r18, r10
     600:	3b 1d       	adc	r19, r11
     602:	4c 1d       	adc	r20, r12
     604:	5d 1d       	adc	r21, r13
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	a0 e0       	ldi	r26, 0x00	; 0
     60c:	b0 e0       	ldi	r27, 0x00	; 0
     60e:	e6 14       	cp	r14, r6
     610:	f7 04       	cpc	r15, r7
     612:	08 05       	cpc	r16, r8
     614:	19 05       	cpc	r17, r9
     616:	20 f4       	brcc	.+8      	; 0x620 <__mulsf3+0xe8>
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a0 e0       	ldi	r26, 0x00	; 0
     61e:	b0 e0       	ldi	r27, 0x00	; 0
     620:	ba 01       	movw	r22, r20
     622:	a9 01       	movw	r20, r18
     624:	48 0f       	add	r20, r24
     626:	59 1f       	adc	r21, r25
     628:	6a 1f       	adc	r22, r26
     62a:	7b 1f       	adc	r23, r27
     62c:	aa 0c       	add	r10, r10
     62e:	bb 1c       	adc	r11, r11
     630:	cc 1c       	adc	r12, r12
     632:	dd 1c       	adc	r13, r13
     634:	97 fe       	sbrs	r9, 7
     636:	08 c0       	rjmp	.+16     	; 0x648 <__mulsf3+0x110>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	a0 e0       	ldi	r26, 0x00	; 0
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	a8 2a       	or	r10, r24
     642:	b9 2a       	or	r11, r25
     644:	ca 2a       	or	r12, r26
     646:	db 2a       	or	r13, r27
     648:	31 96       	adiw	r30, 0x01	; 1
     64a:	e0 32       	cpi	r30, 0x20	; 32
     64c:	f1 05       	cpc	r31, r1
     64e:	49 f0       	breq	.+18     	; 0x662 <__mulsf3+0x12a>
     650:	66 0c       	add	r6, r6
     652:	77 1c       	adc	r7, r7
     654:	88 1c       	adc	r8, r8
     656:	99 1c       	adc	r9, r9
     658:	56 94       	lsr	r5
     65a:	47 94       	ror	r4
     65c:	37 94       	ror	r3
     65e:	27 94       	ror	r2
     660:	c3 cf       	rjmp	.-122    	; 0x5e8 <__mulsf3+0xb0>
     662:	fa 85       	ldd	r31, Y+10	; 0x0a
     664:	ea 89       	ldd	r30, Y+18	; 0x12
     666:	2b 89       	ldd	r18, Y+19	; 0x13
     668:	3c 89       	ldd	r19, Y+20	; 0x14
     66a:	8b 85       	ldd	r24, Y+11	; 0x0b
     66c:	9c 85       	ldd	r25, Y+12	; 0x0c
     66e:	28 0f       	add	r18, r24
     670:	39 1f       	adc	r19, r25
     672:	2e 5f       	subi	r18, 0xFE	; 254
     674:	3f 4f       	sbci	r19, 0xFF	; 255
     676:	17 c0       	rjmp	.+46     	; 0x6a6 <__mulsf3+0x16e>
     678:	ca 01       	movw	r24, r20
     67a:	81 70       	andi	r24, 0x01	; 1
     67c:	90 70       	andi	r25, 0x00	; 0
     67e:	89 2b       	or	r24, r25
     680:	61 f0       	breq	.+24     	; 0x69a <__mulsf3+0x162>
     682:	16 95       	lsr	r17
     684:	07 95       	ror	r16
     686:	f7 94       	ror	r15
     688:	e7 94       	ror	r14
     68a:	80 e0       	ldi	r24, 0x00	; 0
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	a0 e0       	ldi	r26, 0x00	; 0
     690:	b0 e8       	ldi	r27, 0x80	; 128
     692:	e8 2a       	or	r14, r24
     694:	f9 2a       	or	r15, r25
     696:	0a 2b       	or	r16, r26
     698:	1b 2b       	or	r17, r27
     69a:	76 95       	lsr	r23
     69c:	67 95       	ror	r22
     69e:	57 95       	ror	r21
     6a0:	47 95       	ror	r20
     6a2:	2f 5f       	subi	r18, 0xFF	; 255
     6a4:	3f 4f       	sbci	r19, 0xFF	; 255
     6a6:	77 fd       	sbrc	r23, 7
     6a8:	e7 cf       	rjmp	.-50     	; 0x678 <__mulsf3+0x140>
     6aa:	0c c0       	rjmp	.+24     	; 0x6c4 <__mulsf3+0x18c>
     6ac:	44 0f       	add	r20, r20
     6ae:	55 1f       	adc	r21, r21
     6b0:	66 1f       	adc	r22, r22
     6b2:	77 1f       	adc	r23, r23
     6b4:	17 fd       	sbrc	r17, 7
     6b6:	41 60       	ori	r20, 0x01	; 1
     6b8:	ee 0c       	add	r14, r14
     6ba:	ff 1c       	adc	r15, r15
     6bc:	00 1f       	adc	r16, r16
     6be:	11 1f       	adc	r17, r17
     6c0:	21 50       	subi	r18, 0x01	; 1
     6c2:	30 40       	sbci	r19, 0x00	; 0
     6c4:	40 30       	cpi	r20, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	59 07       	cpc	r21, r25
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	69 07       	cpc	r22, r25
     6ce:	90 e4       	ldi	r25, 0x40	; 64
     6d0:	79 07       	cpc	r23, r25
     6d2:	60 f3       	brcs	.-40     	; 0x6ac <__mulsf3+0x174>
     6d4:	2b 8f       	std	Y+27, r18	; 0x1b
     6d6:	3c 8f       	std	Y+28, r19	; 0x1c
     6d8:	db 01       	movw	r26, r22
     6da:	ca 01       	movw	r24, r20
     6dc:	8f 77       	andi	r24, 0x7F	; 127
     6de:	90 70       	andi	r25, 0x00	; 0
     6e0:	a0 70       	andi	r26, 0x00	; 0
     6e2:	b0 70       	andi	r27, 0x00	; 0
     6e4:	80 34       	cpi	r24, 0x40	; 64
     6e6:	91 05       	cpc	r25, r1
     6e8:	a1 05       	cpc	r26, r1
     6ea:	b1 05       	cpc	r27, r1
     6ec:	61 f4       	brne	.+24     	; 0x706 <__mulsf3+0x1ce>
     6ee:	47 fd       	sbrc	r20, 7
     6f0:	0a c0       	rjmp	.+20     	; 0x706 <__mulsf3+0x1ce>
     6f2:	e1 14       	cp	r14, r1
     6f4:	f1 04       	cpc	r15, r1
     6f6:	01 05       	cpc	r16, r1
     6f8:	11 05       	cpc	r17, r1
     6fa:	29 f0       	breq	.+10     	; 0x706 <__mulsf3+0x1ce>
     6fc:	40 5c       	subi	r20, 0xC0	; 192
     6fe:	5f 4f       	sbci	r21, 0xFF	; 255
     700:	6f 4f       	sbci	r22, 0xFF	; 255
     702:	7f 4f       	sbci	r23, 0xFF	; 255
     704:	40 78       	andi	r20, 0x80	; 128
     706:	1a 8e       	std	Y+26, r1	; 0x1a
     708:	fe 17       	cp	r31, r30
     70a:	11 f0       	breq	.+4      	; 0x710 <__mulsf3+0x1d8>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	8a 8f       	std	Y+26, r24	; 0x1a
     710:	4d 8f       	std	Y+29, r20	; 0x1d
     712:	5e 8f       	std	Y+30, r21	; 0x1e
     714:	6f 8f       	std	Y+31, r22	; 0x1f
     716:	78 a3       	std	Y+32, r23	; 0x20
     718:	83 e0       	ldi	r24, 0x03	; 3
     71a:	89 8f       	std	Y+25, r24	; 0x19
     71c:	ce 01       	movw	r24, r28
     71e:	49 96       	adiw	r24, 0x19	; 25
     720:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     724:	a0 96       	adiw	r28, 0x20	; 32
     726:	e2 e1       	ldi	r30, 0x12	; 18
     728:	0c 94 09 14 	jmp	0x2812	; 0x2812 <__epilogue_restores__>

0000072c <__divsf3>:
     72c:	a8 e1       	ldi	r26, 0x18	; 24
     72e:	b0 e0       	ldi	r27, 0x00	; 0
     730:	ec e9       	ldi	r30, 0x9C	; 156
     732:	f3 e0       	ldi	r31, 0x03	; 3
     734:	0c 94 f5 13 	jmp	0x27ea	; 0x27ea <__prologue_saves__+0x10>
     738:	69 83       	std	Y+1, r22	; 0x01
     73a:	7a 83       	std	Y+2, r23	; 0x02
     73c:	8b 83       	std	Y+3, r24	; 0x03
     73e:	9c 83       	std	Y+4, r25	; 0x04
     740:	2d 83       	std	Y+5, r18	; 0x05
     742:	3e 83       	std	Y+6, r19	; 0x06
     744:	4f 83       	std	Y+7, r20	; 0x07
     746:	58 87       	std	Y+8, r21	; 0x08
     748:	b9 e0       	ldi	r27, 0x09	; 9
     74a:	eb 2e       	mov	r14, r27
     74c:	f1 2c       	mov	r15, r1
     74e:	ec 0e       	add	r14, r28
     750:	fd 1e       	adc	r15, r29
     752:	ce 01       	movw	r24, r28
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	b7 01       	movw	r22, r14
     758:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     75c:	8e 01       	movw	r16, r28
     75e:	0f 5e       	subi	r16, 0xEF	; 239
     760:	1f 4f       	sbci	r17, 0xFF	; 255
     762:	ce 01       	movw	r24, r28
     764:	05 96       	adiw	r24, 0x05	; 5
     766:	b8 01       	movw	r22, r16
     768:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     76c:	29 85       	ldd	r18, Y+9	; 0x09
     76e:	22 30       	cpi	r18, 0x02	; 2
     770:	08 f4       	brcc	.+2      	; 0x774 <__divsf3+0x48>
     772:	7e c0       	rjmp	.+252    	; 0x870 <__stack+0x11>
     774:	39 89       	ldd	r19, Y+17	; 0x11
     776:	32 30       	cpi	r19, 0x02	; 2
     778:	10 f4       	brcc	.+4      	; 0x77e <__divsf3+0x52>
     77a:	b8 01       	movw	r22, r16
     77c:	7c c0       	rjmp	.+248    	; 0x876 <__stack+0x17>
     77e:	8a 85       	ldd	r24, Y+10	; 0x0a
     780:	9a 89       	ldd	r25, Y+18	; 0x12
     782:	89 27       	eor	r24, r25
     784:	8a 87       	std	Y+10, r24	; 0x0a
     786:	24 30       	cpi	r18, 0x04	; 4
     788:	11 f0       	breq	.+4      	; 0x78e <__divsf3+0x62>
     78a:	22 30       	cpi	r18, 0x02	; 2
     78c:	31 f4       	brne	.+12     	; 0x79a <__divsf3+0x6e>
     78e:	23 17       	cp	r18, r19
     790:	09 f0       	breq	.+2      	; 0x794 <__divsf3+0x68>
     792:	6e c0       	rjmp	.+220    	; 0x870 <__stack+0x11>
     794:	6a e7       	ldi	r22, 0x7A	; 122
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	6e c0       	rjmp	.+220    	; 0x876 <__stack+0x17>
     79a:	34 30       	cpi	r19, 0x04	; 4
     79c:	39 f4       	brne	.+14     	; 0x7ac <__divsf3+0x80>
     79e:	1d 86       	std	Y+13, r1	; 0x0d
     7a0:	1e 86       	std	Y+14, r1	; 0x0e
     7a2:	1f 86       	std	Y+15, r1	; 0x0f
     7a4:	18 8a       	std	Y+16, r1	; 0x10
     7a6:	1c 86       	std	Y+12, r1	; 0x0c
     7a8:	1b 86       	std	Y+11, r1	; 0x0b
     7aa:	04 c0       	rjmp	.+8      	; 0x7b4 <__divsf3+0x88>
     7ac:	32 30       	cpi	r19, 0x02	; 2
     7ae:	21 f4       	brne	.+8      	; 0x7b8 <__divsf3+0x8c>
     7b0:	84 e0       	ldi	r24, 0x04	; 4
     7b2:	89 87       	std	Y+9, r24	; 0x09
     7b4:	b7 01       	movw	r22, r14
     7b6:	5f c0       	rjmp	.+190    	; 0x876 <__stack+0x17>
     7b8:	2b 85       	ldd	r18, Y+11	; 0x0b
     7ba:	3c 85       	ldd	r19, Y+12	; 0x0c
     7bc:	8b 89       	ldd	r24, Y+19	; 0x13
     7be:	9c 89       	ldd	r25, Y+20	; 0x14
     7c0:	28 1b       	sub	r18, r24
     7c2:	39 0b       	sbc	r19, r25
     7c4:	3c 87       	std	Y+12, r19	; 0x0c
     7c6:	2b 87       	std	Y+11, r18	; 0x0b
     7c8:	ed 84       	ldd	r14, Y+13	; 0x0d
     7ca:	fe 84       	ldd	r15, Y+14	; 0x0e
     7cc:	0f 85       	ldd	r16, Y+15	; 0x0f
     7ce:	18 89       	ldd	r17, Y+16	; 0x10
     7d0:	ad 88       	ldd	r10, Y+21	; 0x15
     7d2:	be 88       	ldd	r11, Y+22	; 0x16
     7d4:	cf 88       	ldd	r12, Y+23	; 0x17
     7d6:	d8 8c       	ldd	r13, Y+24	; 0x18
     7d8:	ea 14       	cp	r14, r10
     7da:	fb 04       	cpc	r15, r11
     7dc:	0c 05       	cpc	r16, r12
     7de:	1d 05       	cpc	r17, r13
     7e0:	40 f4       	brcc	.+16     	; 0x7f2 <__divsf3+0xc6>
     7e2:	ee 0c       	add	r14, r14
     7e4:	ff 1c       	adc	r15, r15
     7e6:	00 1f       	adc	r16, r16
     7e8:	11 1f       	adc	r17, r17
     7ea:	21 50       	subi	r18, 0x01	; 1
     7ec:	30 40       	sbci	r19, 0x00	; 0
     7ee:	3c 87       	std	Y+12, r19	; 0x0c
     7f0:	2b 87       	std	Y+11, r18	; 0x0b
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	40 e0       	ldi	r20, 0x00	; 0
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	a0 e0       	ldi	r26, 0x00	; 0
     800:	b0 e4       	ldi	r27, 0x40	; 64
     802:	60 e0       	ldi	r22, 0x00	; 0
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	ea 14       	cp	r14, r10
     808:	fb 04       	cpc	r15, r11
     80a:	0c 05       	cpc	r16, r12
     80c:	1d 05       	cpc	r17, r13
     80e:	40 f0       	brcs	.+16     	; 0x820 <__divsf3+0xf4>
     810:	28 2b       	or	r18, r24
     812:	39 2b       	or	r19, r25
     814:	4a 2b       	or	r20, r26
     816:	5b 2b       	or	r21, r27
     818:	ea 18       	sub	r14, r10
     81a:	fb 08       	sbc	r15, r11
     81c:	0c 09       	sbc	r16, r12
     81e:	1d 09       	sbc	r17, r13
     820:	b6 95       	lsr	r27
     822:	a7 95       	ror	r26
     824:	97 95       	ror	r25
     826:	87 95       	ror	r24
     828:	ee 0c       	add	r14, r14
     82a:	ff 1c       	adc	r15, r15
     82c:	00 1f       	adc	r16, r16
     82e:	11 1f       	adc	r17, r17
     830:	6f 5f       	subi	r22, 0xFF	; 255
     832:	7f 4f       	sbci	r23, 0xFF	; 255
     834:	6f 31       	cpi	r22, 0x1F	; 31
     836:	71 05       	cpc	r23, r1
     838:	31 f7       	brne	.-52     	; 0x806 <__divsf3+0xda>
     83a:	da 01       	movw	r26, r20
     83c:	c9 01       	movw	r24, r18
     83e:	8f 77       	andi	r24, 0x7F	; 127
     840:	90 70       	andi	r25, 0x00	; 0
     842:	a0 70       	andi	r26, 0x00	; 0
     844:	b0 70       	andi	r27, 0x00	; 0
     846:	80 34       	cpi	r24, 0x40	; 64
     848:	91 05       	cpc	r25, r1
     84a:	a1 05       	cpc	r26, r1
     84c:	b1 05       	cpc	r27, r1
     84e:	61 f4       	brne	.+24     	; 0x868 <__stack+0x9>
     850:	27 fd       	sbrc	r18, 7
     852:	0a c0       	rjmp	.+20     	; 0x868 <__stack+0x9>
     854:	e1 14       	cp	r14, r1
     856:	f1 04       	cpc	r15, r1
     858:	01 05       	cpc	r16, r1
     85a:	11 05       	cpc	r17, r1
     85c:	29 f0       	breq	.+10     	; 0x868 <__stack+0x9>
     85e:	20 5c       	subi	r18, 0xC0	; 192
     860:	3f 4f       	sbci	r19, 0xFF	; 255
     862:	4f 4f       	sbci	r20, 0xFF	; 255
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	20 78       	andi	r18, 0x80	; 128
     868:	2d 87       	std	Y+13, r18	; 0x0d
     86a:	3e 87       	std	Y+14, r19	; 0x0e
     86c:	4f 87       	std	Y+15, r20	; 0x0f
     86e:	58 8b       	std	Y+16, r21	; 0x10
     870:	be 01       	movw	r22, r28
     872:	67 5f       	subi	r22, 0xF7	; 247
     874:	7f 4f       	sbci	r23, 0xFF	; 255
     876:	cb 01       	movw	r24, r22
     878:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     87c:	68 96       	adiw	r28, 0x18	; 24
     87e:	ea e0       	ldi	r30, 0x0A	; 10
     880:	0c 94 11 14 	jmp	0x2822	; 0x2822 <__epilogue_restores__+0x10>

00000884 <__gtsf2>:
     884:	a8 e1       	ldi	r26, 0x18	; 24
     886:	b0 e0       	ldi	r27, 0x00	; 0
     888:	e8 e4       	ldi	r30, 0x48	; 72
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__+0x18>
     890:	69 83       	std	Y+1, r22	; 0x01
     892:	7a 83       	std	Y+2, r23	; 0x02
     894:	8b 83       	std	Y+3, r24	; 0x03
     896:	9c 83       	std	Y+4, r25	; 0x04
     898:	2d 83       	std	Y+5, r18	; 0x05
     89a:	3e 83       	std	Y+6, r19	; 0x06
     89c:	4f 83       	std	Y+7, r20	; 0x07
     89e:	58 87       	std	Y+8, r21	; 0x08
     8a0:	89 e0       	ldi	r24, 0x09	; 9
     8a2:	e8 2e       	mov	r14, r24
     8a4:	f1 2c       	mov	r15, r1
     8a6:	ec 0e       	add	r14, r28
     8a8:	fd 1e       	adc	r15, r29
     8aa:	ce 01       	movw	r24, r28
     8ac:	01 96       	adiw	r24, 0x01	; 1
     8ae:	b7 01       	movw	r22, r14
     8b0:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5e       	subi	r16, 0xEF	; 239
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	ce 01       	movw	r24, r28
     8bc:	05 96       	adiw	r24, 0x05	; 5
     8be:	b8 01       	movw	r22, r16
     8c0:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     8c4:	89 85       	ldd	r24, Y+9	; 0x09
     8c6:	82 30       	cpi	r24, 0x02	; 2
     8c8:	40 f0       	brcs	.+16     	; 0x8da <__gtsf2+0x56>
     8ca:	89 89       	ldd	r24, Y+17	; 0x11
     8cc:	82 30       	cpi	r24, 0x02	; 2
     8ce:	28 f0       	brcs	.+10     	; 0x8da <__gtsf2+0x56>
     8d0:	c7 01       	movw	r24, r14
     8d2:	b8 01       	movw	r22, r16
     8d4:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     8d8:	01 c0       	rjmp	.+2      	; 0x8dc <__gtsf2+0x58>
     8da:	8f ef       	ldi	r24, 0xFF	; 255
     8dc:	68 96       	adiw	r28, 0x18	; 24
     8de:	e6 e0       	ldi	r30, 0x06	; 6
     8e0:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__+0x18>

000008e4 <__gesf2>:
     8e4:	a8 e1       	ldi	r26, 0x18	; 24
     8e6:	b0 e0       	ldi	r27, 0x00	; 0
     8e8:	e8 e7       	ldi	r30, 0x78	; 120
     8ea:	f4 e0       	ldi	r31, 0x04	; 4
     8ec:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__+0x18>
     8f0:	69 83       	std	Y+1, r22	; 0x01
     8f2:	7a 83       	std	Y+2, r23	; 0x02
     8f4:	8b 83       	std	Y+3, r24	; 0x03
     8f6:	9c 83       	std	Y+4, r25	; 0x04
     8f8:	2d 83       	std	Y+5, r18	; 0x05
     8fa:	3e 83       	std	Y+6, r19	; 0x06
     8fc:	4f 83       	std	Y+7, r20	; 0x07
     8fe:	58 87       	std	Y+8, r21	; 0x08
     900:	89 e0       	ldi	r24, 0x09	; 9
     902:	e8 2e       	mov	r14, r24
     904:	f1 2c       	mov	r15, r1
     906:	ec 0e       	add	r14, r28
     908:	fd 1e       	adc	r15, r29
     90a:	ce 01       	movw	r24, r28
     90c:	01 96       	adiw	r24, 0x01	; 1
     90e:	b7 01       	movw	r22, r14
     910:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     914:	8e 01       	movw	r16, r28
     916:	0f 5e       	subi	r16, 0xEF	; 239
     918:	1f 4f       	sbci	r17, 0xFF	; 255
     91a:	ce 01       	movw	r24, r28
     91c:	05 96       	adiw	r24, 0x05	; 5
     91e:	b8 01       	movw	r22, r16
     920:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     924:	89 85       	ldd	r24, Y+9	; 0x09
     926:	82 30       	cpi	r24, 0x02	; 2
     928:	40 f0       	brcs	.+16     	; 0x93a <__gesf2+0x56>
     92a:	89 89       	ldd	r24, Y+17	; 0x11
     92c:	82 30       	cpi	r24, 0x02	; 2
     92e:	28 f0       	brcs	.+10     	; 0x93a <__gesf2+0x56>
     930:	c7 01       	movw	r24, r14
     932:	b8 01       	movw	r22, r16
     934:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     938:	01 c0       	rjmp	.+2      	; 0x93c <__gesf2+0x58>
     93a:	8f ef       	ldi	r24, 0xFF	; 255
     93c:	68 96       	adiw	r28, 0x18	; 24
     93e:	e6 e0       	ldi	r30, 0x06	; 6
     940:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__+0x18>

00000944 <__ltsf2>:
     944:	a8 e1       	ldi	r26, 0x18	; 24
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	e8 ea       	ldi	r30, 0xA8	; 168
     94a:	f4 e0       	ldi	r31, 0x04	; 4
     94c:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <__prologue_saves__+0x18>
     950:	69 83       	std	Y+1, r22	; 0x01
     952:	7a 83       	std	Y+2, r23	; 0x02
     954:	8b 83       	std	Y+3, r24	; 0x03
     956:	9c 83       	std	Y+4, r25	; 0x04
     958:	2d 83       	std	Y+5, r18	; 0x05
     95a:	3e 83       	std	Y+6, r19	; 0x06
     95c:	4f 83       	std	Y+7, r20	; 0x07
     95e:	58 87       	std	Y+8, r21	; 0x08
     960:	89 e0       	ldi	r24, 0x09	; 9
     962:	e8 2e       	mov	r14, r24
     964:	f1 2c       	mov	r15, r1
     966:	ec 0e       	add	r14, r28
     968:	fd 1e       	adc	r15, r29
     96a:	ce 01       	movw	r24, r28
     96c:	01 96       	adiw	r24, 0x01	; 1
     96e:	b7 01       	movw	r22, r14
     970:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     974:	8e 01       	movw	r16, r28
     976:	0f 5e       	subi	r16, 0xEF	; 239
     978:	1f 4f       	sbci	r17, 0xFF	; 255
     97a:	ce 01       	movw	r24, r28
     97c:	05 96       	adiw	r24, 0x05	; 5
     97e:	b8 01       	movw	r22, r16
     980:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     984:	89 85       	ldd	r24, Y+9	; 0x09
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	40 f0       	brcs	.+16     	; 0x99a <__ltsf2+0x56>
     98a:	89 89       	ldd	r24, Y+17	; 0x11
     98c:	82 30       	cpi	r24, 0x02	; 2
     98e:	28 f0       	brcs	.+10     	; 0x99a <__ltsf2+0x56>
     990:	c7 01       	movw	r24, r14
     992:	b8 01       	movw	r22, r16
     994:	0e 94 20 07 	call	0xe40	; 0xe40 <__fpcmp_parts_f>
     998:	01 c0       	rjmp	.+2      	; 0x99c <__ltsf2+0x58>
     99a:	81 e0       	ldi	r24, 0x01	; 1
     99c:	68 96       	adiw	r28, 0x18	; 24
     99e:	e6 e0       	ldi	r30, 0x06	; 6
     9a0:	0c 94 15 14 	jmp	0x282a	; 0x282a <__epilogue_restores__+0x18>

000009a4 <__floatsisf>:
     9a4:	a8 e0       	ldi	r26, 0x08	; 8
     9a6:	b0 e0       	ldi	r27, 0x00	; 0
     9a8:	e8 ed       	ldi	r30, 0xD8	; 216
     9aa:	f4 e0       	ldi	r31, 0x04	; 4
     9ac:	0c 94 f6 13 	jmp	0x27ec	; 0x27ec <__prologue_saves__+0x12>
     9b0:	9b 01       	movw	r18, r22
     9b2:	ac 01       	movw	r20, r24
     9b4:	83 e0       	ldi	r24, 0x03	; 3
     9b6:	89 83       	std	Y+1, r24	; 0x01
     9b8:	da 01       	movw	r26, r20
     9ba:	c9 01       	movw	r24, r18
     9bc:	88 27       	eor	r24, r24
     9be:	b7 fd       	sbrc	r27, 7
     9c0:	83 95       	inc	r24
     9c2:	99 27       	eor	r25, r25
     9c4:	aa 27       	eor	r26, r26
     9c6:	bb 27       	eor	r27, r27
     9c8:	b8 2e       	mov	r11, r24
     9ca:	21 15       	cp	r18, r1
     9cc:	31 05       	cpc	r19, r1
     9ce:	41 05       	cpc	r20, r1
     9d0:	51 05       	cpc	r21, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__floatsisf+0x36>
     9d4:	82 e0       	ldi	r24, 0x02	; 2
     9d6:	89 83       	std	Y+1, r24	; 0x01
     9d8:	3a c0       	rjmp	.+116    	; 0xa4e <__floatsisf+0xaa>
     9da:	88 23       	and	r24, r24
     9dc:	a9 f0       	breq	.+42     	; 0xa08 <__floatsisf+0x64>
     9de:	20 30       	cpi	r18, 0x00	; 0
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	38 07       	cpc	r19, r24
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	48 07       	cpc	r20, r24
     9e8:	80 e8       	ldi	r24, 0x80	; 128
     9ea:	58 07       	cpc	r21, r24
     9ec:	29 f4       	brne	.+10     	; 0x9f8 <__floatsisf+0x54>
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	9f ec       	ldi	r25, 0xCF	; 207
     9f6:	30 c0       	rjmp	.+96     	; 0xa58 <__floatsisf+0xb4>
     9f8:	ee 24       	eor	r14, r14
     9fa:	ff 24       	eor	r15, r15
     9fc:	87 01       	movw	r16, r14
     9fe:	e2 1a       	sub	r14, r18
     a00:	f3 0a       	sbc	r15, r19
     a02:	04 0b       	sbc	r16, r20
     a04:	15 0b       	sbc	r17, r21
     a06:	02 c0       	rjmp	.+4      	; 0xa0c <__floatsisf+0x68>
     a08:	79 01       	movw	r14, r18
     a0a:	8a 01       	movw	r16, r20
     a0c:	8e e1       	ldi	r24, 0x1E	; 30
     a0e:	c8 2e       	mov	r12, r24
     a10:	d1 2c       	mov	r13, r1
     a12:	dc 82       	std	Y+4, r13	; 0x04
     a14:	cb 82       	std	Y+3, r12	; 0x03
     a16:	ed 82       	std	Y+5, r14	; 0x05
     a18:	fe 82       	std	Y+6, r15	; 0x06
     a1a:	0f 83       	std	Y+7, r16	; 0x07
     a1c:	18 87       	std	Y+8, r17	; 0x08
     a1e:	c8 01       	movw	r24, r16
     a20:	b7 01       	movw	r22, r14
     a22:	0e 94 84 05 	call	0xb08	; 0xb08 <__clzsi2>
     a26:	01 97       	sbiw	r24, 0x01	; 1
     a28:	18 16       	cp	r1, r24
     a2a:	19 06       	cpc	r1, r25
     a2c:	84 f4       	brge	.+32     	; 0xa4e <__floatsisf+0xaa>
     a2e:	08 2e       	mov	r0, r24
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__floatsisf+0x96>
     a32:	ee 0c       	add	r14, r14
     a34:	ff 1c       	adc	r15, r15
     a36:	00 1f       	adc	r16, r16
     a38:	11 1f       	adc	r17, r17
     a3a:	0a 94       	dec	r0
     a3c:	d2 f7       	brpl	.-12     	; 0xa32 <__floatsisf+0x8e>
     a3e:	ed 82       	std	Y+5, r14	; 0x05
     a40:	fe 82       	std	Y+6, r15	; 0x06
     a42:	0f 83       	std	Y+7, r16	; 0x07
     a44:	18 87       	std	Y+8, r17	; 0x08
     a46:	c8 1a       	sub	r12, r24
     a48:	d9 0a       	sbc	r13, r25
     a4a:	dc 82       	std	Y+4, r13	; 0x04
     a4c:	cb 82       	std	Y+3, r12	; 0x03
     a4e:	ba 82       	std	Y+2, r11	; 0x02
     a50:	ce 01       	movw	r24, r28
     a52:	01 96       	adiw	r24, 0x01	; 1
     a54:	0e 94 d3 05 	call	0xba6	; 0xba6 <__pack_f>
     a58:	28 96       	adiw	r28, 0x08	; 8
     a5a:	e9 e0       	ldi	r30, 0x09	; 9
     a5c:	0c 94 12 14 	jmp	0x2824	; 0x2824 <__epilogue_restores__+0x12>

00000a60 <__fixsfsi>:
     a60:	ac e0       	ldi	r26, 0x0C	; 12
     a62:	b0 e0       	ldi	r27, 0x00	; 0
     a64:	e6 e3       	ldi	r30, 0x36	; 54
     a66:	f5 e0       	ldi	r31, 0x05	; 5
     a68:	0c 94 fd 13 	jmp	0x27fa	; 0x27fa <__prologue_saves__+0x20>
     a6c:	69 83       	std	Y+1, r22	; 0x01
     a6e:	7a 83       	std	Y+2, r23	; 0x02
     a70:	8b 83       	std	Y+3, r24	; 0x03
     a72:	9c 83       	std	Y+4, r25	; 0x04
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	be 01       	movw	r22, r28
     a7a:	6b 5f       	subi	r22, 0xFB	; 251
     a7c:	7f 4f       	sbci	r23, 0xFF	; 255
     a7e:	0e 94 a8 06 	call	0xd50	; 0xd50 <__unpack_f>
     a82:	8d 81       	ldd	r24, Y+5	; 0x05
     a84:	82 30       	cpi	r24, 0x02	; 2
     a86:	61 f1       	breq	.+88     	; 0xae0 <__fixsfsi+0x80>
     a88:	82 30       	cpi	r24, 0x02	; 2
     a8a:	50 f1       	brcs	.+84     	; 0xae0 <__fixsfsi+0x80>
     a8c:	84 30       	cpi	r24, 0x04	; 4
     a8e:	21 f4       	brne	.+8      	; 0xa98 <__fixsfsi+0x38>
     a90:	8e 81       	ldd	r24, Y+6	; 0x06
     a92:	88 23       	and	r24, r24
     a94:	51 f1       	breq	.+84     	; 0xaea <__fixsfsi+0x8a>
     a96:	2e c0       	rjmp	.+92     	; 0xaf4 <__fixsfsi+0x94>
     a98:	2f 81       	ldd	r18, Y+7	; 0x07
     a9a:	38 85       	ldd	r19, Y+8	; 0x08
     a9c:	37 fd       	sbrc	r19, 7
     a9e:	20 c0       	rjmp	.+64     	; 0xae0 <__fixsfsi+0x80>
     aa0:	6e 81       	ldd	r22, Y+6	; 0x06
     aa2:	2f 31       	cpi	r18, 0x1F	; 31
     aa4:	31 05       	cpc	r19, r1
     aa6:	1c f0       	brlt	.+6      	; 0xaae <__fixsfsi+0x4e>
     aa8:	66 23       	and	r22, r22
     aaa:	f9 f0       	breq	.+62     	; 0xaea <__fixsfsi+0x8a>
     aac:	23 c0       	rjmp	.+70     	; 0xaf4 <__fixsfsi+0x94>
     aae:	8e e1       	ldi	r24, 0x1E	; 30
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	82 1b       	sub	r24, r18
     ab4:	93 0b       	sbc	r25, r19
     ab6:	29 85       	ldd	r18, Y+9	; 0x09
     ab8:	3a 85       	ldd	r19, Y+10	; 0x0a
     aba:	4b 85       	ldd	r20, Y+11	; 0x0b
     abc:	5c 85       	ldd	r21, Y+12	; 0x0c
     abe:	04 c0       	rjmp	.+8      	; 0xac8 <__fixsfsi+0x68>
     ac0:	56 95       	lsr	r21
     ac2:	47 95       	ror	r20
     ac4:	37 95       	ror	r19
     ac6:	27 95       	ror	r18
     ac8:	8a 95       	dec	r24
     aca:	d2 f7       	brpl	.-12     	; 0xac0 <__fixsfsi+0x60>
     acc:	66 23       	and	r22, r22
     ace:	b1 f0       	breq	.+44     	; 0xafc <__fixsfsi+0x9c>
     ad0:	50 95       	com	r21
     ad2:	40 95       	com	r20
     ad4:	30 95       	com	r19
     ad6:	21 95       	neg	r18
     ad8:	3f 4f       	sbci	r19, 0xFF	; 255
     ada:	4f 4f       	sbci	r20, 0xFF	; 255
     adc:	5f 4f       	sbci	r21, 0xFF	; 255
     ade:	0e c0       	rjmp	.+28     	; 0xafc <__fixsfsi+0x9c>
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	40 e0       	ldi	r20, 0x00	; 0
     ae6:	50 e0       	ldi	r21, 0x00	; 0
     ae8:	09 c0       	rjmp	.+18     	; 0xafc <__fixsfsi+0x9c>
     aea:	2f ef       	ldi	r18, 0xFF	; 255
     aec:	3f ef       	ldi	r19, 0xFF	; 255
     aee:	4f ef       	ldi	r20, 0xFF	; 255
     af0:	5f e7       	ldi	r21, 0x7F	; 127
     af2:	04 c0       	rjmp	.+8      	; 0xafc <__fixsfsi+0x9c>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	50 e8       	ldi	r21, 0x80	; 128
     afc:	b9 01       	movw	r22, r18
     afe:	ca 01       	movw	r24, r20
     b00:	2c 96       	adiw	r28, 0x0c	; 12
     b02:	e2 e0       	ldi	r30, 0x02	; 2
     b04:	0c 94 19 14 	jmp	0x2832	; 0x2832 <__epilogue_restores__+0x20>

00000b08 <__clzsi2>:
     b08:	ef 92       	push	r14
     b0a:	ff 92       	push	r15
     b0c:	0f 93       	push	r16
     b0e:	1f 93       	push	r17
     b10:	7b 01       	movw	r14, r22
     b12:	8c 01       	movw	r16, r24
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	e8 16       	cp	r14, r24
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	f8 06       	cpc	r15, r24
     b1c:	81 e0       	ldi	r24, 0x01	; 1
     b1e:	08 07       	cpc	r16, r24
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	18 07       	cpc	r17, r24
     b24:	88 f4       	brcc	.+34     	; 0xb48 <__clzsi2+0x40>
     b26:	8f ef       	ldi	r24, 0xFF	; 255
     b28:	e8 16       	cp	r14, r24
     b2a:	f1 04       	cpc	r15, r1
     b2c:	01 05       	cpc	r16, r1
     b2e:	11 05       	cpc	r17, r1
     b30:	31 f0       	breq	.+12     	; 0xb3e <__clzsi2+0x36>
     b32:	28 f0       	brcs	.+10     	; 0xb3e <__clzsi2+0x36>
     b34:	88 e0       	ldi	r24, 0x08	; 8
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	a0 e0       	ldi	r26, 0x00	; 0
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	17 c0       	rjmp	.+46     	; 0xb6c <__clzsi2+0x64>
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	a0 e0       	ldi	r26, 0x00	; 0
     b44:	b0 e0       	ldi	r27, 0x00	; 0
     b46:	12 c0       	rjmp	.+36     	; 0xb6c <__clzsi2+0x64>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	e8 16       	cp	r14, r24
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	f8 06       	cpc	r15, r24
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	08 07       	cpc	r16, r24
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	18 07       	cpc	r17, r24
     b58:	28 f0       	brcs	.+10     	; 0xb64 <__clzsi2+0x5c>
     b5a:	88 e1       	ldi	r24, 0x18	; 24
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	a0 e0       	ldi	r26, 0x00	; 0
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	04 c0       	rjmp	.+8      	; 0xb6c <__clzsi2+0x64>
     b64:	80 e1       	ldi	r24, 0x10	; 16
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	a0 e0       	ldi	r26, 0x00	; 0
     b6a:	b0 e0       	ldi	r27, 0x00	; 0
     b6c:	20 e2       	ldi	r18, 0x20	; 32
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	40 e0       	ldi	r20, 0x00	; 0
     b72:	50 e0       	ldi	r21, 0x00	; 0
     b74:	28 1b       	sub	r18, r24
     b76:	39 0b       	sbc	r19, r25
     b78:	4a 0b       	sbc	r20, r26
     b7a:	5b 0b       	sbc	r21, r27
     b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__clzsi2+0x7e>
     b7e:	16 95       	lsr	r17
     b80:	07 95       	ror	r16
     b82:	f7 94       	ror	r15
     b84:	e7 94       	ror	r14
     b86:	8a 95       	dec	r24
     b88:	d2 f7       	brpl	.-12     	; 0xb7e <__clzsi2+0x76>
     b8a:	f7 01       	movw	r30, r14
     b8c:	ee 57       	subi	r30, 0x7E	; 126
     b8e:	ff 4f       	sbci	r31, 0xFF	; 255
     b90:	80 81       	ld	r24, Z
     b92:	28 1b       	sub	r18, r24
     b94:	31 09       	sbc	r19, r1
     b96:	41 09       	sbc	r20, r1
     b98:	51 09       	sbc	r21, r1
     b9a:	c9 01       	movw	r24, r18
     b9c:	1f 91       	pop	r17
     b9e:	0f 91       	pop	r16
     ba0:	ff 90       	pop	r15
     ba2:	ef 90       	pop	r14
     ba4:	08 95       	ret

00000ba6 <__pack_f>:
     ba6:	df 92       	push	r13
     ba8:	ef 92       	push	r14
     baa:	ff 92       	push	r15
     bac:	0f 93       	push	r16
     bae:	1f 93       	push	r17
     bb0:	fc 01       	movw	r30, r24
     bb2:	e4 80       	ldd	r14, Z+4	; 0x04
     bb4:	f5 80       	ldd	r15, Z+5	; 0x05
     bb6:	06 81       	ldd	r16, Z+6	; 0x06
     bb8:	17 81       	ldd	r17, Z+7	; 0x07
     bba:	d1 80       	ldd	r13, Z+1	; 0x01
     bbc:	80 81       	ld	r24, Z
     bbe:	82 30       	cpi	r24, 0x02	; 2
     bc0:	48 f4       	brcc	.+18     	; 0xbd4 <__pack_f+0x2e>
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	a0 e1       	ldi	r26, 0x10	; 16
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e8 2a       	or	r14, r24
     bcc:	f9 2a       	or	r15, r25
     bce:	0a 2b       	or	r16, r26
     bd0:	1b 2b       	or	r17, r27
     bd2:	a5 c0       	rjmp	.+330    	; 0xd1e <__pack_f+0x178>
     bd4:	84 30       	cpi	r24, 0x04	; 4
     bd6:	09 f4       	brne	.+2      	; 0xbda <__pack_f+0x34>
     bd8:	9f c0       	rjmp	.+318    	; 0xd18 <__pack_f+0x172>
     bda:	82 30       	cpi	r24, 0x02	; 2
     bdc:	21 f4       	brne	.+8      	; 0xbe6 <__pack_f+0x40>
     bde:	ee 24       	eor	r14, r14
     be0:	ff 24       	eor	r15, r15
     be2:	87 01       	movw	r16, r14
     be4:	05 c0       	rjmp	.+10     	; 0xbf0 <__pack_f+0x4a>
     be6:	e1 14       	cp	r14, r1
     be8:	f1 04       	cpc	r15, r1
     bea:	01 05       	cpc	r16, r1
     bec:	11 05       	cpc	r17, r1
     bee:	19 f4       	brne	.+6      	; 0xbf6 <__pack_f+0x50>
     bf0:	e0 e0       	ldi	r30, 0x00	; 0
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	96 c0       	rjmp	.+300    	; 0xd22 <__pack_f+0x17c>
     bf6:	62 81       	ldd	r22, Z+2	; 0x02
     bf8:	73 81       	ldd	r23, Z+3	; 0x03
     bfa:	9f ef       	ldi	r25, 0xFF	; 255
     bfc:	62 38       	cpi	r22, 0x82	; 130
     bfe:	79 07       	cpc	r23, r25
     c00:	0c f0       	brlt	.+2      	; 0xc04 <__pack_f+0x5e>
     c02:	5b c0       	rjmp	.+182    	; 0xcba <__pack_f+0x114>
     c04:	22 e8       	ldi	r18, 0x82	; 130
     c06:	3f ef       	ldi	r19, 0xFF	; 255
     c08:	26 1b       	sub	r18, r22
     c0a:	37 0b       	sbc	r19, r23
     c0c:	2a 31       	cpi	r18, 0x1A	; 26
     c0e:	31 05       	cpc	r19, r1
     c10:	2c f0       	brlt	.+10     	; 0xc1c <__pack_f+0x76>
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	40 e0       	ldi	r20, 0x00	; 0
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	2a c0       	rjmp	.+84     	; 0xc70 <__pack_f+0xca>
     c1c:	b8 01       	movw	r22, r16
     c1e:	a7 01       	movw	r20, r14
     c20:	02 2e       	mov	r0, r18
     c22:	04 c0       	rjmp	.+8      	; 0xc2c <__pack_f+0x86>
     c24:	76 95       	lsr	r23
     c26:	67 95       	ror	r22
     c28:	57 95       	ror	r21
     c2a:	47 95       	ror	r20
     c2c:	0a 94       	dec	r0
     c2e:	d2 f7       	brpl	.-12     	; 0xc24 <__pack_f+0x7e>
     c30:	81 e0       	ldi	r24, 0x01	; 1
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	a0 e0       	ldi	r26, 0x00	; 0
     c36:	b0 e0       	ldi	r27, 0x00	; 0
     c38:	04 c0       	rjmp	.+8      	; 0xc42 <__pack_f+0x9c>
     c3a:	88 0f       	add	r24, r24
     c3c:	99 1f       	adc	r25, r25
     c3e:	aa 1f       	adc	r26, r26
     c40:	bb 1f       	adc	r27, r27
     c42:	2a 95       	dec	r18
     c44:	d2 f7       	brpl	.-12     	; 0xc3a <__pack_f+0x94>
     c46:	01 97       	sbiw	r24, 0x01	; 1
     c48:	a1 09       	sbc	r26, r1
     c4a:	b1 09       	sbc	r27, r1
     c4c:	8e 21       	and	r24, r14
     c4e:	9f 21       	and	r25, r15
     c50:	a0 23       	and	r26, r16
     c52:	b1 23       	and	r27, r17
     c54:	00 97       	sbiw	r24, 0x00	; 0
     c56:	a1 05       	cpc	r26, r1
     c58:	b1 05       	cpc	r27, r1
     c5a:	21 f0       	breq	.+8      	; 0xc64 <__pack_f+0xbe>
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	a0 e0       	ldi	r26, 0x00	; 0
     c62:	b0 e0       	ldi	r27, 0x00	; 0
     c64:	9a 01       	movw	r18, r20
     c66:	ab 01       	movw	r20, r22
     c68:	28 2b       	or	r18, r24
     c6a:	39 2b       	or	r19, r25
     c6c:	4a 2b       	or	r20, r26
     c6e:	5b 2b       	or	r21, r27
     c70:	da 01       	movw	r26, r20
     c72:	c9 01       	movw	r24, r18
     c74:	8f 77       	andi	r24, 0x7F	; 127
     c76:	90 70       	andi	r25, 0x00	; 0
     c78:	a0 70       	andi	r26, 0x00	; 0
     c7a:	b0 70       	andi	r27, 0x00	; 0
     c7c:	80 34       	cpi	r24, 0x40	; 64
     c7e:	91 05       	cpc	r25, r1
     c80:	a1 05       	cpc	r26, r1
     c82:	b1 05       	cpc	r27, r1
     c84:	39 f4       	brne	.+14     	; 0xc94 <__pack_f+0xee>
     c86:	27 ff       	sbrs	r18, 7
     c88:	09 c0       	rjmp	.+18     	; 0xc9c <__pack_f+0xf6>
     c8a:	20 5c       	subi	r18, 0xC0	; 192
     c8c:	3f 4f       	sbci	r19, 0xFF	; 255
     c8e:	4f 4f       	sbci	r20, 0xFF	; 255
     c90:	5f 4f       	sbci	r21, 0xFF	; 255
     c92:	04 c0       	rjmp	.+8      	; 0xc9c <__pack_f+0xf6>
     c94:	21 5c       	subi	r18, 0xC1	; 193
     c96:	3f 4f       	sbci	r19, 0xFF	; 255
     c98:	4f 4f       	sbci	r20, 0xFF	; 255
     c9a:	5f 4f       	sbci	r21, 0xFF	; 255
     c9c:	e0 e0       	ldi	r30, 0x00	; 0
     c9e:	f0 e0       	ldi	r31, 0x00	; 0
     ca0:	20 30       	cpi	r18, 0x00	; 0
     ca2:	a0 e0       	ldi	r26, 0x00	; 0
     ca4:	3a 07       	cpc	r19, r26
     ca6:	a0 e0       	ldi	r26, 0x00	; 0
     ca8:	4a 07       	cpc	r20, r26
     caa:	a0 e4       	ldi	r26, 0x40	; 64
     cac:	5a 07       	cpc	r21, r26
     cae:	10 f0       	brcs	.+4      	; 0xcb4 <__pack_f+0x10e>
     cb0:	e1 e0       	ldi	r30, 0x01	; 1
     cb2:	f0 e0       	ldi	r31, 0x00	; 0
     cb4:	79 01       	movw	r14, r18
     cb6:	8a 01       	movw	r16, r20
     cb8:	27 c0       	rjmp	.+78     	; 0xd08 <__pack_f+0x162>
     cba:	60 38       	cpi	r22, 0x80	; 128
     cbc:	71 05       	cpc	r23, r1
     cbe:	64 f5       	brge	.+88     	; 0xd18 <__pack_f+0x172>
     cc0:	fb 01       	movw	r30, r22
     cc2:	e1 58       	subi	r30, 0x81	; 129
     cc4:	ff 4f       	sbci	r31, 0xFF	; 255
     cc6:	d8 01       	movw	r26, r16
     cc8:	c7 01       	movw	r24, r14
     cca:	8f 77       	andi	r24, 0x7F	; 127
     ccc:	90 70       	andi	r25, 0x00	; 0
     cce:	a0 70       	andi	r26, 0x00	; 0
     cd0:	b0 70       	andi	r27, 0x00	; 0
     cd2:	80 34       	cpi	r24, 0x40	; 64
     cd4:	91 05       	cpc	r25, r1
     cd6:	a1 05       	cpc	r26, r1
     cd8:	b1 05       	cpc	r27, r1
     cda:	39 f4       	brne	.+14     	; 0xcea <__pack_f+0x144>
     cdc:	e7 fe       	sbrs	r14, 7
     cde:	0d c0       	rjmp	.+26     	; 0xcfa <__pack_f+0x154>
     ce0:	80 e4       	ldi	r24, 0x40	; 64
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	a0 e0       	ldi	r26, 0x00	; 0
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	04 c0       	rjmp	.+8      	; 0xcf2 <__pack_f+0x14c>
     cea:	8f e3       	ldi	r24, 0x3F	; 63
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	e8 0e       	add	r14, r24
     cf4:	f9 1e       	adc	r15, r25
     cf6:	0a 1f       	adc	r16, r26
     cf8:	1b 1f       	adc	r17, r27
     cfa:	17 ff       	sbrs	r17, 7
     cfc:	05 c0       	rjmp	.+10     	; 0xd08 <__pack_f+0x162>
     cfe:	16 95       	lsr	r17
     d00:	07 95       	ror	r16
     d02:	f7 94       	ror	r15
     d04:	e7 94       	ror	r14
     d06:	31 96       	adiw	r30, 0x01	; 1
     d08:	87 e0       	ldi	r24, 0x07	; 7
     d0a:	16 95       	lsr	r17
     d0c:	07 95       	ror	r16
     d0e:	f7 94       	ror	r15
     d10:	e7 94       	ror	r14
     d12:	8a 95       	dec	r24
     d14:	d1 f7       	brne	.-12     	; 0xd0a <__pack_f+0x164>
     d16:	05 c0       	rjmp	.+10     	; 0xd22 <__pack_f+0x17c>
     d18:	ee 24       	eor	r14, r14
     d1a:	ff 24       	eor	r15, r15
     d1c:	87 01       	movw	r16, r14
     d1e:	ef ef       	ldi	r30, 0xFF	; 255
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	6e 2f       	mov	r22, r30
     d24:	67 95       	ror	r22
     d26:	66 27       	eor	r22, r22
     d28:	67 95       	ror	r22
     d2a:	90 2f       	mov	r25, r16
     d2c:	9f 77       	andi	r25, 0x7F	; 127
     d2e:	d7 94       	ror	r13
     d30:	dd 24       	eor	r13, r13
     d32:	d7 94       	ror	r13
     d34:	8e 2f       	mov	r24, r30
     d36:	86 95       	lsr	r24
     d38:	49 2f       	mov	r20, r25
     d3a:	46 2b       	or	r20, r22
     d3c:	58 2f       	mov	r21, r24
     d3e:	5d 29       	or	r21, r13
     d40:	b7 01       	movw	r22, r14
     d42:	ca 01       	movw	r24, r20
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	08 95       	ret

00000d50 <__unpack_f>:
     d50:	fc 01       	movw	r30, r24
     d52:	db 01       	movw	r26, r22
     d54:	40 81       	ld	r20, Z
     d56:	51 81       	ldd	r21, Z+1	; 0x01
     d58:	22 81       	ldd	r18, Z+2	; 0x02
     d5a:	62 2f       	mov	r22, r18
     d5c:	6f 77       	andi	r22, 0x7F	; 127
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	22 1f       	adc	r18, r18
     d62:	22 27       	eor	r18, r18
     d64:	22 1f       	adc	r18, r18
     d66:	93 81       	ldd	r25, Z+3	; 0x03
     d68:	89 2f       	mov	r24, r25
     d6a:	88 0f       	add	r24, r24
     d6c:	82 2b       	or	r24, r18
     d6e:	28 2f       	mov	r18, r24
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	99 1f       	adc	r25, r25
     d74:	99 27       	eor	r25, r25
     d76:	99 1f       	adc	r25, r25
     d78:	11 96       	adiw	r26, 0x01	; 1
     d7a:	9c 93       	st	X, r25
     d7c:	11 97       	sbiw	r26, 0x01	; 1
     d7e:	21 15       	cp	r18, r1
     d80:	31 05       	cpc	r19, r1
     d82:	a9 f5       	brne	.+106    	; 0xdee <__unpack_f+0x9e>
     d84:	41 15       	cp	r20, r1
     d86:	51 05       	cpc	r21, r1
     d88:	61 05       	cpc	r22, r1
     d8a:	71 05       	cpc	r23, r1
     d8c:	11 f4       	brne	.+4      	; 0xd92 <__unpack_f+0x42>
     d8e:	82 e0       	ldi	r24, 0x02	; 2
     d90:	37 c0       	rjmp	.+110    	; 0xe00 <__unpack_f+0xb0>
     d92:	82 e8       	ldi	r24, 0x82	; 130
     d94:	9f ef       	ldi	r25, 0xFF	; 255
     d96:	13 96       	adiw	r26, 0x03	; 3
     d98:	9c 93       	st	X, r25
     d9a:	8e 93       	st	-X, r24
     d9c:	12 97       	sbiw	r26, 0x02	; 2
     d9e:	9a 01       	movw	r18, r20
     da0:	ab 01       	movw	r20, r22
     da2:	67 e0       	ldi	r22, 0x07	; 7
     da4:	22 0f       	add	r18, r18
     da6:	33 1f       	adc	r19, r19
     da8:	44 1f       	adc	r20, r20
     daa:	55 1f       	adc	r21, r21
     dac:	6a 95       	dec	r22
     dae:	d1 f7       	brne	.-12     	; 0xda4 <__unpack_f+0x54>
     db0:	83 e0       	ldi	r24, 0x03	; 3
     db2:	8c 93       	st	X, r24
     db4:	0d c0       	rjmp	.+26     	; 0xdd0 <__unpack_f+0x80>
     db6:	22 0f       	add	r18, r18
     db8:	33 1f       	adc	r19, r19
     dba:	44 1f       	adc	r20, r20
     dbc:	55 1f       	adc	r21, r21
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	8d 91       	ld	r24, X+
     dc2:	9c 91       	ld	r25, X
     dc4:	13 97       	sbiw	r26, 0x03	; 3
     dc6:	01 97       	sbiw	r24, 0x01	; 1
     dc8:	13 96       	adiw	r26, 0x03	; 3
     dca:	9c 93       	st	X, r25
     dcc:	8e 93       	st	-X, r24
     dce:	12 97       	sbiw	r26, 0x02	; 2
     dd0:	20 30       	cpi	r18, 0x00	; 0
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	38 07       	cpc	r19, r24
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	48 07       	cpc	r20, r24
     dda:	80 e4       	ldi	r24, 0x40	; 64
     ddc:	58 07       	cpc	r21, r24
     dde:	58 f3       	brcs	.-42     	; 0xdb6 <__unpack_f+0x66>
     de0:	14 96       	adiw	r26, 0x04	; 4
     de2:	2d 93       	st	X+, r18
     de4:	3d 93       	st	X+, r19
     de6:	4d 93       	st	X+, r20
     de8:	5c 93       	st	X, r21
     dea:	17 97       	sbiw	r26, 0x07	; 7
     dec:	08 95       	ret
     dee:	2f 3f       	cpi	r18, 0xFF	; 255
     df0:	31 05       	cpc	r19, r1
     df2:	79 f4       	brne	.+30     	; 0xe12 <__unpack_f+0xc2>
     df4:	41 15       	cp	r20, r1
     df6:	51 05       	cpc	r21, r1
     df8:	61 05       	cpc	r22, r1
     dfa:	71 05       	cpc	r23, r1
     dfc:	19 f4       	brne	.+6      	; 0xe04 <__unpack_f+0xb4>
     dfe:	84 e0       	ldi	r24, 0x04	; 4
     e00:	8c 93       	st	X, r24
     e02:	08 95       	ret
     e04:	64 ff       	sbrs	r22, 4
     e06:	03 c0       	rjmp	.+6      	; 0xe0e <__unpack_f+0xbe>
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	8c 93       	st	X, r24
     e0c:	12 c0       	rjmp	.+36     	; 0xe32 <__unpack_f+0xe2>
     e0e:	1c 92       	st	X, r1
     e10:	10 c0       	rjmp	.+32     	; 0xe32 <__unpack_f+0xe2>
     e12:	2f 57       	subi	r18, 0x7F	; 127
     e14:	30 40       	sbci	r19, 0x00	; 0
     e16:	13 96       	adiw	r26, 0x03	; 3
     e18:	3c 93       	st	X, r19
     e1a:	2e 93       	st	-X, r18
     e1c:	12 97       	sbiw	r26, 0x02	; 2
     e1e:	83 e0       	ldi	r24, 0x03	; 3
     e20:	8c 93       	st	X, r24
     e22:	87 e0       	ldi	r24, 0x07	; 7
     e24:	44 0f       	add	r20, r20
     e26:	55 1f       	adc	r21, r21
     e28:	66 1f       	adc	r22, r22
     e2a:	77 1f       	adc	r23, r23
     e2c:	8a 95       	dec	r24
     e2e:	d1 f7       	brne	.-12     	; 0xe24 <__unpack_f+0xd4>
     e30:	70 64       	ori	r23, 0x40	; 64
     e32:	14 96       	adiw	r26, 0x04	; 4
     e34:	4d 93       	st	X+, r20
     e36:	5d 93       	st	X+, r21
     e38:	6d 93       	st	X+, r22
     e3a:	7c 93       	st	X, r23
     e3c:	17 97       	sbiw	r26, 0x07	; 7
     e3e:	08 95       	ret

00000e40 <__fpcmp_parts_f>:
     e40:	1f 93       	push	r17
     e42:	dc 01       	movw	r26, r24
     e44:	fb 01       	movw	r30, r22
     e46:	9c 91       	ld	r25, X
     e48:	92 30       	cpi	r25, 0x02	; 2
     e4a:	08 f4       	brcc	.+2      	; 0xe4e <__fpcmp_parts_f+0xe>
     e4c:	47 c0       	rjmp	.+142    	; 0xedc <__fpcmp_parts_f+0x9c>
     e4e:	80 81       	ld	r24, Z
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	08 f4       	brcc	.+2      	; 0xe56 <__fpcmp_parts_f+0x16>
     e54:	43 c0       	rjmp	.+134    	; 0xedc <__fpcmp_parts_f+0x9c>
     e56:	94 30       	cpi	r25, 0x04	; 4
     e58:	51 f4       	brne	.+20     	; 0xe6e <__fpcmp_parts_f+0x2e>
     e5a:	11 96       	adiw	r26, 0x01	; 1
     e5c:	1c 91       	ld	r17, X
     e5e:	84 30       	cpi	r24, 0x04	; 4
     e60:	99 f5       	brne	.+102    	; 0xec8 <__fpcmp_parts_f+0x88>
     e62:	81 81       	ldd	r24, Z+1	; 0x01
     e64:	68 2f       	mov	r22, r24
     e66:	70 e0       	ldi	r23, 0x00	; 0
     e68:	61 1b       	sub	r22, r17
     e6a:	71 09       	sbc	r23, r1
     e6c:	3f c0       	rjmp	.+126    	; 0xeec <__fpcmp_parts_f+0xac>
     e6e:	84 30       	cpi	r24, 0x04	; 4
     e70:	21 f0       	breq	.+8      	; 0xe7a <__fpcmp_parts_f+0x3a>
     e72:	92 30       	cpi	r25, 0x02	; 2
     e74:	31 f4       	brne	.+12     	; 0xe82 <__fpcmp_parts_f+0x42>
     e76:	82 30       	cpi	r24, 0x02	; 2
     e78:	b9 f1       	breq	.+110    	; 0xee8 <__fpcmp_parts_f+0xa8>
     e7a:	81 81       	ldd	r24, Z+1	; 0x01
     e7c:	88 23       	and	r24, r24
     e7e:	89 f1       	breq	.+98     	; 0xee2 <__fpcmp_parts_f+0xa2>
     e80:	2d c0       	rjmp	.+90     	; 0xedc <__fpcmp_parts_f+0x9c>
     e82:	11 96       	adiw	r26, 0x01	; 1
     e84:	1c 91       	ld	r17, X
     e86:	11 97       	sbiw	r26, 0x01	; 1
     e88:	82 30       	cpi	r24, 0x02	; 2
     e8a:	f1 f0       	breq	.+60     	; 0xec8 <__fpcmp_parts_f+0x88>
     e8c:	81 81       	ldd	r24, Z+1	; 0x01
     e8e:	18 17       	cp	r17, r24
     e90:	d9 f4       	brne	.+54     	; 0xec8 <__fpcmp_parts_f+0x88>
     e92:	12 96       	adiw	r26, 0x02	; 2
     e94:	2d 91       	ld	r18, X+
     e96:	3c 91       	ld	r19, X
     e98:	13 97       	sbiw	r26, 0x03	; 3
     e9a:	82 81       	ldd	r24, Z+2	; 0x02
     e9c:	93 81       	ldd	r25, Z+3	; 0x03
     e9e:	82 17       	cp	r24, r18
     ea0:	93 07       	cpc	r25, r19
     ea2:	94 f0       	brlt	.+36     	; 0xec8 <__fpcmp_parts_f+0x88>
     ea4:	28 17       	cp	r18, r24
     ea6:	39 07       	cpc	r19, r25
     ea8:	bc f0       	brlt	.+46     	; 0xed8 <__fpcmp_parts_f+0x98>
     eaa:	14 96       	adiw	r26, 0x04	; 4
     eac:	8d 91       	ld	r24, X+
     eae:	9d 91       	ld	r25, X+
     eb0:	0d 90       	ld	r0, X+
     eb2:	bc 91       	ld	r27, X
     eb4:	a0 2d       	mov	r26, r0
     eb6:	24 81       	ldd	r18, Z+4	; 0x04
     eb8:	35 81       	ldd	r19, Z+5	; 0x05
     eba:	46 81       	ldd	r20, Z+6	; 0x06
     ebc:	57 81       	ldd	r21, Z+7	; 0x07
     ebe:	28 17       	cp	r18, r24
     ec0:	39 07       	cpc	r19, r25
     ec2:	4a 07       	cpc	r20, r26
     ec4:	5b 07       	cpc	r21, r27
     ec6:	18 f4       	brcc	.+6      	; 0xece <__fpcmp_parts_f+0x8e>
     ec8:	11 23       	and	r17, r17
     eca:	41 f0       	breq	.+16     	; 0xedc <__fpcmp_parts_f+0x9c>
     ecc:	0a c0       	rjmp	.+20     	; 0xee2 <__fpcmp_parts_f+0xa2>
     ece:	82 17       	cp	r24, r18
     ed0:	93 07       	cpc	r25, r19
     ed2:	a4 07       	cpc	r26, r20
     ed4:	b5 07       	cpc	r27, r21
     ed6:	40 f4       	brcc	.+16     	; 0xee8 <__fpcmp_parts_f+0xa8>
     ed8:	11 23       	and	r17, r17
     eda:	19 f0       	breq	.+6      	; 0xee2 <__fpcmp_parts_f+0xa2>
     edc:	61 e0       	ldi	r22, 0x01	; 1
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	05 c0       	rjmp	.+10     	; 0xeec <__fpcmp_parts_f+0xac>
     ee2:	6f ef       	ldi	r22, 0xFF	; 255
     ee4:	7f ef       	ldi	r23, 0xFF	; 255
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <__fpcmp_parts_f+0xac>
     ee8:	60 e0       	ldi	r22, 0x00	; 0
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	cb 01       	movw	r24, r22
     eee:	1f 91       	pop	r17
     ef0:	08 95       	ret

00000ef2 <DIO_voidSetPinDir>:

#include <avr/io.h>


void DIO_voidSetPinDir(u8 Port,u8 Pin,u8 Dir)
{
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	00 d0       	rcall	.+0      	; 0xef8 <DIO_voidSetPinDir+0x6>
     ef8:	00 d0       	rcall	.+0      	; 0xefa <DIO_voidSetPinDir+0x8>
     efa:	0f 92       	push	r0
     efc:	cd b7       	in	r28, 0x3d	; 61
     efe:	de b7       	in	r29, 0x3e	; 62
     f00:	89 83       	std	Y+1, r24	; 0x01
     f02:	6a 83       	std	Y+2, r22	; 0x02
     f04:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	28 2f       	mov	r18, r24
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	3d 83       	std	Y+5, r19	; 0x05
     f0e:	2c 83       	std	Y+4, r18	; 0x04
     f10:	8c 81       	ldd	r24, Y+4	; 0x04
     f12:	9d 81       	ldd	r25, Y+5	; 0x05
     f14:	81 30       	cpi	r24, 0x01	; 1
     f16:	91 05       	cpc	r25, r1
     f18:	09 f4       	brne	.+2      	; 0xf1c <DIO_voidSetPinDir+0x2a>
     f1a:	43 c0       	rjmp	.+134    	; 0xfa2 <DIO_voidSetPinDir+0xb0>
     f1c:	2c 81       	ldd	r18, Y+4	; 0x04
     f1e:	3d 81       	ldd	r19, Y+5	; 0x05
     f20:	22 30       	cpi	r18, 0x02	; 2
     f22:	31 05       	cpc	r19, r1
     f24:	2c f4       	brge	.+10     	; 0xf30 <DIO_voidSetPinDir+0x3e>
     f26:	8c 81       	ldd	r24, Y+4	; 0x04
     f28:	9d 81       	ldd	r25, Y+5	; 0x05
     f2a:	00 97       	sbiw	r24, 0x00	; 0
     f2c:	71 f0       	breq	.+28     	; 0xf4a <DIO_voidSetPinDir+0x58>
     f2e:	bc c0       	rjmp	.+376    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
     f30:	2c 81       	ldd	r18, Y+4	; 0x04
     f32:	3d 81       	ldd	r19, Y+5	; 0x05
     f34:	22 30       	cpi	r18, 0x02	; 2
     f36:	31 05       	cpc	r19, r1
     f38:	09 f4       	brne	.+2      	; 0xf3c <DIO_voidSetPinDir+0x4a>
     f3a:	5f c0       	rjmp	.+190    	; 0xffa <DIO_voidSetPinDir+0x108>
     f3c:	8c 81       	ldd	r24, Y+4	; 0x04
     f3e:	9d 81       	ldd	r25, Y+5	; 0x05
     f40:	83 30       	cpi	r24, 0x03	; 3
     f42:	91 05       	cpc	r25, r1
     f44:	09 f4       	brne	.+2      	; 0xf48 <DIO_voidSetPinDir+0x56>
     f46:	85 c0       	rjmp	.+266    	; 0x1052 <DIO_voidSetPinDir+0x160>
     f48:	af c0       	rjmp	.+350    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
	{
	case 0:
	    if(Dir == 0)
     f4a:	8b 81       	ldd	r24, Y+3	; 0x03
     f4c:	88 23       	and	r24, r24
     f4e:	a9 f4       	brne	.+42     	; 0xf7a <DIO_voidSetPinDir+0x88>
		{
			CLEAR_BIT(DDRA,Pin);
     f50:	aa e3       	ldi	r26, 0x3A	; 58
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	ea e3       	ldi	r30, 0x3A	; 58
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	48 2f       	mov	r20, r24
     f5c:	8a 81       	ldd	r24, Y+2	; 0x02
     f5e:	28 2f       	mov	r18, r24
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	02 2e       	mov	r0, r18
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <DIO_voidSetPinDir+0x7c>
     f6a:	88 0f       	add	r24, r24
     f6c:	99 1f       	adc	r25, r25
     f6e:	0a 94       	dec	r0
     f70:	e2 f7       	brpl	.-8      	; 0xf6a <DIO_voidSetPinDir+0x78>
     f72:	80 95       	com	r24
     f74:	84 23       	and	r24, r20
     f76:	8c 93       	st	X, r24
     f78:	97 c0       	rjmp	.+302    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRA,Pin);
     f7a:	aa e3       	ldi	r26, 0x3A	; 58
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	ea e3       	ldi	r30, 0x3A	; 58
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	48 2f       	mov	r20, r24
     f86:	8a 81       	ldd	r24, Y+2	; 0x02
     f88:	28 2f       	mov	r18, r24
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	81 e0       	ldi	r24, 0x01	; 1
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	02 2e       	mov	r0, r18
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <DIO_voidSetPinDir+0xa6>
     f94:	88 0f       	add	r24, r24
     f96:	99 1f       	adc	r25, r25
     f98:	0a 94       	dec	r0
     f9a:	e2 f7       	brpl	.-8      	; 0xf94 <DIO_voidSetPinDir+0xa2>
     f9c:	84 2b       	or	r24, r20
     f9e:	8c 93       	st	X, r24
     fa0:	83 c0       	rjmp	.+262    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>

		}
		break;
	case 1:
		if(Dir == 0)
     fa2:	8b 81       	ldd	r24, Y+3	; 0x03
     fa4:	88 23       	and	r24, r24
     fa6:	a9 f4       	brne	.+42     	; 0xfd2 <DIO_voidSetPinDir+0xe0>
		{
			CLEAR_BIT(DDRB,Pin);
     fa8:	a7 e3       	ldi	r26, 0x37	; 55
     faa:	b0 e0       	ldi	r27, 0x00	; 0
     fac:	e7 e3       	ldi	r30, 0x37	; 55
     fae:	f0 e0       	ldi	r31, 0x00	; 0
     fb0:	80 81       	ld	r24, Z
     fb2:	48 2f       	mov	r20, r24
     fb4:	8a 81       	ldd	r24, Y+2	; 0x02
     fb6:	28 2f       	mov	r18, r24
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	02 2e       	mov	r0, r18
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <DIO_voidSetPinDir+0xd4>
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	0a 94       	dec	r0
     fc8:	e2 f7       	brpl	.-8      	; 0xfc2 <DIO_voidSetPinDir+0xd0>
     fca:	80 95       	com	r24
     fcc:	84 23       	and	r24, r20
     fce:	8c 93       	st	X, r24
     fd0:	6b c0       	rjmp	.+214    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRB,Pin);
     fd2:	a7 e3       	ldi	r26, 0x37	; 55
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	e7 e3       	ldi	r30, 0x37	; 55
     fd8:	f0 e0       	ldi	r31, 0x00	; 0
     fda:	80 81       	ld	r24, Z
     fdc:	48 2f       	mov	r20, r24
     fde:	8a 81       	ldd	r24, Y+2	; 0x02
     fe0:	28 2f       	mov	r18, r24
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	02 2e       	mov	r0, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <DIO_voidSetPinDir+0xfe>
     fec:	88 0f       	add	r24, r24
     fee:	99 1f       	adc	r25, r25
     ff0:	0a 94       	dec	r0
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <DIO_voidSetPinDir+0xfa>
     ff4:	84 2b       	or	r24, r20
     ff6:	8c 93       	st	X, r24
     ff8:	57 c0       	rjmp	.+174    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}

		break;
	case 2:
		if(Dir == 0)
     ffa:	8b 81       	ldd	r24, Y+3	; 0x03
     ffc:	88 23       	and	r24, r24
     ffe:	a9 f4       	brne	.+42     	; 0x102a <DIO_voidSetPinDir+0x138>
		{
			CLEAR_BIT(DDRC,Pin);
    1000:	a4 e3       	ldi	r26, 0x34	; 52
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e4 e3       	ldi	r30, 0x34	; 52
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	80 81       	ld	r24, Z
    100a:	48 2f       	mov	r20, r24
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	28 2f       	mov	r18, r24
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	81 e0       	ldi	r24, 0x01	; 1
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	02 2e       	mov	r0, r18
    1018:	02 c0       	rjmp	.+4      	; 0x101e <DIO_voidSetPinDir+0x12c>
    101a:	88 0f       	add	r24, r24
    101c:	99 1f       	adc	r25, r25
    101e:	0a 94       	dec	r0
    1020:	e2 f7       	brpl	.-8      	; 0x101a <DIO_voidSetPinDir+0x128>
    1022:	80 95       	com	r24
    1024:	84 23       	and	r24, r20
    1026:	8c 93       	st	X, r24
    1028:	3f c0       	rjmp	.+126    	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRC,Pin);
    102a:	a4 e3       	ldi	r26, 0x34	; 52
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	e4 e3       	ldi	r30, 0x34	; 52
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	80 81       	ld	r24, Z
    1034:	48 2f       	mov	r20, r24
    1036:	8a 81       	ldd	r24, Y+2	; 0x02
    1038:	28 2f       	mov	r18, r24
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	02 2e       	mov	r0, r18
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <DIO_voidSetPinDir+0x156>
    1044:	88 0f       	add	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	0a 94       	dec	r0
    104a:	e2 f7       	brpl	.-8      	; 0x1044 <DIO_voidSetPinDir+0x152>
    104c:	84 2b       	or	r24, r20
    104e:	8c 93       	st	X, r24
    1050:	2b c0       	rjmp	.+86     	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}

		break;
	case 3:
		if(Dir == 0)
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	88 23       	and	r24, r24
    1056:	a9 f4       	brne	.+42     	; 0x1082 <DIO_voidSetPinDir+0x190>
		{
			CLEAR_BIT(DDRD,Pin);
    1058:	a1 e3       	ldi	r26, 0x31	; 49
    105a:	b0 e0       	ldi	r27, 0x00	; 0
    105c:	e1 e3       	ldi	r30, 0x31	; 49
    105e:	f0 e0       	ldi	r31, 0x00	; 0
    1060:	80 81       	ld	r24, Z
    1062:	48 2f       	mov	r20, r24
    1064:	8a 81       	ldd	r24, Y+2	; 0x02
    1066:	28 2f       	mov	r18, r24
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	02 2e       	mov	r0, r18
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <DIO_voidSetPinDir+0x184>
    1072:	88 0f       	add	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	0a 94       	dec	r0
    1078:	e2 f7       	brpl	.-8      	; 0x1072 <DIO_voidSetPinDir+0x180>
    107a:	80 95       	com	r24
    107c:	84 23       	and	r24, r20
    107e:	8c 93       	st	X, r24
    1080:	13 c0       	rjmp	.+38     	; 0x10a8 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRD,Pin);
    1082:	a1 e3       	ldi	r26, 0x31	; 49
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	e1 e3       	ldi	r30, 0x31	; 49
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	48 2f       	mov	r20, r24
    108e:	8a 81       	ldd	r24, Y+2	; 0x02
    1090:	28 2f       	mov	r18, r24
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	02 2e       	mov	r0, r18
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_voidSetPinDir+0x1ae>
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	0a 94       	dec	r0
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_voidSetPinDir+0x1aa>
    10a4:	84 2b       	or	r24, r20
    10a6:	8c 93       	st	X, r24
		}
		break;
	}

}
    10a8:	0f 90       	pop	r0
    10aa:	0f 90       	pop	r0
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	cf 91       	pop	r28
    10b4:	df 91       	pop	r29
    10b6:	08 95       	ret

000010b8 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Port,u8 Pin,u8 Value)
{
    10b8:	df 93       	push	r29
    10ba:	cf 93       	push	r28
    10bc:	00 d0       	rcall	.+0      	; 0x10be <DIO_voidSetPinValue+0x6>
    10be:	00 d0       	rcall	.+0      	; 0x10c0 <DIO_voidSetPinValue+0x8>
    10c0:	0f 92       	push	r0
    10c2:	cd b7       	in	r28, 0x3d	; 61
    10c4:	de b7       	in	r29, 0x3e	; 62
    10c6:	89 83       	std	Y+1, r24	; 0x01
    10c8:	6a 83       	std	Y+2, r22	; 0x02
    10ca:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
    10cc:	89 81       	ldd	r24, Y+1	; 0x01
    10ce:	28 2f       	mov	r18, r24
    10d0:	30 e0       	ldi	r19, 0x00	; 0
    10d2:	3d 83       	std	Y+5, r19	; 0x05
    10d4:	2c 83       	std	Y+4, r18	; 0x04
    10d6:	8c 81       	ldd	r24, Y+4	; 0x04
    10d8:	9d 81       	ldd	r25, Y+5	; 0x05
    10da:	81 30       	cpi	r24, 0x01	; 1
    10dc:	91 05       	cpc	r25, r1
    10de:	09 f4       	brne	.+2      	; 0x10e2 <DIO_voidSetPinValue+0x2a>
    10e0:	43 c0       	rjmp	.+134    	; 0x1168 <DIO_voidSetPinValue+0xb0>
    10e2:	2c 81       	ldd	r18, Y+4	; 0x04
    10e4:	3d 81       	ldd	r19, Y+5	; 0x05
    10e6:	22 30       	cpi	r18, 0x02	; 2
    10e8:	31 05       	cpc	r19, r1
    10ea:	2c f4       	brge	.+10     	; 0x10f6 <DIO_voidSetPinValue+0x3e>
    10ec:	8c 81       	ldd	r24, Y+4	; 0x04
    10ee:	9d 81       	ldd	r25, Y+5	; 0x05
    10f0:	00 97       	sbiw	r24, 0x00	; 0
    10f2:	71 f0       	breq	.+28     	; 0x1110 <DIO_voidSetPinValue+0x58>
    10f4:	bc c0       	rjmp	.+376    	; 0x126e <DIO_voidSetPinValue+0x1b6>
    10f6:	2c 81       	ldd	r18, Y+4	; 0x04
    10f8:	3d 81       	ldd	r19, Y+5	; 0x05
    10fa:	22 30       	cpi	r18, 0x02	; 2
    10fc:	31 05       	cpc	r19, r1
    10fe:	09 f4       	brne	.+2      	; 0x1102 <DIO_voidSetPinValue+0x4a>
    1100:	5f c0       	rjmp	.+190    	; 0x11c0 <DIO_voidSetPinValue+0x108>
    1102:	8c 81       	ldd	r24, Y+4	; 0x04
    1104:	9d 81       	ldd	r25, Y+5	; 0x05
    1106:	83 30       	cpi	r24, 0x03	; 3
    1108:	91 05       	cpc	r25, r1
    110a:	09 f4       	brne	.+2      	; 0x110e <DIO_voidSetPinValue+0x56>
    110c:	85 c0       	rjmp	.+266    	; 0x1218 <DIO_voidSetPinValue+0x160>
    110e:	af c0       	rjmp	.+350    	; 0x126e <DIO_voidSetPinValue+0x1b6>
	{
	case 0:
		if(Value == 0)
    1110:	8b 81       	ldd	r24, Y+3	; 0x03
    1112:	88 23       	and	r24, r24
    1114:	a9 f4       	brne	.+42     	; 0x1140 <DIO_voidSetPinValue+0x88>
		{
			CLEAR_BIT(PORTA,Pin);
    1116:	ab e3       	ldi	r26, 0x3B	; 59
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	eb e3       	ldi	r30, 0x3B	; 59
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	48 2f       	mov	r20, r24
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	02 2e       	mov	r0, r18
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <DIO_voidSetPinValue+0x7c>
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	0a 94       	dec	r0
    1136:	e2 f7       	brpl	.-8      	; 0x1130 <DIO_voidSetPinValue+0x78>
    1138:	80 95       	com	r24
    113a:	84 23       	and	r24, r20
    113c:	8c 93       	st	X, r24
    113e:	97 c0       	rjmp	.+302    	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTA,Pin);
    1140:	ab e3       	ldi	r26, 0x3B	; 59
    1142:	b0 e0       	ldi	r27, 0x00	; 0
    1144:	eb e3       	ldi	r30, 0x3B	; 59
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	80 81       	ld	r24, Z
    114a:	48 2f       	mov	r20, r24
    114c:	8a 81       	ldd	r24, Y+2	; 0x02
    114e:	28 2f       	mov	r18, r24
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	02 2e       	mov	r0, r18
    1158:	02 c0       	rjmp	.+4      	; 0x115e <DIO_voidSetPinValue+0xa6>
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	0a 94       	dec	r0
    1160:	e2 f7       	brpl	.-8      	; 0x115a <DIO_voidSetPinValue+0xa2>
    1162:	84 2b       	or	r24, r20
    1164:	8c 93       	st	X, r24
    1166:	83 c0       	rjmp	.+262    	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 1:
		if(Value == 0)
    1168:	8b 81       	ldd	r24, Y+3	; 0x03
    116a:	88 23       	and	r24, r24
    116c:	a9 f4       	brne	.+42     	; 0x1198 <DIO_voidSetPinValue+0xe0>
		{
			CLEAR_BIT(PORTB,Pin);
    116e:	a8 e3       	ldi	r26, 0x38	; 56
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e8 e3       	ldi	r30, 0x38	; 56
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	48 2f       	mov	r20, r24
    117a:	8a 81       	ldd	r24, Y+2	; 0x02
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	02 2e       	mov	r0, r18
    1186:	02 c0       	rjmp	.+4      	; 0x118c <DIO_voidSetPinValue+0xd4>
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	0a 94       	dec	r0
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <DIO_voidSetPinValue+0xd0>
    1190:	80 95       	com	r24
    1192:	84 23       	and	r24, r20
    1194:	8c 93       	st	X, r24
    1196:	6b c0       	rjmp	.+214    	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTB,Pin);
    1198:	a8 e3       	ldi	r26, 0x38	; 56
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	e8 e3       	ldi	r30, 0x38	; 56
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	80 81       	ld	r24, Z
    11a2:	48 2f       	mov	r20, r24
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	02 2e       	mov	r0, r18
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <DIO_voidSetPinValue+0xfe>
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	0a 94       	dec	r0
    11b8:	e2 f7       	brpl	.-8      	; 0x11b2 <DIO_voidSetPinValue+0xfa>
    11ba:	84 2b       	or	r24, r20
    11bc:	8c 93       	st	X, r24
    11be:	57 c0       	rjmp	.+174    	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 2:
		if(Value == 0)
    11c0:	8b 81       	ldd	r24, Y+3	; 0x03
    11c2:	88 23       	and	r24, r24
    11c4:	a9 f4       	brne	.+42     	; 0x11f0 <DIO_voidSetPinValue+0x138>
		{
			CLEAR_BIT(PORTC,Pin);
    11c6:	a5 e3       	ldi	r26, 0x35	; 53
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	e5 e3       	ldi	r30, 0x35	; 53
    11cc:	f0 e0       	ldi	r31, 0x00	; 0
    11ce:	80 81       	ld	r24, Z
    11d0:	48 2f       	mov	r20, r24
    11d2:	8a 81       	ldd	r24, Y+2	; 0x02
    11d4:	28 2f       	mov	r18, r24
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	81 e0       	ldi	r24, 0x01	; 1
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	02 2e       	mov	r0, r18
    11de:	02 c0       	rjmp	.+4      	; 0x11e4 <DIO_voidSetPinValue+0x12c>
    11e0:	88 0f       	add	r24, r24
    11e2:	99 1f       	adc	r25, r25
    11e4:	0a 94       	dec	r0
    11e6:	e2 f7       	brpl	.-8      	; 0x11e0 <DIO_voidSetPinValue+0x128>
    11e8:	80 95       	com	r24
    11ea:	84 23       	and	r24, r20
    11ec:	8c 93       	st	X, r24
    11ee:	3f c0       	rjmp	.+126    	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTC,Pin);
    11f0:	a5 e3       	ldi	r26, 0x35	; 53
    11f2:	b0 e0       	ldi	r27, 0x00	; 0
    11f4:	e5 e3       	ldi	r30, 0x35	; 53
    11f6:	f0 e0       	ldi	r31, 0x00	; 0
    11f8:	80 81       	ld	r24, Z
    11fa:	48 2f       	mov	r20, r24
    11fc:	8a 81       	ldd	r24, Y+2	; 0x02
    11fe:	28 2f       	mov	r18, r24
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	02 2e       	mov	r0, r18
    1208:	02 c0       	rjmp	.+4      	; 0x120e <DIO_voidSetPinValue+0x156>
    120a:	88 0f       	add	r24, r24
    120c:	99 1f       	adc	r25, r25
    120e:	0a 94       	dec	r0
    1210:	e2 f7       	brpl	.-8      	; 0x120a <DIO_voidSetPinValue+0x152>
    1212:	84 2b       	or	r24, r20
    1214:	8c 93       	st	X, r24
    1216:	2b c0       	rjmp	.+86     	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 3:
		if(Value == 0)
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	88 23       	and	r24, r24
    121c:	a9 f4       	brne	.+42     	; 0x1248 <DIO_voidSetPinValue+0x190>
		{
			CLEAR_BIT(PORTD,Pin);
    121e:	a2 e3       	ldi	r26, 0x32	; 50
    1220:	b0 e0       	ldi	r27, 0x00	; 0
    1222:	e2 e3       	ldi	r30, 0x32	; 50
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	80 81       	ld	r24, Z
    1228:	48 2f       	mov	r20, r24
    122a:	8a 81       	ldd	r24, Y+2	; 0x02
    122c:	28 2f       	mov	r18, r24
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	81 e0       	ldi	r24, 0x01	; 1
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	02 2e       	mov	r0, r18
    1236:	02 c0       	rjmp	.+4      	; 0x123c <DIO_voidSetPinValue+0x184>
    1238:	88 0f       	add	r24, r24
    123a:	99 1f       	adc	r25, r25
    123c:	0a 94       	dec	r0
    123e:	e2 f7       	brpl	.-8      	; 0x1238 <DIO_voidSetPinValue+0x180>
    1240:	80 95       	com	r24
    1242:	84 23       	and	r24, r20
    1244:	8c 93       	st	X, r24
    1246:	13 c0       	rjmp	.+38     	; 0x126e <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTD,Pin);
    1248:	a2 e3       	ldi	r26, 0x32	; 50
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	e2 e3       	ldi	r30, 0x32	; 50
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	48 2f       	mov	r20, r24
    1254:	8a 81       	ldd	r24, Y+2	; 0x02
    1256:	28 2f       	mov	r18, r24
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 2e       	mov	r0, r18
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <DIO_voidSetPinValue+0x1ae>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	0a 94       	dec	r0
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <DIO_voidSetPinValue+0x1aa>
    126a:	84 2b       	or	r24, r20
    126c:	8c 93       	st	X, r24
		}

		break;
	}

}
    126e:	0f 90       	pop	r0
    1270:	0f 90       	pop	r0
    1272:	0f 90       	pop	r0
    1274:	0f 90       	pop	r0
    1276:	0f 90       	pop	r0
    1278:	cf 91       	pop	r28
    127a:	df 91       	pop	r29
    127c:	08 95       	ret

0000127e <DIO_voidTogglePinValue>:
void DIO_voidTogglePinValue(u8 Port,u8 Pin)
{
    127e:	df 93       	push	r29
    1280:	cf 93       	push	r28
    1282:	00 d0       	rcall	.+0      	; 0x1284 <DIO_voidTogglePinValue+0x6>
    1284:	00 d0       	rcall	.+0      	; 0x1286 <DIO_voidTogglePinValue+0x8>
    1286:	cd b7       	in	r28, 0x3d	; 61
    1288:	de b7       	in	r29, 0x3e	; 62
    128a:	89 83       	std	Y+1, r24	; 0x01
    128c:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port){
    128e:	89 81       	ldd	r24, Y+1	; 0x01
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	3c 83       	std	Y+4, r19	; 0x04
    1296:	2b 83       	std	Y+3, r18	; 0x03
    1298:	8b 81       	ldd	r24, Y+3	; 0x03
    129a:	9c 81       	ldd	r25, Y+4	; 0x04
    129c:	81 30       	cpi	r24, 0x01	; 1
    129e:	91 05       	cpc	r25, r1
    12a0:	49 f1       	breq	.+82     	; 0x12f4 <DIO_voidTogglePinValue+0x76>
    12a2:	2b 81       	ldd	r18, Y+3	; 0x03
    12a4:	3c 81       	ldd	r19, Y+4	; 0x04
    12a6:	22 30       	cpi	r18, 0x02	; 2
    12a8:	31 05       	cpc	r19, r1
    12aa:	2c f4       	brge	.+10     	; 0x12b6 <DIO_voidTogglePinValue+0x38>
    12ac:	8b 81       	ldd	r24, Y+3	; 0x03
    12ae:	9c 81       	ldd	r25, Y+4	; 0x04
    12b0:	00 97       	sbiw	r24, 0x00	; 0
    12b2:	61 f0       	breq	.+24     	; 0x12cc <DIO_voidTogglePinValue+0x4e>
    12b4:	5a c0       	rjmp	.+180    	; 0x136a <DIO_voidTogglePinValue+0xec>
    12b6:	2b 81       	ldd	r18, Y+3	; 0x03
    12b8:	3c 81       	ldd	r19, Y+4	; 0x04
    12ba:	22 30       	cpi	r18, 0x02	; 2
    12bc:	31 05       	cpc	r19, r1
    12be:	71 f1       	breq	.+92     	; 0x131c <DIO_voidTogglePinValue+0x9e>
    12c0:	8b 81       	ldd	r24, Y+3	; 0x03
    12c2:	9c 81       	ldd	r25, Y+4	; 0x04
    12c4:	83 30       	cpi	r24, 0x03	; 3
    12c6:	91 05       	cpc	r25, r1
    12c8:	e9 f1       	breq	.+122    	; 0x1344 <DIO_voidTogglePinValue+0xc6>
    12ca:	4f c0       	rjmp	.+158    	; 0x136a <DIO_voidTogglePinValue+0xec>
	case 0:
		TOGGLE_BIT(PORTA,Pin);
    12cc:	ab e3       	ldi	r26, 0x3B	; 59
    12ce:	b0 e0       	ldi	r27, 0x00	; 0
    12d0:	eb e3       	ldi	r30, 0x3B	; 59
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	80 81       	ld	r24, Z
    12d6:	48 2f       	mov	r20, r24
    12d8:	8a 81       	ldd	r24, Y+2	; 0x02
    12da:	28 2f       	mov	r18, r24
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	02 2e       	mov	r0, r18
    12e4:	02 c0       	rjmp	.+4      	; 0x12ea <DIO_voidTogglePinValue+0x6c>
    12e6:	88 0f       	add	r24, r24
    12e8:	99 1f       	adc	r25, r25
    12ea:	0a 94       	dec	r0
    12ec:	e2 f7       	brpl	.-8      	; 0x12e6 <DIO_voidTogglePinValue+0x68>
    12ee:	84 27       	eor	r24, r20
    12f0:	8c 93       	st	X, r24
    12f2:	3b c0       	rjmp	.+118    	; 0x136a <DIO_voidTogglePinValue+0xec>

		break;
	case 1:
		TOGGLE_BIT(PORTB,Pin);
    12f4:	a8 e3       	ldi	r26, 0x38	; 56
    12f6:	b0 e0       	ldi	r27, 0x00	; 0
    12f8:	e8 e3       	ldi	r30, 0x38	; 56
    12fa:	f0 e0       	ldi	r31, 0x00	; 0
    12fc:	80 81       	ld	r24, Z
    12fe:	48 2f       	mov	r20, r24
    1300:	8a 81       	ldd	r24, Y+2	; 0x02
    1302:	28 2f       	mov	r18, r24
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	02 2e       	mov	r0, r18
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <DIO_voidTogglePinValue+0x94>
    130e:	88 0f       	add	r24, r24
    1310:	99 1f       	adc	r25, r25
    1312:	0a 94       	dec	r0
    1314:	e2 f7       	brpl	.-8      	; 0x130e <DIO_voidTogglePinValue+0x90>
    1316:	84 27       	eor	r24, r20
    1318:	8c 93       	st	X, r24
    131a:	27 c0       	rjmp	.+78     	; 0x136a <DIO_voidTogglePinValue+0xec>

		break;
	case 2:
		TOGGLE_BIT(PORTC,Pin);
    131c:	a5 e3       	ldi	r26, 0x35	; 53
    131e:	b0 e0       	ldi	r27, 0x00	; 0
    1320:	e5 e3       	ldi	r30, 0x35	; 53
    1322:	f0 e0       	ldi	r31, 0x00	; 0
    1324:	80 81       	ld	r24, Z
    1326:	48 2f       	mov	r20, r24
    1328:	8a 81       	ldd	r24, Y+2	; 0x02
    132a:	28 2f       	mov	r18, r24
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	02 2e       	mov	r0, r18
    1334:	02 c0       	rjmp	.+4      	; 0x133a <DIO_voidTogglePinValue+0xbc>
    1336:	88 0f       	add	r24, r24
    1338:	99 1f       	adc	r25, r25
    133a:	0a 94       	dec	r0
    133c:	e2 f7       	brpl	.-8      	; 0x1336 <DIO_voidTogglePinValue+0xb8>
    133e:	84 27       	eor	r24, r20
    1340:	8c 93       	st	X, r24
    1342:	13 c0       	rjmp	.+38     	; 0x136a <DIO_voidTogglePinValue+0xec>

		break;
	case 3:
		TOGGLE_BIT(PORTD,Pin);
    1344:	a2 e3       	ldi	r26, 0x32	; 50
    1346:	b0 e0       	ldi	r27, 0x00	; 0
    1348:	e2 e3       	ldi	r30, 0x32	; 50
    134a:	f0 e0       	ldi	r31, 0x00	; 0
    134c:	80 81       	ld	r24, Z
    134e:	48 2f       	mov	r20, r24
    1350:	8a 81       	ldd	r24, Y+2	; 0x02
    1352:	28 2f       	mov	r18, r24
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	02 2e       	mov	r0, r18
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <DIO_voidTogglePinValue+0xe4>
    135e:	88 0f       	add	r24, r24
    1360:	99 1f       	adc	r25, r25
    1362:	0a 94       	dec	r0
    1364:	e2 f7       	brpl	.-8      	; 0x135e <DIO_voidTogglePinValue+0xe0>
    1366:	84 27       	eor	r24, r20
    1368:	8c 93       	st	X, r24

		break;
	}

}
    136a:	0f 90       	pop	r0
    136c:	0f 90       	pop	r0
    136e:	0f 90       	pop	r0
    1370:	0f 90       	pop	r0
    1372:	cf 91       	pop	r28
    1374:	df 91       	pop	r29
    1376:	08 95       	ret

00001378 <DIO_u8GetPinValue>:
u8   DIO_u8GetPinValue(u8 Port,u8 Pin)
{
    1378:	df 93       	push	r29
    137a:	cf 93       	push	r28
    137c:	00 d0       	rcall	.+0      	; 0x137e <DIO_u8GetPinValue+0x6>
    137e:	00 d0       	rcall	.+0      	; 0x1380 <DIO_u8GetPinValue+0x8>
    1380:	00 d0       	rcall	.+0      	; 0x1382 <DIO_u8GetPinValue+0xa>
    1382:	cd b7       	in	r28, 0x3d	; 61
    1384:	de b7       	in	r29, 0x3e	; 62
    1386:	89 83       	std	Y+1, r24	; 0x01
    1388:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port)
    138a:	89 81       	ldd	r24, Y+1	; 0x01
    138c:	28 2f       	mov	r18, r24
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	3d 83       	std	Y+5, r19	; 0x05
    1392:	2c 83       	std	Y+4, r18	; 0x04
    1394:	4c 81       	ldd	r20, Y+4	; 0x04
    1396:	5d 81       	ldd	r21, Y+5	; 0x05
    1398:	41 30       	cpi	r20, 0x01	; 1
    139a:	51 05       	cpc	r21, r1
    139c:	49 f1       	breq	.+82     	; 0x13f0 <DIO_u8GetPinValue+0x78>
    139e:	8c 81       	ldd	r24, Y+4	; 0x04
    13a0:	9d 81       	ldd	r25, Y+5	; 0x05
    13a2:	82 30       	cpi	r24, 0x02	; 2
    13a4:	91 05       	cpc	r25, r1
    13a6:	34 f4       	brge	.+12     	; 0x13b4 <DIO_u8GetPinValue+0x3c>
    13a8:	2c 81       	ldd	r18, Y+4	; 0x04
    13aa:	3d 81       	ldd	r19, Y+5	; 0x05
    13ac:	21 15       	cp	r18, r1
    13ae:	31 05       	cpc	r19, r1
    13b0:	61 f0       	breq	.+24     	; 0x13ca <DIO_u8GetPinValue+0x52>
    13b2:	57 c0       	rjmp	.+174    	; 0x1462 <DIO_u8GetPinValue+0xea>
    13b4:	4c 81       	ldd	r20, Y+4	; 0x04
    13b6:	5d 81       	ldd	r21, Y+5	; 0x05
    13b8:	42 30       	cpi	r20, 0x02	; 2
    13ba:	51 05       	cpc	r21, r1
    13bc:	61 f1       	breq	.+88     	; 0x1416 <DIO_u8GetPinValue+0x9e>
    13be:	8c 81       	ldd	r24, Y+4	; 0x04
    13c0:	9d 81       	ldd	r25, Y+5	; 0x05
    13c2:	83 30       	cpi	r24, 0x03	; 3
    13c4:	91 05       	cpc	r25, r1
    13c6:	d1 f1       	breq	.+116    	; 0x143c <DIO_u8GetPinValue+0xc4>
    13c8:	4c c0       	rjmp	.+152    	; 0x1462 <DIO_u8GetPinValue+0xea>
	{
	case 0:
		return GET_BIT(PINA,Pin);
    13ca:	e9 e3       	ldi	r30, 0x39	; 57
    13cc:	f0 e0       	ldi	r31, 0x00	; 0
    13ce:	80 81       	ld	r24, Z
    13d0:	28 2f       	mov	r18, r24
    13d2:	30 e0       	ldi	r19, 0x00	; 0
    13d4:	8a 81       	ldd	r24, Y+2	; 0x02
    13d6:	88 2f       	mov	r24, r24
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	a9 01       	movw	r20, r18
    13dc:	02 c0       	rjmp	.+4      	; 0x13e2 <DIO_u8GetPinValue+0x6a>
    13de:	55 95       	asr	r21
    13e0:	47 95       	ror	r20
    13e2:	8a 95       	dec	r24
    13e4:	e2 f7       	brpl	.-8      	; 0x13de <DIO_u8GetPinValue+0x66>
    13e6:	ca 01       	movw	r24, r20
    13e8:	58 2f       	mov	r21, r24
    13ea:	51 70       	andi	r21, 0x01	; 1
    13ec:	5b 83       	std	Y+3, r21	; 0x03
    13ee:	3a c0       	rjmp	.+116    	; 0x1464 <DIO_u8GetPinValue+0xec>
	case 1:
		return GET_BIT(PINB,Pin);
    13f0:	e6 e3       	ldi	r30, 0x36	; 54
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	80 81       	ld	r24, Z
    13f6:	28 2f       	mov	r18, r24
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	8a 81       	ldd	r24, Y+2	; 0x02
    13fc:	88 2f       	mov	r24, r24
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	a9 01       	movw	r20, r18
    1402:	02 c0       	rjmp	.+4      	; 0x1408 <DIO_u8GetPinValue+0x90>
    1404:	55 95       	asr	r21
    1406:	47 95       	ror	r20
    1408:	8a 95       	dec	r24
    140a:	e2 f7       	brpl	.-8      	; 0x1404 <DIO_u8GetPinValue+0x8c>
    140c:	ca 01       	movw	r24, r20
    140e:	58 2f       	mov	r21, r24
    1410:	51 70       	andi	r21, 0x01	; 1
    1412:	5b 83       	std	Y+3, r21	; 0x03
    1414:	27 c0       	rjmp	.+78     	; 0x1464 <DIO_u8GetPinValue+0xec>
	case 2:
		return GET_BIT(PINC,Pin);
    1416:	e3 e3       	ldi	r30, 0x33	; 51
    1418:	f0 e0       	ldi	r31, 0x00	; 0
    141a:	80 81       	ld	r24, Z
    141c:	28 2f       	mov	r18, r24
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	8a 81       	ldd	r24, Y+2	; 0x02
    1422:	88 2f       	mov	r24, r24
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	a9 01       	movw	r20, r18
    1428:	02 c0       	rjmp	.+4      	; 0x142e <DIO_u8GetPinValue+0xb6>
    142a:	55 95       	asr	r21
    142c:	47 95       	ror	r20
    142e:	8a 95       	dec	r24
    1430:	e2 f7       	brpl	.-8      	; 0x142a <DIO_u8GetPinValue+0xb2>
    1432:	ca 01       	movw	r24, r20
    1434:	58 2f       	mov	r21, r24
    1436:	51 70       	andi	r21, 0x01	; 1
    1438:	5b 83       	std	Y+3, r21	; 0x03
    143a:	14 c0       	rjmp	.+40     	; 0x1464 <DIO_u8GetPinValue+0xec>
	case 3:
		return GET_BIT(PIND,Pin);
    143c:	e0 e3       	ldi	r30, 0x30	; 48
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	80 81       	ld	r24, Z
    1442:	28 2f       	mov	r18, r24
    1444:	30 e0       	ldi	r19, 0x00	; 0
    1446:	8a 81       	ldd	r24, Y+2	; 0x02
    1448:	88 2f       	mov	r24, r24
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a9 01       	movw	r20, r18
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <DIO_u8GetPinValue+0xdc>
    1450:	55 95       	asr	r21
    1452:	47 95       	ror	r20
    1454:	8a 95       	dec	r24
    1456:	e2 f7       	brpl	.-8      	; 0x1450 <DIO_u8GetPinValue+0xd8>
    1458:	ca 01       	movw	r24, r20
    145a:	58 2f       	mov	r21, r24
    145c:	51 70       	andi	r21, 0x01	; 1
    145e:	5b 83       	std	Y+3, r21	; 0x03
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <DIO_u8GetPinValue+0xec>
    1462:	02 c0       	rjmp	.+4      	; 0x1468 <DIO_u8GetPinValue+0xf0>
	}

}
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	8e 83       	std	Y+6, r24	; 0x06
    1468:	8e 81       	ldd	r24, Y+6	; 0x06
    146a:	26 96       	adiw	r28, 0x06	; 6
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	cf 91       	pop	r28
    1478:	df 91       	pop	r29
    147a:	08 95       	ret

0000147c <LCD_voidInit>:

#include"LCD_config.h"


void LCD_voidInit(void)
{
    147c:	df 93       	push	r29
    147e:	cf 93       	push	r28
    1480:	cd b7       	in	r28, 0x3d	; 61
    1482:	de b7       	in	r29, 0x3e	; 62
    1484:	aa 97       	sbiw	r28, 0x2a	; 42
    1486:	0f b6       	in	r0, 0x3f	; 63
    1488:	f8 94       	cli
    148a:	de bf       	out	0x3e, r29	; 62
    148c:	0f be       	out	0x3f, r0	; 63
    148e:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPinDir(D0_PORT ,D0_PIN ,OUTPUT);
    1490:	80 e0       	ldi	r24, 0x00	; 0
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	41 e0       	ldi	r20, 0x01	; 1
    1496:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D1_PORT ,D1_PIN ,OUTPUT);
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	61 e0       	ldi	r22, 0x01	; 1
    149e:	41 e0       	ldi	r20, 0x01	; 1
    14a0:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D2_PORT ,D2_PIN ,OUTPUT);
    14a4:	80 e0       	ldi	r24, 0x00	; 0
    14a6:	62 e0       	ldi	r22, 0x02	; 2
    14a8:	41 e0       	ldi	r20, 0x01	; 1
    14aa:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D3_PORT ,D3_PIN ,OUTPUT);
    14ae:	80 e0       	ldi	r24, 0x00	; 0
    14b0:	63 e0       	ldi	r22, 0x03	; 3
    14b2:	41 e0       	ldi	r20, 0x01	; 1
    14b4:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D4_PORT ,D4_PIN ,OUTPUT);
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	64 e0       	ldi	r22, 0x04	; 4
    14bc:	41 e0       	ldi	r20, 0x01	; 1
    14be:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D5_PORT ,D5_PIN ,OUTPUT);
    14c2:	80 e0       	ldi	r24, 0x00	; 0
    14c4:	65 e0       	ldi	r22, 0x05	; 5
    14c6:	41 e0       	ldi	r20, 0x01	; 1
    14c8:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D6_PORT ,D6_PIN ,OUTPUT);
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	66 e0       	ldi	r22, 0x06	; 6
    14d0:	41 e0       	ldi	r20, 0x01	; 1
    14d2:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(D7_PORT ,D7_PIN ,OUTPUT);
    14d6:	80 e0       	ldi	r24, 0x00	; 0
    14d8:	67 e0       	ldi	r22, 0x07	; 7
    14da:	41 e0       	ldi	r20, 0x01	; 1
    14dc:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>

	DIO_voidSetPinDir(RS_PORT,RS_PIN,OUTPUT);
    14e0:	83 e0       	ldi	r24, 0x03	; 3
    14e2:	63 e0       	ldi	r22, 0x03	; 3
    14e4:	41 e0       	ldi	r20, 0x01	; 1
    14e6:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(RW_PORT,RW_PIN,OUTPUT);
    14ea:	83 e0       	ldi	r24, 0x03	; 3
    14ec:	64 e0       	ldi	r22, 0x04	; 4
    14ee:	41 e0       	ldi	r20, 0x01	; 1
    14f0:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(EN_PORT,EN_PIN,OUTPUT);
    14f4:	83 e0       	ldi	r24, 0x03	; 3
    14f6:	65 e0       	ldi	r22, 0x05	; 5
    14f8:	41 e0       	ldi	r20, 0x01	; 1
    14fa:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>

	LCD_voidSendCommand(FunctionSet8bit2Line5x7Dots);
    14fe:	88 e3       	ldi	r24, 0x38	; 56
    1500:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1504:	80 e0       	ldi	r24, 0x00	; 0
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	a0 ea       	ldi	r26, 0xA0	; 160
    150a:	b0 e4       	ldi	r27, 0x40	; 64
    150c:	8f a3       	std	Y+39, r24	; 0x27
    150e:	98 a7       	std	Y+40, r25	; 0x28
    1510:	a9 a7       	std	Y+41, r26	; 0x29
    1512:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1514:	6f a1       	ldd	r22, Y+39	; 0x27
    1516:	78 a5       	ldd	r23, Y+40	; 0x28
    1518:	89 a5       	ldd	r24, Y+41	; 0x29
    151a:	9a a5       	ldd	r25, Y+42	; 0x2a
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	30 e8       	ldi	r19, 0x80	; 128
    1520:	4b e3       	ldi	r20, 0x3B	; 59
    1522:	55 e4       	ldi	r21, 0x45	; 69
    1524:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1528:	dc 01       	movw	r26, r24
    152a:	cb 01       	movw	r24, r22
    152c:	8b a3       	std	Y+35, r24	; 0x23
    152e:	9c a3       	std	Y+36, r25	; 0x24
    1530:	ad a3       	std	Y+37, r26	; 0x25
    1532:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1534:	6b a1       	ldd	r22, Y+35	; 0x23
    1536:	7c a1       	ldd	r23, Y+36	; 0x24
    1538:	8d a1       	ldd	r24, Y+37	; 0x25
    153a:	9e a1       	ldd	r25, Y+38	; 0x26
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	40 e8       	ldi	r20, 0x80	; 128
    1542:	5f e3       	ldi	r21, 0x3F	; 63
    1544:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1548:	88 23       	and	r24, r24
    154a:	2c f4       	brge	.+10     	; 0x1556 <LCD_voidInit+0xda>
		__ticks = 1;
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	9a a3       	std	Y+34, r25	; 0x22
    1552:	89 a3       	std	Y+33, r24	; 0x21
    1554:	3f c0       	rjmp	.+126    	; 0x15d4 <LCD_voidInit+0x158>
	else if (__tmp > 65535)
    1556:	6b a1       	ldd	r22, Y+35	; 0x23
    1558:	7c a1       	ldd	r23, Y+36	; 0x24
    155a:	8d a1       	ldd	r24, Y+37	; 0x25
    155c:	9e a1       	ldd	r25, Y+38	; 0x26
    155e:	20 e0       	ldi	r18, 0x00	; 0
    1560:	3f ef       	ldi	r19, 0xFF	; 255
    1562:	4f e7       	ldi	r20, 0x7F	; 127
    1564:	57 e4       	ldi	r21, 0x47	; 71
    1566:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    156a:	18 16       	cp	r1, r24
    156c:	4c f5       	brge	.+82     	; 0x15c0 <LCD_voidInit+0x144>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    156e:	6f a1       	ldd	r22, Y+39	; 0x27
    1570:	78 a5       	ldd	r23, Y+40	; 0x28
    1572:	89 a5       	ldd	r24, Y+41	; 0x29
    1574:	9a a5       	ldd	r25, Y+42	; 0x2a
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e2       	ldi	r20, 0x20	; 32
    157c:	51 e4       	ldi	r21, 0x41	; 65
    157e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1582:	dc 01       	movw	r26, r24
    1584:	cb 01       	movw	r24, r22
    1586:	bc 01       	movw	r22, r24
    1588:	cd 01       	movw	r24, r26
    158a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    158e:	dc 01       	movw	r26, r24
    1590:	cb 01       	movw	r24, r22
    1592:	9a a3       	std	Y+34, r25	; 0x22
    1594:	89 a3       	std	Y+33, r24	; 0x21
    1596:	0f c0       	rjmp	.+30     	; 0x15b6 <LCD_voidInit+0x13a>
    1598:	8c e2       	ldi	r24, 0x2C	; 44
    159a:	91 e0       	ldi	r25, 0x01	; 1
    159c:	98 a3       	std	Y+32, r25	; 0x20
    159e:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15a2:	98 a1       	ldd	r25, Y+32	; 0x20
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	f1 f7       	brne	.-4      	; 0x15a4 <LCD_voidInit+0x128>
    15a8:	98 a3       	std	Y+32, r25	; 0x20
    15aa:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ac:	89 a1       	ldd	r24, Y+33	; 0x21
    15ae:	9a a1       	ldd	r25, Y+34	; 0x22
    15b0:	01 97       	sbiw	r24, 0x01	; 1
    15b2:	9a a3       	std	Y+34, r25	; 0x22
    15b4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b6:	89 a1       	ldd	r24, Y+33	; 0x21
    15b8:	9a a1       	ldd	r25, Y+34	; 0x22
    15ba:	00 97       	sbiw	r24, 0x00	; 0
    15bc:	69 f7       	brne	.-38     	; 0x1598 <LCD_voidInit+0x11c>
    15be:	14 c0       	rjmp	.+40     	; 0x15e8 <LCD_voidInit+0x16c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15c0:	6b a1       	ldd	r22, Y+35	; 0x23
    15c2:	7c a1       	ldd	r23, Y+36	; 0x24
    15c4:	8d a1       	ldd	r24, Y+37	; 0x25
    15c6:	9e a1       	ldd	r25, Y+38	; 0x26
    15c8:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	9a a3       	std	Y+34, r25	; 0x22
    15d2:	89 a3       	std	Y+33, r24	; 0x21
    15d4:	89 a1       	ldd	r24, Y+33	; 0x21
    15d6:	9a a1       	ldd	r25, Y+34	; 0x22
    15d8:	9e 8f       	std	Y+30, r25	; 0x1e
    15da:	8d 8f       	std	Y+29, r24	; 0x1d
    15dc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15de:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15e0:	01 97       	sbiw	r24, 0x01	; 1
    15e2:	f1 f7       	brne	.-4      	; 0x15e0 <LCD_voidInit+0x164>
    15e4:	9e 8f       	std	Y+30, r25	; 0x1e
    15e6:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);
	LCD_voidSendCommand(DisplayOnCursorOff);
    15e8:	8c e0       	ldi	r24, 0x0C	; 12
    15ea:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	90 e0       	ldi	r25, 0x00	; 0
    15f2:	a0 ea       	ldi	r26, 0xA0	; 160
    15f4:	b0 e4       	ldi	r27, 0x40	; 64
    15f6:	89 8f       	std	Y+25, r24	; 0x19
    15f8:	9a 8f       	std	Y+26, r25	; 0x1a
    15fa:	ab 8f       	std	Y+27, r26	; 0x1b
    15fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15fe:	69 8d       	ldd	r22, Y+25	; 0x19
    1600:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1602:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1604:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1606:	20 e0       	ldi	r18, 0x00	; 0
    1608:	30 e8       	ldi	r19, 0x80	; 128
    160a:	4b e3       	ldi	r20, 0x3B	; 59
    160c:	55 e4       	ldi	r21, 0x45	; 69
    160e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1612:	dc 01       	movw	r26, r24
    1614:	cb 01       	movw	r24, r22
    1616:	8d 8b       	std	Y+21, r24	; 0x15
    1618:	9e 8b       	std	Y+22, r25	; 0x16
    161a:	af 8b       	std	Y+23, r26	; 0x17
    161c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    161e:	6d 89       	ldd	r22, Y+21	; 0x15
    1620:	7e 89       	ldd	r23, Y+22	; 0x16
    1622:	8f 89       	ldd	r24, Y+23	; 0x17
    1624:	98 8d       	ldd	r25, Y+24	; 0x18
    1626:	20 e0       	ldi	r18, 0x00	; 0
    1628:	30 e0       	ldi	r19, 0x00	; 0
    162a:	40 e8       	ldi	r20, 0x80	; 128
    162c:	5f e3       	ldi	r21, 0x3F	; 63
    162e:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1632:	88 23       	and	r24, r24
    1634:	2c f4       	brge	.+10     	; 0x1640 <LCD_voidInit+0x1c4>
		__ticks = 1;
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	9c 8b       	std	Y+20, r25	; 0x14
    163c:	8b 8b       	std	Y+19, r24	; 0x13
    163e:	3f c0       	rjmp	.+126    	; 0x16be <LCD_voidInit+0x242>
	else if (__tmp > 65535)
    1640:	6d 89       	ldd	r22, Y+21	; 0x15
    1642:	7e 89       	ldd	r23, Y+22	; 0x16
    1644:	8f 89       	ldd	r24, Y+23	; 0x17
    1646:	98 8d       	ldd	r25, Y+24	; 0x18
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	3f ef       	ldi	r19, 0xFF	; 255
    164c:	4f e7       	ldi	r20, 0x7F	; 127
    164e:	57 e4       	ldi	r21, 0x47	; 71
    1650:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1654:	18 16       	cp	r1, r24
    1656:	4c f5       	brge	.+82     	; 0x16aa <LCD_voidInit+0x22e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1658:	69 8d       	ldd	r22, Y+25	; 0x19
    165a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    165c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    165e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e2       	ldi	r20, 0x20	; 32
    1666:	51 e4       	ldi	r21, 0x41	; 65
    1668:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    166c:	dc 01       	movw	r26, r24
    166e:	cb 01       	movw	r24, r22
    1670:	bc 01       	movw	r22, r24
    1672:	cd 01       	movw	r24, r26
    1674:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1678:	dc 01       	movw	r26, r24
    167a:	cb 01       	movw	r24, r22
    167c:	9c 8b       	std	Y+20, r25	; 0x14
    167e:	8b 8b       	std	Y+19, r24	; 0x13
    1680:	0f c0       	rjmp	.+30     	; 0x16a0 <LCD_voidInit+0x224>
    1682:	8c e2       	ldi	r24, 0x2C	; 44
    1684:	91 e0       	ldi	r25, 0x01	; 1
    1686:	9a 8b       	std	Y+18, r25	; 0x12
    1688:	89 8b       	std	Y+17, r24	; 0x11
    168a:	89 89       	ldd	r24, Y+17	; 0x11
    168c:	9a 89       	ldd	r25, Y+18	; 0x12
    168e:	01 97       	sbiw	r24, 0x01	; 1
    1690:	f1 f7       	brne	.-4      	; 0x168e <LCD_voidInit+0x212>
    1692:	9a 8b       	std	Y+18, r25	; 0x12
    1694:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1696:	8b 89       	ldd	r24, Y+19	; 0x13
    1698:	9c 89       	ldd	r25, Y+20	; 0x14
    169a:	01 97       	sbiw	r24, 0x01	; 1
    169c:	9c 8b       	std	Y+20, r25	; 0x14
    169e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16a0:	8b 89       	ldd	r24, Y+19	; 0x13
    16a2:	9c 89       	ldd	r25, Y+20	; 0x14
    16a4:	00 97       	sbiw	r24, 0x00	; 0
    16a6:	69 f7       	brne	.-38     	; 0x1682 <LCD_voidInit+0x206>
    16a8:	14 c0       	rjmp	.+40     	; 0x16d2 <LCD_voidInit+0x256>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16aa:	6d 89       	ldd	r22, Y+21	; 0x15
    16ac:	7e 89       	ldd	r23, Y+22	; 0x16
    16ae:	8f 89       	ldd	r24, Y+23	; 0x17
    16b0:	98 8d       	ldd	r25, Y+24	; 0x18
    16b2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    16b6:	dc 01       	movw	r26, r24
    16b8:	cb 01       	movw	r24, r22
    16ba:	9c 8b       	std	Y+20, r25	; 0x14
    16bc:	8b 8b       	std	Y+19, r24	; 0x13
    16be:	8b 89       	ldd	r24, Y+19	; 0x13
    16c0:	9c 89       	ldd	r25, Y+20	; 0x14
    16c2:	98 8b       	std	Y+16, r25	; 0x10
    16c4:	8f 87       	std	Y+15, r24	; 0x0f
    16c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    16c8:	98 89       	ldd	r25, Y+16	; 0x10
    16ca:	01 97       	sbiw	r24, 0x01	; 1
    16cc:	f1 f7       	brne	.-4      	; 0x16ca <LCD_voidInit+0x24e>
    16ce:	98 8b       	std	Y+16, r25	; 0x10
    16d0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(5);
	LCD_voidSendCommand(ClearWithDDRAM);
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    16d8:	80 e0       	ldi	r24, 0x00	; 0
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	a0 ea       	ldi	r26, 0xA0	; 160
    16de:	b0 e4       	ldi	r27, 0x40	; 64
    16e0:	8b 87       	std	Y+11, r24	; 0x0b
    16e2:	9c 87       	std	Y+12, r25	; 0x0c
    16e4:	ad 87       	std	Y+13, r26	; 0x0d
    16e6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16e8:	6b 85       	ldd	r22, Y+11	; 0x0b
    16ea:	7c 85       	ldd	r23, Y+12	; 0x0c
    16ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    16ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    16f0:	20 e0       	ldi	r18, 0x00	; 0
    16f2:	30 e8       	ldi	r19, 0x80	; 128
    16f4:	4b e3       	ldi	r20, 0x3B	; 59
    16f6:	55 e4       	ldi	r21, 0x45	; 69
    16f8:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    16fc:	dc 01       	movw	r26, r24
    16fe:	cb 01       	movw	r24, r22
    1700:	8f 83       	std	Y+7, r24	; 0x07
    1702:	98 87       	std	Y+8, r25	; 0x08
    1704:	a9 87       	std	Y+9, r26	; 0x09
    1706:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1708:	6f 81       	ldd	r22, Y+7	; 0x07
    170a:	78 85       	ldd	r23, Y+8	; 0x08
    170c:	89 85       	ldd	r24, Y+9	; 0x09
    170e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1710:	20 e0       	ldi	r18, 0x00	; 0
    1712:	30 e0       	ldi	r19, 0x00	; 0
    1714:	40 e8       	ldi	r20, 0x80	; 128
    1716:	5f e3       	ldi	r21, 0x3F	; 63
    1718:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    171c:	88 23       	and	r24, r24
    171e:	2c f4       	brge	.+10     	; 0x172a <LCD_voidInit+0x2ae>
		__ticks = 1;
    1720:	81 e0       	ldi	r24, 0x01	; 1
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	9e 83       	std	Y+6, r25	; 0x06
    1726:	8d 83       	std	Y+5, r24	; 0x05
    1728:	3f c0       	rjmp	.+126    	; 0x17a8 <LCD_voidInit+0x32c>
	else if (__tmp > 65535)
    172a:	6f 81       	ldd	r22, Y+7	; 0x07
    172c:	78 85       	ldd	r23, Y+8	; 0x08
    172e:	89 85       	ldd	r24, Y+9	; 0x09
    1730:	9a 85       	ldd	r25, Y+10	; 0x0a
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	3f ef       	ldi	r19, 0xFF	; 255
    1736:	4f e7       	ldi	r20, 0x7F	; 127
    1738:	57 e4       	ldi	r21, 0x47	; 71
    173a:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    173e:	18 16       	cp	r1, r24
    1740:	4c f5       	brge	.+82     	; 0x1794 <LCD_voidInit+0x318>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1742:	6b 85       	ldd	r22, Y+11	; 0x0b
    1744:	7c 85       	ldd	r23, Y+12	; 0x0c
    1746:	8d 85       	ldd	r24, Y+13	; 0x0d
    1748:	9e 85       	ldd	r25, Y+14	; 0x0e
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	40 e2       	ldi	r20, 0x20	; 32
    1750:	51 e4       	ldi	r21, 0x41	; 65
    1752:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1756:	dc 01       	movw	r26, r24
    1758:	cb 01       	movw	r24, r22
    175a:	bc 01       	movw	r22, r24
    175c:	cd 01       	movw	r24, r26
    175e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1762:	dc 01       	movw	r26, r24
    1764:	cb 01       	movw	r24, r22
    1766:	9e 83       	std	Y+6, r25	; 0x06
    1768:	8d 83       	std	Y+5, r24	; 0x05
    176a:	0f c0       	rjmp	.+30     	; 0x178a <LCD_voidInit+0x30e>
    176c:	8c e2       	ldi	r24, 0x2C	; 44
    176e:	91 e0       	ldi	r25, 0x01	; 1
    1770:	9c 83       	std	Y+4, r25	; 0x04
    1772:	8b 83       	std	Y+3, r24	; 0x03
    1774:	8b 81       	ldd	r24, Y+3	; 0x03
    1776:	9c 81       	ldd	r25, Y+4	; 0x04
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	f1 f7       	brne	.-4      	; 0x1778 <LCD_voidInit+0x2fc>
    177c:	9c 83       	std	Y+4, r25	; 0x04
    177e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1780:	8d 81       	ldd	r24, Y+5	; 0x05
    1782:	9e 81       	ldd	r25, Y+6	; 0x06
    1784:	01 97       	sbiw	r24, 0x01	; 1
    1786:	9e 83       	std	Y+6, r25	; 0x06
    1788:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    178a:	8d 81       	ldd	r24, Y+5	; 0x05
    178c:	9e 81       	ldd	r25, Y+6	; 0x06
    178e:	00 97       	sbiw	r24, 0x00	; 0
    1790:	69 f7       	brne	.-38     	; 0x176c <LCD_voidInit+0x2f0>
    1792:	14 c0       	rjmp	.+40     	; 0x17bc <LCD_voidInit+0x340>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1794:	6f 81       	ldd	r22, Y+7	; 0x07
    1796:	78 85       	ldd	r23, Y+8	; 0x08
    1798:	89 85       	ldd	r24, Y+9	; 0x09
    179a:	9a 85       	ldd	r25, Y+10	; 0x0a
    179c:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    17a0:	dc 01       	movw	r26, r24
    17a2:	cb 01       	movw	r24, r22
    17a4:	9e 83       	std	Y+6, r25	; 0x06
    17a6:	8d 83       	std	Y+5, r24	; 0x05
    17a8:	8d 81       	ldd	r24, Y+5	; 0x05
    17aa:	9e 81       	ldd	r25, Y+6	; 0x06
    17ac:	9a 83       	std	Y+2, r25	; 0x02
    17ae:	89 83       	std	Y+1, r24	; 0x01
    17b0:	89 81       	ldd	r24, Y+1	; 0x01
    17b2:	9a 81       	ldd	r25, Y+2	; 0x02
    17b4:	01 97       	sbiw	r24, 0x01	; 1
    17b6:	f1 f7       	brne	.-4      	; 0x17b4 <LCD_voidInit+0x338>
    17b8:	9a 83       	std	Y+2, r25	; 0x02
    17ba:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(5);



}
    17bc:	aa 96       	adiw	r28, 0x2a	; 42
    17be:	0f b6       	in	r0, 0x3f	; 63
    17c0:	f8 94       	cli
    17c2:	de bf       	out	0x3e, r29	; 62
    17c4:	0f be       	out	0x3f, r0	; 63
    17c6:	cd bf       	out	0x3d, r28	; 61
    17c8:	cf 91       	pop	r28
    17ca:	df 91       	pop	r29
    17cc:	08 95       	ret

000017ce <LCD_voidWriteCharacter>:

void LCD_voidWriteCharacter(u8 Charater)
{
    17ce:	df 93       	push	r29
    17d0:	cf 93       	push	r28
    17d2:	cd b7       	in	r28, 0x3d	; 61
    17d4:	de b7       	in	r29, 0x3e	; 62
    17d6:	2f 97       	sbiw	r28, 0x0f	; 15
    17d8:	0f b6       	in	r0, 0x3f	; 63
    17da:	f8 94       	cli
    17dc:	de bf       	out	0x3e, r29	; 62
    17de:	0f be       	out	0x3f, r0	; 63
    17e0:	cd bf       	out	0x3d, r28	; 61
    17e2:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(RS_PORT,RS_PIN,HIGH);
    17e4:	83 e0       	ldi	r24, 0x03	; 3
    17e6:	63 e0       	ldi	r22, 0x03	; 3
    17e8:	41 e0       	ldi	r20, 0x01	; 1
    17ea:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(RW_PORT,RW_PIN,LOW);
    17ee:	83 e0       	ldi	r24, 0x03	; 3
    17f0:	64 e0       	ldi	r22, 0x04	; 4
    17f2:	40 e0       	ldi	r20, 0x00	; 0
    17f4:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(D0_PORT ,D0_PIN ,GET_BIT(Charater,PIN_0));
    17f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    17fa:	98 2f       	mov	r25, r24
    17fc:	91 70       	andi	r25, 0x01	; 1
    17fe:	80 e0       	ldi	r24, 0x00	; 0
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	49 2f       	mov	r20, r25
    1804:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D1_PORT ,D1_PIN ,GET_BIT(Charater,PIN_1));
    1808:	8f 85       	ldd	r24, Y+15	; 0x0f
    180a:	86 95       	lsr	r24
    180c:	98 2f       	mov	r25, r24
    180e:	91 70       	andi	r25, 0x01	; 1
    1810:	80 e0       	ldi	r24, 0x00	; 0
    1812:	61 e0       	ldi	r22, 0x01	; 1
    1814:	49 2f       	mov	r20, r25
    1816:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D2_PORT ,D2_PIN ,GET_BIT(Charater,PIN_2));
    181a:	8f 85       	ldd	r24, Y+15	; 0x0f
    181c:	86 95       	lsr	r24
    181e:	86 95       	lsr	r24
    1820:	98 2f       	mov	r25, r24
    1822:	91 70       	andi	r25, 0x01	; 1
    1824:	80 e0       	ldi	r24, 0x00	; 0
    1826:	62 e0       	ldi	r22, 0x02	; 2
    1828:	49 2f       	mov	r20, r25
    182a:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D3_PORT ,D3_PIN ,GET_BIT(Charater,PIN_3));
    182e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1830:	86 95       	lsr	r24
    1832:	86 95       	lsr	r24
    1834:	86 95       	lsr	r24
    1836:	98 2f       	mov	r25, r24
    1838:	91 70       	andi	r25, 0x01	; 1
    183a:	80 e0       	ldi	r24, 0x00	; 0
    183c:	63 e0       	ldi	r22, 0x03	; 3
    183e:	49 2f       	mov	r20, r25
    1840:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D4_PORT ,D4_PIN ,GET_BIT(Charater,PIN_4));
    1844:	8f 85       	ldd	r24, Y+15	; 0x0f
    1846:	82 95       	swap	r24
    1848:	8f 70       	andi	r24, 0x0F	; 15
    184a:	98 2f       	mov	r25, r24
    184c:	91 70       	andi	r25, 0x01	; 1
    184e:	80 e0       	ldi	r24, 0x00	; 0
    1850:	64 e0       	ldi	r22, 0x04	; 4
    1852:	49 2f       	mov	r20, r25
    1854:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D5_PORT ,D5_PIN ,GET_BIT(Charater,PIN_5));
    1858:	8f 85       	ldd	r24, Y+15	; 0x0f
    185a:	82 95       	swap	r24
    185c:	86 95       	lsr	r24
    185e:	87 70       	andi	r24, 0x07	; 7
    1860:	98 2f       	mov	r25, r24
    1862:	91 70       	andi	r25, 0x01	; 1
    1864:	80 e0       	ldi	r24, 0x00	; 0
    1866:	65 e0       	ldi	r22, 0x05	; 5
    1868:	49 2f       	mov	r20, r25
    186a:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D6_PORT ,D6_PIN ,GET_BIT(Charater,PIN_6));
    186e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1870:	82 95       	swap	r24
    1872:	86 95       	lsr	r24
    1874:	86 95       	lsr	r24
    1876:	83 70       	andi	r24, 0x03	; 3
    1878:	98 2f       	mov	r25, r24
    187a:	91 70       	andi	r25, 0x01	; 1
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	66 e0       	ldi	r22, 0x06	; 6
    1880:	49 2f       	mov	r20, r25
    1882:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D7_PORT ,D7_PIN ,GET_BIT(Charater,PIN_7));
    1886:	8f 85       	ldd	r24, Y+15	; 0x0f
    1888:	98 2f       	mov	r25, r24
    188a:	99 1f       	adc	r25, r25
    188c:	99 27       	eor	r25, r25
    188e:	99 1f       	adc	r25, r25
    1890:	80 e0       	ldi	r24, 0x00	; 0
    1892:	67 e0       	ldi	r22, 0x07	; 7
    1894:	49 2f       	mov	r20, r25
    1896:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(EN_PORT ,EN_PIN,HIGH);
    189a:	83 e0       	ldi	r24, 0x03	; 3
    189c:	65 e0       	ldi	r22, 0x05	; 5
    189e:	41 e0       	ldi	r20, 0x01	; 1
    18a0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
    18a4:	80 e0       	ldi	r24, 0x00	; 0
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	a0 e0       	ldi	r26, 0x00	; 0
    18aa:	b0 e4       	ldi	r27, 0x40	; 64
    18ac:	8b 87       	std	Y+11, r24	; 0x0b
    18ae:	9c 87       	std	Y+12, r25	; 0x0c
    18b0:	ad 87       	std	Y+13, r26	; 0x0d
    18b2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    18b4:	6b 85       	ldd	r22, Y+11	; 0x0b
    18b6:	7c 85       	ldd	r23, Y+12	; 0x0c
    18b8:	8d 85       	ldd	r24, Y+13	; 0x0d
    18ba:	9e 85       	ldd	r25, Y+14	; 0x0e
    18bc:	20 e0       	ldi	r18, 0x00	; 0
    18be:	30 e8       	ldi	r19, 0x80	; 128
    18c0:	4b e3       	ldi	r20, 0x3B	; 59
    18c2:	55 e4       	ldi	r21, 0x45	; 69
    18c4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    18c8:	dc 01       	movw	r26, r24
    18ca:	cb 01       	movw	r24, r22
    18cc:	8f 83       	std	Y+7, r24	; 0x07
    18ce:	98 87       	std	Y+8, r25	; 0x08
    18d0:	a9 87       	std	Y+9, r26	; 0x09
    18d2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    18d4:	6f 81       	ldd	r22, Y+7	; 0x07
    18d6:	78 85       	ldd	r23, Y+8	; 0x08
    18d8:	89 85       	ldd	r24, Y+9	; 0x09
    18da:	9a 85       	ldd	r25, Y+10	; 0x0a
    18dc:	20 e0       	ldi	r18, 0x00	; 0
    18de:	30 e0       	ldi	r19, 0x00	; 0
    18e0:	40 e8       	ldi	r20, 0x80	; 128
    18e2:	5f e3       	ldi	r21, 0x3F	; 63
    18e4:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    18e8:	88 23       	and	r24, r24
    18ea:	2c f4       	brge	.+10     	; 0x18f6 <LCD_voidWriteCharacter+0x128>
		__ticks = 1;
    18ec:	81 e0       	ldi	r24, 0x01	; 1
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	9e 83       	std	Y+6, r25	; 0x06
    18f2:	8d 83       	std	Y+5, r24	; 0x05
    18f4:	3f c0       	rjmp	.+126    	; 0x1974 <LCD_voidWriteCharacter+0x1a6>
	else if (__tmp > 65535)
    18f6:	6f 81       	ldd	r22, Y+7	; 0x07
    18f8:	78 85       	ldd	r23, Y+8	; 0x08
    18fa:	89 85       	ldd	r24, Y+9	; 0x09
    18fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    18fe:	20 e0       	ldi	r18, 0x00	; 0
    1900:	3f ef       	ldi	r19, 0xFF	; 255
    1902:	4f e7       	ldi	r20, 0x7F	; 127
    1904:	57 e4       	ldi	r21, 0x47	; 71
    1906:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    190a:	18 16       	cp	r1, r24
    190c:	4c f5       	brge	.+82     	; 0x1960 <LCD_voidWriteCharacter+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    190e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1910:	7c 85       	ldd	r23, Y+12	; 0x0c
    1912:	8d 85       	ldd	r24, Y+13	; 0x0d
    1914:	9e 85       	ldd	r25, Y+14	; 0x0e
    1916:	20 e0       	ldi	r18, 0x00	; 0
    1918:	30 e0       	ldi	r19, 0x00	; 0
    191a:	40 e2       	ldi	r20, 0x20	; 32
    191c:	51 e4       	ldi	r21, 0x41	; 65
    191e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1922:	dc 01       	movw	r26, r24
    1924:	cb 01       	movw	r24, r22
    1926:	bc 01       	movw	r22, r24
    1928:	cd 01       	movw	r24, r26
    192a:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	9e 83       	std	Y+6, r25	; 0x06
    1934:	8d 83       	std	Y+5, r24	; 0x05
    1936:	0f c0       	rjmp	.+30     	; 0x1956 <LCD_voidWriteCharacter+0x188>
    1938:	8c e2       	ldi	r24, 0x2C	; 44
    193a:	91 e0       	ldi	r25, 0x01	; 1
    193c:	9c 83       	std	Y+4, r25	; 0x04
    193e:	8b 83       	std	Y+3, r24	; 0x03
    1940:	8b 81       	ldd	r24, Y+3	; 0x03
    1942:	9c 81       	ldd	r25, Y+4	; 0x04
    1944:	01 97       	sbiw	r24, 0x01	; 1
    1946:	f1 f7       	brne	.-4      	; 0x1944 <LCD_voidWriteCharacter+0x176>
    1948:	9c 83       	std	Y+4, r25	; 0x04
    194a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    194c:	8d 81       	ldd	r24, Y+5	; 0x05
    194e:	9e 81       	ldd	r25, Y+6	; 0x06
    1950:	01 97       	sbiw	r24, 0x01	; 1
    1952:	9e 83       	std	Y+6, r25	; 0x06
    1954:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1956:	8d 81       	ldd	r24, Y+5	; 0x05
    1958:	9e 81       	ldd	r25, Y+6	; 0x06
    195a:	00 97       	sbiw	r24, 0x00	; 0
    195c:	69 f7       	brne	.-38     	; 0x1938 <LCD_voidWriteCharacter+0x16a>
    195e:	14 c0       	rjmp	.+40     	; 0x1988 <LCD_voidWriteCharacter+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1960:	6f 81       	ldd	r22, Y+7	; 0x07
    1962:	78 85       	ldd	r23, Y+8	; 0x08
    1964:	89 85       	ldd	r24, Y+9	; 0x09
    1966:	9a 85       	ldd	r25, Y+10	; 0x0a
    1968:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    196c:	dc 01       	movw	r26, r24
    196e:	cb 01       	movw	r24, r22
    1970:	9e 83       	std	Y+6, r25	; 0x06
    1972:	8d 83       	std	Y+5, r24	; 0x05
    1974:	8d 81       	ldd	r24, Y+5	; 0x05
    1976:	9e 81       	ldd	r25, Y+6	; 0x06
    1978:	9a 83       	std	Y+2, r25	; 0x02
    197a:	89 83       	std	Y+1, r24	; 0x01
    197c:	89 81       	ldd	r24, Y+1	; 0x01
    197e:	9a 81       	ldd	r25, Y+2	; 0x02
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	f1 f7       	brne	.-4      	; 0x1980 <LCD_voidWriteCharacter+0x1b2>
    1984:	9a 83       	std	Y+2, r25	; 0x02
    1986:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_voidSetPinValue(EN_PORT ,EN_PIN,LOW);
    1988:	83 e0       	ldi	r24, 0x03	; 3
    198a:	65 e0       	ldi	r22, 0x05	; 5
    198c:	40 e0       	ldi	r20, 0x00	; 0
    198e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>




}
    1992:	2f 96       	adiw	r28, 0x0f	; 15
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	f8 94       	cli
    1998:	de bf       	out	0x3e, r29	; 62
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	cd bf       	out	0x3d, r28	; 61
    199e:	cf 91       	pop	r28
    19a0:	df 91       	pop	r29
    19a2:	08 95       	ret

000019a4 <LCD_voidSendCommand>:

void LCD_voidSendCommand(u8 Command)
{
    19a4:	df 93       	push	r29
    19a6:	cf 93       	push	r28
    19a8:	cd b7       	in	r28, 0x3d	; 61
    19aa:	de b7       	in	r29, 0x3e	; 62
    19ac:	2f 97       	sbiw	r28, 0x0f	; 15
    19ae:	0f b6       	in	r0, 0x3f	; 63
    19b0:	f8 94       	cli
    19b2:	de bf       	out	0x3e, r29	; 62
    19b4:	0f be       	out	0x3f, r0	; 63
    19b6:	cd bf       	out	0x3d, r28	; 61
    19b8:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_voidSetPinValue(RS_PORT,RS_PIN,LOW);
    19ba:	83 e0       	ldi	r24, 0x03	; 3
    19bc:	63 e0       	ldi	r22, 0x03	; 3
    19be:	40 e0       	ldi	r20, 0x00	; 0
    19c0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(RW_PORT,RW_PIN,LOW);
    19c4:	83 e0       	ldi	r24, 0x03	; 3
    19c6:	64 e0       	ldi	r22, 0x04	; 4
    19c8:	40 e0       	ldi	r20, 0x00	; 0
    19ca:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(D0_PORT ,D0_PIN ,GET_BIT(Command,PIN_0));
    19ce:	8f 85       	ldd	r24, Y+15	; 0x0f
    19d0:	98 2f       	mov	r25, r24
    19d2:	91 70       	andi	r25, 0x01	; 1
    19d4:	80 e0       	ldi	r24, 0x00	; 0
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	49 2f       	mov	r20, r25
    19da:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D1_PORT ,D1_PIN ,GET_BIT(Command,PIN_1));
    19de:	8f 85       	ldd	r24, Y+15	; 0x0f
    19e0:	86 95       	lsr	r24
    19e2:	98 2f       	mov	r25, r24
    19e4:	91 70       	andi	r25, 0x01	; 1
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	61 e0       	ldi	r22, 0x01	; 1
    19ea:	49 2f       	mov	r20, r25
    19ec:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D2_PORT ,D2_PIN ,GET_BIT(Command,PIN_2));
    19f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    19f2:	86 95       	lsr	r24
    19f4:	86 95       	lsr	r24
    19f6:	98 2f       	mov	r25, r24
    19f8:	91 70       	andi	r25, 0x01	; 1
    19fa:	80 e0       	ldi	r24, 0x00	; 0
    19fc:	62 e0       	ldi	r22, 0x02	; 2
    19fe:	49 2f       	mov	r20, r25
    1a00:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D3_PORT ,D3_PIN ,GET_BIT(Command,PIN_3));
    1a04:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a06:	86 95       	lsr	r24
    1a08:	86 95       	lsr	r24
    1a0a:	86 95       	lsr	r24
    1a0c:	98 2f       	mov	r25, r24
    1a0e:	91 70       	andi	r25, 0x01	; 1
    1a10:	80 e0       	ldi	r24, 0x00	; 0
    1a12:	63 e0       	ldi	r22, 0x03	; 3
    1a14:	49 2f       	mov	r20, r25
    1a16:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D4_PORT ,D4_PIN ,GET_BIT(Command,PIN_4));
    1a1a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a1c:	82 95       	swap	r24
    1a1e:	8f 70       	andi	r24, 0x0F	; 15
    1a20:	98 2f       	mov	r25, r24
    1a22:	91 70       	andi	r25, 0x01	; 1
    1a24:	80 e0       	ldi	r24, 0x00	; 0
    1a26:	64 e0       	ldi	r22, 0x04	; 4
    1a28:	49 2f       	mov	r20, r25
    1a2a:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D5_PORT ,D5_PIN ,GET_BIT(Command,PIN_5));
    1a2e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a30:	82 95       	swap	r24
    1a32:	86 95       	lsr	r24
    1a34:	87 70       	andi	r24, 0x07	; 7
    1a36:	98 2f       	mov	r25, r24
    1a38:	91 70       	andi	r25, 0x01	; 1
    1a3a:	80 e0       	ldi	r24, 0x00	; 0
    1a3c:	65 e0       	ldi	r22, 0x05	; 5
    1a3e:	49 2f       	mov	r20, r25
    1a40:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D6_PORT ,D6_PIN ,GET_BIT(Command,PIN_6));
    1a44:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a46:	82 95       	swap	r24
    1a48:	86 95       	lsr	r24
    1a4a:	86 95       	lsr	r24
    1a4c:	83 70       	andi	r24, 0x03	; 3
    1a4e:	98 2f       	mov	r25, r24
    1a50:	91 70       	andi	r25, 0x01	; 1
    1a52:	80 e0       	ldi	r24, 0x00	; 0
    1a54:	66 e0       	ldi	r22, 0x06	; 6
    1a56:	49 2f       	mov	r20, r25
    1a58:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(D7_PORT ,D7_PIN ,GET_BIT(Command,PIN_7));
    1a5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a5e:	98 2f       	mov	r25, r24
    1a60:	99 1f       	adc	r25, r25
    1a62:	99 27       	eor	r25, r25
    1a64:	99 1f       	adc	r25, r25
    1a66:	80 e0       	ldi	r24, 0x00	; 0
    1a68:	67 e0       	ldi	r22, 0x07	; 7
    1a6a:	49 2f       	mov	r20, r25
    1a6c:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>

	DIO_voidSetPinValue(EN_PORT ,EN_PIN,HIGH);
    1a70:	83 e0       	ldi	r24, 0x03	; 3
    1a72:	65 e0       	ldi	r22, 0x05	; 5
    1a74:	41 e0       	ldi	r20, 0x01	; 1
    1a76:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
    1a7a:	80 e0       	ldi	r24, 0x00	; 0
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	a0 e0       	ldi	r26, 0x00	; 0
    1a80:	b0 e4       	ldi	r27, 0x40	; 64
    1a82:	8b 87       	std	Y+11, r24	; 0x0b
    1a84:	9c 87       	std	Y+12, r25	; 0x0c
    1a86:	ad 87       	std	Y+13, r26	; 0x0d
    1a88:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a8a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a8c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a8e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a90:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a92:	20 e0       	ldi	r18, 0x00	; 0
    1a94:	30 e8       	ldi	r19, 0x80	; 128
    1a96:	4b e3       	ldi	r20, 0x3B	; 59
    1a98:	55 e4       	ldi	r21, 0x45	; 69
    1a9a:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1a9e:	dc 01       	movw	r26, r24
    1aa0:	cb 01       	movw	r24, r22
    1aa2:	8f 83       	std	Y+7, r24	; 0x07
    1aa4:	98 87       	std	Y+8, r25	; 0x08
    1aa6:	a9 87       	std	Y+9, r26	; 0x09
    1aa8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1aaa:	6f 81       	ldd	r22, Y+7	; 0x07
    1aac:	78 85       	ldd	r23, Y+8	; 0x08
    1aae:	89 85       	ldd	r24, Y+9	; 0x09
    1ab0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	30 e0       	ldi	r19, 0x00	; 0
    1ab6:	40 e8       	ldi	r20, 0x80	; 128
    1ab8:	5f e3       	ldi	r21, 0x3F	; 63
    1aba:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    1abe:	88 23       	and	r24, r24
    1ac0:	2c f4       	brge	.+10     	; 0x1acc <LCD_voidSendCommand+0x128>
		__ticks = 1;
    1ac2:	81 e0       	ldi	r24, 0x01	; 1
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	9e 83       	std	Y+6, r25	; 0x06
    1ac8:	8d 83       	std	Y+5, r24	; 0x05
    1aca:	3f c0       	rjmp	.+126    	; 0x1b4a <LCD_voidSendCommand+0x1a6>
	else if (__tmp > 65535)
    1acc:	6f 81       	ldd	r22, Y+7	; 0x07
    1ace:	78 85       	ldd	r23, Y+8	; 0x08
    1ad0:	89 85       	ldd	r24, Y+9	; 0x09
    1ad2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	3f ef       	ldi	r19, 0xFF	; 255
    1ad8:	4f e7       	ldi	r20, 0x7F	; 127
    1ada:	57 e4       	ldi	r21, 0x47	; 71
    1adc:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    1ae0:	18 16       	cp	r1, r24
    1ae2:	4c f5       	brge	.+82     	; 0x1b36 <LCD_voidSendCommand+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ae4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ae6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ae8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aea:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aec:	20 e0       	ldi	r18, 0x00	; 0
    1aee:	30 e0       	ldi	r19, 0x00	; 0
    1af0:	40 e2       	ldi	r20, 0x20	; 32
    1af2:	51 e4       	ldi	r21, 0x41	; 65
    1af4:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    1af8:	dc 01       	movw	r26, r24
    1afa:	cb 01       	movw	r24, r22
    1afc:	bc 01       	movw	r22, r24
    1afe:	cd 01       	movw	r24, r26
    1b00:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1b04:	dc 01       	movw	r26, r24
    1b06:	cb 01       	movw	r24, r22
    1b08:	9e 83       	std	Y+6, r25	; 0x06
    1b0a:	8d 83       	std	Y+5, r24	; 0x05
    1b0c:	0f c0       	rjmp	.+30     	; 0x1b2c <LCD_voidSendCommand+0x188>
    1b0e:	8c e2       	ldi	r24, 0x2C	; 44
    1b10:	91 e0       	ldi	r25, 0x01	; 1
    1b12:	9c 83       	std	Y+4, r25	; 0x04
    1b14:	8b 83       	std	Y+3, r24	; 0x03
    1b16:	8b 81       	ldd	r24, Y+3	; 0x03
    1b18:	9c 81       	ldd	r25, Y+4	; 0x04
    1b1a:	01 97       	sbiw	r24, 0x01	; 1
    1b1c:	f1 f7       	brne	.-4      	; 0x1b1a <LCD_voidSendCommand+0x176>
    1b1e:	9c 83       	std	Y+4, r25	; 0x04
    1b20:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b22:	8d 81       	ldd	r24, Y+5	; 0x05
    1b24:	9e 81       	ldd	r25, Y+6	; 0x06
    1b26:	01 97       	sbiw	r24, 0x01	; 1
    1b28:	9e 83       	std	Y+6, r25	; 0x06
    1b2a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b2c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b2e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b30:	00 97       	sbiw	r24, 0x00	; 0
    1b32:	69 f7       	brne	.-38     	; 0x1b0e <LCD_voidSendCommand+0x16a>
    1b34:	14 c0       	rjmp	.+40     	; 0x1b5e <LCD_voidSendCommand+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b36:	6f 81       	ldd	r22, Y+7	; 0x07
    1b38:	78 85       	ldd	r23, Y+8	; 0x08
    1b3a:	89 85       	ldd	r24, Y+9	; 0x09
    1b3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b3e:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    1b42:	dc 01       	movw	r26, r24
    1b44:	cb 01       	movw	r24, r22
    1b46:	9e 83       	std	Y+6, r25	; 0x06
    1b48:	8d 83       	std	Y+5, r24	; 0x05
    1b4a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b4c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b4e:	9a 83       	std	Y+2, r25	; 0x02
    1b50:	89 83       	std	Y+1, r24	; 0x01
    1b52:	89 81       	ldd	r24, Y+1	; 0x01
    1b54:	9a 81       	ldd	r25, Y+2	; 0x02
    1b56:	01 97       	sbiw	r24, 0x01	; 1
    1b58:	f1 f7       	brne	.-4      	; 0x1b56 <LCD_voidSendCommand+0x1b2>
    1b5a:	9a 83       	std	Y+2, r25	; 0x02
    1b5c:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_voidSetPinValue(EN_PORT ,EN_PIN,LOW);
    1b5e:	83 e0       	ldi	r24, 0x03	; 3
    1b60:	65 e0       	ldi	r22, 0x05	; 5
    1b62:	40 e0       	ldi	r20, 0x00	; 0
    1b64:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>

}
    1b68:	2f 96       	adiw	r28, 0x0f	; 15
    1b6a:	0f b6       	in	r0, 0x3f	; 63
    1b6c:	f8 94       	cli
    1b6e:	de bf       	out	0x3e, r29	; 62
    1b70:	0f be       	out	0x3f, r0	; 63
    1b72:	cd bf       	out	0x3d, r28	; 61
    1b74:	cf 91       	pop	r28
    1b76:	df 91       	pop	r29
    1b78:	08 95       	ret

00001b7a <LCD_voidWriteString>:

void LCD_voidWriteString(u8 *String)
{
    1b7a:	df 93       	push	r29
    1b7c:	cf 93       	push	r28
    1b7e:	00 d0       	rcall	.+0      	; 0x1b80 <LCD_voidWriteString+0x6>
    1b80:	cd b7       	in	r28, 0x3d	; 61
    1b82:	de b7       	in	r29, 0x3e	; 62
    1b84:	9a 83       	std	Y+2, r25	; 0x02
    1b86:	89 83       	std	Y+1, r24	; 0x01
    1b88:	0a c0       	rjmp	.+20     	; 0x1b9e <LCD_voidWriteString+0x24>
    while(*String != '\0')
    {
    	LCD_voidWriteCharacter( *String);
    1b8a:	e9 81       	ldd	r30, Y+1	; 0x01
    1b8c:	fa 81       	ldd	r31, Y+2	; 0x02
    1b8e:	80 81       	ld	r24, Z
    1b90:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    	String ++;
    1b94:	89 81       	ldd	r24, Y+1	; 0x01
    1b96:	9a 81       	ldd	r25, Y+2	; 0x02
    1b98:	01 96       	adiw	r24, 0x01	; 1
    1b9a:	9a 83       	std	Y+2, r25	; 0x02
    1b9c:	89 83       	std	Y+1, r24	; 0x01

}

void LCD_voidWriteString(u8 *String)
{
    while(*String != '\0')
    1b9e:	e9 81       	ldd	r30, Y+1	; 0x01
    1ba0:	fa 81       	ldd	r31, Y+2	; 0x02
    1ba2:	80 81       	ld	r24, Z
    1ba4:	88 23       	and	r24, r24
    1ba6:	89 f7       	brne	.-30     	; 0x1b8a <LCD_voidWriteString+0x10>
    {
    	LCD_voidWriteCharacter( *String);
    	String ++;
    }
}
    1ba8:	0f 90       	pop	r0
    1baa:	0f 90       	pop	r0
    1bac:	cf 91       	pop	r28
    1bae:	df 91       	pop	r29
    1bb0:	08 95       	ret

00001bb2 <LCD_voidSetCursor>:


}*/

void LCD_voidSetCursor (u8 R, u8 C)
{
    1bb2:	df 93       	push	r29
    1bb4:	cf 93       	push	r28
    1bb6:	00 d0       	rcall	.+0      	; 0x1bb8 <LCD_voidSetCursor+0x6>
    1bb8:	cd b7       	in	r28, 0x3d	; 61
    1bba:	de b7       	in	r29, 0x3e	; 62
    1bbc:	89 83       	std	Y+1, r24	; 0x01
    1bbe:	6a 83       	std	Y+2, r22	; 0x02
	if (R == 0 && C == 0)
    1bc0:	89 81       	ldd	r24, Y+1	; 0x01
    1bc2:	88 23       	and	r24, r24
    1bc4:	39 f4       	brne	.+14     	; 0x1bd4 <LCD_voidSetCursor+0x22>
    1bc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc8:	88 23       	and	r24, r24
    1bca:	21 f4       	brne	.+8      	; 0x1bd4 <LCD_voidSetCursor+0x22>
	{
		LCD_voidSendCommand(Row0_Coulmn0);
    1bcc:	80 e8       	ldi	r24, 0x80	; 128
    1bce:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1bd2:	39 c1       	rjmp	.+626    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 1)
    1bd4:	89 81       	ldd	r24, Y+1	; 0x01
    1bd6:	88 23       	and	r24, r24
    1bd8:	39 f4       	brne	.+14     	; 0x1be8 <LCD_voidSetCursor+0x36>
    1bda:	8a 81       	ldd	r24, Y+2	; 0x02
    1bdc:	81 30       	cpi	r24, 0x01	; 1
    1bde:	21 f4       	brne	.+8      	; 0x1be8 <LCD_voidSetCursor+0x36>
	{
		LCD_voidSendCommand(Row0_Coulmn1);
    1be0:	81 e8       	ldi	r24, 0x81	; 129
    1be2:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1be6:	2f c1       	rjmp	.+606    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 2)
    1be8:	89 81       	ldd	r24, Y+1	; 0x01
    1bea:	88 23       	and	r24, r24
    1bec:	39 f4       	brne	.+14     	; 0x1bfc <LCD_voidSetCursor+0x4a>
    1bee:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf0:	82 30       	cpi	r24, 0x02	; 2
    1bf2:	21 f4       	brne	.+8      	; 0x1bfc <LCD_voidSetCursor+0x4a>
	{
		LCD_voidSendCommand(Row0_Coulmn2);
    1bf4:	82 e8       	ldi	r24, 0x82	; 130
    1bf6:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1bfa:	25 c1       	rjmp	.+586    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 3)
    1bfc:	89 81       	ldd	r24, Y+1	; 0x01
    1bfe:	88 23       	and	r24, r24
    1c00:	39 f4       	brne	.+14     	; 0x1c10 <LCD_voidSetCursor+0x5e>
    1c02:	8a 81       	ldd	r24, Y+2	; 0x02
    1c04:	83 30       	cpi	r24, 0x03	; 3
    1c06:	21 f4       	brne	.+8      	; 0x1c10 <LCD_voidSetCursor+0x5e>
	{
		LCD_voidSendCommand(Row0_Coulmn3);
    1c08:	83 e8       	ldi	r24, 0x83	; 131
    1c0a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c0e:	1b c1       	rjmp	.+566    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 4)
    1c10:	89 81       	ldd	r24, Y+1	; 0x01
    1c12:	88 23       	and	r24, r24
    1c14:	39 f4       	brne	.+14     	; 0x1c24 <LCD_voidSetCursor+0x72>
    1c16:	8a 81       	ldd	r24, Y+2	; 0x02
    1c18:	84 30       	cpi	r24, 0x04	; 4
    1c1a:	21 f4       	brne	.+8      	; 0x1c24 <LCD_voidSetCursor+0x72>
	{
		LCD_voidSendCommand(Row0_Coulmn4);
    1c1c:	84 e8       	ldi	r24, 0x84	; 132
    1c1e:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c22:	11 c1       	rjmp	.+546    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 5)
    1c24:	89 81       	ldd	r24, Y+1	; 0x01
    1c26:	88 23       	and	r24, r24
    1c28:	39 f4       	brne	.+14     	; 0x1c38 <LCD_voidSetCursor+0x86>
    1c2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c2c:	85 30       	cpi	r24, 0x05	; 5
    1c2e:	21 f4       	brne	.+8      	; 0x1c38 <LCD_voidSetCursor+0x86>
	{
		LCD_voidSendCommand(Row0_Coulmn5);
    1c30:	85 e8       	ldi	r24, 0x85	; 133
    1c32:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c36:	07 c1       	rjmp	.+526    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 6)
    1c38:	89 81       	ldd	r24, Y+1	; 0x01
    1c3a:	88 23       	and	r24, r24
    1c3c:	39 f4       	brne	.+14     	; 0x1c4c <LCD_voidSetCursor+0x9a>
    1c3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c40:	86 30       	cpi	r24, 0x06	; 6
    1c42:	21 f4       	brne	.+8      	; 0x1c4c <LCD_voidSetCursor+0x9a>
	{
		LCD_voidSendCommand(Row0_Coulmn6);
    1c44:	86 e8       	ldi	r24, 0x86	; 134
    1c46:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c4a:	fd c0       	rjmp	.+506    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 7)
    1c4c:	89 81       	ldd	r24, Y+1	; 0x01
    1c4e:	88 23       	and	r24, r24
    1c50:	39 f4       	brne	.+14     	; 0x1c60 <LCD_voidSetCursor+0xae>
    1c52:	8a 81       	ldd	r24, Y+2	; 0x02
    1c54:	87 30       	cpi	r24, 0x07	; 7
    1c56:	21 f4       	brne	.+8      	; 0x1c60 <LCD_voidSetCursor+0xae>
	{
		LCD_voidSendCommand(Row0_Coulmn7);
    1c58:	87 e8       	ldi	r24, 0x87	; 135
    1c5a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c5e:	f3 c0       	rjmp	.+486    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 8)
    1c60:	89 81       	ldd	r24, Y+1	; 0x01
    1c62:	88 23       	and	r24, r24
    1c64:	39 f4       	brne	.+14     	; 0x1c74 <LCD_voidSetCursor+0xc2>
    1c66:	8a 81       	ldd	r24, Y+2	; 0x02
    1c68:	88 30       	cpi	r24, 0x08	; 8
    1c6a:	21 f4       	brne	.+8      	; 0x1c74 <LCD_voidSetCursor+0xc2>
	{
		LCD_voidSendCommand(Row0_Coulmn8);
    1c6c:	88 e8       	ldi	r24, 0x88	; 136
    1c6e:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c72:	e9 c0       	rjmp	.+466    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 9)
    1c74:	89 81       	ldd	r24, Y+1	; 0x01
    1c76:	88 23       	and	r24, r24
    1c78:	39 f4       	brne	.+14     	; 0x1c88 <LCD_voidSetCursor+0xd6>
    1c7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c7c:	89 30       	cpi	r24, 0x09	; 9
    1c7e:	21 f4       	brne	.+8      	; 0x1c88 <LCD_voidSetCursor+0xd6>
	{
		LCD_voidSendCommand(Row0_Coulmn9);
    1c80:	89 e8       	ldi	r24, 0x89	; 137
    1c82:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c86:	df c0       	rjmp	.+446    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 10)
    1c88:	89 81       	ldd	r24, Y+1	; 0x01
    1c8a:	88 23       	and	r24, r24
    1c8c:	39 f4       	brne	.+14     	; 0x1c9c <LCD_voidSetCursor+0xea>
    1c8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c90:	8a 30       	cpi	r24, 0x0A	; 10
    1c92:	21 f4       	brne	.+8      	; 0x1c9c <LCD_voidSetCursor+0xea>
	{
		LCD_voidSendCommand(Row0_Coulmn10);
    1c94:	8a e8       	ldi	r24, 0x8A	; 138
    1c96:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1c9a:	d5 c0       	rjmp	.+426    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 11)
    1c9c:	89 81       	ldd	r24, Y+1	; 0x01
    1c9e:	88 23       	and	r24, r24
    1ca0:	39 f4       	brne	.+14     	; 0x1cb0 <LCD_voidSetCursor+0xfe>
    1ca2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ca4:	8b 30       	cpi	r24, 0x0B	; 11
    1ca6:	21 f4       	brne	.+8      	; 0x1cb0 <LCD_voidSetCursor+0xfe>
	{
		LCD_voidSendCommand(Row0_Coulmn11);
    1ca8:	8b e8       	ldi	r24, 0x8B	; 139
    1caa:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1cae:	cb c0       	rjmp	.+406    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 12)
    1cb0:	89 81       	ldd	r24, Y+1	; 0x01
    1cb2:	88 23       	and	r24, r24
    1cb4:	39 f4       	brne	.+14     	; 0x1cc4 <LCD_voidSetCursor+0x112>
    1cb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb8:	8c 30       	cpi	r24, 0x0C	; 12
    1cba:	21 f4       	brne	.+8      	; 0x1cc4 <LCD_voidSetCursor+0x112>
	{
		LCD_voidSendCommand(Row0_Coulmn12);
    1cbc:	8c e8       	ldi	r24, 0x8C	; 140
    1cbe:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1cc2:	c1 c0       	rjmp	.+386    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 13)
    1cc4:	89 81       	ldd	r24, Y+1	; 0x01
    1cc6:	88 23       	and	r24, r24
    1cc8:	39 f4       	brne	.+14     	; 0x1cd8 <LCD_voidSetCursor+0x126>
    1cca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ccc:	8d 30       	cpi	r24, 0x0D	; 13
    1cce:	21 f4       	brne	.+8      	; 0x1cd8 <LCD_voidSetCursor+0x126>
	{
		LCD_voidSendCommand(Row0_Coulmn13);
    1cd0:	8d e8       	ldi	r24, 0x8D	; 141
    1cd2:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1cd6:	b7 c0       	rjmp	.+366    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 14)
    1cd8:	89 81       	ldd	r24, Y+1	; 0x01
    1cda:	88 23       	and	r24, r24
    1cdc:	39 f4       	brne	.+14     	; 0x1cec <LCD_voidSetCursor+0x13a>
    1cde:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce0:	8e 30       	cpi	r24, 0x0E	; 14
    1ce2:	21 f4       	brne	.+8      	; 0x1cec <LCD_voidSetCursor+0x13a>
	{
		LCD_voidSendCommand(Row0_Coulmn14);
    1ce4:	8e e8       	ldi	r24, 0x8E	; 142
    1ce6:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1cea:	ad c0       	rjmp	.+346    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 0 && C == 15)
    1cec:	89 81       	ldd	r24, Y+1	; 0x01
    1cee:	88 23       	and	r24, r24
    1cf0:	39 f4       	brne	.+14     	; 0x1d00 <LCD_voidSetCursor+0x14e>
    1cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf4:	8f 30       	cpi	r24, 0x0F	; 15
    1cf6:	21 f4       	brne	.+8      	; 0x1d00 <LCD_voidSetCursor+0x14e>
	{
		LCD_voidSendCommand(Row0_Coulmn15);
    1cf8:	8f e8       	ldi	r24, 0x8F	; 143
    1cfa:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1cfe:	a3 c0       	rjmp	.+326    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 0)
    1d00:	89 81       	ldd	r24, Y+1	; 0x01
    1d02:	81 30       	cpi	r24, 0x01	; 1
    1d04:	39 f4       	brne	.+14     	; 0x1d14 <LCD_voidSetCursor+0x162>
    1d06:	8a 81       	ldd	r24, Y+2	; 0x02
    1d08:	88 23       	and	r24, r24
    1d0a:	21 f4       	brne	.+8      	; 0x1d14 <LCD_voidSetCursor+0x162>
	{
		LCD_voidSendCommand(Row1_Coulmn0);
    1d0c:	80 ec       	ldi	r24, 0xC0	; 192
    1d0e:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d12:	99 c0       	rjmp	.+306    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 1)
    1d14:	89 81       	ldd	r24, Y+1	; 0x01
    1d16:	81 30       	cpi	r24, 0x01	; 1
    1d18:	39 f4       	brne	.+14     	; 0x1d28 <LCD_voidSetCursor+0x176>
    1d1a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1c:	81 30       	cpi	r24, 0x01	; 1
    1d1e:	21 f4       	brne	.+8      	; 0x1d28 <LCD_voidSetCursor+0x176>
	{
		LCD_voidSendCommand(Row1_Coulmn1);
    1d20:	81 ec       	ldi	r24, 0xC1	; 193
    1d22:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d26:	8f c0       	rjmp	.+286    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 2)
    1d28:	89 81       	ldd	r24, Y+1	; 0x01
    1d2a:	81 30       	cpi	r24, 0x01	; 1
    1d2c:	39 f4       	brne	.+14     	; 0x1d3c <LCD_voidSetCursor+0x18a>
    1d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d30:	82 30       	cpi	r24, 0x02	; 2
    1d32:	21 f4       	brne	.+8      	; 0x1d3c <LCD_voidSetCursor+0x18a>
	{
		LCD_voidSendCommand(Row1_Coulmn2);
    1d34:	82 ec       	ldi	r24, 0xC2	; 194
    1d36:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d3a:	85 c0       	rjmp	.+266    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 3)
    1d3c:	89 81       	ldd	r24, Y+1	; 0x01
    1d3e:	81 30       	cpi	r24, 0x01	; 1
    1d40:	39 f4       	brne	.+14     	; 0x1d50 <LCD_voidSetCursor+0x19e>
    1d42:	8a 81       	ldd	r24, Y+2	; 0x02
    1d44:	83 30       	cpi	r24, 0x03	; 3
    1d46:	21 f4       	brne	.+8      	; 0x1d50 <LCD_voidSetCursor+0x19e>
	{
		LCD_voidSendCommand(Row1_Coulmn3);
    1d48:	83 ec       	ldi	r24, 0xC3	; 195
    1d4a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d4e:	7b c0       	rjmp	.+246    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 4)
    1d50:	89 81       	ldd	r24, Y+1	; 0x01
    1d52:	81 30       	cpi	r24, 0x01	; 1
    1d54:	39 f4       	brne	.+14     	; 0x1d64 <LCD_voidSetCursor+0x1b2>
    1d56:	8a 81       	ldd	r24, Y+2	; 0x02
    1d58:	84 30       	cpi	r24, 0x04	; 4
    1d5a:	21 f4       	brne	.+8      	; 0x1d64 <LCD_voidSetCursor+0x1b2>
	{
		LCD_voidSendCommand(Row1_Coulmn4);
    1d5c:	84 ec       	ldi	r24, 0xC4	; 196
    1d5e:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d62:	71 c0       	rjmp	.+226    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C ==5)
    1d64:	89 81       	ldd	r24, Y+1	; 0x01
    1d66:	81 30       	cpi	r24, 0x01	; 1
    1d68:	39 f4       	brne	.+14     	; 0x1d78 <LCD_voidSetCursor+0x1c6>
    1d6a:	8a 81       	ldd	r24, Y+2	; 0x02
    1d6c:	85 30       	cpi	r24, 0x05	; 5
    1d6e:	21 f4       	brne	.+8      	; 0x1d78 <LCD_voidSetCursor+0x1c6>
	{
		LCD_voidSendCommand(Row1_Coulmn5);
    1d70:	85 ec       	ldi	r24, 0xC5	; 197
    1d72:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d76:	67 c0       	rjmp	.+206    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 6)
    1d78:	89 81       	ldd	r24, Y+1	; 0x01
    1d7a:	81 30       	cpi	r24, 0x01	; 1
    1d7c:	39 f4       	brne	.+14     	; 0x1d8c <LCD_voidSetCursor+0x1da>
    1d7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1d80:	86 30       	cpi	r24, 0x06	; 6
    1d82:	21 f4       	brne	.+8      	; 0x1d8c <LCD_voidSetCursor+0x1da>
	{
		LCD_voidSendCommand(Row1_Coulmn6);
    1d84:	86 ec       	ldi	r24, 0xC6	; 198
    1d86:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d8a:	5d c0       	rjmp	.+186    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 7)
    1d8c:	89 81       	ldd	r24, Y+1	; 0x01
    1d8e:	81 30       	cpi	r24, 0x01	; 1
    1d90:	39 f4       	brne	.+14     	; 0x1da0 <LCD_voidSetCursor+0x1ee>
    1d92:	8a 81       	ldd	r24, Y+2	; 0x02
    1d94:	87 30       	cpi	r24, 0x07	; 7
    1d96:	21 f4       	brne	.+8      	; 0x1da0 <LCD_voidSetCursor+0x1ee>
	{
		LCD_voidSendCommand(Row1_Coulmn7);
    1d98:	87 ec       	ldi	r24, 0xC7	; 199
    1d9a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1d9e:	53 c0       	rjmp	.+166    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 8)
    1da0:	89 81       	ldd	r24, Y+1	; 0x01
    1da2:	81 30       	cpi	r24, 0x01	; 1
    1da4:	39 f4       	brne	.+14     	; 0x1db4 <LCD_voidSetCursor+0x202>
    1da6:	8a 81       	ldd	r24, Y+2	; 0x02
    1da8:	88 30       	cpi	r24, 0x08	; 8
    1daa:	21 f4       	brne	.+8      	; 0x1db4 <LCD_voidSetCursor+0x202>
	{
		LCD_voidSendCommand(Row1_Coulmn8);
    1dac:	88 ec       	ldi	r24, 0xC8	; 200
    1dae:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1db2:	49 c0       	rjmp	.+146    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 2 && C == 9)
    1db4:	89 81       	ldd	r24, Y+1	; 0x01
    1db6:	82 30       	cpi	r24, 0x02	; 2
    1db8:	39 f4       	brne	.+14     	; 0x1dc8 <LCD_voidSetCursor+0x216>
    1dba:	8a 81       	ldd	r24, Y+2	; 0x02
    1dbc:	89 30       	cpi	r24, 0x09	; 9
    1dbe:	21 f4       	brne	.+8      	; 0x1dc8 <LCD_voidSetCursor+0x216>
	{
		LCD_voidSendCommand(Row1_Coulmn9);
    1dc0:	89 ec       	ldi	r24, 0xC9	; 201
    1dc2:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1dc6:	3f c0       	rjmp	.+126    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 10)
    1dc8:	89 81       	ldd	r24, Y+1	; 0x01
    1dca:	81 30       	cpi	r24, 0x01	; 1
    1dcc:	39 f4       	brne	.+14     	; 0x1ddc <LCD_voidSetCursor+0x22a>
    1dce:	8a 81       	ldd	r24, Y+2	; 0x02
    1dd0:	8a 30       	cpi	r24, 0x0A	; 10
    1dd2:	21 f4       	brne	.+8      	; 0x1ddc <LCD_voidSetCursor+0x22a>
	{
		LCD_voidSendCommand(Row1_Coulmn10);
    1dd4:	8a ec       	ldi	r24, 0xCA	; 202
    1dd6:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1dda:	35 c0       	rjmp	.+106    	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 11)
    1ddc:	89 81       	ldd	r24, Y+1	; 0x01
    1dde:	81 30       	cpi	r24, 0x01	; 1
    1de0:	39 f4       	brne	.+14     	; 0x1df0 <LCD_voidSetCursor+0x23e>
    1de2:	8a 81       	ldd	r24, Y+2	; 0x02
    1de4:	8b 30       	cpi	r24, 0x0B	; 11
    1de6:	21 f4       	brne	.+8      	; 0x1df0 <LCD_voidSetCursor+0x23e>
	{
		LCD_voidSendCommand(Row1_Coulmn11);
    1de8:	8b ec       	ldi	r24, 0xCB	; 203
    1dea:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1dee:	2b c0       	rjmp	.+86     	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 12)
    1df0:	89 81       	ldd	r24, Y+1	; 0x01
    1df2:	81 30       	cpi	r24, 0x01	; 1
    1df4:	39 f4       	brne	.+14     	; 0x1e04 <LCD_voidSetCursor+0x252>
    1df6:	8a 81       	ldd	r24, Y+2	; 0x02
    1df8:	8c 30       	cpi	r24, 0x0C	; 12
    1dfa:	21 f4       	brne	.+8      	; 0x1e04 <LCD_voidSetCursor+0x252>
	{
		LCD_voidSendCommand(Row1_Coulmn12);
    1dfc:	8c ec       	ldi	r24, 0xCC	; 204
    1dfe:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1e02:	21 c0       	rjmp	.+66     	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 13)
    1e04:	89 81       	ldd	r24, Y+1	; 0x01
    1e06:	81 30       	cpi	r24, 0x01	; 1
    1e08:	39 f4       	brne	.+14     	; 0x1e18 <LCD_voidSetCursor+0x266>
    1e0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0c:	8d 30       	cpi	r24, 0x0D	; 13
    1e0e:	21 f4       	brne	.+8      	; 0x1e18 <LCD_voidSetCursor+0x266>
	{
		LCD_voidSendCommand(Row1_Coulmn13);
    1e10:	8d ec       	ldi	r24, 0xCD	; 205
    1e12:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1e16:	17 c0       	rjmp	.+46     	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 14)
    1e18:	89 81       	ldd	r24, Y+1	; 0x01
    1e1a:	81 30       	cpi	r24, 0x01	; 1
    1e1c:	39 f4       	brne	.+14     	; 0x1e2c <LCD_voidSetCursor+0x27a>
    1e1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e20:	8e 30       	cpi	r24, 0x0E	; 14
    1e22:	21 f4       	brne	.+8      	; 0x1e2c <LCD_voidSetCursor+0x27a>
	{
		LCD_voidSendCommand(Row1_Coulmn14);
    1e24:	8e ec       	ldi	r24, 0xCE	; 206
    1e26:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1e2a:	0d c0       	rjmp	.+26     	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else if (R == 1 && C == 15)
    1e2c:	89 81       	ldd	r24, Y+1	; 0x01
    1e2e:	81 30       	cpi	r24, 0x01	; 1
    1e30:	39 f4       	brne	.+14     	; 0x1e40 <LCD_voidSetCursor+0x28e>
    1e32:	8a 81       	ldd	r24, Y+2	; 0x02
    1e34:	8f 30       	cpi	r24, 0x0F	; 15
    1e36:	21 f4       	brne	.+8      	; 0x1e40 <LCD_voidSetCursor+0x28e>
	{
		LCD_voidSendCommand(Row1_Coulmn15);
    1e38:	8f ec       	ldi	r24, 0xCF	; 207
    1e3a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
    1e3e:	03 c0       	rjmp	.+6      	; 0x1e46 <LCD_voidSetCursor+0x294>
	}
	else
	{
		LCD_voidSendCommand(Row0_Coulmn0);
    1e40:	80 e8       	ldi	r24, 0x80	; 128
    1e42:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_voidSendCommand>
	}



}
    1e46:	0f 90       	pop	r0
    1e48:	0f 90       	pop	r0
    1e4a:	cf 91       	pop	r28
    1e4c:	df 91       	pop	r29
    1e4e:	08 95       	ret

00001e50 <LCD_voidWrite>:
		LCD_voidSetCursor(0,0);
	}*/


void LCD_voidWrite(u8 Num_1)
{
    1e50:	df 93       	push	r29
    1e52:	cf 93       	push	r28
    1e54:	00 d0       	rcall	.+0      	; 0x1e56 <LCD_voidWrite+0x6>
    1e56:	0f 92       	push	r0
    1e58:	cd b7       	in	r28, 0x3d	; 61
    1e5a:	de b7       	in	r29, 0x3e	; 62
    1e5c:	89 83       	std	Y+1, r24	; 0x01
	switch (Num_1)
    1e5e:	89 81       	ldd	r24, Y+1	; 0x01
    1e60:	28 2f       	mov	r18, r24
    1e62:	30 e0       	ldi	r19, 0x00	; 0
    1e64:	3b 83       	std	Y+3, r19	; 0x03
    1e66:	2a 83       	std	Y+2, r18	; 0x02
    1e68:	8a 81       	ldd	r24, Y+2	; 0x02
    1e6a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e6c:	87 30       	cpi	r24, 0x07	; 7
    1e6e:	91 05       	cpc	r25, r1
    1e70:	09 f4       	brne	.+2      	; 0x1e74 <LCD_voidWrite+0x24>
    1e72:	7a c0       	rjmp	.+244    	; 0x1f68 <LCD_voidWrite+0x118>
    1e74:	2a 81       	ldd	r18, Y+2	; 0x02
    1e76:	3b 81       	ldd	r19, Y+3	; 0x03
    1e78:	28 30       	cpi	r18, 0x08	; 8
    1e7a:	31 05       	cpc	r19, r1
    1e7c:	54 f5       	brge	.+84     	; 0x1ed2 <LCD_voidWrite+0x82>
    1e7e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e80:	9b 81       	ldd	r25, Y+3	; 0x03
    1e82:	83 30       	cpi	r24, 0x03	; 3
    1e84:	91 05       	cpc	r25, r1
    1e86:	09 f4       	brne	.+2      	; 0x1e8a <LCD_voidWrite+0x3a>
    1e88:	5f c0       	rjmp	.+190    	; 0x1f48 <LCD_voidWrite+0xf8>
    1e8a:	2a 81       	ldd	r18, Y+2	; 0x02
    1e8c:	3b 81       	ldd	r19, Y+3	; 0x03
    1e8e:	24 30       	cpi	r18, 0x04	; 4
    1e90:	31 05       	cpc	r19, r1
    1e92:	94 f4       	brge	.+36     	; 0x1eb8 <LCD_voidWrite+0x68>
    1e94:	8a 81       	ldd	r24, Y+2	; 0x02
    1e96:	9b 81       	ldd	r25, Y+3	; 0x03
    1e98:	81 30       	cpi	r24, 0x01	; 1
    1e9a:	91 05       	cpc	r25, r1
    1e9c:	09 f4       	brne	.+2      	; 0x1ea0 <LCD_voidWrite+0x50>
    1e9e:	4c c0       	rjmp	.+152    	; 0x1f38 <LCD_voidWrite+0xe8>
    1ea0:	2a 81       	ldd	r18, Y+2	; 0x02
    1ea2:	3b 81       	ldd	r19, Y+3	; 0x03
    1ea4:	22 30       	cpi	r18, 0x02	; 2
    1ea6:	31 05       	cpc	r19, r1
    1ea8:	0c f0       	brlt	.+2      	; 0x1eac <LCD_voidWrite+0x5c>
    1eaa:	4a c0       	rjmp	.+148    	; 0x1f40 <LCD_voidWrite+0xf0>
    1eac:	8a 81       	ldd	r24, Y+2	; 0x02
    1eae:	9b 81       	ldd	r25, Y+3	; 0x03
    1eb0:	00 97       	sbiw	r24, 0x00	; 0
    1eb2:	09 f4       	brne	.+2      	; 0x1eb6 <LCD_voidWrite+0x66>
    1eb4:	3d c0       	rjmp	.+122    	; 0x1f30 <LCD_voidWrite+0xe0>
    1eb6:	77 c0       	rjmp	.+238    	; 0x1fa6 <LCD_voidWrite+0x156>
    1eb8:	2a 81       	ldd	r18, Y+2	; 0x02
    1eba:	3b 81       	ldd	r19, Y+3	; 0x03
    1ebc:	25 30       	cpi	r18, 0x05	; 5
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	09 f4       	brne	.+2      	; 0x1ec4 <LCD_voidWrite+0x74>
    1ec2:	4a c0       	rjmp	.+148    	; 0x1f58 <LCD_voidWrite+0x108>
    1ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ec8:	86 30       	cpi	r24, 0x06	; 6
    1eca:	91 05       	cpc	r25, r1
    1ecc:	0c f0       	brlt	.+2      	; 0x1ed0 <LCD_voidWrite+0x80>
    1ece:	48 c0       	rjmp	.+144    	; 0x1f60 <LCD_voidWrite+0x110>
    1ed0:	3f c0       	rjmp	.+126    	; 0x1f50 <LCD_voidWrite+0x100>
    1ed2:	2a 81       	ldd	r18, Y+2	; 0x02
    1ed4:	3b 81       	ldd	r19, Y+3	; 0x03
    1ed6:	2b 32       	cpi	r18, 0x2B	; 43
    1ed8:	31 05       	cpc	r19, r1
    1eda:	09 f4       	brne	.+2      	; 0x1ede <LCD_voidWrite+0x8e>
    1edc:	51 c0       	rjmp	.+162    	; 0x1f80 <LCD_voidWrite+0x130>
    1ede:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee2:	8c 32       	cpi	r24, 0x2C	; 44
    1ee4:	91 05       	cpc	r25, r1
    1ee6:	94 f4       	brge	.+36     	; 0x1f0c <LCD_voidWrite+0xbc>
    1ee8:	2a 81       	ldd	r18, Y+2	; 0x02
    1eea:	3b 81       	ldd	r19, Y+3	; 0x03
    1eec:	29 30       	cpi	r18, 0x09	; 9
    1eee:	31 05       	cpc	r19, r1
    1ef0:	09 f4       	brne	.+2      	; 0x1ef4 <LCD_voidWrite+0xa4>
    1ef2:	42 c0       	rjmp	.+132    	; 0x1f78 <LCD_voidWrite+0x128>
    1ef4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ef6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ef8:	89 30       	cpi	r24, 0x09	; 9
    1efa:	91 05       	cpc	r25, r1
    1efc:	cc f1       	brlt	.+114    	; 0x1f70 <LCD_voidWrite+0x120>
    1efe:	2a 81       	ldd	r18, Y+2	; 0x02
    1f00:	3b 81       	ldd	r19, Y+3	; 0x03
    1f02:	2a 32       	cpi	r18, 0x2A	; 42
    1f04:	31 05       	cpc	r19, r1
    1f06:	09 f4       	brne	.+2      	; 0x1f0a <LCD_voidWrite+0xba>
    1f08:	43 c0       	rjmp	.+134    	; 0x1f90 <LCD_voidWrite+0x140>
    1f0a:	4d c0       	rjmp	.+154    	; 0x1fa6 <LCD_voidWrite+0x156>
    1f0c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f0e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f10:	8f 32       	cpi	r24, 0x2F	; 47
    1f12:	91 05       	cpc	r25, r1
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <LCD_voidWrite+0xc8>
    1f16:	40 c0       	rjmp	.+128    	; 0x1f98 <LCD_voidWrite+0x148>
    1f18:	2a 81       	ldd	r18, Y+2	; 0x02
    1f1a:	3b 81       	ldd	r19, Y+3	; 0x03
    1f1c:	2d 33       	cpi	r18, 0x3D	; 61
    1f1e:	31 05       	cpc	r19, r1
    1f20:	09 f4       	brne	.+2      	; 0x1f24 <LCD_voidWrite+0xd4>
    1f22:	3e c0       	rjmp	.+124    	; 0x1fa0 <LCD_voidWrite+0x150>
    1f24:	8a 81       	ldd	r24, Y+2	; 0x02
    1f26:	9b 81       	ldd	r25, Y+3	; 0x03
    1f28:	8d 32       	cpi	r24, 0x2D	; 45
    1f2a:	91 05       	cpc	r25, r1
    1f2c:	69 f1       	breq	.+90     	; 0x1f88 <LCD_voidWrite+0x138>
    1f2e:	3b c0       	rjmp	.+118    	; 0x1fa6 <LCD_voidWrite+0x156>
	{
	case 0 :
		LCD_voidWriteCharacter('0');
    1f30:	80 e3       	ldi	r24, 0x30	; 48
    1f32:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f36:	37 c0       	rjmp	.+110    	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 1 :
		LCD_voidWriteCharacter('1');
    1f38:	81 e3       	ldi	r24, 0x31	; 49
    1f3a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f3e:	33 c0       	rjmp	.+102    	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 2 :
		LCD_voidWriteCharacter('2');
    1f40:	82 e3       	ldi	r24, 0x32	; 50
    1f42:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f46:	2f c0       	rjmp	.+94     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 3 :
		LCD_voidWriteCharacter('3');
    1f48:	83 e3       	ldi	r24, 0x33	; 51
    1f4a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f4e:	2b c0       	rjmp	.+86     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 4 :
		LCD_voidWriteCharacter('4');
    1f50:	84 e3       	ldi	r24, 0x34	; 52
    1f52:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f56:	27 c0       	rjmp	.+78     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 5 :
		LCD_voidWriteCharacter('5');
    1f58:	85 e3       	ldi	r24, 0x35	; 53
    1f5a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f5e:	23 c0       	rjmp	.+70     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 6 :
		LCD_voidWriteCharacter('6');
    1f60:	86 e3       	ldi	r24, 0x36	; 54
    1f62:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f66:	1f c0       	rjmp	.+62     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 7 :
		LCD_voidWriteCharacter('7');
    1f68:	87 e3       	ldi	r24, 0x37	; 55
    1f6a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f6e:	1b c0       	rjmp	.+54     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 8 :
		LCD_voidWriteCharacter('8');
    1f70:	88 e3       	ldi	r24, 0x38	; 56
    1f72:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f76:	17 c0       	rjmp	.+46     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case 9 :
		LCD_voidWriteCharacter('9');
    1f78:	89 e3       	ldi	r24, 0x39	; 57
    1f7a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f7e:	13 c0       	rjmp	.+38     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case '+' :
		LCD_voidWriteCharacter('+');
    1f80:	8b e2       	ldi	r24, 0x2B	; 43
    1f82:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f86:	0f c0       	rjmp	.+30     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case '-' :
		LCD_voidWriteCharacter('-');
    1f88:	8d e2       	ldi	r24, 0x2D	; 45
    1f8a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f8e:	0b c0       	rjmp	.+22     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case '*' :
		LCD_voidWriteCharacter('*');
    1f90:	8a e2       	ldi	r24, 0x2A	; 42
    1f92:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f96:	07 c0       	rjmp	.+14     	; 0x1fa6 <LCD_voidWrite+0x156>

		break;
	case '/' :
		LCD_voidWriteCharacter('/');
    1f98:	8f e2       	ldi	r24, 0x2F	; 47
    1f9a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
    1f9e:	03 c0       	rjmp	.+6      	; 0x1fa6 <LCD_voidWrite+0x156>
		break;
	case '=' :
		LCD_voidWriteCharacter('=');
    1fa0:	8d e3       	ldi	r24, 0x3D	; 61
    1fa2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <LCD_voidWriteCharacter>
		break;

	}
}
    1fa6:	0f 90       	pop	r0
    1fa8:	0f 90       	pop	r0
    1faa:	0f 90       	pop	r0
    1fac:	cf 91       	pop	r28
    1fae:	df 91       	pop	r29
    1fb0:	08 95       	ret

00001fb2 <LCD_voidwriteNumber>:

void LCD_voidwriteNumber(u32 Num,u8 R,u8 C)
{
    1fb2:	df 93       	push	r29
    1fb4:	cf 93       	push	r28
    1fb6:	cd b7       	in	r28, 0x3d	; 61
    1fb8:	de b7       	in	r29, 0x3e	; 62
    1fba:	e6 97       	sbiw	r28, 0x36	; 54
    1fbc:	0f b6       	in	r0, 0x3f	; 63
    1fbe:	f8 94       	cli
    1fc0:	de bf       	out	0x3e, r29	; 62
    1fc2:	0f be       	out	0x3f, r0	; 63
    1fc4:	cd bf       	out	0x3d, r28	; 61
    1fc6:	69 ab       	std	Y+49, r22	; 0x31
    1fc8:	7a ab       	std	Y+50, r23	; 0x32
    1fca:	8b ab       	std	Y+51, r24	; 0x33
    1fcc:	9c ab       	std	Y+52, r25	; 0x34
    1fce:	4d ab       	std	Y+53, r20	; 0x35
    1fd0:	2e ab       	std	Y+54, r18	; 0x36
	u32 Num_1;
	u32 Num_2,Intermediate_2,Num_3,Intermediate_3,Intermediate_4,Num_4,Num_5,Intermediate_5,Num_6,Intermediate_6,Num_7;

	if(Num<10)
    1fd2:	89 a9       	ldd	r24, Y+49	; 0x31
    1fd4:	9a a9       	ldd	r25, Y+50	; 0x32
    1fd6:	ab a9       	ldd	r26, Y+51	; 0x33
    1fd8:	bc a9       	ldd	r27, Y+52	; 0x34
    1fda:	8a 30       	cpi	r24, 0x0A	; 10
    1fdc:	91 05       	cpc	r25, r1
    1fde:	a1 05       	cpc	r26, r1
    1fe0:	b1 05       	cpc	r27, r1
    1fe2:	40 f4       	brcc	.+16     	; 0x1ff4 <LCD_voidwriteNumber+0x42>
	{
		LCD_voidSetCursor(R,C);
    1fe4:	8d a9       	ldd	r24, Y+53	; 0x35
    1fe6:	6e a9       	ldd	r22, Y+54	; 0x36
    1fe8:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num);
    1fec:	89 a9       	ldd	r24, Y+49	; 0x31
    1fee:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>
    1ff2:	6f c1       	rjmp	.+734    	; 0x22d2 <LCD_voidwriteNumber+0x320>
	}
	else if(Num >=10 && Num <100)
    1ff4:	89 a9       	ldd	r24, Y+49	; 0x31
    1ff6:	9a a9       	ldd	r25, Y+50	; 0x32
    1ff8:	ab a9       	ldd	r26, Y+51	; 0x33
    1ffa:	bc a9       	ldd	r27, Y+52	; 0x34
    1ffc:	8a 30       	cpi	r24, 0x0A	; 10
    1ffe:	91 05       	cpc	r25, r1
    2000:	a1 05       	cpc	r26, r1
    2002:	b1 05       	cpc	r27, r1
    2004:	08 f4       	brcc	.+2      	; 0x2008 <LCD_voidwriteNumber+0x56>
    2006:	3f c0       	rjmp	.+126    	; 0x2086 <LCD_voidwriteNumber+0xd4>
    2008:	89 a9       	ldd	r24, Y+49	; 0x31
    200a:	9a a9       	ldd	r25, Y+50	; 0x32
    200c:	ab a9       	ldd	r26, Y+51	; 0x33
    200e:	bc a9       	ldd	r27, Y+52	; 0x34
    2010:	84 36       	cpi	r24, 0x64	; 100
    2012:	91 05       	cpc	r25, r1
    2014:	a1 05       	cpc	r26, r1
    2016:	b1 05       	cpc	r27, r1
    2018:	b0 f5       	brcc	.+108    	; 0x2086 <LCD_voidwriteNumber+0xd4>
	{
		Num_1 = Num / 10;
    201a:	89 a9       	ldd	r24, Y+49	; 0x31
    201c:	9a a9       	ldd	r25, Y+50	; 0x32
    201e:	ab a9       	ldd	r26, Y+51	; 0x33
    2020:	bc a9       	ldd	r27, Y+52	; 0x34
    2022:	2a e0       	ldi	r18, 0x0A	; 10
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	40 e0       	ldi	r20, 0x00	; 0
    2028:	50 e0       	ldi	r21, 0x00	; 0
    202a:	bc 01       	movw	r22, r24
    202c:	cd 01       	movw	r24, r26
    202e:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    2032:	da 01       	movw	r26, r20
    2034:	c9 01       	movw	r24, r18
    2036:	8d a7       	std	Y+45, r24	; 0x2d
    2038:	9e a7       	std	Y+46, r25	; 0x2e
    203a:	af a7       	std	Y+47, r26	; 0x2f
    203c:	b8 ab       	std	Y+48, r27	; 0x30
		LCD_voidSetCursor(R,C);
    203e:	8d a9       	ldd	r24, Y+53	; 0x35
    2040:	6e a9       	ldd	r22, Y+54	; 0x36
    2042:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_1);
    2046:	8d a5       	ldd	r24, Y+45	; 0x2d
    2048:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Num_2 = Num % 10;
    204c:	89 a9       	ldd	r24, Y+49	; 0x31
    204e:	9a a9       	ldd	r25, Y+50	; 0x32
    2050:	ab a9       	ldd	r26, Y+51	; 0x33
    2052:	bc a9       	ldd	r27, Y+52	; 0x34
    2054:	2a e0       	ldi	r18, 0x0A	; 10
    2056:	30 e0       	ldi	r19, 0x00	; 0
    2058:	40 e0       	ldi	r20, 0x00	; 0
    205a:	50 e0       	ldi	r21, 0x00	; 0
    205c:	bc 01       	movw	r22, r24
    205e:	cd 01       	movw	r24, r26
    2060:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    2064:	dc 01       	movw	r26, r24
    2066:	cb 01       	movw	r24, r22
    2068:	89 a7       	std	Y+41, r24	; 0x29
    206a:	9a a7       	std	Y+42, r25	; 0x2a
    206c:	ab a7       	std	Y+43, r26	; 0x2b
    206e:	bc a7       	std	Y+44, r27	; 0x2c
		LCD_voidSetCursor(R,C+1);
    2070:	8e a9       	ldd	r24, Y+54	; 0x36
    2072:	98 2f       	mov	r25, r24
    2074:	9f 5f       	subi	r25, 0xFF	; 255
    2076:	8d a9       	ldd	r24, Y+53	; 0x35
    2078:	69 2f       	mov	r22, r25
    207a:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_2);
    207e:	89 a5       	ldd	r24, Y+41	; 0x29
    2080:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>
    2084:	26 c1       	rjmp	.+588    	; 0x22d2 <LCD_voidwriteNumber+0x320>
	}
	else if(Num >=100 && Num <1000)
    2086:	89 a9       	ldd	r24, Y+49	; 0x31
    2088:	9a a9       	ldd	r25, Y+50	; 0x32
    208a:	ab a9       	ldd	r26, Y+51	; 0x33
    208c:	bc a9       	ldd	r27, Y+52	; 0x34
    208e:	84 36       	cpi	r24, 0x64	; 100
    2090:	91 05       	cpc	r25, r1
    2092:	a1 05       	cpc	r26, r1
    2094:	b1 05       	cpc	r27, r1
    2096:	08 f4       	brcc	.+2      	; 0x209a <LCD_voidwriteNumber+0xe8>
    2098:	71 c0       	rjmp	.+226    	; 0x217c <LCD_voidwriteNumber+0x1ca>
    209a:	89 a9       	ldd	r24, Y+49	; 0x31
    209c:	9a a9       	ldd	r25, Y+50	; 0x32
    209e:	ab a9       	ldd	r26, Y+51	; 0x33
    20a0:	bc a9       	ldd	r27, Y+52	; 0x34
    20a2:	88 3e       	cpi	r24, 0xE8	; 232
    20a4:	23 e0       	ldi	r18, 0x03	; 3
    20a6:	92 07       	cpc	r25, r18
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	a2 07       	cpc	r26, r18
    20ac:	20 e0       	ldi	r18, 0x00	; 0
    20ae:	b2 07       	cpc	r27, r18
    20b0:	08 f0       	brcs	.+2      	; 0x20b4 <LCD_voidwriteNumber+0x102>
    20b2:	64 c0       	rjmp	.+200    	; 0x217c <LCD_voidwriteNumber+0x1ca>
	{ //123
		Num_1 = Num/100; //1
    20b4:	89 a9       	ldd	r24, Y+49	; 0x31
    20b6:	9a a9       	ldd	r25, Y+50	; 0x32
    20b8:	ab a9       	ldd	r26, Y+51	; 0x33
    20ba:	bc a9       	ldd	r27, Y+52	; 0x34
    20bc:	24 e6       	ldi	r18, 0x64	; 100
    20be:	30 e0       	ldi	r19, 0x00	; 0
    20c0:	40 e0       	ldi	r20, 0x00	; 0
    20c2:	50 e0       	ldi	r21, 0x00	; 0
    20c4:	bc 01       	movw	r22, r24
    20c6:	cd 01       	movw	r24, r26
    20c8:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    20cc:	da 01       	movw	r26, r20
    20ce:	c9 01       	movw	r24, r18
    20d0:	8d a7       	std	Y+45, r24	; 0x2d
    20d2:	9e a7       	std	Y+46, r25	; 0x2e
    20d4:	af a7       	std	Y+47, r26	; 0x2f
    20d6:	b8 ab       	std	Y+48, r27	; 0x30
		LCD_voidSetCursor(R,C);
    20d8:	8d a9       	ldd	r24, Y+53	; 0x35
    20da:	6e a9       	ldd	r22, Y+54	; 0x36
    20dc:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_1);
    20e0:	8d a5       	ldd	r24, Y+45	; 0x2d
    20e2:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Num_2 = Num % 100; //23
    20e6:	89 a9       	ldd	r24, Y+49	; 0x31
    20e8:	9a a9       	ldd	r25, Y+50	; 0x32
    20ea:	ab a9       	ldd	r26, Y+51	; 0x33
    20ec:	bc a9       	ldd	r27, Y+52	; 0x34
    20ee:	24 e6       	ldi	r18, 0x64	; 100
    20f0:	30 e0       	ldi	r19, 0x00	; 0
    20f2:	40 e0       	ldi	r20, 0x00	; 0
    20f4:	50 e0       	ldi	r21, 0x00	; 0
    20f6:	bc 01       	movw	r22, r24
    20f8:	cd 01       	movw	r24, r26
    20fa:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    20fe:	dc 01       	movw	r26, r24
    2100:	cb 01       	movw	r24, r22
    2102:	89 a7       	std	Y+41, r24	; 0x29
    2104:	9a a7       	std	Y+42, r25	; 0x2a
    2106:	ab a7       	std	Y+43, r26	; 0x2b
    2108:	bc a7       	std	Y+44, r27	; 0x2c
		Intermediate_2 = Num_2 / 10; //2
    210a:	89 a5       	ldd	r24, Y+41	; 0x29
    210c:	9a a5       	ldd	r25, Y+42	; 0x2a
    210e:	ab a5       	ldd	r26, Y+43	; 0x2b
    2110:	bc a5       	ldd	r27, Y+44	; 0x2c
    2112:	2a e0       	ldi	r18, 0x0A	; 10
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	40 e0       	ldi	r20, 0x00	; 0
    2118:	50 e0       	ldi	r21, 0x00	; 0
    211a:	bc 01       	movw	r22, r24
    211c:	cd 01       	movw	r24, r26
    211e:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    2122:	da 01       	movw	r26, r20
    2124:	c9 01       	movw	r24, r18
    2126:	8d a3       	std	Y+37, r24	; 0x25
    2128:	9e a3       	std	Y+38, r25	; 0x26
    212a:	af a3       	std	Y+39, r26	; 0x27
    212c:	b8 a7       	std	Y+40, r27	; 0x28
		LCD_voidSetCursor(R,C+1);
    212e:	8e a9       	ldd	r24, Y+54	; 0x36
    2130:	98 2f       	mov	r25, r24
    2132:	9f 5f       	subi	r25, 0xFF	; 255
    2134:	8d a9       	ldd	r24, Y+53	; 0x35
    2136:	69 2f       	mov	r22, r25
    2138:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Intermediate_2);
    213c:	8d a1       	ldd	r24, Y+37	; 0x25
    213e:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Num_3 = Num_2 % 10; //3
    2142:	89 a5       	ldd	r24, Y+41	; 0x29
    2144:	9a a5       	ldd	r25, Y+42	; 0x2a
    2146:	ab a5       	ldd	r26, Y+43	; 0x2b
    2148:	bc a5       	ldd	r27, Y+44	; 0x2c
    214a:	2a e0       	ldi	r18, 0x0A	; 10
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	40 e0       	ldi	r20, 0x00	; 0
    2150:	50 e0       	ldi	r21, 0x00	; 0
    2152:	bc 01       	movw	r22, r24
    2154:	cd 01       	movw	r24, r26
    2156:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    215a:	dc 01       	movw	r26, r24
    215c:	cb 01       	movw	r24, r22
    215e:	89 a3       	std	Y+33, r24	; 0x21
    2160:	9a a3       	std	Y+34, r25	; 0x22
    2162:	ab a3       	std	Y+35, r26	; 0x23
    2164:	bc a3       	std	Y+36, r27	; 0x24
    	LCD_voidSetCursor(R,C+2);
    2166:	8e a9       	ldd	r24, Y+54	; 0x36
    2168:	98 2f       	mov	r25, r24
    216a:	9e 5f       	subi	r25, 0xFE	; 254
    216c:	8d a9       	ldd	r24, Y+53	; 0x35
    216e:	69 2f       	mov	r22, r25
    2170:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_3);
    2174:	89 a1       	ldd	r24, Y+33	; 0x21
    2176:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>
    217a:	ab c0       	rjmp	.+342    	; 0x22d2 <LCD_voidwriteNumber+0x320>
	}
	else if(Num >=1000 && Num <10000)
    217c:	89 a9       	ldd	r24, Y+49	; 0x31
    217e:	9a a9       	ldd	r25, Y+50	; 0x32
    2180:	ab a9       	ldd	r26, Y+51	; 0x33
    2182:	bc a9       	ldd	r27, Y+52	; 0x34
    2184:	88 3e       	cpi	r24, 0xE8	; 232
    2186:	23 e0       	ldi	r18, 0x03	; 3
    2188:	92 07       	cpc	r25, r18
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	a2 07       	cpc	r26, r18
    218e:	20 e0       	ldi	r18, 0x00	; 0
    2190:	b2 07       	cpc	r27, r18
    2192:	08 f4       	brcc	.+2      	; 0x2196 <LCD_voidwriteNumber+0x1e4>
    2194:	9e c0       	rjmp	.+316    	; 0x22d2 <LCD_voidwriteNumber+0x320>
    2196:	89 a9       	ldd	r24, Y+49	; 0x31
    2198:	9a a9       	ldd	r25, Y+50	; 0x32
    219a:	ab a9       	ldd	r26, Y+51	; 0x33
    219c:	bc a9       	ldd	r27, Y+52	; 0x34
    219e:	80 31       	cpi	r24, 0x10	; 16
    21a0:	27 e2       	ldi	r18, 0x27	; 39
    21a2:	92 07       	cpc	r25, r18
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	a2 07       	cpc	r26, r18
    21a8:	20 e0       	ldi	r18, 0x00	; 0
    21aa:	b2 07       	cpc	r27, r18
    21ac:	08 f0       	brcs	.+2      	; 0x21b0 <LCD_voidwriteNumber+0x1fe>
    21ae:	91 c0       	rjmp	.+290    	; 0x22d2 <LCD_voidwriteNumber+0x320>
	{  ///1234
		Num_1 = Num/1000; //1
    21b0:	89 a9       	ldd	r24, Y+49	; 0x31
    21b2:	9a a9       	ldd	r25, Y+50	; 0x32
    21b4:	ab a9       	ldd	r26, Y+51	; 0x33
    21b6:	bc a9       	ldd	r27, Y+52	; 0x34
    21b8:	28 ee       	ldi	r18, 0xE8	; 232
    21ba:	33 e0       	ldi	r19, 0x03	; 3
    21bc:	40 e0       	ldi	r20, 0x00	; 0
    21be:	50 e0       	ldi	r21, 0x00	; 0
    21c0:	bc 01       	movw	r22, r24
    21c2:	cd 01       	movw	r24, r26
    21c4:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    21c8:	da 01       	movw	r26, r20
    21ca:	c9 01       	movw	r24, r18
    21cc:	8d a7       	std	Y+45, r24	; 0x2d
    21ce:	9e a7       	std	Y+46, r25	; 0x2e
    21d0:	af a7       	std	Y+47, r26	; 0x2f
    21d2:	b8 ab       	std	Y+48, r27	; 0x30
		LCD_voidSetCursor(R,C);
    21d4:	8d a9       	ldd	r24, Y+53	; 0x35
    21d6:	6e a9       	ldd	r22, Y+54	; 0x36
    21d8:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_1);
    21dc:	8d a5       	ldd	r24, Y+45	; 0x2d
    21de:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Num_2 = Num % 1000;  //234
    21e2:	89 a9       	ldd	r24, Y+49	; 0x31
    21e4:	9a a9       	ldd	r25, Y+50	; 0x32
    21e6:	ab a9       	ldd	r26, Y+51	; 0x33
    21e8:	bc a9       	ldd	r27, Y+52	; 0x34
    21ea:	28 ee       	ldi	r18, 0xE8	; 232
    21ec:	33 e0       	ldi	r19, 0x03	; 3
    21ee:	40 e0       	ldi	r20, 0x00	; 0
    21f0:	50 e0       	ldi	r21, 0x00	; 0
    21f2:	bc 01       	movw	r22, r24
    21f4:	cd 01       	movw	r24, r26
    21f6:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    21fa:	dc 01       	movw	r26, r24
    21fc:	cb 01       	movw	r24, r22
    21fe:	89 a7       	std	Y+41, r24	; 0x29
    2200:	9a a7       	std	Y+42, r25	; 0x2a
    2202:	ab a7       	std	Y+43, r26	; 0x2b
    2204:	bc a7       	std	Y+44, r27	; 0x2c
		Intermediate_2= Num_2 / 100; //2
    2206:	89 a5       	ldd	r24, Y+41	; 0x29
    2208:	9a a5       	ldd	r25, Y+42	; 0x2a
    220a:	ab a5       	ldd	r26, Y+43	; 0x2b
    220c:	bc a5       	ldd	r27, Y+44	; 0x2c
    220e:	24 e6       	ldi	r18, 0x64	; 100
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	40 e0       	ldi	r20, 0x00	; 0
    2214:	50 e0       	ldi	r21, 0x00	; 0
    2216:	bc 01       	movw	r22, r24
    2218:	cd 01       	movw	r24, r26
    221a:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    221e:	da 01       	movw	r26, r20
    2220:	c9 01       	movw	r24, r18
    2222:	8d a3       	std	Y+37, r24	; 0x25
    2224:	9e a3       	std	Y+38, r25	; 0x26
    2226:	af a3       	std	Y+39, r26	; 0x27
    2228:	b8 a7       	std	Y+40, r27	; 0x28
		LCD_voidSetCursor(R,C+1);
    222a:	8e a9       	ldd	r24, Y+54	; 0x36
    222c:	98 2f       	mov	r25, r24
    222e:	9f 5f       	subi	r25, 0xFF	; 255
    2230:	8d a9       	ldd	r24, Y+53	; 0x35
    2232:	69 2f       	mov	r22, r25
    2234:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Intermediate_2);
    2238:	8d a1       	ldd	r24, Y+37	; 0x25
    223a:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Intermediate_3 = Num_2 % 100; //34
    223e:	89 a5       	ldd	r24, Y+41	; 0x29
    2240:	9a a5       	ldd	r25, Y+42	; 0x2a
    2242:	ab a5       	ldd	r26, Y+43	; 0x2b
    2244:	bc a5       	ldd	r27, Y+44	; 0x2c
    2246:	24 e6       	ldi	r18, 0x64	; 100
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	40 e0       	ldi	r20, 0x00	; 0
    224c:	50 e0       	ldi	r21, 0x00	; 0
    224e:	bc 01       	movw	r22, r24
    2250:	cd 01       	movw	r24, r26
    2252:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    2256:	dc 01       	movw	r26, r24
    2258:	cb 01       	movw	r24, r22
    225a:	8d 8f       	std	Y+29, r24	; 0x1d
    225c:	9e 8f       	std	Y+30, r25	; 0x1e
    225e:	af 8f       	std	Y+31, r26	; 0x1f
    2260:	b8 a3       	std	Y+32, r27	; 0x20
		Num_3 = Intermediate_3 /10; //3
    2262:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2264:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2266:	af 8d       	ldd	r26, Y+31	; 0x1f
    2268:	b8 a1       	ldd	r27, Y+32	; 0x20
    226a:	2a e0       	ldi	r18, 0x0A	; 10
    226c:	30 e0       	ldi	r19, 0x00	; 0
    226e:	40 e0       	ldi	r20, 0x00	; 0
    2270:	50 e0       	ldi	r21, 0x00	; 0
    2272:	bc 01       	movw	r22, r24
    2274:	cd 01       	movw	r24, r26
    2276:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    227a:	da 01       	movw	r26, r20
    227c:	c9 01       	movw	r24, r18
    227e:	89 a3       	std	Y+33, r24	; 0x21
    2280:	9a a3       	std	Y+34, r25	; 0x22
    2282:	ab a3       	std	Y+35, r26	; 0x23
    2284:	bc a3       	std	Y+36, r27	; 0x24
		LCD_voidSetCursor(R,C+2);
    2286:	8e a9       	ldd	r24, Y+54	; 0x36
    2288:	98 2f       	mov	r25, r24
    228a:	9e 5f       	subi	r25, 0xFE	; 254
    228c:	8d a9       	ldd	r24, Y+53	; 0x35
    228e:	69 2f       	mov	r22, r25
    2290:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_3);
    2294:	89 a1       	ldd	r24, Y+33	; 0x21
    2296:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>

		Num_4 = Intermediate_3 % 10; //4
    229a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    229c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    229e:	af 8d       	ldd	r26, Y+31	; 0x1f
    22a0:	b8 a1       	ldd	r27, Y+32	; 0x20
    22a2:	2a e0       	ldi	r18, 0x0A	; 10
    22a4:	30 e0       	ldi	r19, 0x00	; 0
    22a6:	40 e0       	ldi	r20, 0x00	; 0
    22a8:	50 e0       	ldi	r21, 0x00	; 0
    22aa:	bc 01       	movw	r22, r24
    22ac:	cd 01       	movw	r24, r26
    22ae:	0e 94 cb 13 	call	0x2796	; 0x2796 <__udivmodsi4>
    22b2:	dc 01       	movw	r26, r24
    22b4:	cb 01       	movw	r24, r22
    22b6:	8d 8b       	std	Y+21, r24	; 0x15
    22b8:	9e 8b       	std	Y+22, r25	; 0x16
    22ba:	af 8b       	std	Y+23, r26	; 0x17
    22bc:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_voidSetCursor(R,C+3);
    22be:	8e a9       	ldd	r24, Y+54	; 0x36
    22c0:	98 2f       	mov	r25, r24
    22c2:	9d 5f       	subi	r25, 0xFD	; 253
    22c4:	8d a9       	ldd	r24, Y+53	; 0x35
    22c6:	69 2f       	mov	r22, r25
    22c8:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWrite(Num_4);
    22cc:	8d 89       	ldd	r24, Y+21	; 0x15
    22ce:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <LCD_voidWrite>





}
    22d2:	e6 96       	adiw	r28, 0x36	; 54
    22d4:	0f b6       	in	r0, 0x3f	; 63
    22d6:	f8 94       	cli
    22d8:	de bf       	out	0x3e, r29	; 62
    22da:	0f be       	out	0x3f, r0	; 63
    22dc:	cd bf       	out	0x3d, r28	; 61
    22de:	cf 91       	pop	r28
    22e0:	df 91       	pop	r29
    22e2:	08 95       	ret

000022e4 <__vector_9>:


int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
    22e4:	1f 92       	push	r1
    22e6:	0f 92       	push	r0
    22e8:	0f b6       	in	r0, 0x3f	; 63
    22ea:	0f 92       	push	r0
    22ec:	11 24       	eor	r1, r1
    22ee:	8f 93       	push	r24
    22f0:	9f 93       	push	r25
    22f2:	df 93       	push	r29
    22f4:	cf 93       	push	r28
    22f6:	cd b7       	in	r28, 0x3d	; 61
    22f8:	de b7       	in	r29, 0x3e	; 62
	TimerOverflow++;		/* Increment Timer Overflow count */
    22fa:	80 91 82 01 	lds	r24, 0x0182
    22fe:	90 91 83 01 	lds	r25, 0x0183
    2302:	01 96       	adiw	r24, 0x01	; 1
    2304:	90 93 83 01 	sts	0x0183, r25
    2308:	80 93 82 01 	sts	0x0182, r24
}
    230c:	cf 91       	pop	r28
    230e:	df 91       	pop	r29
    2310:	9f 91       	pop	r25
    2312:	8f 91       	pop	r24
    2314:	0f 90       	pop	r0
    2316:	0f be       	out	0x3f, r0	; 63
    2318:	0f 90       	pop	r0
    231a:	1f 90       	pop	r1
    231c:	18 95       	reti

0000231e <main>:

int main(void)
{
    231e:	ef 92       	push	r14
    2320:	ff 92       	push	r15
    2322:	0f 93       	push	r16
    2324:	1f 93       	push	r17
    2326:	df 93       	push	r29
    2328:	cf 93       	push	r28
    232a:	cd b7       	in	r28, 0x3d	; 61
    232c:	de b7       	in	r29, 0x3e	; 62
    232e:	e8 97       	sbiw	r28, 0x38	; 56
    2330:	0f b6       	in	r0, 0x3f	; 63
    2332:	f8 94       	cli
    2334:	de bf       	out	0x3e, r29	; 62
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPinDir(PORT_B,PIN_0,OUTPUT);
    233a:	81 e0       	ldi	r24, 0x01	; 1
    233c:	60 e0       	ldi	r22, 0x00	; 0
    233e:	41 e0       	ldi	r20, 0x01	; 1
    2340:	0e 94 79 07 	call	0xef2	; 0xef2 <DIO_voidSetPinDir>

	char string[10];
	long count;
	double distance;
	
	DDRD = 0x01;			/* Make trigger pin as output */
    2344:	e1 e3       	ldi	r30, 0x31	; 49
    2346:	f0 e0       	ldi	r31, 0x00	; 0
    2348:	81 e0       	ldi	r24, 0x01	; 1
    234a:	80 83       	st	Z, r24
	PORTD = 0b01000000;			/* Turn on Pull-up */
    234c:	e2 e3       	ldi	r30, 0x32	; 50
    234e:	f0 e0       	ldi	r31, 0x00	; 0
    2350:	80 e4       	ldi	r24, 0x40	; 64
    2352:	80 83       	st	Z, r24
	
	LCD_voidInit();
    2354:	0e 94 3e 0a 	call	0x147c	; 0x147c <LCD_voidInit>
	//LCD_String_xy(1, 0, "Ultrasonic");
	LCD_voidSetCursor (0,0);
    2358:	80 e0       	ldi	r24, 0x00	; 0
    235a:	60 e0       	ldi	r22, 0x00	; 0
    235c:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
	 LCD_voidWriteString("Ultrasonic");
    2360:	80 e6       	ldi	r24, 0x60	; 96
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <LCD_voidWriteString>
	
	sei();					/* Enable global interrupt */
    2368:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
    236a:	e9 e5       	ldi	r30, 0x59	; 89
    236c:	f0 e0       	ldi	r31, 0x00	; 0
    236e:	84 e0       	ldi	r24, 0x04	; 4
    2370:	80 83       	st	Z, r24
	TCCR1A = 0;				/* Set all bit to zero Normal operation */
    2372:	ef e4       	ldi	r30, 0x4F	; 79
    2374:	f0 e0       	ldi	r31, 0x00	; 0
    2376:	10 82       	st	Z, r1

	while(1)
	{

		PORTD |= (1 << 0);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
    2378:	a2 e3       	ldi	r26, 0x32	; 50
    237a:	b0 e0       	ldi	r27, 0x00	; 0
    237c:	e2 e3       	ldi	r30, 0x32	; 50
    237e:	f0 e0       	ldi	r31, 0x00	; 0
    2380:	80 81       	ld	r24, Z
    2382:	81 60       	ori	r24, 0x01	; 1
    2384:	8c 93       	st	X, r24
    2386:	80 e0       	ldi	r24, 0x00	; 0
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	a0 e2       	ldi	r26, 0x20	; 32
    238c:	b1 e4       	ldi	r27, 0x41	; 65
    238e:	8b a3       	std	Y+35, r24	; 0x23
    2390:	9c a3       	std	Y+36, r25	; 0x24
    2392:	ad a3       	std	Y+37, r26	; 0x25
    2394:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    2396:	6b a1       	ldd	r22, Y+35	; 0x23
    2398:	7c a1       	ldd	r23, Y+36	; 0x24
    239a:	8d a1       	ldd	r24, Y+37	; 0x25
    239c:	9e a1       	ldd	r25, Y+38	; 0x26
    239e:	20 e0       	ldi	r18, 0x00	; 0
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	40 e8       	ldi	r20, 0x80	; 128
    23a4:	50 e4       	ldi	r21, 0x40	; 64
    23a6:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    23aa:	dc 01       	movw	r26, r24
    23ac:	cb 01       	movw	r24, r22
    23ae:	8f 8f       	std	Y+31, r24	; 0x1f
    23b0:	98 a3       	std	Y+32, r25	; 0x20
    23b2:	a9 a3       	std	Y+33, r26	; 0x21
    23b4:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    23b6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    23b8:	78 a1       	ldd	r23, Y+32	; 0x20
    23ba:	89 a1       	ldd	r24, Y+33	; 0x21
    23bc:	9a a1       	ldd	r25, Y+34	; 0x22
    23be:	20 e0       	ldi	r18, 0x00	; 0
    23c0:	30 e0       	ldi	r19, 0x00	; 0
    23c2:	40 e8       	ldi	r20, 0x80	; 128
    23c4:	5f e3       	ldi	r21, 0x3F	; 63
    23c6:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    23ca:	88 23       	and	r24, r24
    23cc:	1c f4       	brge	.+6      	; 0x23d4 <main+0xb6>
		__ticks = 1;
    23ce:	81 e0       	ldi	r24, 0x01	; 1
    23d0:	8e 8f       	std	Y+30, r24	; 0x1e
    23d2:	91 c0       	rjmp	.+290    	; 0x24f6 <main+0x1d8>
	else if (__tmp > 255)
    23d4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    23d6:	78 a1       	ldd	r23, Y+32	; 0x20
    23d8:	89 a1       	ldd	r24, Y+33	; 0x21
    23da:	9a a1       	ldd	r25, Y+34	; 0x22
    23dc:	20 e0       	ldi	r18, 0x00	; 0
    23de:	30 e0       	ldi	r19, 0x00	; 0
    23e0:	4f e7       	ldi	r20, 0x7F	; 127
    23e2:	53 e4       	ldi	r21, 0x43	; 67
    23e4:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    23e8:	18 16       	cp	r1, r24
    23ea:	0c f0       	brlt	.+2      	; 0x23ee <main+0xd0>
    23ec:	7b c0       	rjmp	.+246    	; 0x24e4 <main+0x1c6>
	{
		_delay_ms(__us / 1000.0);
    23ee:	6b a1       	ldd	r22, Y+35	; 0x23
    23f0:	7c a1       	ldd	r23, Y+36	; 0x24
    23f2:	8d a1       	ldd	r24, Y+37	; 0x25
    23f4:	9e a1       	ldd	r25, Y+38	; 0x26
    23f6:	20 e0       	ldi	r18, 0x00	; 0
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	4a e7       	ldi	r20, 0x7A	; 122
    23fc:	54 e4       	ldi	r21, 0x44	; 68
    23fe:	0e 94 96 03 	call	0x72c	; 0x72c <__divsf3>
    2402:	dc 01       	movw	r26, r24
    2404:	cb 01       	movw	r24, r22
    2406:	8a 8f       	std	Y+26, r24	; 0x1a
    2408:	9b 8f       	std	Y+27, r25	; 0x1b
    240a:	ac 8f       	std	Y+28, r26	; 0x1c
    240c:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    240e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    2410:	7b 8d       	ldd	r23, Y+27	; 0x1b
    2412:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2414:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2416:	20 e0       	ldi	r18, 0x00	; 0
    2418:	30 e8       	ldi	r19, 0x80	; 128
    241a:	4b e3       	ldi	r20, 0x3B	; 59
    241c:	55 e4       	ldi	r21, 0x45	; 69
    241e:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2422:	dc 01       	movw	r26, r24
    2424:	cb 01       	movw	r24, r22
    2426:	8e 8b       	std	Y+22, r24	; 0x16
    2428:	9f 8b       	std	Y+23, r25	; 0x17
    242a:	a8 8f       	std	Y+24, r26	; 0x18
    242c:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    242e:	6e 89       	ldd	r22, Y+22	; 0x16
    2430:	7f 89       	ldd	r23, Y+23	; 0x17
    2432:	88 8d       	ldd	r24, Y+24	; 0x18
    2434:	99 8d       	ldd	r25, Y+25	; 0x19
    2436:	20 e0       	ldi	r18, 0x00	; 0
    2438:	30 e0       	ldi	r19, 0x00	; 0
    243a:	40 e8       	ldi	r20, 0x80	; 128
    243c:	5f e3       	ldi	r21, 0x3F	; 63
    243e:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2442:	88 23       	and	r24, r24
    2444:	2c f4       	brge	.+10     	; 0x2450 <main+0x132>
		__ticks = 1;
    2446:	81 e0       	ldi	r24, 0x01	; 1
    2448:	90 e0       	ldi	r25, 0x00	; 0
    244a:	9d 8b       	std	Y+21, r25	; 0x15
    244c:	8c 8b       	std	Y+20, r24	; 0x14
    244e:	3f c0       	rjmp	.+126    	; 0x24ce <main+0x1b0>
	else if (__tmp > 65535)
    2450:	6e 89       	ldd	r22, Y+22	; 0x16
    2452:	7f 89       	ldd	r23, Y+23	; 0x17
    2454:	88 8d       	ldd	r24, Y+24	; 0x18
    2456:	99 8d       	ldd	r25, Y+25	; 0x19
    2458:	20 e0       	ldi	r18, 0x00	; 0
    245a:	3f ef       	ldi	r19, 0xFF	; 255
    245c:	4f e7       	ldi	r20, 0x7F	; 127
    245e:	57 e4       	ldi	r21, 0x47	; 71
    2460:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    2464:	18 16       	cp	r1, r24
    2466:	4c f5       	brge	.+82     	; 0x24ba <main+0x19c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2468:	6a 8d       	ldd	r22, Y+26	; 0x1a
    246a:	7b 8d       	ldd	r23, Y+27	; 0x1b
    246c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    246e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2470:	20 e0       	ldi	r18, 0x00	; 0
    2472:	30 e0       	ldi	r19, 0x00	; 0
    2474:	40 e2       	ldi	r20, 0x20	; 32
    2476:	51 e4       	ldi	r21, 0x41	; 65
    2478:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    247c:	dc 01       	movw	r26, r24
    247e:	cb 01       	movw	r24, r22
    2480:	bc 01       	movw	r22, r24
    2482:	cd 01       	movw	r24, r26
    2484:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    2488:	dc 01       	movw	r26, r24
    248a:	cb 01       	movw	r24, r22
    248c:	9d 8b       	std	Y+21, r25	; 0x15
    248e:	8c 8b       	std	Y+20, r24	; 0x14
    2490:	0f c0       	rjmp	.+30     	; 0x24b0 <main+0x192>
    2492:	8c e2       	ldi	r24, 0x2C	; 44
    2494:	91 e0       	ldi	r25, 0x01	; 1
    2496:	9b 8b       	std	Y+19, r25	; 0x13
    2498:	8a 8b       	std	Y+18, r24	; 0x12
    249a:	8a 89       	ldd	r24, Y+18	; 0x12
    249c:	9b 89       	ldd	r25, Y+19	; 0x13
    249e:	01 97       	sbiw	r24, 0x01	; 1
    24a0:	f1 f7       	brne	.-4      	; 0x249e <main+0x180>
    24a2:	9b 8b       	std	Y+19, r25	; 0x13
    24a4:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24a6:	8c 89       	ldd	r24, Y+20	; 0x14
    24a8:	9d 89       	ldd	r25, Y+21	; 0x15
    24aa:	01 97       	sbiw	r24, 0x01	; 1
    24ac:	9d 8b       	std	Y+21, r25	; 0x15
    24ae:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24b0:	8c 89       	ldd	r24, Y+20	; 0x14
    24b2:	9d 89       	ldd	r25, Y+21	; 0x15
    24b4:	00 97       	sbiw	r24, 0x00	; 0
    24b6:	69 f7       	brne	.-38     	; 0x2492 <main+0x174>
    24b8:	24 c0       	rjmp	.+72     	; 0x2502 <main+0x1e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24ba:	6e 89       	ldd	r22, Y+22	; 0x16
    24bc:	7f 89       	ldd	r23, Y+23	; 0x17
    24be:	88 8d       	ldd	r24, Y+24	; 0x18
    24c0:	99 8d       	ldd	r25, Y+25	; 0x19
    24c2:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	9d 8b       	std	Y+21, r25	; 0x15
    24cc:	8c 8b       	std	Y+20, r24	; 0x14
    24ce:	8c 89       	ldd	r24, Y+20	; 0x14
    24d0:	9d 89       	ldd	r25, Y+21	; 0x15
    24d2:	99 8b       	std	Y+17, r25	; 0x11
    24d4:	88 8b       	std	Y+16, r24	; 0x10
    24d6:	88 89       	ldd	r24, Y+16	; 0x10
    24d8:	99 89       	ldd	r25, Y+17	; 0x11
    24da:	01 97       	sbiw	r24, 0x01	; 1
    24dc:	f1 f7       	brne	.-4      	; 0x24da <main+0x1bc>
    24de:	99 8b       	std	Y+17, r25	; 0x11
    24e0:	88 8b       	std	Y+16, r24	; 0x10
    24e2:	0f c0       	rjmp	.+30     	; 0x2502 <main+0x1e4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    24e4:	6f 8d       	ldd	r22, Y+31	; 0x1f
    24e6:	78 a1       	ldd	r23, Y+32	; 0x20
    24e8:	89 a1       	ldd	r24, Y+33	; 0x21
    24ea:	9a a1       	ldd	r25, Y+34	; 0x22
    24ec:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	8e 8f       	std	Y+30, r24	; 0x1e
    24f6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    24f8:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    24fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    24fc:	8a 95       	dec	r24
    24fe:	f1 f7       	brne	.-4      	; 0x24fc <main+0x1de>
    2500:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_us(10);
		PORTD &= (~(1 << 0));
    2502:	a2 e3       	ldi	r26, 0x32	; 50
    2504:	b0 e0       	ldi	r27, 0x00	; 0
    2506:	e2 e3       	ldi	r30, 0x32	; 50
    2508:	f0 e0       	ldi	r31, 0x00	; 0
    250a:	80 81       	ld	r24, Z
    250c:	8e 7f       	andi	r24, 0xFE	; 254
    250e:	8c 93       	st	X, r24
		
		TCNT1 = 0;			/* Clear Timer counter */
    2510:	ec e4       	ldi	r30, 0x4C	; 76
    2512:	f0 e0       	ldi	r31, 0x00	; 0
    2514:	11 82       	std	Z+1, r1	; 0x01
    2516:	10 82       	st	Z, r1
		TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
    2518:	ee e4       	ldi	r30, 0x4E	; 78
    251a:	f0 e0       	ldi	r31, 0x00	; 0
    251c:	81 e4       	ldi	r24, 0x41	; 65
    251e:	80 83       	st	Z, r24
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
    2520:	e8 e5       	ldi	r30, 0x58	; 88
    2522:	f0 e0       	ldi	r31, 0x00	; 0
    2524:	80 e2       	ldi	r24, 0x20	; 32
    2526:	80 83       	st	Z, r24
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
    2528:	e8 e5       	ldi	r30, 0x58	; 88
    252a:	f0 e0       	ldi	r31, 0x00	; 0
    252c:	84 e0       	ldi	r24, 0x04	; 4
    252e:	80 83       	st	Z, r24

		/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */
		
		while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
    2530:	e8 e5       	ldi	r30, 0x58	; 88
    2532:	f0 e0       	ldi	r31, 0x00	; 0
    2534:	80 81       	ld	r24, Z
    2536:	88 2f       	mov	r24, r24
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	80 72       	andi	r24, 0x20	; 32
    253c:	90 70       	andi	r25, 0x00	; 0
    253e:	00 97       	sbiw	r24, 0x00	; 0
    2540:	b9 f3       	breq	.-18     	; 0x2530 <main+0x212>
		TCNT1 = 0;			/* Clear Timer counter */
    2542:	ec e4       	ldi	r30, 0x4C	; 76
    2544:	f0 e0       	ldi	r31, 0x00	; 0
    2546:	11 82       	std	Z+1, r1	; 0x01
    2548:	10 82       	st	Z, r1
		TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
    254a:	ee e4       	ldi	r30, 0x4E	; 78
    254c:	f0 e0       	ldi	r31, 0x00	; 0
    254e:	81 e0       	ldi	r24, 0x01	; 1
    2550:	80 83       	st	Z, r24
		TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
    2552:	e8 e5       	ldi	r30, 0x58	; 88
    2554:	f0 e0       	ldi	r31, 0x00	; 0
    2556:	80 e2       	ldi	r24, 0x20	; 32
    2558:	80 83       	st	Z, r24
		TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
    255a:	e8 e5       	ldi	r30, 0x58	; 88
    255c:	f0 e0       	ldi	r31, 0x00	; 0
    255e:	84 e0       	ldi	r24, 0x04	; 4
    2560:	80 83       	st	Z, r24
		TimerOverflow = 0;	/* Clear Timer overflow count */
    2562:	10 92 83 01 	sts	0x0183, r1
    2566:	10 92 82 01 	sts	0x0182, r1

		while ((TIFR & (1 << ICF1)) == 0); /* Wait for falling edge */
    256a:	e8 e5       	ldi	r30, 0x58	; 88
    256c:	f0 e0       	ldi	r31, 0x00	; 0
    256e:	80 81       	ld	r24, Z
    2570:	88 2f       	mov	r24, r24
    2572:	90 e0       	ldi	r25, 0x00	; 0
    2574:	80 72       	andi	r24, 0x20	; 32
    2576:	90 70       	andi	r25, 0x00	; 0
    2578:	00 97       	sbiw	r24, 0x00	; 0
    257a:	b9 f3       	breq	.-18     	; 0x256a <main+0x24c>
		count = ICR1 + (65535 * TimerOverflow);	/* Take value of capture register */
    257c:	e6 e4       	ldi	r30, 0x46	; 70
    257e:	f0 e0       	ldi	r31, 0x00	; 0
    2580:	80 81       	ld	r24, Z
    2582:	91 81       	ldd	r25, Z+1	; 0x01
    2584:	7c 01       	movw	r14, r24
    2586:	00 e0       	ldi	r16, 0x00	; 0
    2588:	10 e0       	ldi	r17, 0x00	; 0
    258a:	80 91 82 01 	lds	r24, 0x0182
    258e:	90 91 83 01 	lds	r25, 0x0183
    2592:	aa 27       	eor	r26, r26
    2594:	97 fd       	sbrc	r25, 7
    2596:	a0 95       	com	r26
    2598:	ba 2f       	mov	r27, r26
    259a:	2f ef       	ldi	r18, 0xFF	; 255
    259c:	3f ef       	ldi	r19, 0xFF	; 255
    259e:	40 e0       	ldi	r20, 0x00	; 0
    25a0:	50 e0       	ldi	r21, 0x00	; 0
    25a2:	bc 01       	movw	r22, r24
    25a4:	cd 01       	movw	r24, r26
    25a6:	0e 94 ac 13 	call	0x2758	; 0x2758 <__mulsi3>
    25aa:	dc 01       	movw	r26, r24
    25ac:	cb 01       	movw	r24, r22
    25ae:	8e 0d       	add	r24, r14
    25b0:	9f 1d       	adc	r25, r15
    25b2:	a0 1f       	adc	r26, r16
    25b4:	b1 1f       	adc	r27, r17
    25b6:	8b a7       	std	Y+43, r24	; 0x2b
    25b8:	9c a7       	std	Y+44, r25	; 0x2c
    25ba:	ad a7       	std	Y+45, r26	; 0x2d
    25bc:	be a7       	std	Y+46, r27	; 0x2e
		/* 8MHz Timer freq, sound speed =343 m/s, calculation mentioned in doc. */
		distance = (double)count / 466.47;
    25be:	6b a5       	ldd	r22, Y+43	; 0x2b
    25c0:	7c a5       	ldd	r23, Y+44	; 0x2c
    25c2:	8d a5       	ldd	r24, Y+45	; 0x2d
    25c4:	9e a5       	ldd	r25, Y+46	; 0x2e
    25c6:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__floatsisf>
    25ca:	dc 01       	movw	r26, r24
    25cc:	cb 01       	movw	r24, r22
    25ce:	bc 01       	movw	r22, r24
    25d0:	cd 01       	movw	r24, r26
    25d2:	29 e2       	ldi	r18, 0x29	; 41
    25d4:	3c e3       	ldi	r19, 0x3C	; 60
    25d6:	49 ee       	ldi	r20, 0xE9	; 233
    25d8:	53 e4       	ldi	r21, 0x43	; 67
    25da:	0e 94 96 03 	call	0x72c	; 0x72c <__divsf3>
    25de:	dc 01       	movw	r26, r24
    25e0:	cb 01       	movw	r24, r22
    25e2:	8f a3       	std	Y+39, r24	; 0x27
    25e4:	98 a7       	std	Y+40, r25	; 0x28
    25e6:	a9 a7       	std	Y+41, r26	; 0x29
    25e8:	ba a7       	std	Y+42, r27	; 0x2a

		dtostrf(distance, 2, 2, string);/* Convert distance into string */
    25ea:	8f a1       	ldd	r24, Y+39	; 0x27
    25ec:	98 a5       	ldd	r25, Y+40	; 0x28
    25ee:	a9 a5       	ldd	r26, Y+41	; 0x29
    25f0:	ba a5       	ldd	r27, Y+42	; 0x2a
    25f2:	fe 01       	movw	r30, r28
    25f4:	bf 96       	adiw	r30, 0x2f	; 47
    25f6:	bc 01       	movw	r22, r24
    25f8:	cd 01       	movw	r24, r26
    25fa:	42 e0       	ldi	r20, 0x02	; 2
    25fc:	22 e0       	ldi	r18, 0x02	; 2
    25fe:	8f 01       	movw	r16, r30
    2600:	0e 94 24 14 	call	0x2848	; 0x2848 <dtostrf>
		strcat(string, " cm   ");
    2604:	8e 01       	movw	r16, r28
    2606:	01 5d       	subi	r16, 0xD1	; 209
    2608:	1f 4f       	sbci	r17, 0xFF	; 255
    260a:	ce 01       	movw	r24, r28
    260c:	8f 96       	adiw	r24, 0x2f	; 47
    260e:	0e 94 4e 14 	call	0x289c	; 0x289c <strlen>
    2612:	80 0f       	add	r24, r16
    2614:	91 1f       	adc	r25, r17
    2616:	2b e6       	ldi	r18, 0x6B	; 107
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	b9 01       	movw	r22, r18
    261c:	47 e0       	ldi	r20, 0x07	; 7
    261e:	50 e0       	ldi	r21, 0x00	; 0
    2620:	0e 94 45 14 	call	0x288a	; 0x288a <memcpy>
		//LCD_String_xy(2, 0, "Dist = ");
		LCD_voidSetCursor (1,0);
    2624:	81 e0       	ldi	r24, 0x01	; 1
    2626:	60 e0       	ldi	r22, 0x00	; 0
    2628:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWriteString("Dist = ");
    262c:	82 e7       	ldi	r24, 0x72	; 114
    262e:	90 e0       	ldi	r25, 0x00	; 0
    2630:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <LCD_voidWriteString>
		//LCD_String_xy(2, 7, string);	/* Print distance on LDC16x2 */
		LCD_voidSetCursor (1,7);
    2634:	81 e0       	ldi	r24, 0x01	; 1
    2636:	67 e0       	ldi	r22, 0x07	; 7
    2638:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSetCursor>
		LCD_voidWriteString(string);
    263c:	ce 01       	movw	r24, r28
    263e:	8f 96       	adiw	r24, 0x2f	; 47
    2640:	0e 94 bd 0d 	call	0x1b7a	; 0x1b7a <LCD_voidWriteString>
    2644:	80 e0       	ldi	r24, 0x00	; 0
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	a8 e4       	ldi	r26, 0x48	; 72
    264a:	b3 e4       	ldi	r27, 0x43	; 67
    264c:	8b 87       	std	Y+11, r24	; 0x0b
    264e:	9c 87       	std	Y+12, r25	; 0x0c
    2650:	ad 87       	std	Y+13, r26	; 0x0d
    2652:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2654:	6b 85       	ldd	r22, Y+11	; 0x0b
    2656:	7c 85       	ldd	r23, Y+12	; 0x0c
    2658:	8d 85       	ldd	r24, Y+13	; 0x0d
    265a:	9e 85       	ldd	r25, Y+14	; 0x0e
    265c:	20 e0       	ldi	r18, 0x00	; 0
    265e:	30 e8       	ldi	r19, 0x80	; 128
    2660:	4b e3       	ldi	r20, 0x3B	; 59
    2662:	55 e4       	ldi	r21, 0x45	; 69
    2664:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    2668:	dc 01       	movw	r26, r24
    266a:	cb 01       	movw	r24, r22
    266c:	8f 83       	std	Y+7, r24	; 0x07
    266e:	98 87       	std	Y+8, r25	; 0x08
    2670:	a9 87       	std	Y+9, r26	; 0x09
    2672:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2674:	6f 81       	ldd	r22, Y+7	; 0x07
    2676:	78 85       	ldd	r23, Y+8	; 0x08
    2678:	89 85       	ldd	r24, Y+9	; 0x09
    267a:	9a 85       	ldd	r25, Y+10	; 0x0a
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e0       	ldi	r19, 0x00	; 0
    2680:	40 e8       	ldi	r20, 0x80	; 128
    2682:	5f e3       	ldi	r21, 0x3F	; 63
    2684:	0e 94 a2 04 	call	0x944	; 0x944 <__ltsf2>
    2688:	88 23       	and	r24, r24
    268a:	2c f4       	brge	.+10     	; 0x2696 <main+0x378>
		__ticks = 1;
    268c:	81 e0       	ldi	r24, 0x01	; 1
    268e:	90 e0       	ldi	r25, 0x00	; 0
    2690:	9e 83       	std	Y+6, r25	; 0x06
    2692:	8d 83       	std	Y+5, r24	; 0x05
    2694:	3f c0       	rjmp	.+126    	; 0x2714 <main+0x3f6>
	else if (__tmp > 65535)
    2696:	6f 81       	ldd	r22, Y+7	; 0x07
    2698:	78 85       	ldd	r23, Y+8	; 0x08
    269a:	89 85       	ldd	r24, Y+9	; 0x09
    269c:	9a 85       	ldd	r25, Y+10	; 0x0a
    269e:	20 e0       	ldi	r18, 0x00	; 0
    26a0:	3f ef       	ldi	r19, 0xFF	; 255
    26a2:	4f e7       	ldi	r20, 0x7F	; 127
    26a4:	57 e4       	ldi	r21, 0x47	; 71
    26a6:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    26aa:	18 16       	cp	r1, r24
    26ac:	4c f5       	brge	.+82     	; 0x2700 <main+0x3e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    26b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    26b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    26b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    26b6:	20 e0       	ldi	r18, 0x00	; 0
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	40 e2       	ldi	r20, 0x20	; 32
    26bc:	51 e4       	ldi	r21, 0x41	; 65
    26be:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
    26c2:	dc 01       	movw	r26, r24
    26c4:	cb 01       	movw	r24, r22
    26c6:	bc 01       	movw	r22, r24
    26c8:	cd 01       	movw	r24, r26
    26ca:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    26ce:	dc 01       	movw	r26, r24
    26d0:	cb 01       	movw	r24, r22
    26d2:	9e 83       	std	Y+6, r25	; 0x06
    26d4:	8d 83       	std	Y+5, r24	; 0x05
    26d6:	0f c0       	rjmp	.+30     	; 0x26f6 <main+0x3d8>
    26d8:	8c e2       	ldi	r24, 0x2C	; 44
    26da:	91 e0       	ldi	r25, 0x01	; 1
    26dc:	9c 83       	std	Y+4, r25	; 0x04
    26de:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26e0:	8b 81       	ldd	r24, Y+3	; 0x03
    26e2:	9c 81       	ldd	r25, Y+4	; 0x04
    26e4:	01 97       	sbiw	r24, 0x01	; 1
    26e6:	f1 f7       	brne	.-4      	; 0x26e4 <main+0x3c6>
    26e8:	9c 83       	std	Y+4, r25	; 0x04
    26ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ec:	8d 81       	ldd	r24, Y+5	; 0x05
    26ee:	9e 81       	ldd	r25, Y+6	; 0x06
    26f0:	01 97       	sbiw	r24, 0x01	; 1
    26f2:	9e 83       	std	Y+6, r25	; 0x06
    26f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26f6:	8d 81       	ldd	r24, Y+5	; 0x05
    26f8:	9e 81       	ldd	r25, Y+6	; 0x06
    26fa:	00 97       	sbiw	r24, 0x00	; 0
    26fc:	69 f7       	brne	.-38     	; 0x26d8 <main+0x3ba>
    26fe:	14 c0       	rjmp	.+40     	; 0x2728 <main+0x40a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2700:	6f 81       	ldd	r22, Y+7	; 0x07
    2702:	78 85       	ldd	r23, Y+8	; 0x08
    2704:	89 85       	ldd	r24, Y+9	; 0x09
    2706:	9a 85       	ldd	r25, Y+10	; 0x0a
    2708:	0e 94 c6 00 	call	0x18c	; 0x18c <__fixunssfsi>
    270c:	dc 01       	movw	r26, r24
    270e:	cb 01       	movw	r24, r22
    2710:	9e 83       	std	Y+6, r25	; 0x06
    2712:	8d 83       	std	Y+5, r24	; 0x05
    2714:	8d 81       	ldd	r24, Y+5	; 0x05
    2716:	9e 81       	ldd	r25, Y+6	; 0x06
    2718:	9a 83       	std	Y+2, r25	; 0x02
    271a:	89 83       	std	Y+1, r24	; 0x01
    271c:	89 81       	ldd	r24, Y+1	; 0x01
    271e:	9a 81       	ldd	r25, Y+2	; 0x02
    2720:	01 97       	sbiw	r24, 0x01	; 1
    2722:	f1 f7       	brne	.-4      	; 0x2720 <main+0x402>
    2724:	9a 83       	std	Y+2, r25	; 0x02
    2726:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(200);

		if(distance>5)
    2728:	6f a1       	ldd	r22, Y+39	; 0x27
    272a:	78 a5       	ldd	r23, Y+40	; 0x28
    272c:	89 a5       	ldd	r24, Y+41	; 0x29
    272e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2730:	20 e0       	ldi	r18, 0x00	; 0
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	40 ea       	ldi	r20, 0xA0	; 160
    2736:	50 e4       	ldi	r21, 0x40	; 64
    2738:	0e 94 42 04 	call	0x884	; 0x884 <__gtsf2>
    273c:	18 16       	cp	r1, r24
    273e:	34 f4       	brge	.+12     	; 0x274c <main+0x42e>
		   	    {
		   	    	DIO_voidSetPinValue(PORT_B,PIN_0,HIGH);
    2740:	81 e0       	ldi	r24, 0x01	; 1
    2742:	60 e0       	ldi	r22, 0x00	; 0
    2744:	41 e0       	ldi	r20, 0x01	; 1
    2746:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
    274a:	16 ce       	rjmp	.-980    	; 0x2378 <main+0x5a>
		   	    }
		   	    else
		   	    {
		   	    	DIO_voidSetPinValue(PORT_B,PIN_0,LOW);
    274c:	81 e0       	ldi	r24, 0x01	; 1
    274e:	60 e0       	ldi	r22, 0x00	; 0
    2750:	40 e0       	ldi	r20, 0x00	; 0
    2752:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <DIO_voidSetPinValue>
    2756:	10 ce       	rjmp	.-992    	; 0x2378 <main+0x5a>

00002758 <__mulsi3>:
    2758:	62 9f       	mul	r22, r18
    275a:	d0 01       	movw	r26, r0
    275c:	73 9f       	mul	r23, r19
    275e:	f0 01       	movw	r30, r0
    2760:	82 9f       	mul	r24, r18
    2762:	e0 0d       	add	r30, r0
    2764:	f1 1d       	adc	r31, r1
    2766:	64 9f       	mul	r22, r20
    2768:	e0 0d       	add	r30, r0
    276a:	f1 1d       	adc	r31, r1
    276c:	92 9f       	mul	r25, r18
    276e:	f0 0d       	add	r31, r0
    2770:	83 9f       	mul	r24, r19
    2772:	f0 0d       	add	r31, r0
    2774:	74 9f       	mul	r23, r20
    2776:	f0 0d       	add	r31, r0
    2778:	65 9f       	mul	r22, r21
    277a:	f0 0d       	add	r31, r0
    277c:	99 27       	eor	r25, r25
    277e:	72 9f       	mul	r23, r18
    2780:	b0 0d       	add	r27, r0
    2782:	e1 1d       	adc	r30, r1
    2784:	f9 1f       	adc	r31, r25
    2786:	63 9f       	mul	r22, r19
    2788:	b0 0d       	add	r27, r0
    278a:	e1 1d       	adc	r30, r1
    278c:	f9 1f       	adc	r31, r25
    278e:	bd 01       	movw	r22, r26
    2790:	cf 01       	movw	r24, r30
    2792:	11 24       	eor	r1, r1
    2794:	08 95       	ret

00002796 <__udivmodsi4>:
    2796:	a1 e2       	ldi	r26, 0x21	; 33
    2798:	1a 2e       	mov	r1, r26
    279a:	aa 1b       	sub	r26, r26
    279c:	bb 1b       	sub	r27, r27
    279e:	fd 01       	movw	r30, r26
    27a0:	0d c0       	rjmp	.+26     	; 0x27bc <__udivmodsi4_ep>

000027a2 <__udivmodsi4_loop>:
    27a2:	aa 1f       	adc	r26, r26
    27a4:	bb 1f       	adc	r27, r27
    27a6:	ee 1f       	adc	r30, r30
    27a8:	ff 1f       	adc	r31, r31
    27aa:	a2 17       	cp	r26, r18
    27ac:	b3 07       	cpc	r27, r19
    27ae:	e4 07       	cpc	r30, r20
    27b0:	f5 07       	cpc	r31, r21
    27b2:	20 f0       	brcs	.+8      	; 0x27bc <__udivmodsi4_ep>
    27b4:	a2 1b       	sub	r26, r18
    27b6:	b3 0b       	sbc	r27, r19
    27b8:	e4 0b       	sbc	r30, r20
    27ba:	f5 0b       	sbc	r31, r21

000027bc <__udivmodsi4_ep>:
    27bc:	66 1f       	adc	r22, r22
    27be:	77 1f       	adc	r23, r23
    27c0:	88 1f       	adc	r24, r24
    27c2:	99 1f       	adc	r25, r25
    27c4:	1a 94       	dec	r1
    27c6:	69 f7       	brne	.-38     	; 0x27a2 <__udivmodsi4_loop>
    27c8:	60 95       	com	r22
    27ca:	70 95       	com	r23
    27cc:	80 95       	com	r24
    27ce:	90 95       	com	r25
    27d0:	9b 01       	movw	r18, r22
    27d2:	ac 01       	movw	r20, r24
    27d4:	bd 01       	movw	r22, r26
    27d6:	cf 01       	movw	r24, r30
    27d8:	08 95       	ret

000027da <__prologue_saves__>:
    27da:	2f 92       	push	r2
    27dc:	3f 92       	push	r3
    27de:	4f 92       	push	r4
    27e0:	5f 92       	push	r5
    27e2:	6f 92       	push	r6
    27e4:	7f 92       	push	r7
    27e6:	8f 92       	push	r8
    27e8:	9f 92       	push	r9
    27ea:	af 92       	push	r10
    27ec:	bf 92       	push	r11
    27ee:	cf 92       	push	r12
    27f0:	df 92       	push	r13
    27f2:	ef 92       	push	r14
    27f4:	ff 92       	push	r15
    27f6:	0f 93       	push	r16
    27f8:	1f 93       	push	r17
    27fa:	cf 93       	push	r28
    27fc:	df 93       	push	r29
    27fe:	cd b7       	in	r28, 0x3d	; 61
    2800:	de b7       	in	r29, 0x3e	; 62
    2802:	ca 1b       	sub	r28, r26
    2804:	db 0b       	sbc	r29, r27
    2806:	0f b6       	in	r0, 0x3f	; 63
    2808:	f8 94       	cli
    280a:	de bf       	out	0x3e, r29	; 62
    280c:	0f be       	out	0x3f, r0	; 63
    280e:	cd bf       	out	0x3d, r28	; 61
    2810:	09 94       	ijmp

00002812 <__epilogue_restores__>:
    2812:	2a 88       	ldd	r2, Y+18	; 0x12
    2814:	39 88       	ldd	r3, Y+17	; 0x11
    2816:	48 88       	ldd	r4, Y+16	; 0x10
    2818:	5f 84       	ldd	r5, Y+15	; 0x0f
    281a:	6e 84       	ldd	r6, Y+14	; 0x0e
    281c:	7d 84       	ldd	r7, Y+13	; 0x0d
    281e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2820:	9b 84       	ldd	r9, Y+11	; 0x0b
    2822:	aa 84       	ldd	r10, Y+10	; 0x0a
    2824:	b9 84       	ldd	r11, Y+9	; 0x09
    2826:	c8 84       	ldd	r12, Y+8	; 0x08
    2828:	df 80       	ldd	r13, Y+7	; 0x07
    282a:	ee 80       	ldd	r14, Y+6	; 0x06
    282c:	fd 80       	ldd	r15, Y+5	; 0x05
    282e:	0c 81       	ldd	r16, Y+4	; 0x04
    2830:	1b 81       	ldd	r17, Y+3	; 0x03
    2832:	aa 81       	ldd	r26, Y+2	; 0x02
    2834:	b9 81       	ldd	r27, Y+1	; 0x01
    2836:	ce 0f       	add	r28, r30
    2838:	d1 1d       	adc	r29, r1
    283a:	0f b6       	in	r0, 0x3f	; 63
    283c:	f8 94       	cli
    283e:	de bf       	out	0x3e, r29	; 62
    2840:	0f be       	out	0x3f, r0	; 63
    2842:	cd bf       	out	0x3d, r28	; 61
    2844:	ed 01       	movw	r28, r26
    2846:	08 95       	ret

00002848 <dtostrf>:
    2848:	ef 92       	push	r14
    284a:	ff 92       	push	r15
    284c:	0f 93       	push	r16
    284e:	1f 93       	push	r17
    2850:	f2 2f       	mov	r31, r18
    2852:	f0 2e       	mov	r15, r16
    2854:	47 fd       	sbrc	r20, 7
    2856:	02 c0       	rjmp	.+4      	; 0x285c <dtostrf+0x14>
    2858:	e4 e0       	ldi	r30, 0x04	; 4
    285a:	01 c0       	rjmp	.+2      	; 0x285e <dtostrf+0x16>
    285c:	e4 e1       	ldi	r30, 0x14	; 20
    285e:	24 2f       	mov	r18, r20
    2860:	33 27       	eor	r19, r19
    2862:	27 fd       	sbrc	r18, 7
    2864:	30 95       	com	r19
    2866:	37 ff       	sbrs	r19, 7
    2868:	03 c0       	rjmp	.+6      	; 0x2870 <dtostrf+0x28>
    286a:	30 95       	com	r19
    286c:	21 95       	neg	r18
    286e:	3f 4f       	sbci	r19, 0xFF	; 255
    2870:	4f 2d       	mov	r20, r15
    2872:	51 2f       	mov	r21, r17
    2874:	0f 2f       	mov	r16, r31
    2876:	ee 2e       	mov	r14, r30
    2878:	0e 94 57 14 	call	0x28ae	; 0x28ae <dtoa_prf>
    287c:	8f 2d       	mov	r24, r15
    287e:	91 2f       	mov	r25, r17
    2880:	1f 91       	pop	r17
    2882:	0f 91       	pop	r16
    2884:	ff 90       	pop	r15
    2886:	ef 90       	pop	r14
    2888:	08 95       	ret

0000288a <memcpy>:
    288a:	fb 01       	movw	r30, r22
    288c:	dc 01       	movw	r26, r24
    288e:	02 c0       	rjmp	.+4      	; 0x2894 <memcpy+0xa>
    2890:	01 90       	ld	r0, Z+
    2892:	0d 92       	st	X+, r0
    2894:	41 50       	subi	r20, 0x01	; 1
    2896:	50 40       	sbci	r21, 0x00	; 0
    2898:	d8 f7       	brcc	.-10     	; 0x2890 <memcpy+0x6>
    289a:	08 95       	ret

0000289c <strlen>:
    289c:	fc 01       	movw	r30, r24
    289e:	01 90       	ld	r0, Z+
    28a0:	00 20       	and	r0, r0
    28a2:	e9 f7       	brne	.-6      	; 0x289e <strlen+0x2>
    28a4:	80 95       	com	r24
    28a6:	90 95       	com	r25
    28a8:	8e 0f       	add	r24, r30
    28aa:	9f 1f       	adc	r25, r31
    28ac:	08 95       	ret

000028ae <dtoa_prf>:
    28ae:	a9 e0       	ldi	r26, 0x09	; 9
    28b0:	b0 e0       	ldi	r27, 0x00	; 0
    28b2:	ed e5       	ldi	r30, 0x5D	; 93
    28b4:	f4 e1       	ldi	r31, 0x14	; 20
    28b6:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <__prologue_saves__+0x8>
    28ba:	6a 01       	movw	r12, r20
    28bc:	12 2f       	mov	r17, r18
    28be:	a0 2e       	mov	r10, r16
    28c0:	be 2c       	mov	r11, r14
    28c2:	2b e3       	ldi	r18, 0x3B	; 59
    28c4:	20 17       	cp	r18, r16
    28c6:	18 f4       	brcc	.+6      	; 0x28ce <dtoa_prf+0x20>
    28c8:	2c e3       	ldi	r18, 0x3C	; 60
    28ca:	92 2e       	mov	r9, r18
    28cc:	02 c0       	rjmp	.+4      	; 0x28d2 <dtoa_prf+0x24>
    28ce:	90 2e       	mov	r9, r16
    28d0:	93 94       	inc	r9
    28d2:	ae 01       	movw	r20, r28
    28d4:	4f 5f       	subi	r20, 0xFF	; 255
    28d6:	5f 4f       	sbci	r21, 0xFF	; 255
    28d8:	27 e0       	ldi	r18, 0x07	; 7
    28da:	09 2d       	mov	r16, r9
    28dc:	0e 94 b9 15 	call	0x2b72	; 0x2b72 <__ftoa_engine>
    28e0:	bc 01       	movw	r22, r24
    28e2:	89 81       	ldd	r24, Y+1	; 0x01
    28e4:	e8 2e       	mov	r14, r24
    28e6:	ff 24       	eor	r15, r15
    28e8:	c7 01       	movw	r24, r14
    28ea:	89 70       	andi	r24, 0x09	; 9
    28ec:	90 70       	andi	r25, 0x00	; 0
    28ee:	01 97       	sbiw	r24, 0x01	; 1
    28f0:	11 f4       	brne	.+4      	; 0x28f6 <dtoa_prf+0x48>
    28f2:	ad e2       	ldi	r26, 0x2D	; 45
    28f4:	09 c0       	rjmp	.+18     	; 0x2908 <dtoa_prf+0x5a>
    28f6:	b1 fe       	sbrs	r11, 1
    28f8:	02 c0       	rjmp	.+4      	; 0x28fe <dtoa_prf+0x50>
    28fa:	ab e2       	ldi	r26, 0x2B	; 43
    28fc:	05 c0       	rjmp	.+10     	; 0x2908 <dtoa_prf+0x5a>
    28fe:	b0 fc       	sbrc	r11, 0
    2900:	02 c0       	rjmp	.+4      	; 0x2906 <dtoa_prf+0x58>
    2902:	a0 e0       	ldi	r26, 0x00	; 0
    2904:	01 c0       	rjmp	.+2      	; 0x2908 <dtoa_prf+0x5a>
    2906:	a0 e2       	ldi	r26, 0x20	; 32
    2908:	e3 fe       	sbrs	r14, 3
    290a:	3b c0       	rjmp	.+118    	; 0x2982 <dtoa_prf+0xd4>
    290c:	aa 23       	and	r26, r26
    290e:	11 f4       	brne	.+4      	; 0x2914 <dtoa_prf+0x66>
    2910:	23 e0       	ldi	r18, 0x03	; 3
    2912:	01 c0       	rjmp	.+2      	; 0x2916 <dtoa_prf+0x68>
    2914:	24 e0       	ldi	r18, 0x04	; 4
    2916:	21 17       	cp	r18, r17
    2918:	10 f0       	brcs	.+4      	; 0x291e <dtoa_prf+0x70>
    291a:	20 e0       	ldi	r18, 0x00	; 0
    291c:	02 c0       	rjmp	.+4      	; 0x2922 <dtoa_prf+0x74>
    291e:	12 1b       	sub	r17, r18
    2920:	21 2f       	mov	r18, r17
    2922:	eb 2c       	mov	r14, r11
    2924:	b4 fe       	sbrs	r11, 4
    2926:	02 c0       	rjmp	.+4      	; 0x292c <dtoa_prf+0x7e>
    2928:	32 2f       	mov	r19, r18
    292a:	0a c0       	rjmp	.+20     	; 0x2940 <dtoa_prf+0x92>
    292c:	f6 01       	movw	r30, r12
    292e:	32 2f       	mov	r19, r18
    2930:	80 e2       	ldi	r24, 0x20	; 32
    2932:	02 c0       	rjmp	.+4      	; 0x2938 <dtoa_prf+0x8a>
    2934:	81 93       	st	Z+, r24
    2936:	31 50       	subi	r19, 0x01	; 1
    2938:	33 23       	and	r19, r19
    293a:	e1 f7       	brne	.-8      	; 0x2934 <dtoa_prf+0x86>
    293c:	c2 0e       	add	r12, r18
    293e:	d1 1c       	adc	r13, r1
    2940:	aa 23       	and	r26, r26
    2942:	19 f0       	breq	.+6      	; 0x294a <dtoa_prf+0x9c>
    2944:	f6 01       	movw	r30, r12
    2946:	a1 93       	st	Z+, r26
    2948:	6f 01       	movw	r12, r30
    294a:	f6 01       	movw	r30, r12
    294c:	31 96       	adiw	r30, 0x01	; 1
    294e:	e2 fe       	sbrs	r14, 2
    2950:	05 c0       	rjmp	.+10     	; 0x295c <dtoa_prf+0xae>
    2952:	9e e4       	ldi	r25, 0x4E	; 78
    2954:	d6 01       	movw	r26, r12
    2956:	9c 93       	st	X, r25
    2958:	81 e4       	ldi	r24, 0x41	; 65
    295a:	04 c0       	rjmp	.+8      	; 0x2964 <dtoa_prf+0xb6>
    295c:	9e e6       	ldi	r25, 0x6E	; 110
    295e:	d6 01       	movw	r26, r12
    2960:	9c 93       	st	X, r25
    2962:	81 e6       	ldi	r24, 0x61	; 97
    2964:	11 96       	adiw	r26, 0x01	; 1
    2966:	8c 93       	st	X, r24
    2968:	91 83       	std	Z+1, r25	; 0x01
    296a:	32 96       	adiw	r30, 0x02	; 2
    296c:	df 01       	movw	r26, r30
    296e:	83 2f       	mov	r24, r19
    2970:	90 e2       	ldi	r25, 0x20	; 32
    2972:	02 c0       	rjmp	.+4      	; 0x2978 <dtoa_prf+0xca>
    2974:	9d 93       	st	X+, r25
    2976:	81 50       	subi	r24, 0x01	; 1
    2978:	88 23       	and	r24, r24
    297a:	e1 f7       	brne	.-8      	; 0x2974 <dtoa_prf+0xc6>
    297c:	e3 0f       	add	r30, r19
    297e:	f1 1d       	adc	r31, r1
    2980:	40 c0       	rjmp	.+128    	; 0x2a02 <dtoa_prf+0x154>
    2982:	e2 fe       	sbrs	r14, 2
    2984:	42 c0       	rjmp	.+132    	; 0x2a0a <dtoa_prf+0x15c>
    2986:	aa 23       	and	r26, r26
    2988:	11 f4       	brne	.+4      	; 0x298e <dtoa_prf+0xe0>
    298a:	23 e0       	ldi	r18, 0x03	; 3
    298c:	01 c0       	rjmp	.+2      	; 0x2990 <dtoa_prf+0xe2>
    298e:	24 e0       	ldi	r18, 0x04	; 4
    2990:	21 17       	cp	r18, r17
    2992:	10 f0       	brcs	.+4      	; 0x2998 <dtoa_prf+0xea>
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	02 c0       	rjmp	.+4      	; 0x299c <dtoa_prf+0xee>
    2998:	12 1b       	sub	r17, r18
    299a:	21 2f       	mov	r18, r17
    299c:	eb 2c       	mov	r14, r11
    299e:	b4 fe       	sbrs	r11, 4
    29a0:	02 c0       	rjmp	.+4      	; 0x29a6 <dtoa_prf+0xf8>
    29a2:	92 2f       	mov	r25, r18
    29a4:	0a c0       	rjmp	.+20     	; 0x29ba <dtoa_prf+0x10c>
    29a6:	f6 01       	movw	r30, r12
    29a8:	92 2f       	mov	r25, r18
    29aa:	80 e2       	ldi	r24, 0x20	; 32
    29ac:	02 c0       	rjmp	.+4      	; 0x29b2 <dtoa_prf+0x104>
    29ae:	81 93       	st	Z+, r24
    29b0:	91 50       	subi	r25, 0x01	; 1
    29b2:	99 23       	and	r25, r25
    29b4:	e1 f7       	brne	.-8      	; 0x29ae <dtoa_prf+0x100>
    29b6:	c2 0e       	add	r12, r18
    29b8:	d1 1c       	adc	r13, r1
    29ba:	aa 23       	and	r26, r26
    29bc:	19 f0       	breq	.+6      	; 0x29c4 <dtoa_prf+0x116>
    29be:	f6 01       	movw	r30, r12
    29c0:	a1 93       	st	Z+, r26
    29c2:	6f 01       	movw	r12, r30
    29c4:	f6 01       	movw	r30, r12
    29c6:	31 96       	adiw	r30, 0x01	; 1
    29c8:	e2 fe       	sbrs	r14, 2
    29ca:	08 c0       	rjmp	.+16     	; 0x29dc <dtoa_prf+0x12e>
    29cc:	89 e4       	ldi	r24, 0x49	; 73
    29ce:	d6 01       	movw	r26, r12
    29d0:	8c 93       	st	X, r24
    29d2:	8e e4       	ldi	r24, 0x4E	; 78
    29d4:	11 96       	adiw	r26, 0x01	; 1
    29d6:	8c 93       	st	X, r24
    29d8:	86 e4       	ldi	r24, 0x46	; 70
    29da:	07 c0       	rjmp	.+14     	; 0x29ea <dtoa_prf+0x13c>
    29dc:	89 e6       	ldi	r24, 0x69	; 105
    29de:	d6 01       	movw	r26, r12
    29e0:	8c 93       	st	X, r24
    29e2:	8e e6       	ldi	r24, 0x6E	; 110
    29e4:	11 96       	adiw	r26, 0x01	; 1
    29e6:	8c 93       	st	X, r24
    29e8:	86 e6       	ldi	r24, 0x66	; 102
    29ea:	81 83       	std	Z+1, r24	; 0x01
    29ec:	32 96       	adiw	r30, 0x02	; 2
    29ee:	df 01       	movw	r26, r30
    29f0:	89 2f       	mov	r24, r25
    29f2:	20 e2       	ldi	r18, 0x20	; 32
    29f4:	02 c0       	rjmp	.+4      	; 0x29fa <dtoa_prf+0x14c>
    29f6:	2d 93       	st	X+, r18
    29f8:	81 50       	subi	r24, 0x01	; 1
    29fa:	88 23       	and	r24, r24
    29fc:	e1 f7       	brne	.-8      	; 0x29f6 <dtoa_prf+0x148>
    29fe:	e9 0f       	add	r30, r25
    2a00:	f1 1d       	adc	r31, r1
    2a02:	10 82       	st	Z, r1
    2a04:	2e ef       	ldi	r18, 0xFE	; 254
    2a06:	3f ef       	ldi	r19, 0xFF	; 255
    2a08:	af c0       	rjmp	.+350    	; 0x2b68 <dtoa_prf+0x2ba>
    2a0a:	16 16       	cp	r1, r22
    2a0c:	17 06       	cpc	r1, r23
    2a0e:	1c f0       	brlt	.+6      	; 0x2a16 <dtoa_prf+0x168>
    2a10:	41 e0       	ldi	r20, 0x01	; 1
    2a12:	50 e0       	ldi	r21, 0x00	; 0
    2a14:	03 c0       	rjmp	.+6      	; 0x2a1c <dtoa_prf+0x16e>
    2a16:	ab 01       	movw	r20, r22
    2a18:	4f 5f       	subi	r20, 0xFF	; 255
    2a1a:	5f 4f       	sbci	r21, 0xFF	; 255
    2a1c:	aa 20       	and	r10, r10
    2a1e:	19 f4       	brne	.+6      	; 0x2a26 <dtoa_prf+0x178>
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	90 e0       	ldi	r25, 0x00	; 0
    2a24:	03 c0       	rjmp	.+6      	; 0x2a2c <dtoa_prf+0x17e>
    2a26:	8a 2d       	mov	r24, r10
    2a28:	90 e0       	ldi	r25, 0x00	; 0
    2a2a:	01 96       	adiw	r24, 0x01	; 1
    2a2c:	20 e0       	ldi	r18, 0x00	; 0
    2a2e:	30 e0       	ldi	r19, 0x00	; 0
    2a30:	aa 23       	and	r26, r26
    2a32:	11 f0       	breq	.+4      	; 0x2a38 <dtoa_prf+0x18a>
    2a34:	21 e0       	ldi	r18, 0x01	; 1
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	24 0f       	add	r18, r20
    2a3a:	35 1f       	adc	r19, r21
    2a3c:	28 0f       	add	r18, r24
    2a3e:	39 1f       	adc	r19, r25
    2a40:	81 2f       	mov	r24, r17
    2a42:	90 e0       	ldi	r25, 0x00	; 0
    2a44:	28 17       	cp	r18, r24
    2a46:	39 07       	cpc	r19, r25
    2a48:	14 f0       	brlt	.+4      	; 0x2a4e <dtoa_prf+0x1a0>
    2a4a:	20 e0       	ldi	r18, 0x00	; 0
    2a4c:	02 c0       	rjmp	.+4      	; 0x2a52 <dtoa_prf+0x1a4>
    2a4e:	12 1b       	sub	r17, r18
    2a50:	21 2f       	mov	r18, r17
    2a52:	4b 2d       	mov	r20, r11
    2a54:	50 e0       	ldi	r21, 0x00	; 0
    2a56:	ca 01       	movw	r24, r20
    2a58:	80 71       	andi	r24, 0x10	; 16
    2a5a:	90 70       	andi	r25, 0x00	; 0
    2a5c:	b4 fc       	sbrc	r11, 4
    2a5e:	0d c0       	rjmp	.+26     	; 0x2a7a <dtoa_prf+0x1cc>
    2a60:	b3 fc       	sbrc	r11, 3
    2a62:	0b c0       	rjmp	.+22     	; 0x2a7a <dtoa_prf+0x1cc>
    2a64:	f6 01       	movw	r30, r12
    2a66:	32 2f       	mov	r19, r18
    2a68:	40 e2       	ldi	r20, 0x20	; 32
    2a6a:	02 c0       	rjmp	.+4      	; 0x2a70 <dtoa_prf+0x1c2>
    2a6c:	41 93       	st	Z+, r20
    2a6e:	31 50       	subi	r19, 0x01	; 1
    2a70:	33 23       	and	r19, r19
    2a72:	e1 f7       	brne	.-8      	; 0x2a6c <dtoa_prf+0x1be>
    2a74:	c2 0e       	add	r12, r18
    2a76:	d1 1c       	adc	r13, r1
    2a78:	01 c0       	rjmp	.+2      	; 0x2a7c <dtoa_prf+0x1ce>
    2a7a:	32 2f       	mov	r19, r18
    2a7c:	aa 23       	and	r26, r26
    2a7e:	19 f0       	breq	.+6      	; 0x2a86 <dtoa_prf+0x1d8>
    2a80:	f6 01       	movw	r30, r12
    2a82:	a1 93       	st	Z+, r26
    2a84:	6f 01       	movw	r12, r30
    2a86:	89 2b       	or	r24, r25
    2a88:	11 f0       	breq	.+4      	; 0x2a8e <dtoa_prf+0x1e0>
    2a8a:	13 2f       	mov	r17, r19
    2a8c:	0a c0       	rjmp	.+20     	; 0x2aa2 <dtoa_prf+0x1f4>
    2a8e:	f6 01       	movw	r30, r12
    2a90:	13 2f       	mov	r17, r19
    2a92:	80 e3       	ldi	r24, 0x30	; 48
    2a94:	02 c0       	rjmp	.+4      	; 0x2a9a <dtoa_prf+0x1ec>
    2a96:	81 93       	st	Z+, r24
    2a98:	11 50       	subi	r17, 0x01	; 1
    2a9a:	11 23       	and	r17, r17
    2a9c:	e1 f7       	brne	.-8      	; 0x2a96 <dtoa_prf+0x1e8>
    2a9e:	c3 0e       	add	r12, r19
    2aa0:	d1 1c       	adc	r13, r1
    2aa2:	09 2d       	mov	r16, r9
    2aa4:	06 0f       	add	r16, r22
    2aa6:	ba 80       	ldd	r11, Y+2	; 0x02
    2aa8:	90 e1       	ldi	r25, 0x10	; 16
    2aaa:	89 2e       	mov	r8, r25
    2aac:	91 2c       	mov	r9, r1
    2aae:	8e 20       	and	r8, r14
    2ab0:	9f 20       	and	r9, r15
    2ab2:	e4 fe       	sbrs	r14, 4
    2ab4:	04 c0       	rjmp	.+8      	; 0x2abe <dtoa_prf+0x210>
    2ab6:	f1 e3       	ldi	r31, 0x31	; 49
    2ab8:	bf 16       	cp	r11, r31
    2aba:	09 f4       	brne	.+2      	; 0x2abe <dtoa_prf+0x210>
    2abc:	01 50       	subi	r16, 0x01	; 1
    2abe:	10 16       	cp	r1, r16
    2ac0:	14 f0       	brlt	.+4      	; 0x2ac6 <dtoa_prf+0x218>
    2ac2:	01 e0       	ldi	r16, 0x01	; 1
    2ac4:	03 c0       	rjmp	.+6      	; 0x2acc <dtoa_prf+0x21e>
    2ac6:	09 30       	cpi	r16, 0x09	; 9
    2ac8:	08 f0       	brcs	.+2      	; 0x2acc <dtoa_prf+0x21e>
    2aca:	08 e0       	ldi	r16, 0x08	; 8
    2acc:	9b 01       	movw	r18, r22
    2ace:	77 ff       	sbrs	r23, 7
    2ad0:	02 c0       	rjmp	.+4      	; 0x2ad6 <dtoa_prf+0x228>
    2ad2:	20 e0       	ldi	r18, 0x00	; 0
    2ad4:	30 e0       	ldi	r19, 0x00	; 0
    2ad6:	cb 01       	movw	r24, r22
    2ad8:	01 96       	adiw	r24, 0x01	; 1
    2ada:	82 1b       	sub	r24, r18
    2adc:	93 0b       	sbc	r25, r19
    2ade:	fe 01       	movw	r30, r28
    2ae0:	31 96       	adiw	r30, 0x01	; 1
    2ae2:	e8 0f       	add	r30, r24
    2ae4:	f9 1f       	adc	r31, r25
    2ae6:	8e e2       	ldi	r24, 0x2E	; 46
    2ae8:	f8 2e       	mov	r15, r24
    2aea:	3b 01       	movw	r6, r22
    2aec:	60 1a       	sub	r6, r16
    2aee:	71 08       	sbc	r7, r1
    2af0:	8a 2d       	mov	r24, r10
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	44 27       	eor	r20, r20
    2af6:	55 27       	eor	r21, r21
    2af8:	48 1b       	sub	r20, r24
    2afa:	59 0b       	sbc	r21, r25
    2afc:	8f ef       	ldi	r24, 0xFF	; 255
    2afe:	2f 3f       	cpi	r18, 0xFF	; 255
    2b00:	38 07       	cpc	r19, r24
    2b02:	19 f4       	brne	.+6      	; 0x2b0a <dtoa_prf+0x25c>
    2b04:	d6 01       	movw	r26, r12
    2b06:	fd 92       	st	X+, r15
    2b08:	6d 01       	movw	r12, r26
    2b0a:	62 17       	cp	r22, r18
    2b0c:	73 07       	cpc	r23, r19
    2b0e:	2c f0       	brlt	.+10     	; 0x2b1a <dtoa_prf+0x26c>
    2b10:	62 16       	cp	r6, r18
    2b12:	73 06       	cpc	r7, r19
    2b14:	14 f4       	brge	.+4      	; 0x2b1a <dtoa_prf+0x26c>
    2b16:	80 81       	ld	r24, Z
    2b18:	01 c0       	rjmp	.+2      	; 0x2b1c <dtoa_prf+0x26e>
    2b1a:	80 e3       	ldi	r24, 0x30	; 48
    2b1c:	21 50       	subi	r18, 0x01	; 1
    2b1e:	30 40       	sbci	r19, 0x00	; 0
    2b20:	31 96       	adiw	r30, 0x01	; 1
    2b22:	24 17       	cp	r18, r20
    2b24:	35 07       	cpc	r19, r21
    2b26:	24 f0       	brlt	.+8      	; 0x2b30 <dtoa_prf+0x282>
    2b28:	d6 01       	movw	r26, r12
    2b2a:	8d 93       	st	X+, r24
    2b2c:	6d 01       	movw	r12, r26
    2b2e:	e6 cf       	rjmp	.-52     	; 0x2afc <dtoa_prf+0x24e>
    2b30:	26 17       	cp	r18, r22
    2b32:	37 07       	cpc	r19, r23
    2b34:	49 f4       	brne	.+18     	; 0x2b48 <dtoa_prf+0x29a>
    2b36:	b5 e3       	ldi	r27, 0x35	; 53
    2b38:	bb 15       	cp	r27, r11
    2b3a:	28 f0       	brcs	.+10     	; 0x2b46 <dtoa_prf+0x298>
    2b3c:	bb 16       	cp	r11, r27
    2b3e:	21 f4       	brne	.+8      	; 0x2b48 <dtoa_prf+0x29a>
    2b40:	81 14       	cp	r8, r1
    2b42:	91 04       	cpc	r9, r1
    2b44:	09 f4       	brne	.+2      	; 0x2b48 <dtoa_prf+0x29a>
    2b46:	81 e3       	ldi	r24, 0x31	; 49
    2b48:	f6 01       	movw	r30, r12
    2b4a:	81 93       	st	Z+, r24
    2b4c:	d6 01       	movw	r26, r12
    2b4e:	81 2f       	mov	r24, r17
    2b50:	90 e2       	ldi	r25, 0x20	; 32
    2b52:	02 c0       	rjmp	.+4      	; 0x2b58 <dtoa_prf+0x2aa>
    2b54:	9c 93       	st	X, r25
    2b56:	81 50       	subi	r24, 0x01	; 1
    2b58:	11 96       	adiw	r26, 0x01	; 1
    2b5a:	88 23       	and	r24, r24
    2b5c:	d9 f7       	brne	.-10     	; 0x2b54 <dtoa_prf+0x2a6>
    2b5e:	e1 0f       	add	r30, r17
    2b60:	f1 1d       	adc	r31, r1
    2b62:	10 82       	st	Z, r1
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	c9 01       	movw	r24, r18
    2b6a:	29 96       	adiw	r28, 0x09	; 9
    2b6c:	ee e0       	ldi	r30, 0x0E	; 14
    2b6e:	0c 94 0d 14 	jmp	0x281a	; 0x281a <__epilogue_restores__+0x8>

00002b72 <__ftoa_engine>:
    2b72:	28 30       	cpi	r18, 0x08	; 8
    2b74:	08 f0       	brcs	.+2      	; 0x2b78 <__ftoa_engine+0x6>
    2b76:	27 e0       	ldi	r18, 0x07	; 7
    2b78:	33 27       	eor	r19, r19
    2b7a:	da 01       	movw	r26, r20
    2b7c:	99 0f       	add	r25, r25
    2b7e:	31 1d       	adc	r19, r1
    2b80:	87 fd       	sbrc	r24, 7
    2b82:	91 60       	ori	r25, 0x01	; 1
    2b84:	00 96       	adiw	r24, 0x00	; 0
    2b86:	61 05       	cpc	r22, r1
    2b88:	71 05       	cpc	r23, r1
    2b8a:	39 f4       	brne	.+14     	; 0x2b9a <__ftoa_engine+0x28>
    2b8c:	32 60       	ori	r19, 0x02	; 2
    2b8e:	2e 5f       	subi	r18, 0xFE	; 254
    2b90:	3d 93       	st	X+, r19
    2b92:	30 e3       	ldi	r19, 0x30	; 48
    2b94:	2a 95       	dec	r18
    2b96:	e1 f7       	brne	.-8      	; 0x2b90 <__ftoa_engine+0x1e>
    2b98:	08 95       	ret
    2b9a:	9f 3f       	cpi	r25, 0xFF	; 255
    2b9c:	30 f0       	brcs	.+12     	; 0x2baa <__ftoa_engine+0x38>
    2b9e:	80 38       	cpi	r24, 0x80	; 128
    2ba0:	71 05       	cpc	r23, r1
    2ba2:	61 05       	cpc	r22, r1
    2ba4:	09 f0       	breq	.+2      	; 0x2ba8 <__ftoa_engine+0x36>
    2ba6:	3c 5f       	subi	r19, 0xFC	; 252
    2ba8:	3c 5f       	subi	r19, 0xFC	; 252
    2baa:	3d 93       	st	X+, r19
    2bac:	91 30       	cpi	r25, 0x01	; 1
    2bae:	08 f0       	brcs	.+2      	; 0x2bb2 <__ftoa_engine+0x40>
    2bb0:	80 68       	ori	r24, 0x80	; 128
    2bb2:	91 1d       	adc	r25, r1
    2bb4:	df 93       	push	r29
    2bb6:	cf 93       	push	r28
    2bb8:	1f 93       	push	r17
    2bba:	0f 93       	push	r16
    2bbc:	ff 92       	push	r15
    2bbe:	ef 92       	push	r14
    2bc0:	19 2f       	mov	r17, r25
    2bc2:	98 7f       	andi	r25, 0xF8	; 248
    2bc4:	96 95       	lsr	r25
    2bc6:	e9 2f       	mov	r30, r25
    2bc8:	96 95       	lsr	r25
    2bca:	96 95       	lsr	r25
    2bcc:	e9 0f       	add	r30, r25
    2bce:	ff 27       	eor	r31, r31
    2bd0:	e2 55       	subi	r30, 0x52	; 82
    2bd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd4:	99 27       	eor	r25, r25
    2bd6:	33 27       	eor	r19, r19
    2bd8:	ee 24       	eor	r14, r14
    2bda:	ff 24       	eor	r15, r15
    2bdc:	a7 01       	movw	r20, r14
    2bde:	e7 01       	movw	r28, r14
    2be0:	05 90       	lpm	r0, Z+
    2be2:	08 94       	sec
    2be4:	07 94       	ror	r0
    2be6:	28 f4       	brcc	.+10     	; 0x2bf2 <__ftoa_engine+0x80>
    2be8:	36 0f       	add	r19, r22
    2bea:	e7 1e       	adc	r14, r23
    2bec:	f8 1e       	adc	r15, r24
    2bee:	49 1f       	adc	r20, r25
    2bf0:	51 1d       	adc	r21, r1
    2bf2:	66 0f       	add	r22, r22
    2bf4:	77 1f       	adc	r23, r23
    2bf6:	88 1f       	adc	r24, r24
    2bf8:	99 1f       	adc	r25, r25
    2bfa:	06 94       	lsr	r0
    2bfc:	a1 f7       	brne	.-24     	; 0x2be6 <__ftoa_engine+0x74>
    2bfe:	05 90       	lpm	r0, Z+
    2c00:	07 94       	ror	r0
    2c02:	28 f4       	brcc	.+10     	; 0x2c0e <__ftoa_engine+0x9c>
    2c04:	e7 0e       	add	r14, r23
    2c06:	f8 1e       	adc	r15, r24
    2c08:	49 1f       	adc	r20, r25
    2c0a:	56 1f       	adc	r21, r22
    2c0c:	c1 1d       	adc	r28, r1
    2c0e:	77 0f       	add	r23, r23
    2c10:	88 1f       	adc	r24, r24
    2c12:	99 1f       	adc	r25, r25
    2c14:	66 1f       	adc	r22, r22
    2c16:	06 94       	lsr	r0
    2c18:	a1 f7       	brne	.-24     	; 0x2c02 <__ftoa_engine+0x90>
    2c1a:	05 90       	lpm	r0, Z+
    2c1c:	07 94       	ror	r0
    2c1e:	28 f4       	brcc	.+10     	; 0x2c2a <__ftoa_engine+0xb8>
    2c20:	f8 0e       	add	r15, r24
    2c22:	49 1f       	adc	r20, r25
    2c24:	56 1f       	adc	r21, r22
    2c26:	c7 1f       	adc	r28, r23
    2c28:	d1 1d       	adc	r29, r1
    2c2a:	88 0f       	add	r24, r24
    2c2c:	99 1f       	adc	r25, r25
    2c2e:	66 1f       	adc	r22, r22
    2c30:	77 1f       	adc	r23, r23
    2c32:	06 94       	lsr	r0
    2c34:	a1 f7       	brne	.-24     	; 0x2c1e <__ftoa_engine+0xac>
    2c36:	05 90       	lpm	r0, Z+
    2c38:	07 94       	ror	r0
    2c3a:	20 f4       	brcc	.+8      	; 0x2c44 <__ftoa_engine+0xd2>
    2c3c:	49 0f       	add	r20, r25
    2c3e:	56 1f       	adc	r21, r22
    2c40:	c7 1f       	adc	r28, r23
    2c42:	d8 1f       	adc	r29, r24
    2c44:	99 0f       	add	r25, r25
    2c46:	66 1f       	adc	r22, r22
    2c48:	77 1f       	adc	r23, r23
    2c4a:	88 1f       	adc	r24, r24
    2c4c:	06 94       	lsr	r0
    2c4e:	a9 f7       	brne	.-22     	; 0x2c3a <__ftoa_engine+0xc8>
    2c50:	84 91       	lpm	r24, Z+
    2c52:	10 95       	com	r17
    2c54:	17 70       	andi	r17, 0x07	; 7
    2c56:	41 f0       	breq	.+16     	; 0x2c68 <__ftoa_engine+0xf6>
    2c58:	d6 95       	lsr	r29
    2c5a:	c7 95       	ror	r28
    2c5c:	57 95       	ror	r21
    2c5e:	47 95       	ror	r20
    2c60:	f7 94       	ror	r15
    2c62:	e7 94       	ror	r14
    2c64:	1a 95       	dec	r17
    2c66:	c1 f7       	brne	.-16     	; 0x2c58 <__ftoa_engine+0xe6>
    2c68:	e4 e5       	ldi	r30, 0x54	; 84
    2c6a:	f0 e0       	ldi	r31, 0x00	; 0
    2c6c:	68 94       	set
    2c6e:	15 90       	lpm	r1, Z+
    2c70:	15 91       	lpm	r17, Z+
    2c72:	35 91       	lpm	r19, Z+
    2c74:	65 91       	lpm	r22, Z+
    2c76:	95 91       	lpm	r25, Z+
    2c78:	05 90       	lpm	r0, Z+
    2c7a:	7f e2       	ldi	r23, 0x2F	; 47
    2c7c:	73 95       	inc	r23
    2c7e:	e1 18       	sub	r14, r1
    2c80:	f1 0a       	sbc	r15, r17
    2c82:	43 0b       	sbc	r20, r19
    2c84:	56 0b       	sbc	r21, r22
    2c86:	c9 0b       	sbc	r28, r25
    2c88:	d0 09       	sbc	r29, r0
    2c8a:	c0 f7       	brcc	.-16     	; 0x2c7c <__ftoa_engine+0x10a>
    2c8c:	e1 0c       	add	r14, r1
    2c8e:	f1 1e       	adc	r15, r17
    2c90:	43 1f       	adc	r20, r19
    2c92:	56 1f       	adc	r21, r22
    2c94:	c9 1f       	adc	r28, r25
    2c96:	d0 1d       	adc	r29, r0
    2c98:	7e f4       	brtc	.+30     	; 0x2cb8 <__ftoa_engine+0x146>
    2c9a:	70 33       	cpi	r23, 0x30	; 48
    2c9c:	11 f4       	brne	.+4      	; 0x2ca2 <__ftoa_engine+0x130>
    2c9e:	8a 95       	dec	r24
    2ca0:	e6 cf       	rjmp	.-52     	; 0x2c6e <__ftoa_engine+0xfc>
    2ca2:	e8 94       	clt
    2ca4:	01 50       	subi	r16, 0x01	; 1
    2ca6:	30 f0       	brcs	.+12     	; 0x2cb4 <__ftoa_engine+0x142>
    2ca8:	08 0f       	add	r16, r24
    2caa:	0a f4       	brpl	.+2      	; 0x2cae <__ftoa_engine+0x13c>
    2cac:	00 27       	eor	r16, r16
    2cae:	02 17       	cp	r16, r18
    2cb0:	08 f4       	brcc	.+2      	; 0x2cb4 <__ftoa_engine+0x142>
    2cb2:	20 2f       	mov	r18, r16
    2cb4:	23 95       	inc	r18
    2cb6:	02 2f       	mov	r16, r18
    2cb8:	7a 33       	cpi	r23, 0x3A	; 58
    2cba:	28 f0       	brcs	.+10     	; 0x2cc6 <__ftoa_engine+0x154>
    2cbc:	79 e3       	ldi	r23, 0x39	; 57
    2cbe:	7d 93       	st	X+, r23
    2cc0:	2a 95       	dec	r18
    2cc2:	e9 f7       	brne	.-6      	; 0x2cbe <__ftoa_engine+0x14c>
    2cc4:	10 c0       	rjmp	.+32     	; 0x2ce6 <__ftoa_engine+0x174>
    2cc6:	7d 93       	st	X+, r23
    2cc8:	2a 95       	dec	r18
    2cca:	89 f6       	brne	.-94     	; 0x2c6e <__ftoa_engine+0xfc>
    2ccc:	06 94       	lsr	r0
    2cce:	97 95       	ror	r25
    2cd0:	67 95       	ror	r22
    2cd2:	37 95       	ror	r19
    2cd4:	17 95       	ror	r17
    2cd6:	17 94       	ror	r1
    2cd8:	e1 18       	sub	r14, r1
    2cda:	f1 0a       	sbc	r15, r17
    2cdc:	43 0b       	sbc	r20, r19
    2cde:	56 0b       	sbc	r21, r22
    2ce0:	c9 0b       	sbc	r28, r25
    2ce2:	d0 09       	sbc	r29, r0
    2ce4:	98 f0       	brcs	.+38     	; 0x2d0c <__ftoa_engine+0x19a>
    2ce6:	23 95       	inc	r18
    2ce8:	7e 91       	ld	r23, -X
    2cea:	73 95       	inc	r23
    2cec:	7a 33       	cpi	r23, 0x3A	; 58
    2cee:	08 f0       	brcs	.+2      	; 0x2cf2 <__ftoa_engine+0x180>
    2cf0:	70 e3       	ldi	r23, 0x30	; 48
    2cf2:	7c 93       	st	X, r23
    2cf4:	20 13       	cpse	r18, r16
    2cf6:	b8 f7       	brcc	.-18     	; 0x2ce6 <__ftoa_engine+0x174>
    2cf8:	7e 91       	ld	r23, -X
    2cfa:	70 61       	ori	r23, 0x10	; 16
    2cfc:	7d 93       	st	X+, r23
    2cfe:	30 f0       	brcs	.+12     	; 0x2d0c <__ftoa_engine+0x19a>
    2d00:	83 95       	inc	r24
    2d02:	71 e3       	ldi	r23, 0x31	; 49
    2d04:	7d 93       	st	X+, r23
    2d06:	70 e3       	ldi	r23, 0x30	; 48
    2d08:	2a 95       	dec	r18
    2d0a:	e1 f7       	brne	.-8      	; 0x2d04 <__ftoa_engine+0x192>
    2d0c:	11 24       	eor	r1, r1
    2d0e:	ef 90       	pop	r14
    2d10:	ff 90       	pop	r15
    2d12:	0f 91       	pop	r16
    2d14:	1f 91       	pop	r17
    2d16:	cf 91       	pop	r28
    2d18:	df 91       	pop	r29
    2d1a:	99 27       	eor	r25, r25
    2d1c:	87 fd       	sbrc	r24, 7
    2d1e:	90 95       	com	r25
    2d20:	08 95       	ret

00002d22 <_exit>:
    2d22:	f8 94       	cli

00002d24 <__stop_program>:
    2d24:	ff cf       	rjmp	.-2      	; 0x2d24 <__stop_program>
