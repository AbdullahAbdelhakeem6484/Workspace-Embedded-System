Archive member included because of file (symbol)

c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./croutine.o (__do_clear_bss)
c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                              ./queue.o (memcpy)
c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              ./tasks.o (memset)
c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                              ./tasks.o (strncpy)

Allocating common symbols
Common symbol       size              file

TaskHandler         0x2               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_prog.o
LOAD ./croutine.o
LOAD ./heap_1.o
LOAD ./list.o
LOAD ./main.o
LOAD ./port.o
LOAD ./queue.o
LOAD ./tasks.o
LOAD ./timers.o
LOAD c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x3068
 *(.vectors)
 .vectors       0x00000000       0x54 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO_prog.o
 .text          0x00000092        0x0 ./croutine.o
 .text          0x00000092        0x0 ./heap_1.o
 .text          0x00000092        0x0 ./list.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 ./port.o
 .text          0x00000092        0x0 ./queue.o
 .text          0x00000092        0x0 ./tasks.o
 .text          0x00000092        0x0 ./timers.o
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .text          0x00000092        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_voidSetPinDir
                0x00000092      0x1c6 ./DIO_prog.o
                0x00000092                DIO_voidSetPinDir
 .text.DIO_voidSetPinValue
                0x00000258      0x1c6 ./DIO_prog.o
                0x00000258                DIO_voidSetPinValue
 .text.DIO_voidTogglePinValue
                0x0000041e       0xfa ./DIO_prog.o
                0x0000041e                DIO_voidTogglePinValue
 .text.DIO_u8GetPinValue
                0x00000518      0x104 ./DIO_prog.o
                0x00000518                DIO_u8GetPinValue
 .text.xCoRoutineCreate
                0x0000061c      0x13e ./croutine.o
                0x0000061c                xCoRoutineCreate
 .text.vCoRoutineAddToDelayedList
                0x0000075a       0xf8 ./croutine.o
                0x0000075a                vCoRoutineAddToDelayedList
 .text.prvCheckPendingReadyList
                0x00000852       0x9a ./croutine.o
 .text.prvCheckDelayedList
                0x000008ec      0x1da ./croutine.o
 .text.vCoRoutineSchedule
                0x00000ac6      0x100 ./croutine.o
                0x00000ac6                vCoRoutineSchedule
 .text.prvInitialiseCoRoutineLists
                0x00000bc6       0x78 ./croutine.o
 .text.xCoRoutineRemoveFromEventList
                0x00000c3e       0x70 ./croutine.o
                0x00000c3e                xCoRoutineRemoveFromEventList
 .text.pvPortMalloc
                0x00000cae       0x8c ./heap_1.o
                0x00000cae                pvPortMalloc
 .text.vPortFree
                0x00000d3a       0x18 ./heap_1.o
                0x00000d3a                vPortFree
 .text.vPortInitialiseBlocks
                0x00000d52       0x16 ./heap_1.o
                0x00000d52                vPortInitialiseBlocks
 .text.xPortGetFreeHeapSize
                0x00000d68       0x1e ./heap_1.o
                0x00000d68                xPortGetFreeHeapSize
 .text.vListInitialise
                0x00000d86       0x5c ./list.o
                0x00000d86                vListInitialise
 .text.vListInitialiseItem
                0x00000de2       0x20 ./list.o
                0x00000de2                vListInitialiseItem
 .text.vListInsertEnd
                0x00000e02       0x98 ./list.o
                0x00000e02                vListInsertEnd
 .text.vListInsert
                0x00000e9a       0xf8 ./list.o
                0x00000e9a                vListInsert
 .text.vListRemove
                0x00000f92       0x92 ./list.o
                0x00000f92                vListRemove
 .text.main     0x00001024       0x62 ./main.o
                0x00001024                main
 .text.TaskCode
                0x00001086       0x3c ./main.o
                0x00001086                TaskCode
 .text.pxPortInitialiseStack
                0x000010c2      0x306 ./port.o
                0x000010c2                pxPortInitialiseStack
 .text.xPortStartScheduler
                0x000013c8       0x6a ./port.o
                0x000013c8                xPortStartScheduler
 .text.vPortEndScheduler
                0x00001432        0xe ./port.o
                0x00001432                vPortEndScheduler
 .text.vPortYield
                0x00001440       0xb2 ./port.o
                0x00001440                vPortYield
 .text.vPortYieldFromTick
                0x000014f2       0xb6 ./port.o
                0x000014f2                vPortYieldFromTick
 .text.prvSetupTimerInterrupt
                0x000015a8       0xb8 ./port.o
 .text.__vector_7
                0x00001660       0x54 ./port.o
                0x00001660                __vector_7
 .text.xQueueCreate
                0x000016b4      0x152 ./queue.o
                0x000016b4                xQueueCreate
 .text.xQueueGenericSend
                0x00001806      0x152 ./queue.o
                0x00001806                xQueueGenericSend
 .text.xQueueGenericSendFromISR
                0x00001958       0x9a ./queue.o
                0x00001958                xQueueGenericSendFromISR
 .text.xQueueGenericReceive
                0x000019f2      0x196 ./queue.o
                0x000019f2                xQueueGenericReceive
 .text.xQueueReceiveFromISR
                0x00001b88       0x9e ./queue.o
                0x00001b88                xQueueReceiveFromISR
 .text.uxQueueMessagesWaiting
                0x00001c26       0x30 ./queue.o
                0x00001c26                uxQueueMessagesWaiting
 .text.uxQueueMessagesWaitingFromISR
                0x00001c56       0x26 ./queue.o
                0x00001c56                uxQueueMessagesWaitingFromISR
 .text.vQueueDelete
                0x00001c7c       0x2c ./queue.o
                0x00001c7c                vQueueDelete
 .text.prvCopyDataToQueue
                0x00001ca8      0x12a ./queue.o
 .text.prvCopyDataFromQueue
                0x00001dd2       0x90 ./queue.o
 .text.prvUnlockQueue
                0x00001e62       0xa8 ./queue.o
 .text.prvIsQueueEmpty
                0x00001f0a       0x38 ./queue.o
 .text.xQueueIsQueueEmptyFromISR
                0x00001f42       0x2e ./queue.o
                0x00001f42                xQueueIsQueueEmptyFromISR
 .text.prvIsQueueFull
                0x00001f70       0x3e ./queue.o
 .text.xQueueIsQueueFullFromISR
                0x00001fae       0x34 ./queue.o
                0x00001fae                xQueueIsQueueFullFromISR
 .text.xTaskGenericCreate
                0x00001fe2      0x1e0 ./tasks.o
                0x00001fe2                xTaskGenericCreate
 .text.vTaskDelete
                0x000021c2       0xc6 ./tasks.o
                0x000021c2                vTaskDelete
 .text.vTaskDelayUntil
                0x00002288      0x154 ./tasks.o
                0x00002288                vTaskDelayUntil
 .text.vTaskDelay
                0x000023dc       0x9a ./tasks.o
                0x000023dc                vTaskDelay
 .text.vTaskStartScheduler
                0x00002476       0x76 ./tasks.o
                0x00002476                vTaskStartScheduler
 .text.vTaskEndScheduler
                0x000024ec       0x18 ./tasks.o
                0x000024ec                vTaskEndScheduler
 .text.vTaskSuspendAll
                0x00002504       0x18 ./tasks.o
                0x00002504                vTaskSuspendAll
 .text.xTaskResumeAll
                0x0000251c      0x116 ./tasks.o
                0x0000251c                xTaskResumeAll
 .text.xTaskGetTickCount
                0x00002632       0x48 ./tasks.o
                0x00002632                xTaskGetTickCount
 .text.xTaskGetTickCountFromISR
                0x0000267a       0x44 ./tasks.o
                0x0000267a                xTaskGetTickCountFromISR
 .text.uxTaskGetNumberOfTasks
                0x000026be       0x12 ./tasks.o
                0x000026be                uxTaskGetNumberOfTasks
 .text.vTaskIncrementTick
                0x000026d0      0x234 ./tasks.o
                0x000026d0                vTaskIncrementTick
 .text.vTaskSwitchContext
                0x00002904       0xd8 ./tasks.o
                0x00002904                vTaskSwitchContext
 .text.vTaskPlaceOnEventList
                0x000029dc       0x92 ./tasks.o
                0x000029dc                vTaskPlaceOnEventList
 .text.xTaskRemoveFromEventList
                0x00002a6e       0xd6 ./tasks.o
                0x00002a6e                xTaskRemoveFromEventList
 .text.vTaskSetTimeOutState
                0x00002b44       0x3e ./tasks.o
                0x00002b44                vTaskSetTimeOutState
 .text.xTaskCheckForTimeOut
                0x00002b82      0x122 ./tasks.o
                0x00002b82                xTaskCheckForTimeOut
 .text.vTaskMissedYield
                0x00002ca4       0x14 ./tasks.o
                0x00002ca4                vTaskMissedYield
 .text.prvIdleTask
                0x00002cb8       0x18 ./tasks.o
 .text.prvInitialiseTCBVariables
                0x00002cd0       0xbe ./tasks.o
 .text.prvInitialiseTaskLists
                0x00002d8e       0x80 ./tasks.o
 .text.prvCheckTasksWaitingTermination
                0x00002e0e       0x7c ./tasks.o
 .text.prvAddCurrentTaskToDelayedList
                0x00002e8a       0xd0 ./tasks.o
 .text.prvAllocateTCBAndStack
                0x00002f5a       0xa0 ./tasks.o
 .text.prvDeleteTCB
                0x00002ffa       0x2c ./tasks.o
 .text.libgcc   0x00003026        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00003026        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00003026        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00003026       0x12 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
                0x00003026                memcpy
 .text.avr-libc
                0x00003038        0xe c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00003038                memset
 .text.avr-libc
                0x00003046       0x1e c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
                0x00003046                strncpy
                0x00003064                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00003064        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00003064                exit
                0x00003064                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00003064        0x4 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00003068                _etext = .

.data           0x00800060       0x14 load address 0x00003068
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_prog.o
 .data          0x00800060        0x0 ./croutine.o
 .data          0x00800060        0x0 ./heap_1.o
 .data          0x00800060        0x0 ./list.o
 .data          0x00800060        0xa ./main.o
 .data          0x0080006a        0x0 ./port.o
 .data          0x0080006a        0x0 ./queue.o
 .data          0x0080006a        0x5 ./tasks.o
 .data          0x0080006f        0x0 ./timers.o
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .data          0x0080006f        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.data*)
 .data.xNextTaskUnblockTime
                0x0080006f        0x4 ./tasks.o
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800074                . = ALIGN (0x2)
 *fill*         0x00800073        0x1 00
                0x00800074                _edata = .
                0x00800074                PROVIDE (__data_end, .)

.bss            0x00800074      0x307
                0x00800074                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800074        0x0 ./DIO_prog.o
 .bss           0x00800074        0x0 ./croutine.o
 .bss           0x00800074        0x0 ./heap_1.o
 .bss           0x00800074        0x0 ./list.o
 .bss           0x00800074        0x0 ./main.o
 .bss           0x00800074        0x0 ./port.o
 .bss           0x00800074        0x0 ./queue.o
 .bss           0x00800074        0x0 ./tasks.o
 .bss           0x00800074        0x0 ./timers.o
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memcpy.o)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .bss           0x00800074        0x0 c:/users/fly labs/desktop/imt tools/interfacing/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strncpy.o)
 *(.bss*)
 .bss.pxCurrentCoRoutine
                0x00800074        0x2 ./croutine.o
                0x00800074                pxCurrentCoRoutine
 .bss.uxTopCoRoutineReadyPriority
                0x00800076        0x1 ./croutine.o
 .bss.xCoRoutineTickCount
                0x00800077        0x4 ./croutine.o
 .bss.xLastTickCount
                0x0080007b        0x4 ./croutine.o
 .bss.xPassedTicks
                0x0080007f        0x4 ./croutine.o
 .bss.pxReadyCoRoutineLists
                0x00800083       0x16 ./croutine.o
 .bss.xDelayedCoRoutineList1
                0x00800099        0xb ./croutine.o
 .bss.xDelayedCoRoutineList2
                0x008000a4        0xb ./croutine.o
 .bss.pxDelayedCoRoutineList
                0x008000af        0x2 ./croutine.o
 .bss.pxOverflowDelayedCoRoutineList
                0x008000b1        0x2 ./croutine.o
 .bss.xPendingReadyCoRoutineList
                0x008000b3        0xb ./croutine.o
 .bss.xNextFreeByte
                0x008000be        0x2 ./heap_1.o
 .bss.xHeap     0x008000c0      0x258 ./heap_1.o
 .bss.pxCurrentTCB
                0x00800318        0x2 ./tasks.o
                0x00800318                pxCurrentTCB
 .bss.uxTasksDeleted
                0x0080031a        0x1 ./tasks.o
 .bss.uxCurrentNumberOfTasks
                0x0080031b        0x1 ./tasks.o
 .bss.xTickCount
                0x0080031c        0x4 ./tasks.o
 .bss.uxTopUsedPriority
                0x00800320        0x1 ./tasks.o
 .bss.uxTopReadyPriority
                0x00800321        0x1 ./tasks.o
 .bss.xSchedulerRunning
                0x00800322        0x1 ./tasks.o
 .bss.uxSchedulerSuspended
                0x00800323        0x1 ./tasks.o
 .bss.uxMissedTicks
                0x00800324        0x1 ./tasks.o
 .bss.xMissedYield
                0x00800325        0x1 ./tasks.o
 .bss.xNumOfOverflows
                0x00800326        0x1 ./tasks.o
 .bss.uxTaskNumber
                0x00800327        0x1 ./tasks.o
 .bss.pxReadyTasksLists
                0x00800328       0x21 ./tasks.o
 .bss.xDelayedTaskList1
                0x00800349        0xb ./tasks.o
 .bss.xDelayedTaskList2
                0x00800354        0xb ./tasks.o
 .bss.pxDelayedTaskList
                0x0080035f        0x2 ./tasks.o
 .bss.pxOverflowDelayedTaskList
                0x00800361        0x2 ./tasks.o
 .bss.xPendingReadyList
                0x00800363        0xb ./tasks.o
 .bss.xTasksWaitingTermination
                0x0080036e        0xb ./tasks.o
 *(COMMON)
 COMMON         0x00800379        0x2 ./main.o
                0x00800379                TaskHandler
                0x0080037b                PROVIDE (__bss_end, .)
                0x00003068                __data_load_start = LOADADDR (.data)
                0x0000307c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080037b        0x0
                0x0080037b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080037b                PROVIDE (__noinit_end, .)
                0x0080037b                _end = .
                0x0080037b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x47e8
 *(.stab)
 .stab          0x00000000      0x600 ./DIO_prog.o
 .stab          0x00000600      0x984 ./croutine.o
                                0xb40 (size before relaxing)
 .stab          0x00000f84      0x354 ./heap_1.o
                                0x624 (size before relaxing)
 .stab          0x000012d8      0x474 ./list.o
                                0x750 (size before relaxing)
 .stab          0x0000174c      0x294 ./main.o
                                0x588 (size before relaxing)
 .stab          0x000019e0      0x834 ./port.o
                                0xb64 (size before relaxing)
 .stab          0x00002214      0xe94 ./queue.o
                               0x11d0 (size before relaxing)
 .stab          0x000030a8     0x1578 ./tasks.o
                               0x17d0 (size before relaxing)
 .stab          0x00004620      0x1c8 ./timers.o
                                0x4c8 (size before relaxing)

.stabstr        0x00000000     0x2c7f
 *(.stabstr)
 .stabstr       0x00000000     0x2c7f ./DIO_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(RTOS_TO_DAY.elf elf32-avr)
LOAD linker stubs
