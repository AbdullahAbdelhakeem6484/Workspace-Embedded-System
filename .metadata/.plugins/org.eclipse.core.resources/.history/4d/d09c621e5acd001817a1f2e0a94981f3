/*
 * main.c
 *
 *  Created on: ??þ/??þ/????
 *      Author: Fly labs
 */

#include"STD_Types.h"
#include"macros.h"
#include "DIO_interface.h"
#include "LCD_interface.h"
#include "keypad_interface.h"
#include "UART_interface.h"
//#include "EEPROM_interface.h"
#include "I2C_interface.h"
#include "SERVO_interface.h"


#include<avr/io.h>

#define F_CPU 12000000
#include<util/delay.h>




int main (void)

{


u8 key_pressed =0;
u8 password[4];
u32 i=0;
u8 initial_password[4],new_password[4];

while(1)
{
	key_pressed =  KEYPAD_u8GetKey();

	 /* if(key_pressed=='#')

	    change();*/

	  if (key_pressed)

	  {

	    password[i++]=key_pressed;

	    LCD_voidWriteCharacter(key_pressed);

	      }

	  if(i==4)

	  {

	    _delay_ms(200);

	    for(u32 j=0;j<4;j++)

	      initial_password[j]=EEPROM_u8ReadByte(0,j);

	    if(!(strncmp(password, initial_password,4)))

	    {

	    	LCD_voidClear();
	    	LCD_voidWriteString("Pass Accepted");
	    	i=0;
	    }

	    else
	    {
	    	LCD_voidClear();
	    	LCD_voidWriteString("Wrong Password");
	    	i=0;
	    }

	  }

	}

	/*void change()

	{

	  int j=0;

	  liquid_crystal_display.clear();

	  liquid_crystal_display.print("Current Password");

	  liquid_crystal_display.setCursor(0,1);

	  while(j<4)

	  {

	    char key=keypad_key.getKey();

	    if(key)

	    {

	      new_password[j++]=key;

	      liquid_crystal_display.print(key);



	    }

	    key=0;

	  }

	  delay(500);




	  if((strncmp(new_password, initial_password, 4)))

	  {

	    liquid_crystal_display.clear();

	    liquid_crystal_display.print("Wrong Password");

	    liquid_crystal_display.setCursor(0,1);

	    liquid_crystal_display.print("Try Again");

	    delay(1000);

	  }

	  else

	  {

	    j=0;

	    liquid_crystal_display.clear();

	    liquid_crystal_display.print("New Password:");

	    liquid_crystal_display.setCursor(0,1);

	    while(j<4)

	    {

	      char key=keypad_key.getKey();

	      if(key)

	      {

	        initial_password[j]=key;

	        liquid_crystal_display.print(key);

	        EEPROM.write(j,key);

	        j++;



	      }

	    }

	    liquid_crystal_display.print("Pass Changed");

	    delay(1000);

	  }

	  liquid_crystal_display.clear();

	  liquid_crystal_display.print("Enter Password");

	  liquid_crystal_display.setCursor(0,1);

	  key_pressed=0;

	}*/



/*
	void initialpassword(){

	  for(int j=0;j<4;j++)

	    EEPROM.write(j, j+49);

	  for(int j=0;j<4;j++)

	    initial_password[j]=EEPROM.read(j);

	}
*/


}




return 0;
}









































/*
void input(char arr[])
{
	u8 i=0,k=0,N[16];
	LCD_voidSendCommand(0xc0);
while(k!='#')
{
k=KEYPAD_u8GetKey();
	if(k && k!='#')
	{
		N[i++]=k;
		LCD_voidWriteCharacter('*');
	}
}
strcpy(arr,N);
arr[i]='\0';
}


int main(void)
{
	u8 P[16]={"1234"}; ///default password

	while(1)
	{ u8 p[16],s[16],j;


	LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("ENTER PASSWORD");
	input(p);

	if(strcmp(p,P)==0)
	{
		LCD_voidInit();
	open();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("ACCESS GRANTED");

	while(KEYPAD_u8GetKey()!='#')
	{}
	}
	else if(strcmp(p,"*")==0)
	{
		LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("CURRENT PASSWORD");
	input(p);

	if(strcmp(p,P)==0)
	{
		LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("NEW PASSWORD");
	input(s);

	LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("CONFIRM PASSWORD");
	input(p);

	if(strcmp(p,s)==0)
	{ j=strlen(s);
	strcpy(P,s);
	P[++j]='\0';
	LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("CHANGE");
	LCD_voidSendCommand(0xc0);
	LCD_voidWriteString("SUCCESSFULL");
	while(KEYPAD_u8GetKey()!='#')
	{}
	}
	else
	{
		LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("CHANGE");
	LCD_voidSendCommand(0xc0);
	LCD_voidWriteString("UNSUCCESSFULL");
	while(KEYPAD_u8GetKey()!='#')
	{}
	}
	}
	else
	{
		LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("WRONG PASSWORD");
	delay_msec(2000);
	}
	}
	else
	{
		LCD_voidInit();
	lock();
	LCD_voidSendCommand(0x80);
	LCD_voidWriteString("ACCESS DENIED");

	}
	}
	}


return 0;
}




*/













/*
int main(void)
{

	//UART_voidInit();
	KEYPAD_voidInit();
	LCD_voidInit();
	I2C_voidInit();
	EEPROM_voidInit();

	DIO_voidSetPinDir(PORT_D,PIN_7,OUTPUT);

	//u8 arr[4];
	u8 a,b,c,d;
	u8 flag=0;

/*for(i=0;i<3;i++)
{*/
/*	LCD_voidWriteString("PLS Enter Pass");

while(1)
{
	a=KEYPAD_u8GetKey();
	LCD_voidSetCursor (1,0);
	LCD_voidWriteCharacter(a);


	b=KEYPAD_u8GetKey();
	LCD_voidSetCursor (1,1);
	LCD_voidWriteCharacter(b);


	c=KEYPAD_u8GetKey();
	LCD_voidSetCursor (1,2);
	LCD_voidWriteCharacter(c);


	d=KEYPAD_u8GetKey();
	LCD_voidSetCursor (1,3);
	LCD_voidWriteCharacter(d);



	 //EEPROM_u8ReadByte(u8 page,u8 location);
	/*	x=EEPROM_u8ReadByte(0,0);
		x=EEPROM_u8ReadByte(0,1);
		x=EEPROM_u8ReadByte(0,2);
		x=EEPROM_u8ReadByte(0,3);*/

/*

		if((a==1)&&(b==2)&&(c==3)&&(d==4))
			{
				LCD_voidSetCursor (1,6);
				LCD_voidWriteString("pass match");
				_delay_ms(500);


				LCD_voidSetCursor (1,6);
				LCD_voidWriteString("open");
				_delay_ms(500);

				SERVO_voidAngle(90);
				_delay_ms(3000);
				SERVO_voidAngle(0);
				flag=1;
				//break;
			}

       /*else if (i<2)
		   {
    	   	   LCD_voidClear();
			   LCD_voidWriteString("Try again: ");
		   }*/
//}




/*
}






return 0;
}

*/








/*

int main(void)
{

	KEYPAD_voidInit();
	 LCD_voidInit();
	 u8 x;


while(1)
{
	x = KEYPAD_u8GetKey();
	LCD_voidSetCursor (0,0);
	LCD_voidWrite(x);
	//LCD_voidWriteCharacter(x);



}



return 0;
}*/
