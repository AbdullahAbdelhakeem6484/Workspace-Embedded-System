
ULTRASONIC__IR_METALDETECTOR_ATMEGA32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001f94  00002028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800168  00800168  00002130  2**0
                  ALLOC
  3 .stab         00000fcc  00000000  00000000  00002130  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a28  00000000  00000000  000030fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  00003b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000210  00000000  00000000  00003ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000268a  00000000  00000000  00003ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000014e0  00000000  00000000  0000657e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012a9  00000000  00000000  00007a5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  00008d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002fe  00000000  00000000  00008ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009aa  00000000  00000000  000091e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009b90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 55 0f 	jmp	0x1eaa	; 0x1eaa <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	aa 36       	cpi	r26, 0x6A	; 106
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e4 e9       	ldi	r30, 0x94	; 148
      78:	ff e1       	ldi	r31, 0x1F	; 31
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 a5 0a 	call	0x154a	; 0x154a <main>
      8a:	0c 94 c8 0f 	jmp	0x1f90	; 0x1f90 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 85 04 	call	0x90a	; 0x90a <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 85 04 	call	0x90a	; 0x90a <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 91 0f 	jmp	0x1f22	; 0x1f22 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 91 0f 	jmp	0x1f22	; 0x1f22 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 ad 0f 	jmp	0x1f5a	; 0x1f5a <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

000008aa <__lesf2>:
     8aa:	a8 e1       	ldi	r26, 0x18	; 24
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 9d 0f 	jmp	0x1f3a	; 0x1f3a <__prologue_saves__+0x18>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	2d 83       	std	Y+5, r18	; 0x05
     8c0:	3e 83       	std	Y+6, r19	; 0x06
     8c2:	4f 83       	std	Y+7, r20	; 0x07
     8c4:	58 87       	std	Y+8, r21	; 0x08
     8c6:	89 e0       	ldi	r24, 0x09	; 9
     8c8:	e8 2e       	mov	r14, r24
     8ca:	f1 2c       	mov	r15, r1
     8cc:	ec 0e       	add	r14, r28
     8ce:	fd 1e       	adc	r15, r29
     8d0:	ce 01       	movw	r24, r28
     8d2:	01 96       	adiw	r24, 0x01	; 1
     8d4:	b7 01       	movw	r22, r14
     8d6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     8da:	8e 01       	movw	r16, r28
     8dc:	0f 5e       	subi	r16, 0xEF	; 239
     8de:	1f 4f       	sbci	r17, 0xFF	; 255
     8e0:	ce 01       	movw	r24, r28
     8e2:	05 96       	adiw	r24, 0x05	; 5
     8e4:	b8 01       	movw	r22, r16
     8e6:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     8ea:	89 85       	ldd	r24, Y+9	; 0x09
     8ec:	82 30       	cpi	r24, 0x02	; 2
     8ee:	40 f0       	brcs	.+16     	; 0x900 <__lesf2+0x56>
     8f0:	89 89       	ldd	r24, Y+17	; 0x11
     8f2:	82 30       	cpi	r24, 0x02	; 2
     8f4:	28 f0       	brcs	.+10     	; 0x900 <__lesf2+0x56>
     8f6:	c7 01       	movw	r24, r14
     8f8:	b8 01       	movw	r22, r16
     8fa:	0e 94 ee 06 	call	0xddc	; 0xddc <__fpcmp_parts_f>
     8fe:	01 c0       	rjmp	.+2      	; 0x902 <__lesf2+0x58>
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	68 96       	adiw	r28, 0x18	; 24
     904:	e6 e0       	ldi	r30, 0x06	; 6
     906:	0c 94 b9 0f 	jmp	0x1f72	; 0x1f72 <__epilogue_restores__+0x18>

0000090a <__fixsfsi>:
     90a:	ac e0       	ldi	r26, 0x0C	; 12
     90c:	b0 e0       	ldi	r27, 0x00	; 0
     90e:	eb e8       	ldi	r30, 0x8B	; 139
     910:	f4 e0       	ldi	r31, 0x04	; 4
     912:	0c 94 a1 0f 	jmp	0x1f42	; 0x1f42 <__prologue_saves__+0x20>
     916:	69 83       	std	Y+1, r22	; 0x01
     918:	7a 83       	std	Y+2, r23	; 0x02
     91a:	8b 83       	std	Y+3, r24	; 0x03
     91c:	9c 83       	std	Y+4, r25	; 0x04
     91e:	ce 01       	movw	r24, r28
     920:	01 96       	adiw	r24, 0x01	; 1
     922:	be 01       	movw	r22, r28
     924:	6b 5f       	subi	r22, 0xFB	; 251
     926:	7f 4f       	sbci	r23, 0xFF	; 255
     928:	0e 94 76 06 	call	0xcec	; 0xcec <__unpack_f>
     92c:	8d 81       	ldd	r24, Y+5	; 0x05
     92e:	82 30       	cpi	r24, 0x02	; 2
     930:	61 f1       	breq	.+88     	; 0x98a <__fixsfsi+0x80>
     932:	82 30       	cpi	r24, 0x02	; 2
     934:	50 f1       	brcs	.+84     	; 0x98a <__fixsfsi+0x80>
     936:	84 30       	cpi	r24, 0x04	; 4
     938:	21 f4       	brne	.+8      	; 0x942 <__fixsfsi+0x38>
     93a:	8e 81       	ldd	r24, Y+6	; 0x06
     93c:	88 23       	and	r24, r24
     93e:	51 f1       	breq	.+84     	; 0x994 <__fixsfsi+0x8a>
     940:	2e c0       	rjmp	.+92     	; 0x99e <__fixsfsi+0x94>
     942:	2f 81       	ldd	r18, Y+7	; 0x07
     944:	38 85       	ldd	r19, Y+8	; 0x08
     946:	37 fd       	sbrc	r19, 7
     948:	20 c0       	rjmp	.+64     	; 0x98a <__fixsfsi+0x80>
     94a:	6e 81       	ldd	r22, Y+6	; 0x06
     94c:	2f 31       	cpi	r18, 0x1F	; 31
     94e:	31 05       	cpc	r19, r1
     950:	1c f0       	brlt	.+6      	; 0x958 <__fixsfsi+0x4e>
     952:	66 23       	and	r22, r22
     954:	f9 f0       	breq	.+62     	; 0x994 <__fixsfsi+0x8a>
     956:	23 c0       	rjmp	.+70     	; 0x99e <__fixsfsi+0x94>
     958:	8e e1       	ldi	r24, 0x1E	; 30
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	82 1b       	sub	r24, r18
     95e:	93 0b       	sbc	r25, r19
     960:	29 85       	ldd	r18, Y+9	; 0x09
     962:	3a 85       	ldd	r19, Y+10	; 0x0a
     964:	4b 85       	ldd	r20, Y+11	; 0x0b
     966:	5c 85       	ldd	r21, Y+12	; 0x0c
     968:	04 c0       	rjmp	.+8      	; 0x972 <__fixsfsi+0x68>
     96a:	56 95       	lsr	r21
     96c:	47 95       	ror	r20
     96e:	37 95       	ror	r19
     970:	27 95       	ror	r18
     972:	8a 95       	dec	r24
     974:	d2 f7       	brpl	.-12     	; 0x96a <__fixsfsi+0x60>
     976:	66 23       	and	r22, r22
     978:	b1 f0       	breq	.+44     	; 0x9a6 <__fixsfsi+0x9c>
     97a:	50 95       	com	r21
     97c:	40 95       	com	r20
     97e:	30 95       	com	r19
     980:	21 95       	neg	r18
     982:	3f 4f       	sbci	r19, 0xFF	; 255
     984:	4f 4f       	sbci	r20, 0xFF	; 255
     986:	5f 4f       	sbci	r21, 0xFF	; 255
     988:	0e c0       	rjmp	.+28     	; 0x9a6 <__fixsfsi+0x9c>
     98a:	20 e0       	ldi	r18, 0x00	; 0
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	09 c0       	rjmp	.+18     	; 0x9a6 <__fixsfsi+0x9c>
     994:	2f ef       	ldi	r18, 0xFF	; 255
     996:	3f ef       	ldi	r19, 0xFF	; 255
     998:	4f ef       	ldi	r20, 0xFF	; 255
     99a:	5f e7       	ldi	r21, 0x7F	; 127
     99c:	04 c0       	rjmp	.+8      	; 0x9a6 <__fixsfsi+0x9c>
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 e0       	ldi	r20, 0x00	; 0
     9a4:	50 e8       	ldi	r21, 0x80	; 128
     9a6:	b9 01       	movw	r22, r18
     9a8:	ca 01       	movw	r24, r20
     9aa:	2c 96       	adiw	r28, 0x0c	; 12
     9ac:	e2 e0       	ldi	r30, 0x02	; 2
     9ae:	0c 94 bd 0f 	jmp	0x1f7a	; 0x1f7a <__epilogue_restores__+0x20>

000009b2 <__floatunsisf>:
     9b2:	a8 e0       	ldi	r26, 0x08	; 8
     9b4:	b0 e0       	ldi	r27, 0x00	; 0
     9b6:	ef ed       	ldi	r30, 0xDF	; 223
     9b8:	f4 e0       	ldi	r31, 0x04	; 4
     9ba:	0c 94 99 0f 	jmp	0x1f32	; 0x1f32 <__prologue_saves__+0x10>
     9be:	7b 01       	movw	r14, r22
     9c0:	8c 01       	movw	r16, r24
     9c2:	61 15       	cp	r22, r1
     9c4:	71 05       	cpc	r23, r1
     9c6:	81 05       	cpc	r24, r1
     9c8:	91 05       	cpc	r25, r1
     9ca:	19 f4       	brne	.+6      	; 0x9d2 <__floatunsisf+0x20>
     9cc:	82 e0       	ldi	r24, 0x02	; 2
     9ce:	89 83       	std	Y+1, r24	; 0x01
     9d0:	60 c0       	rjmp	.+192    	; 0xa92 <__floatunsisf+0xe0>
     9d2:	83 e0       	ldi	r24, 0x03	; 3
     9d4:	89 83       	std	Y+1, r24	; 0x01
     9d6:	8e e1       	ldi	r24, 0x1E	; 30
     9d8:	c8 2e       	mov	r12, r24
     9da:	d1 2c       	mov	r13, r1
     9dc:	dc 82       	std	Y+4, r13	; 0x04
     9de:	cb 82       	std	Y+3, r12	; 0x03
     9e0:	ed 82       	std	Y+5, r14	; 0x05
     9e2:	fe 82       	std	Y+6, r15	; 0x06
     9e4:	0f 83       	std	Y+7, r16	; 0x07
     9e6:	18 87       	std	Y+8, r17	; 0x08
     9e8:	c8 01       	movw	r24, r16
     9ea:	b7 01       	movw	r22, r14
     9ec:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__clzsi2>
     9f0:	fc 01       	movw	r30, r24
     9f2:	31 97       	sbiw	r30, 0x01	; 1
     9f4:	f7 ff       	sbrs	r31, 7
     9f6:	3b c0       	rjmp	.+118    	; 0xa6e <__floatunsisf+0xbc>
     9f8:	22 27       	eor	r18, r18
     9fa:	33 27       	eor	r19, r19
     9fc:	2e 1b       	sub	r18, r30
     9fe:	3f 0b       	sbc	r19, r31
     a00:	57 01       	movw	r10, r14
     a02:	68 01       	movw	r12, r16
     a04:	02 2e       	mov	r0, r18
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__floatunsisf+0x5e>
     a08:	d6 94       	lsr	r13
     a0a:	c7 94       	ror	r12
     a0c:	b7 94       	ror	r11
     a0e:	a7 94       	ror	r10
     a10:	0a 94       	dec	r0
     a12:	d2 f7       	brpl	.-12     	; 0xa08 <__floatunsisf+0x56>
     a14:	40 e0       	ldi	r20, 0x00	; 0
     a16:	50 e0       	ldi	r21, 0x00	; 0
     a18:	60 e0       	ldi	r22, 0x00	; 0
     a1a:	70 e0       	ldi	r23, 0x00	; 0
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	a0 e0       	ldi	r26, 0x00	; 0
     a22:	b0 e0       	ldi	r27, 0x00	; 0
     a24:	04 c0       	rjmp	.+8      	; 0xa2e <__floatunsisf+0x7c>
     a26:	88 0f       	add	r24, r24
     a28:	99 1f       	adc	r25, r25
     a2a:	aa 1f       	adc	r26, r26
     a2c:	bb 1f       	adc	r27, r27
     a2e:	2a 95       	dec	r18
     a30:	d2 f7       	brpl	.-12     	; 0xa26 <__floatunsisf+0x74>
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	a1 09       	sbc	r26, r1
     a36:	b1 09       	sbc	r27, r1
     a38:	8e 21       	and	r24, r14
     a3a:	9f 21       	and	r25, r15
     a3c:	a0 23       	and	r26, r16
     a3e:	b1 23       	and	r27, r17
     a40:	00 97       	sbiw	r24, 0x00	; 0
     a42:	a1 05       	cpc	r26, r1
     a44:	b1 05       	cpc	r27, r1
     a46:	21 f0       	breq	.+8      	; 0xa50 <__floatunsisf+0x9e>
     a48:	41 e0       	ldi	r20, 0x01	; 1
     a4a:	50 e0       	ldi	r21, 0x00	; 0
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	70 e0       	ldi	r23, 0x00	; 0
     a50:	4a 29       	or	r20, r10
     a52:	5b 29       	or	r21, r11
     a54:	6c 29       	or	r22, r12
     a56:	7d 29       	or	r23, r13
     a58:	4d 83       	std	Y+5, r20	; 0x05
     a5a:	5e 83       	std	Y+6, r21	; 0x06
     a5c:	6f 83       	std	Y+7, r22	; 0x07
     a5e:	78 87       	std	Y+8, r23	; 0x08
     a60:	8e e1       	ldi	r24, 0x1E	; 30
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	8e 1b       	sub	r24, r30
     a66:	9f 0b       	sbc	r25, r31
     a68:	9c 83       	std	Y+4, r25	; 0x04
     a6a:	8b 83       	std	Y+3, r24	; 0x03
     a6c:	12 c0       	rjmp	.+36     	; 0xa92 <__floatunsisf+0xe0>
     a6e:	30 97       	sbiw	r30, 0x00	; 0
     a70:	81 f0       	breq	.+32     	; 0xa92 <__floatunsisf+0xe0>
     a72:	0e 2e       	mov	r0, r30
     a74:	04 c0       	rjmp	.+8      	; 0xa7e <__floatunsisf+0xcc>
     a76:	ee 0c       	add	r14, r14
     a78:	ff 1c       	adc	r15, r15
     a7a:	00 1f       	adc	r16, r16
     a7c:	11 1f       	adc	r17, r17
     a7e:	0a 94       	dec	r0
     a80:	d2 f7       	brpl	.-12     	; 0xa76 <__floatunsisf+0xc4>
     a82:	ed 82       	std	Y+5, r14	; 0x05
     a84:	fe 82       	std	Y+6, r15	; 0x06
     a86:	0f 83       	std	Y+7, r16	; 0x07
     a88:	18 87       	std	Y+8, r17	; 0x08
     a8a:	ce 1a       	sub	r12, r30
     a8c:	df 0a       	sbc	r13, r31
     a8e:	dc 82       	std	Y+4, r13	; 0x04
     a90:	cb 82       	std	Y+3, r12	; 0x03
     a92:	1a 82       	std	Y+2, r1	; 0x02
     a94:	ce 01       	movw	r24, r28
     a96:	01 96       	adiw	r24, 0x01	; 1
     a98:	0e 94 a1 05 	call	0xb42	; 0xb42 <__pack_f>
     a9c:	28 96       	adiw	r28, 0x08	; 8
     a9e:	ea e0       	ldi	r30, 0x0A	; 10
     aa0:	0c 94 b5 0f 	jmp	0x1f6a	; 0x1f6a <__epilogue_restores__+0x10>

00000aa4 <__clzsi2>:
     aa4:	ef 92       	push	r14
     aa6:	ff 92       	push	r15
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	7b 01       	movw	r14, r22
     aae:	8c 01       	movw	r16, r24
     ab0:	80 e0       	ldi	r24, 0x00	; 0
     ab2:	e8 16       	cp	r14, r24
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	f8 06       	cpc	r15, r24
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	08 07       	cpc	r16, r24
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	18 07       	cpc	r17, r24
     ac0:	88 f4       	brcc	.+34     	; 0xae4 <__clzsi2+0x40>
     ac2:	8f ef       	ldi	r24, 0xFF	; 255
     ac4:	e8 16       	cp	r14, r24
     ac6:	f1 04       	cpc	r15, r1
     ac8:	01 05       	cpc	r16, r1
     aca:	11 05       	cpc	r17, r1
     acc:	31 f0       	breq	.+12     	; 0xada <__clzsi2+0x36>
     ace:	28 f0       	brcs	.+10     	; 0xada <__clzsi2+0x36>
     ad0:	88 e0       	ldi	r24, 0x08	; 8
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	a0 e0       	ldi	r26, 0x00	; 0
     ad6:	b0 e0       	ldi	r27, 0x00	; 0
     ad8:	17 c0       	rjmp	.+46     	; 0xb08 <__clzsi2+0x64>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	a0 e0       	ldi	r26, 0x00	; 0
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	12 c0       	rjmp	.+36     	; 0xb08 <__clzsi2+0x64>
     ae4:	80 e0       	ldi	r24, 0x00	; 0
     ae6:	e8 16       	cp	r14, r24
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	f8 06       	cpc	r15, r24
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	08 07       	cpc	r16, r24
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	18 07       	cpc	r17, r24
     af4:	28 f0       	brcs	.+10     	; 0xb00 <__clzsi2+0x5c>
     af6:	88 e1       	ldi	r24, 0x18	; 24
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	a0 e0       	ldi	r26, 0x00	; 0
     afc:	b0 e0       	ldi	r27, 0x00	; 0
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <__clzsi2+0x64>
     b00:	80 e1       	ldi	r24, 0x10	; 16
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	a0 e0       	ldi	r26, 0x00	; 0
     b06:	b0 e0       	ldi	r27, 0x00	; 0
     b08:	20 e2       	ldi	r18, 0x20	; 32
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	40 e0       	ldi	r20, 0x00	; 0
     b0e:	50 e0       	ldi	r21, 0x00	; 0
     b10:	28 1b       	sub	r18, r24
     b12:	39 0b       	sbc	r19, r25
     b14:	4a 0b       	sbc	r20, r26
     b16:	5b 0b       	sbc	r21, r27
     b18:	04 c0       	rjmp	.+8      	; 0xb22 <__clzsi2+0x7e>
     b1a:	16 95       	lsr	r17
     b1c:	07 95       	ror	r16
     b1e:	f7 94       	ror	r15
     b20:	e7 94       	ror	r14
     b22:	8a 95       	dec	r24
     b24:	d2 f7       	brpl	.-12     	; 0xb1a <__clzsi2+0x76>
     b26:	f7 01       	movw	r30, r14
     b28:	e8 59       	subi	r30, 0x98	; 152
     b2a:	ff 4f       	sbci	r31, 0xFF	; 255
     b2c:	80 81       	ld	r24, Z
     b2e:	28 1b       	sub	r18, r24
     b30:	31 09       	sbc	r19, r1
     b32:	41 09       	sbc	r20, r1
     b34:	51 09       	sbc	r21, r1
     b36:	c9 01       	movw	r24, r18
     b38:	1f 91       	pop	r17
     b3a:	0f 91       	pop	r16
     b3c:	ff 90       	pop	r15
     b3e:	ef 90       	pop	r14
     b40:	08 95       	ret

00000b42 <__pack_f>:
     b42:	df 92       	push	r13
     b44:	ef 92       	push	r14
     b46:	ff 92       	push	r15
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	fc 01       	movw	r30, r24
     b4e:	e4 80       	ldd	r14, Z+4	; 0x04
     b50:	f5 80       	ldd	r15, Z+5	; 0x05
     b52:	06 81       	ldd	r16, Z+6	; 0x06
     b54:	17 81       	ldd	r17, Z+7	; 0x07
     b56:	d1 80       	ldd	r13, Z+1	; 0x01
     b58:	80 81       	ld	r24, Z
     b5a:	82 30       	cpi	r24, 0x02	; 2
     b5c:	48 f4       	brcc	.+18     	; 0xb70 <__pack_f+0x2e>
     b5e:	80 e0       	ldi	r24, 0x00	; 0
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	a0 e1       	ldi	r26, 0x10	; 16
     b64:	b0 e0       	ldi	r27, 0x00	; 0
     b66:	e8 2a       	or	r14, r24
     b68:	f9 2a       	or	r15, r25
     b6a:	0a 2b       	or	r16, r26
     b6c:	1b 2b       	or	r17, r27
     b6e:	a5 c0       	rjmp	.+330    	; 0xcba <__pack_f+0x178>
     b70:	84 30       	cpi	r24, 0x04	; 4
     b72:	09 f4       	brne	.+2      	; 0xb76 <__pack_f+0x34>
     b74:	9f c0       	rjmp	.+318    	; 0xcb4 <__pack_f+0x172>
     b76:	82 30       	cpi	r24, 0x02	; 2
     b78:	21 f4       	brne	.+8      	; 0xb82 <__pack_f+0x40>
     b7a:	ee 24       	eor	r14, r14
     b7c:	ff 24       	eor	r15, r15
     b7e:	87 01       	movw	r16, r14
     b80:	05 c0       	rjmp	.+10     	; 0xb8c <__pack_f+0x4a>
     b82:	e1 14       	cp	r14, r1
     b84:	f1 04       	cpc	r15, r1
     b86:	01 05       	cpc	r16, r1
     b88:	11 05       	cpc	r17, r1
     b8a:	19 f4       	brne	.+6      	; 0xb92 <__pack_f+0x50>
     b8c:	e0 e0       	ldi	r30, 0x00	; 0
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	96 c0       	rjmp	.+300    	; 0xcbe <__pack_f+0x17c>
     b92:	62 81       	ldd	r22, Z+2	; 0x02
     b94:	73 81       	ldd	r23, Z+3	; 0x03
     b96:	9f ef       	ldi	r25, 0xFF	; 255
     b98:	62 38       	cpi	r22, 0x82	; 130
     b9a:	79 07       	cpc	r23, r25
     b9c:	0c f0       	brlt	.+2      	; 0xba0 <__pack_f+0x5e>
     b9e:	5b c0       	rjmp	.+182    	; 0xc56 <__pack_f+0x114>
     ba0:	22 e8       	ldi	r18, 0x82	; 130
     ba2:	3f ef       	ldi	r19, 0xFF	; 255
     ba4:	26 1b       	sub	r18, r22
     ba6:	37 0b       	sbc	r19, r23
     ba8:	2a 31       	cpi	r18, 0x1A	; 26
     baa:	31 05       	cpc	r19, r1
     bac:	2c f0       	brlt	.+10     	; 0xbb8 <__pack_f+0x76>
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	40 e0       	ldi	r20, 0x00	; 0
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	2a c0       	rjmp	.+84     	; 0xc0c <__pack_f+0xca>
     bb8:	b8 01       	movw	r22, r16
     bba:	a7 01       	movw	r20, r14
     bbc:	02 2e       	mov	r0, r18
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0x86>
     bc0:	76 95       	lsr	r23
     bc2:	67 95       	ror	r22
     bc4:	57 95       	ror	r21
     bc6:	47 95       	ror	r20
     bc8:	0a 94       	dec	r0
     bca:	d2 f7       	brpl	.-12     	; 0xbc0 <__pack_f+0x7e>
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	a0 e0       	ldi	r26, 0x00	; 0
     bd2:	b0 e0       	ldi	r27, 0x00	; 0
     bd4:	04 c0       	rjmp	.+8      	; 0xbde <__pack_f+0x9c>
     bd6:	88 0f       	add	r24, r24
     bd8:	99 1f       	adc	r25, r25
     bda:	aa 1f       	adc	r26, r26
     bdc:	bb 1f       	adc	r27, r27
     bde:	2a 95       	dec	r18
     be0:	d2 f7       	brpl	.-12     	; 0xbd6 <__pack_f+0x94>
     be2:	01 97       	sbiw	r24, 0x01	; 1
     be4:	a1 09       	sbc	r26, r1
     be6:	b1 09       	sbc	r27, r1
     be8:	8e 21       	and	r24, r14
     bea:	9f 21       	and	r25, r15
     bec:	a0 23       	and	r26, r16
     bee:	b1 23       	and	r27, r17
     bf0:	00 97       	sbiw	r24, 0x00	; 0
     bf2:	a1 05       	cpc	r26, r1
     bf4:	b1 05       	cpc	r27, r1
     bf6:	21 f0       	breq	.+8      	; 0xc00 <__pack_f+0xbe>
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	a0 e0       	ldi	r26, 0x00	; 0
     bfe:	b0 e0       	ldi	r27, 0x00	; 0
     c00:	9a 01       	movw	r18, r20
     c02:	ab 01       	movw	r20, r22
     c04:	28 2b       	or	r18, r24
     c06:	39 2b       	or	r19, r25
     c08:	4a 2b       	or	r20, r26
     c0a:	5b 2b       	or	r21, r27
     c0c:	da 01       	movw	r26, r20
     c0e:	c9 01       	movw	r24, r18
     c10:	8f 77       	andi	r24, 0x7F	; 127
     c12:	90 70       	andi	r25, 0x00	; 0
     c14:	a0 70       	andi	r26, 0x00	; 0
     c16:	b0 70       	andi	r27, 0x00	; 0
     c18:	80 34       	cpi	r24, 0x40	; 64
     c1a:	91 05       	cpc	r25, r1
     c1c:	a1 05       	cpc	r26, r1
     c1e:	b1 05       	cpc	r27, r1
     c20:	39 f4       	brne	.+14     	; 0xc30 <__pack_f+0xee>
     c22:	27 ff       	sbrs	r18, 7
     c24:	09 c0       	rjmp	.+18     	; 0xc38 <__pack_f+0xf6>
     c26:	20 5c       	subi	r18, 0xC0	; 192
     c28:	3f 4f       	sbci	r19, 0xFF	; 255
     c2a:	4f 4f       	sbci	r20, 0xFF	; 255
     c2c:	5f 4f       	sbci	r21, 0xFF	; 255
     c2e:	04 c0       	rjmp	.+8      	; 0xc38 <__pack_f+0xf6>
     c30:	21 5c       	subi	r18, 0xC1	; 193
     c32:	3f 4f       	sbci	r19, 0xFF	; 255
     c34:	4f 4f       	sbci	r20, 0xFF	; 255
     c36:	5f 4f       	sbci	r21, 0xFF	; 255
     c38:	e0 e0       	ldi	r30, 0x00	; 0
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	20 30       	cpi	r18, 0x00	; 0
     c3e:	a0 e0       	ldi	r26, 0x00	; 0
     c40:	3a 07       	cpc	r19, r26
     c42:	a0 e0       	ldi	r26, 0x00	; 0
     c44:	4a 07       	cpc	r20, r26
     c46:	a0 e4       	ldi	r26, 0x40	; 64
     c48:	5a 07       	cpc	r21, r26
     c4a:	10 f0       	brcs	.+4      	; 0xc50 <__pack_f+0x10e>
     c4c:	e1 e0       	ldi	r30, 0x01	; 1
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	79 01       	movw	r14, r18
     c52:	8a 01       	movw	r16, r20
     c54:	27 c0       	rjmp	.+78     	; 0xca4 <__pack_f+0x162>
     c56:	60 38       	cpi	r22, 0x80	; 128
     c58:	71 05       	cpc	r23, r1
     c5a:	64 f5       	brge	.+88     	; 0xcb4 <__pack_f+0x172>
     c5c:	fb 01       	movw	r30, r22
     c5e:	e1 58       	subi	r30, 0x81	; 129
     c60:	ff 4f       	sbci	r31, 0xFF	; 255
     c62:	d8 01       	movw	r26, r16
     c64:	c7 01       	movw	r24, r14
     c66:	8f 77       	andi	r24, 0x7F	; 127
     c68:	90 70       	andi	r25, 0x00	; 0
     c6a:	a0 70       	andi	r26, 0x00	; 0
     c6c:	b0 70       	andi	r27, 0x00	; 0
     c6e:	80 34       	cpi	r24, 0x40	; 64
     c70:	91 05       	cpc	r25, r1
     c72:	a1 05       	cpc	r26, r1
     c74:	b1 05       	cpc	r27, r1
     c76:	39 f4       	brne	.+14     	; 0xc86 <__pack_f+0x144>
     c78:	e7 fe       	sbrs	r14, 7
     c7a:	0d c0       	rjmp	.+26     	; 0xc96 <__pack_f+0x154>
     c7c:	80 e4       	ldi	r24, 0x40	; 64
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	a0 e0       	ldi	r26, 0x00	; 0
     c82:	b0 e0       	ldi	r27, 0x00	; 0
     c84:	04 c0       	rjmp	.+8      	; 0xc8e <__pack_f+0x14c>
     c86:	8f e3       	ldi	r24, 0x3F	; 63
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	a0 e0       	ldi	r26, 0x00	; 0
     c8c:	b0 e0       	ldi	r27, 0x00	; 0
     c8e:	e8 0e       	add	r14, r24
     c90:	f9 1e       	adc	r15, r25
     c92:	0a 1f       	adc	r16, r26
     c94:	1b 1f       	adc	r17, r27
     c96:	17 ff       	sbrs	r17, 7
     c98:	05 c0       	rjmp	.+10     	; 0xca4 <__pack_f+0x162>
     c9a:	16 95       	lsr	r17
     c9c:	07 95       	ror	r16
     c9e:	f7 94       	ror	r15
     ca0:	e7 94       	ror	r14
     ca2:	31 96       	adiw	r30, 0x01	; 1
     ca4:	87 e0       	ldi	r24, 0x07	; 7
     ca6:	16 95       	lsr	r17
     ca8:	07 95       	ror	r16
     caa:	f7 94       	ror	r15
     cac:	e7 94       	ror	r14
     cae:	8a 95       	dec	r24
     cb0:	d1 f7       	brne	.-12     	; 0xca6 <__pack_f+0x164>
     cb2:	05 c0       	rjmp	.+10     	; 0xcbe <__pack_f+0x17c>
     cb4:	ee 24       	eor	r14, r14
     cb6:	ff 24       	eor	r15, r15
     cb8:	87 01       	movw	r16, r14
     cba:	ef ef       	ldi	r30, 0xFF	; 255
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	6e 2f       	mov	r22, r30
     cc0:	67 95       	ror	r22
     cc2:	66 27       	eor	r22, r22
     cc4:	67 95       	ror	r22
     cc6:	90 2f       	mov	r25, r16
     cc8:	9f 77       	andi	r25, 0x7F	; 127
     cca:	d7 94       	ror	r13
     ccc:	dd 24       	eor	r13, r13
     cce:	d7 94       	ror	r13
     cd0:	8e 2f       	mov	r24, r30
     cd2:	86 95       	lsr	r24
     cd4:	49 2f       	mov	r20, r25
     cd6:	46 2b       	or	r20, r22
     cd8:	58 2f       	mov	r21, r24
     cda:	5d 29       	or	r21, r13
     cdc:	b7 01       	movw	r22, r14
     cde:	ca 01       	movw	r24, r20
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	df 90       	pop	r13
     cea:	08 95       	ret

00000cec <__unpack_f>:
     cec:	fc 01       	movw	r30, r24
     cee:	db 01       	movw	r26, r22
     cf0:	40 81       	ld	r20, Z
     cf2:	51 81       	ldd	r21, Z+1	; 0x01
     cf4:	22 81       	ldd	r18, Z+2	; 0x02
     cf6:	62 2f       	mov	r22, r18
     cf8:	6f 77       	andi	r22, 0x7F	; 127
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	22 1f       	adc	r18, r18
     cfe:	22 27       	eor	r18, r18
     d00:	22 1f       	adc	r18, r18
     d02:	93 81       	ldd	r25, Z+3	; 0x03
     d04:	89 2f       	mov	r24, r25
     d06:	88 0f       	add	r24, r24
     d08:	82 2b       	or	r24, r18
     d0a:	28 2f       	mov	r18, r24
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	99 1f       	adc	r25, r25
     d10:	99 27       	eor	r25, r25
     d12:	99 1f       	adc	r25, r25
     d14:	11 96       	adiw	r26, 0x01	; 1
     d16:	9c 93       	st	X, r25
     d18:	11 97       	sbiw	r26, 0x01	; 1
     d1a:	21 15       	cp	r18, r1
     d1c:	31 05       	cpc	r19, r1
     d1e:	a9 f5       	brne	.+106    	; 0xd8a <__unpack_f+0x9e>
     d20:	41 15       	cp	r20, r1
     d22:	51 05       	cpc	r21, r1
     d24:	61 05       	cpc	r22, r1
     d26:	71 05       	cpc	r23, r1
     d28:	11 f4       	brne	.+4      	; 0xd2e <__unpack_f+0x42>
     d2a:	82 e0       	ldi	r24, 0x02	; 2
     d2c:	37 c0       	rjmp	.+110    	; 0xd9c <__unpack_f+0xb0>
     d2e:	82 e8       	ldi	r24, 0x82	; 130
     d30:	9f ef       	ldi	r25, 0xFF	; 255
     d32:	13 96       	adiw	r26, 0x03	; 3
     d34:	9c 93       	st	X, r25
     d36:	8e 93       	st	-X, r24
     d38:	12 97       	sbiw	r26, 0x02	; 2
     d3a:	9a 01       	movw	r18, r20
     d3c:	ab 01       	movw	r20, r22
     d3e:	67 e0       	ldi	r22, 0x07	; 7
     d40:	22 0f       	add	r18, r18
     d42:	33 1f       	adc	r19, r19
     d44:	44 1f       	adc	r20, r20
     d46:	55 1f       	adc	r21, r21
     d48:	6a 95       	dec	r22
     d4a:	d1 f7       	brne	.-12     	; 0xd40 <__unpack_f+0x54>
     d4c:	83 e0       	ldi	r24, 0x03	; 3
     d4e:	8c 93       	st	X, r24
     d50:	0d c0       	rjmp	.+26     	; 0xd6c <__unpack_f+0x80>
     d52:	22 0f       	add	r18, r18
     d54:	33 1f       	adc	r19, r19
     d56:	44 1f       	adc	r20, r20
     d58:	55 1f       	adc	r21, r21
     d5a:	12 96       	adiw	r26, 0x02	; 2
     d5c:	8d 91       	ld	r24, X+
     d5e:	9c 91       	ld	r25, X
     d60:	13 97       	sbiw	r26, 0x03	; 3
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	13 96       	adiw	r26, 0x03	; 3
     d66:	9c 93       	st	X, r25
     d68:	8e 93       	st	-X, r24
     d6a:	12 97       	sbiw	r26, 0x02	; 2
     d6c:	20 30       	cpi	r18, 0x00	; 0
     d6e:	80 e0       	ldi	r24, 0x00	; 0
     d70:	38 07       	cpc	r19, r24
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	48 07       	cpc	r20, r24
     d76:	80 e4       	ldi	r24, 0x40	; 64
     d78:	58 07       	cpc	r21, r24
     d7a:	58 f3       	brcs	.-42     	; 0xd52 <__unpack_f+0x66>
     d7c:	14 96       	adiw	r26, 0x04	; 4
     d7e:	2d 93       	st	X+, r18
     d80:	3d 93       	st	X+, r19
     d82:	4d 93       	st	X+, r20
     d84:	5c 93       	st	X, r21
     d86:	17 97       	sbiw	r26, 0x07	; 7
     d88:	08 95       	ret
     d8a:	2f 3f       	cpi	r18, 0xFF	; 255
     d8c:	31 05       	cpc	r19, r1
     d8e:	79 f4       	brne	.+30     	; 0xdae <__unpack_f+0xc2>
     d90:	41 15       	cp	r20, r1
     d92:	51 05       	cpc	r21, r1
     d94:	61 05       	cpc	r22, r1
     d96:	71 05       	cpc	r23, r1
     d98:	19 f4       	brne	.+6      	; 0xda0 <__unpack_f+0xb4>
     d9a:	84 e0       	ldi	r24, 0x04	; 4
     d9c:	8c 93       	st	X, r24
     d9e:	08 95       	ret
     da0:	64 ff       	sbrs	r22, 4
     da2:	03 c0       	rjmp	.+6      	; 0xdaa <__unpack_f+0xbe>
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	8c 93       	st	X, r24
     da8:	12 c0       	rjmp	.+36     	; 0xdce <__unpack_f+0xe2>
     daa:	1c 92       	st	X, r1
     dac:	10 c0       	rjmp	.+32     	; 0xdce <__unpack_f+0xe2>
     dae:	2f 57       	subi	r18, 0x7F	; 127
     db0:	30 40       	sbci	r19, 0x00	; 0
     db2:	13 96       	adiw	r26, 0x03	; 3
     db4:	3c 93       	st	X, r19
     db6:	2e 93       	st	-X, r18
     db8:	12 97       	sbiw	r26, 0x02	; 2
     dba:	83 e0       	ldi	r24, 0x03	; 3
     dbc:	8c 93       	st	X, r24
     dbe:	87 e0       	ldi	r24, 0x07	; 7
     dc0:	44 0f       	add	r20, r20
     dc2:	55 1f       	adc	r21, r21
     dc4:	66 1f       	adc	r22, r22
     dc6:	77 1f       	adc	r23, r23
     dc8:	8a 95       	dec	r24
     dca:	d1 f7       	brne	.-12     	; 0xdc0 <__unpack_f+0xd4>
     dcc:	70 64       	ori	r23, 0x40	; 64
     dce:	14 96       	adiw	r26, 0x04	; 4
     dd0:	4d 93       	st	X+, r20
     dd2:	5d 93       	st	X+, r21
     dd4:	6d 93       	st	X+, r22
     dd6:	7c 93       	st	X, r23
     dd8:	17 97       	sbiw	r26, 0x07	; 7
     dda:	08 95       	ret

00000ddc <__fpcmp_parts_f>:
     ddc:	1f 93       	push	r17
     dde:	dc 01       	movw	r26, r24
     de0:	fb 01       	movw	r30, r22
     de2:	9c 91       	ld	r25, X
     de4:	92 30       	cpi	r25, 0x02	; 2
     de6:	08 f4       	brcc	.+2      	; 0xdea <__fpcmp_parts_f+0xe>
     de8:	47 c0       	rjmp	.+142    	; 0xe78 <__fpcmp_parts_f+0x9c>
     dea:	80 81       	ld	r24, Z
     dec:	82 30       	cpi	r24, 0x02	; 2
     dee:	08 f4       	brcc	.+2      	; 0xdf2 <__fpcmp_parts_f+0x16>
     df0:	43 c0       	rjmp	.+134    	; 0xe78 <__fpcmp_parts_f+0x9c>
     df2:	94 30       	cpi	r25, 0x04	; 4
     df4:	51 f4       	brne	.+20     	; 0xe0a <__fpcmp_parts_f+0x2e>
     df6:	11 96       	adiw	r26, 0x01	; 1
     df8:	1c 91       	ld	r17, X
     dfa:	84 30       	cpi	r24, 0x04	; 4
     dfc:	99 f5       	brne	.+102    	; 0xe64 <__fpcmp_parts_f+0x88>
     dfe:	81 81       	ldd	r24, Z+1	; 0x01
     e00:	68 2f       	mov	r22, r24
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	61 1b       	sub	r22, r17
     e06:	71 09       	sbc	r23, r1
     e08:	3f c0       	rjmp	.+126    	; 0xe88 <__fpcmp_parts_f+0xac>
     e0a:	84 30       	cpi	r24, 0x04	; 4
     e0c:	21 f0       	breq	.+8      	; 0xe16 <__fpcmp_parts_f+0x3a>
     e0e:	92 30       	cpi	r25, 0x02	; 2
     e10:	31 f4       	brne	.+12     	; 0xe1e <__fpcmp_parts_f+0x42>
     e12:	82 30       	cpi	r24, 0x02	; 2
     e14:	b9 f1       	breq	.+110    	; 0xe84 <__fpcmp_parts_f+0xa8>
     e16:	81 81       	ldd	r24, Z+1	; 0x01
     e18:	88 23       	and	r24, r24
     e1a:	89 f1       	breq	.+98     	; 0xe7e <__fpcmp_parts_f+0xa2>
     e1c:	2d c0       	rjmp	.+90     	; 0xe78 <__fpcmp_parts_f+0x9c>
     e1e:	11 96       	adiw	r26, 0x01	; 1
     e20:	1c 91       	ld	r17, X
     e22:	11 97       	sbiw	r26, 0x01	; 1
     e24:	82 30       	cpi	r24, 0x02	; 2
     e26:	f1 f0       	breq	.+60     	; 0xe64 <__fpcmp_parts_f+0x88>
     e28:	81 81       	ldd	r24, Z+1	; 0x01
     e2a:	18 17       	cp	r17, r24
     e2c:	d9 f4       	brne	.+54     	; 0xe64 <__fpcmp_parts_f+0x88>
     e2e:	12 96       	adiw	r26, 0x02	; 2
     e30:	2d 91       	ld	r18, X+
     e32:	3c 91       	ld	r19, X
     e34:	13 97       	sbiw	r26, 0x03	; 3
     e36:	82 81       	ldd	r24, Z+2	; 0x02
     e38:	93 81       	ldd	r25, Z+3	; 0x03
     e3a:	82 17       	cp	r24, r18
     e3c:	93 07       	cpc	r25, r19
     e3e:	94 f0       	brlt	.+36     	; 0xe64 <__fpcmp_parts_f+0x88>
     e40:	28 17       	cp	r18, r24
     e42:	39 07       	cpc	r19, r25
     e44:	bc f0       	brlt	.+46     	; 0xe74 <__fpcmp_parts_f+0x98>
     e46:	14 96       	adiw	r26, 0x04	; 4
     e48:	8d 91       	ld	r24, X+
     e4a:	9d 91       	ld	r25, X+
     e4c:	0d 90       	ld	r0, X+
     e4e:	bc 91       	ld	r27, X
     e50:	a0 2d       	mov	r26, r0
     e52:	24 81       	ldd	r18, Z+4	; 0x04
     e54:	35 81       	ldd	r19, Z+5	; 0x05
     e56:	46 81       	ldd	r20, Z+6	; 0x06
     e58:	57 81       	ldd	r21, Z+7	; 0x07
     e5a:	28 17       	cp	r18, r24
     e5c:	39 07       	cpc	r19, r25
     e5e:	4a 07       	cpc	r20, r26
     e60:	5b 07       	cpc	r21, r27
     e62:	18 f4       	brcc	.+6      	; 0xe6a <__fpcmp_parts_f+0x8e>
     e64:	11 23       	and	r17, r17
     e66:	41 f0       	breq	.+16     	; 0xe78 <__fpcmp_parts_f+0x9c>
     e68:	0a c0       	rjmp	.+20     	; 0xe7e <__fpcmp_parts_f+0xa2>
     e6a:	82 17       	cp	r24, r18
     e6c:	93 07       	cpc	r25, r19
     e6e:	a4 07       	cpc	r26, r20
     e70:	b5 07       	cpc	r27, r21
     e72:	40 f4       	brcc	.+16     	; 0xe84 <__fpcmp_parts_f+0xa8>
     e74:	11 23       	and	r17, r17
     e76:	19 f0       	breq	.+6      	; 0xe7e <__fpcmp_parts_f+0xa2>
     e78:	61 e0       	ldi	r22, 0x01	; 1
     e7a:	70 e0       	ldi	r23, 0x00	; 0
     e7c:	05 c0       	rjmp	.+10     	; 0xe88 <__fpcmp_parts_f+0xac>
     e7e:	6f ef       	ldi	r22, 0xFF	; 255
     e80:	7f ef       	ldi	r23, 0xFF	; 255
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <__fpcmp_parts_f+0xac>
     e84:	60 e0       	ldi	r22, 0x00	; 0
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	cb 01       	movw	r24, r22
     e8a:	1f 91       	pop	r17
     e8c:	08 95       	ret

00000e8e <DIO_voidSetPinDir>:

#include <avr/io.h>


void DIO_voidSetPinDir(u8 Port,u8 Pin,u8 Dir)
{
     e8e:	df 93       	push	r29
     e90:	cf 93       	push	r28
     e92:	00 d0       	rcall	.+0      	; 0xe94 <DIO_voidSetPinDir+0x6>
     e94:	00 d0       	rcall	.+0      	; 0xe96 <DIO_voidSetPinDir+0x8>
     e96:	0f 92       	push	r0
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	89 83       	std	Y+1, r24	; 0x01
     e9e:	6a 83       	std	Y+2, r22	; 0x02
     ea0:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
     ea2:	89 81       	ldd	r24, Y+1	; 0x01
     ea4:	28 2f       	mov	r18, r24
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	3d 83       	std	Y+5, r19	; 0x05
     eaa:	2c 83       	std	Y+4, r18	; 0x04
     eac:	8c 81       	ldd	r24, Y+4	; 0x04
     eae:	9d 81       	ldd	r25, Y+5	; 0x05
     eb0:	81 30       	cpi	r24, 0x01	; 1
     eb2:	91 05       	cpc	r25, r1
     eb4:	09 f4       	brne	.+2      	; 0xeb8 <DIO_voidSetPinDir+0x2a>
     eb6:	43 c0       	rjmp	.+134    	; 0xf3e <DIO_voidSetPinDir+0xb0>
     eb8:	2c 81       	ldd	r18, Y+4	; 0x04
     eba:	3d 81       	ldd	r19, Y+5	; 0x05
     ebc:	22 30       	cpi	r18, 0x02	; 2
     ebe:	31 05       	cpc	r19, r1
     ec0:	2c f4       	brge	.+10     	; 0xecc <DIO_voidSetPinDir+0x3e>
     ec2:	8c 81       	ldd	r24, Y+4	; 0x04
     ec4:	9d 81       	ldd	r25, Y+5	; 0x05
     ec6:	00 97       	sbiw	r24, 0x00	; 0
     ec8:	71 f0       	breq	.+28     	; 0xee6 <DIO_voidSetPinDir+0x58>
     eca:	bc c0       	rjmp	.+376    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
     ecc:	2c 81       	ldd	r18, Y+4	; 0x04
     ece:	3d 81       	ldd	r19, Y+5	; 0x05
     ed0:	22 30       	cpi	r18, 0x02	; 2
     ed2:	31 05       	cpc	r19, r1
     ed4:	09 f4       	brne	.+2      	; 0xed8 <DIO_voidSetPinDir+0x4a>
     ed6:	5f c0       	rjmp	.+190    	; 0xf96 <DIO_voidSetPinDir+0x108>
     ed8:	8c 81       	ldd	r24, Y+4	; 0x04
     eda:	9d 81       	ldd	r25, Y+5	; 0x05
     edc:	83 30       	cpi	r24, 0x03	; 3
     ede:	91 05       	cpc	r25, r1
     ee0:	09 f4       	brne	.+2      	; 0xee4 <DIO_voidSetPinDir+0x56>
     ee2:	85 c0       	rjmp	.+266    	; 0xfee <DIO_voidSetPinDir+0x160>
     ee4:	af c0       	rjmp	.+350    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
	{
	case 0:
	    if(Dir == 0)
     ee6:	8b 81       	ldd	r24, Y+3	; 0x03
     ee8:	88 23       	and	r24, r24
     eea:	a9 f4       	brne	.+42     	; 0xf16 <DIO_voidSetPinDir+0x88>
		{
			CLEAR_BIT(DDRA,Pin);
     eec:	aa e3       	ldi	r26, 0x3A	; 58
     eee:	b0 e0       	ldi	r27, 0x00	; 0
     ef0:	ea e3       	ldi	r30, 0x3A	; 58
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	80 81       	ld	r24, Z
     ef6:	48 2f       	mov	r20, r24
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	28 2f       	mov	r18, r24
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	02 2e       	mov	r0, r18
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <DIO_voidSetPinDir+0x7c>
     f06:	88 0f       	add	r24, r24
     f08:	99 1f       	adc	r25, r25
     f0a:	0a 94       	dec	r0
     f0c:	e2 f7       	brpl	.-8      	; 0xf06 <DIO_voidSetPinDir+0x78>
     f0e:	80 95       	com	r24
     f10:	84 23       	and	r24, r20
     f12:	8c 93       	st	X, r24
     f14:	97 c0       	rjmp	.+302    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRA,Pin);
     f16:	aa e3       	ldi	r26, 0x3A	; 58
     f18:	b0 e0       	ldi	r27, 0x00	; 0
     f1a:	ea e3       	ldi	r30, 0x3A	; 58
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	80 81       	ld	r24, Z
     f20:	48 2f       	mov	r20, r24
     f22:	8a 81       	ldd	r24, Y+2	; 0x02
     f24:	28 2f       	mov	r18, r24
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	81 e0       	ldi	r24, 0x01	; 1
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	02 2e       	mov	r0, r18
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <DIO_voidSetPinDir+0xa6>
     f30:	88 0f       	add	r24, r24
     f32:	99 1f       	adc	r25, r25
     f34:	0a 94       	dec	r0
     f36:	e2 f7       	brpl	.-8      	; 0xf30 <DIO_voidSetPinDir+0xa2>
     f38:	84 2b       	or	r24, r20
     f3a:	8c 93       	st	X, r24
     f3c:	83 c0       	rjmp	.+262    	; 0x1044 <DIO_voidSetPinDir+0x1b6>

		}
		break;
	case 1:
		if(Dir == 0)
     f3e:	8b 81       	ldd	r24, Y+3	; 0x03
     f40:	88 23       	and	r24, r24
     f42:	a9 f4       	brne	.+42     	; 0xf6e <DIO_voidSetPinDir+0xe0>
		{
			CLEAR_BIT(DDRB,Pin);
     f44:	a7 e3       	ldi	r26, 0x37	; 55
     f46:	b0 e0       	ldi	r27, 0x00	; 0
     f48:	e7 e3       	ldi	r30, 0x37	; 55
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	48 2f       	mov	r20, r24
     f50:	8a 81       	ldd	r24, Y+2	; 0x02
     f52:	28 2f       	mov	r18, r24
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	02 2e       	mov	r0, r18
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <DIO_voidSetPinDir+0xd4>
     f5e:	88 0f       	add	r24, r24
     f60:	99 1f       	adc	r25, r25
     f62:	0a 94       	dec	r0
     f64:	e2 f7       	brpl	.-8      	; 0xf5e <DIO_voidSetPinDir+0xd0>
     f66:	80 95       	com	r24
     f68:	84 23       	and	r24, r20
     f6a:	8c 93       	st	X, r24
     f6c:	6b c0       	rjmp	.+214    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRB,Pin);
     f6e:	a7 e3       	ldi	r26, 0x37	; 55
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	e7 e3       	ldi	r30, 0x37	; 55
     f74:	f0 e0       	ldi	r31, 0x00	; 0
     f76:	80 81       	ld	r24, Z
     f78:	48 2f       	mov	r20, r24
     f7a:	8a 81       	ldd	r24, Y+2	; 0x02
     f7c:	28 2f       	mov	r18, r24
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	81 e0       	ldi	r24, 0x01	; 1
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	02 2e       	mov	r0, r18
     f86:	02 c0       	rjmp	.+4      	; 0xf8c <DIO_voidSetPinDir+0xfe>
     f88:	88 0f       	add	r24, r24
     f8a:	99 1f       	adc	r25, r25
     f8c:	0a 94       	dec	r0
     f8e:	e2 f7       	brpl	.-8      	; 0xf88 <DIO_voidSetPinDir+0xfa>
     f90:	84 2b       	or	r24, r20
     f92:	8c 93       	st	X, r24
     f94:	57 c0       	rjmp	.+174    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}

		break;
	case 2:
		if(Dir == 0)
     f96:	8b 81       	ldd	r24, Y+3	; 0x03
     f98:	88 23       	and	r24, r24
     f9a:	a9 f4       	brne	.+42     	; 0xfc6 <DIO_voidSetPinDir+0x138>
		{
			CLEAR_BIT(DDRC,Pin);
     f9c:	a4 e3       	ldi	r26, 0x34	; 52
     f9e:	b0 e0       	ldi	r27, 0x00	; 0
     fa0:	e4 e3       	ldi	r30, 0x34	; 52
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	80 81       	ld	r24, Z
     fa6:	48 2f       	mov	r20, r24
     fa8:	8a 81       	ldd	r24, Y+2	; 0x02
     faa:	28 2f       	mov	r18, r24
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	90 e0       	ldi	r25, 0x00	; 0
     fb2:	02 2e       	mov	r0, r18
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <DIO_voidSetPinDir+0x12c>
     fb6:	88 0f       	add	r24, r24
     fb8:	99 1f       	adc	r25, r25
     fba:	0a 94       	dec	r0
     fbc:	e2 f7       	brpl	.-8      	; 0xfb6 <DIO_voidSetPinDir+0x128>
     fbe:	80 95       	com	r24
     fc0:	84 23       	and	r24, r20
     fc2:	8c 93       	st	X, r24
     fc4:	3f c0       	rjmp	.+126    	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRC,Pin);
     fc6:	a4 e3       	ldi	r26, 0x34	; 52
     fc8:	b0 e0       	ldi	r27, 0x00	; 0
     fca:	e4 e3       	ldi	r30, 0x34	; 52
     fcc:	f0 e0       	ldi	r31, 0x00	; 0
     fce:	80 81       	ld	r24, Z
     fd0:	48 2f       	mov	r20, r24
     fd2:	8a 81       	ldd	r24, Y+2	; 0x02
     fd4:	28 2f       	mov	r18, r24
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	81 e0       	ldi	r24, 0x01	; 1
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	02 2e       	mov	r0, r18
     fde:	02 c0       	rjmp	.+4      	; 0xfe4 <DIO_voidSetPinDir+0x156>
     fe0:	88 0f       	add	r24, r24
     fe2:	99 1f       	adc	r25, r25
     fe4:	0a 94       	dec	r0
     fe6:	e2 f7       	brpl	.-8      	; 0xfe0 <DIO_voidSetPinDir+0x152>
     fe8:	84 2b       	or	r24, r20
     fea:	8c 93       	st	X, r24
     fec:	2b c0       	rjmp	.+86     	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}

		break;
	case 3:
		if(Dir == 0)
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	88 23       	and	r24, r24
     ff2:	a9 f4       	brne	.+42     	; 0x101e <DIO_voidSetPinDir+0x190>
		{
			CLEAR_BIT(DDRD,Pin);
     ff4:	a1 e3       	ldi	r26, 0x31	; 49
     ff6:	b0 e0       	ldi	r27, 0x00	; 0
     ff8:	e1 e3       	ldi	r30, 0x31	; 49
     ffa:	f0 e0       	ldi	r31, 0x00	; 0
     ffc:	80 81       	ld	r24, Z
     ffe:	48 2f       	mov	r20, r24
    1000:	8a 81       	ldd	r24, Y+2	; 0x02
    1002:	28 2f       	mov	r18, r24
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	02 2e       	mov	r0, r18
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <DIO_voidSetPinDir+0x184>
    100e:	88 0f       	add	r24, r24
    1010:	99 1f       	adc	r25, r25
    1012:	0a 94       	dec	r0
    1014:	e2 f7       	brpl	.-8      	; 0x100e <DIO_voidSetPinDir+0x180>
    1016:	80 95       	com	r24
    1018:	84 23       	and	r24, r20
    101a:	8c 93       	st	X, r24
    101c:	13 c0       	rjmp	.+38     	; 0x1044 <DIO_voidSetPinDir+0x1b6>
		}
		else
		{
			SET_BIT(DDRD,Pin);
    101e:	a1 e3       	ldi	r26, 0x31	; 49
    1020:	b0 e0       	ldi	r27, 0x00	; 0
    1022:	e1 e3       	ldi	r30, 0x31	; 49
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	80 81       	ld	r24, Z
    1028:	48 2f       	mov	r20, r24
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	28 2f       	mov	r18, r24
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	81 e0       	ldi	r24, 0x01	; 1
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	02 2e       	mov	r0, r18
    1036:	02 c0       	rjmp	.+4      	; 0x103c <DIO_voidSetPinDir+0x1ae>
    1038:	88 0f       	add	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	0a 94       	dec	r0
    103e:	e2 f7       	brpl	.-8      	; 0x1038 <DIO_voidSetPinDir+0x1aa>
    1040:	84 2b       	or	r24, r20
    1042:	8c 93       	st	X, r24
		}
		break;
	}

}
    1044:	0f 90       	pop	r0
    1046:	0f 90       	pop	r0
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	cf 91       	pop	r28
    1050:	df 91       	pop	r29
    1052:	08 95       	ret

00001054 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 Port,u8 Pin,u8 Value)
{
    1054:	df 93       	push	r29
    1056:	cf 93       	push	r28
    1058:	00 d0       	rcall	.+0      	; 0x105a <DIO_voidSetPinValue+0x6>
    105a:	00 d0       	rcall	.+0      	; 0x105c <DIO_voidSetPinValue+0x8>
    105c:	0f 92       	push	r0
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	89 83       	std	Y+1, r24	; 0x01
    1064:	6a 83       	std	Y+2, r22	; 0x02
    1066:	4b 83       	std	Y+3, r20	; 0x03
	switch(Port)
    1068:	89 81       	ldd	r24, Y+1	; 0x01
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	3d 83       	std	Y+5, r19	; 0x05
    1070:	2c 83       	std	Y+4, r18	; 0x04
    1072:	8c 81       	ldd	r24, Y+4	; 0x04
    1074:	9d 81       	ldd	r25, Y+5	; 0x05
    1076:	81 30       	cpi	r24, 0x01	; 1
    1078:	91 05       	cpc	r25, r1
    107a:	09 f4       	brne	.+2      	; 0x107e <DIO_voidSetPinValue+0x2a>
    107c:	43 c0       	rjmp	.+134    	; 0x1104 <DIO_voidSetPinValue+0xb0>
    107e:	2c 81       	ldd	r18, Y+4	; 0x04
    1080:	3d 81       	ldd	r19, Y+5	; 0x05
    1082:	22 30       	cpi	r18, 0x02	; 2
    1084:	31 05       	cpc	r19, r1
    1086:	2c f4       	brge	.+10     	; 0x1092 <DIO_voidSetPinValue+0x3e>
    1088:	8c 81       	ldd	r24, Y+4	; 0x04
    108a:	9d 81       	ldd	r25, Y+5	; 0x05
    108c:	00 97       	sbiw	r24, 0x00	; 0
    108e:	71 f0       	breq	.+28     	; 0x10ac <DIO_voidSetPinValue+0x58>
    1090:	bc c0       	rjmp	.+376    	; 0x120a <DIO_voidSetPinValue+0x1b6>
    1092:	2c 81       	ldd	r18, Y+4	; 0x04
    1094:	3d 81       	ldd	r19, Y+5	; 0x05
    1096:	22 30       	cpi	r18, 0x02	; 2
    1098:	31 05       	cpc	r19, r1
    109a:	09 f4       	brne	.+2      	; 0x109e <DIO_voidSetPinValue+0x4a>
    109c:	5f c0       	rjmp	.+190    	; 0x115c <DIO_voidSetPinValue+0x108>
    109e:	8c 81       	ldd	r24, Y+4	; 0x04
    10a0:	9d 81       	ldd	r25, Y+5	; 0x05
    10a2:	83 30       	cpi	r24, 0x03	; 3
    10a4:	91 05       	cpc	r25, r1
    10a6:	09 f4       	brne	.+2      	; 0x10aa <DIO_voidSetPinValue+0x56>
    10a8:	85 c0       	rjmp	.+266    	; 0x11b4 <DIO_voidSetPinValue+0x160>
    10aa:	af c0       	rjmp	.+350    	; 0x120a <DIO_voidSetPinValue+0x1b6>
	{
	case 0:
		if(Value == 0)
    10ac:	8b 81       	ldd	r24, Y+3	; 0x03
    10ae:	88 23       	and	r24, r24
    10b0:	a9 f4       	brne	.+42     	; 0x10dc <DIO_voidSetPinValue+0x88>
		{
			CLEAR_BIT(PORTA,Pin);
    10b2:	ab e3       	ldi	r26, 0x3B	; 59
    10b4:	b0 e0       	ldi	r27, 0x00	; 0
    10b6:	eb e3       	ldi	r30, 0x3B	; 59
    10b8:	f0 e0       	ldi	r31, 0x00	; 0
    10ba:	80 81       	ld	r24, Z
    10bc:	48 2f       	mov	r20, r24
    10be:	8a 81       	ldd	r24, Y+2	; 0x02
    10c0:	28 2f       	mov	r18, r24
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	02 2e       	mov	r0, r18
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <DIO_voidSetPinValue+0x7c>
    10cc:	88 0f       	add	r24, r24
    10ce:	99 1f       	adc	r25, r25
    10d0:	0a 94       	dec	r0
    10d2:	e2 f7       	brpl	.-8      	; 0x10cc <DIO_voidSetPinValue+0x78>
    10d4:	80 95       	com	r24
    10d6:	84 23       	and	r24, r20
    10d8:	8c 93       	st	X, r24
    10da:	97 c0       	rjmp	.+302    	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTA,Pin);
    10dc:	ab e3       	ldi	r26, 0x3B	; 59
    10de:	b0 e0       	ldi	r27, 0x00	; 0
    10e0:	eb e3       	ldi	r30, 0x3B	; 59
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 81       	ld	r24, Z
    10e6:	48 2f       	mov	r20, r24
    10e8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ea:	28 2f       	mov	r18, r24
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	02 2e       	mov	r0, r18
    10f4:	02 c0       	rjmp	.+4      	; 0x10fa <DIO_voidSetPinValue+0xa6>
    10f6:	88 0f       	add	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	0a 94       	dec	r0
    10fc:	e2 f7       	brpl	.-8      	; 0x10f6 <DIO_voidSetPinValue+0xa2>
    10fe:	84 2b       	or	r24, r20
    1100:	8c 93       	st	X, r24
    1102:	83 c0       	rjmp	.+262    	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 1:
		if(Value == 0)
    1104:	8b 81       	ldd	r24, Y+3	; 0x03
    1106:	88 23       	and	r24, r24
    1108:	a9 f4       	brne	.+42     	; 0x1134 <DIO_voidSetPinValue+0xe0>
		{
			CLEAR_BIT(PORTB,Pin);
    110a:	a8 e3       	ldi	r26, 0x38	; 56
    110c:	b0 e0       	ldi	r27, 0x00	; 0
    110e:	e8 e3       	ldi	r30, 0x38	; 56
    1110:	f0 e0       	ldi	r31, 0x00	; 0
    1112:	80 81       	ld	r24, Z
    1114:	48 2f       	mov	r20, r24
    1116:	8a 81       	ldd	r24, Y+2	; 0x02
    1118:	28 2f       	mov	r18, r24
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	90 e0       	ldi	r25, 0x00	; 0
    1120:	02 2e       	mov	r0, r18
    1122:	02 c0       	rjmp	.+4      	; 0x1128 <DIO_voidSetPinValue+0xd4>
    1124:	88 0f       	add	r24, r24
    1126:	99 1f       	adc	r25, r25
    1128:	0a 94       	dec	r0
    112a:	e2 f7       	brpl	.-8      	; 0x1124 <DIO_voidSetPinValue+0xd0>
    112c:	80 95       	com	r24
    112e:	84 23       	and	r24, r20
    1130:	8c 93       	st	X, r24
    1132:	6b c0       	rjmp	.+214    	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTB,Pin);
    1134:	a8 e3       	ldi	r26, 0x38	; 56
    1136:	b0 e0       	ldi	r27, 0x00	; 0
    1138:	e8 e3       	ldi	r30, 0x38	; 56
    113a:	f0 e0       	ldi	r31, 0x00	; 0
    113c:	80 81       	ld	r24, Z
    113e:	48 2f       	mov	r20, r24
    1140:	8a 81       	ldd	r24, Y+2	; 0x02
    1142:	28 2f       	mov	r18, r24
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	02 2e       	mov	r0, r18
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <DIO_voidSetPinValue+0xfe>
    114e:	88 0f       	add	r24, r24
    1150:	99 1f       	adc	r25, r25
    1152:	0a 94       	dec	r0
    1154:	e2 f7       	brpl	.-8      	; 0x114e <DIO_voidSetPinValue+0xfa>
    1156:	84 2b       	or	r24, r20
    1158:	8c 93       	st	X, r24
    115a:	57 c0       	rjmp	.+174    	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 2:
		if(Value == 0)
    115c:	8b 81       	ldd	r24, Y+3	; 0x03
    115e:	88 23       	and	r24, r24
    1160:	a9 f4       	brne	.+42     	; 0x118c <DIO_voidSetPinValue+0x138>
		{
			CLEAR_BIT(PORTC,Pin);
    1162:	a5 e3       	ldi	r26, 0x35	; 53
    1164:	b0 e0       	ldi	r27, 0x00	; 0
    1166:	e5 e3       	ldi	r30, 0x35	; 53
    1168:	f0 e0       	ldi	r31, 0x00	; 0
    116a:	80 81       	ld	r24, Z
    116c:	48 2f       	mov	r20, r24
    116e:	8a 81       	ldd	r24, Y+2	; 0x02
    1170:	28 2f       	mov	r18, r24
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	02 2e       	mov	r0, r18
    117a:	02 c0       	rjmp	.+4      	; 0x1180 <DIO_voidSetPinValue+0x12c>
    117c:	88 0f       	add	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	0a 94       	dec	r0
    1182:	e2 f7       	brpl	.-8      	; 0x117c <DIO_voidSetPinValue+0x128>
    1184:	80 95       	com	r24
    1186:	84 23       	and	r24, r20
    1188:	8c 93       	st	X, r24
    118a:	3f c0       	rjmp	.+126    	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTC,Pin);
    118c:	a5 e3       	ldi	r26, 0x35	; 53
    118e:	b0 e0       	ldi	r27, 0x00	; 0
    1190:	e5 e3       	ldi	r30, 0x35	; 53
    1192:	f0 e0       	ldi	r31, 0x00	; 0
    1194:	80 81       	ld	r24, Z
    1196:	48 2f       	mov	r20, r24
    1198:	8a 81       	ldd	r24, Y+2	; 0x02
    119a:	28 2f       	mov	r18, r24
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	02 2e       	mov	r0, r18
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <DIO_voidSetPinValue+0x156>
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	0a 94       	dec	r0
    11ac:	e2 f7       	brpl	.-8      	; 0x11a6 <DIO_voidSetPinValue+0x152>
    11ae:	84 2b       	or	r24, r20
    11b0:	8c 93       	st	X, r24
    11b2:	2b c0       	rjmp	.+86     	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}

		break;
	case 3:
		if(Value == 0)
    11b4:	8b 81       	ldd	r24, Y+3	; 0x03
    11b6:	88 23       	and	r24, r24
    11b8:	a9 f4       	brne	.+42     	; 0x11e4 <DIO_voidSetPinValue+0x190>
		{
			CLEAR_BIT(PORTD,Pin);
    11ba:	a2 e3       	ldi	r26, 0x32	; 50
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	e2 e3       	ldi	r30, 0x32	; 50
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	80 81       	ld	r24, Z
    11c4:	48 2f       	mov	r20, r24
    11c6:	8a 81       	ldd	r24, Y+2	; 0x02
    11c8:	28 2f       	mov	r18, r24
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	81 e0       	ldi	r24, 0x01	; 1
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	02 2e       	mov	r0, r18
    11d2:	02 c0       	rjmp	.+4      	; 0x11d8 <DIO_voidSetPinValue+0x184>
    11d4:	88 0f       	add	r24, r24
    11d6:	99 1f       	adc	r25, r25
    11d8:	0a 94       	dec	r0
    11da:	e2 f7       	brpl	.-8      	; 0x11d4 <DIO_voidSetPinValue+0x180>
    11dc:	80 95       	com	r24
    11de:	84 23       	and	r24, r20
    11e0:	8c 93       	st	X, r24
    11e2:	13 c0       	rjmp	.+38     	; 0x120a <DIO_voidSetPinValue+0x1b6>
		}
		else
		{
			SET_BIT(PORTD,Pin);
    11e4:	a2 e3       	ldi	r26, 0x32	; 50
    11e6:	b0 e0       	ldi	r27, 0x00	; 0
    11e8:	e2 e3       	ldi	r30, 0x32	; 50
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	80 81       	ld	r24, Z
    11ee:	48 2f       	mov	r20, r24
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	28 2f       	mov	r18, r24
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	02 2e       	mov	r0, r18
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <DIO_voidSetPinValue+0x1ae>
    11fe:	88 0f       	add	r24, r24
    1200:	99 1f       	adc	r25, r25
    1202:	0a 94       	dec	r0
    1204:	e2 f7       	brpl	.-8      	; 0x11fe <DIO_voidSetPinValue+0x1aa>
    1206:	84 2b       	or	r24, r20
    1208:	8c 93       	st	X, r24
		}

		break;
	}

}
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0
    1212:	0f 90       	pop	r0
    1214:	cf 91       	pop	r28
    1216:	df 91       	pop	r29
    1218:	08 95       	ret

0000121a <DIO_voidTogglePinValue>:
void DIO_voidTogglePinValue(u8 Port,u8 Pin)
{
    121a:	df 93       	push	r29
    121c:	cf 93       	push	r28
    121e:	00 d0       	rcall	.+0      	; 0x1220 <DIO_voidTogglePinValue+0x6>
    1220:	00 d0       	rcall	.+0      	; 0x1222 <DIO_voidTogglePinValue+0x8>
    1222:	cd b7       	in	r28, 0x3d	; 61
    1224:	de b7       	in	r29, 0x3e	; 62
    1226:	89 83       	std	Y+1, r24	; 0x01
    1228:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port){
    122a:	89 81       	ldd	r24, Y+1	; 0x01
    122c:	28 2f       	mov	r18, r24
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	3c 83       	std	Y+4, r19	; 0x04
    1232:	2b 83       	std	Y+3, r18	; 0x03
    1234:	8b 81       	ldd	r24, Y+3	; 0x03
    1236:	9c 81       	ldd	r25, Y+4	; 0x04
    1238:	81 30       	cpi	r24, 0x01	; 1
    123a:	91 05       	cpc	r25, r1
    123c:	49 f1       	breq	.+82     	; 0x1290 <DIO_voidTogglePinValue+0x76>
    123e:	2b 81       	ldd	r18, Y+3	; 0x03
    1240:	3c 81       	ldd	r19, Y+4	; 0x04
    1242:	22 30       	cpi	r18, 0x02	; 2
    1244:	31 05       	cpc	r19, r1
    1246:	2c f4       	brge	.+10     	; 0x1252 <DIO_voidTogglePinValue+0x38>
    1248:	8b 81       	ldd	r24, Y+3	; 0x03
    124a:	9c 81       	ldd	r25, Y+4	; 0x04
    124c:	00 97       	sbiw	r24, 0x00	; 0
    124e:	61 f0       	breq	.+24     	; 0x1268 <DIO_voidTogglePinValue+0x4e>
    1250:	5a c0       	rjmp	.+180    	; 0x1306 <DIO_voidTogglePinValue+0xec>
    1252:	2b 81       	ldd	r18, Y+3	; 0x03
    1254:	3c 81       	ldd	r19, Y+4	; 0x04
    1256:	22 30       	cpi	r18, 0x02	; 2
    1258:	31 05       	cpc	r19, r1
    125a:	71 f1       	breq	.+92     	; 0x12b8 <DIO_voidTogglePinValue+0x9e>
    125c:	8b 81       	ldd	r24, Y+3	; 0x03
    125e:	9c 81       	ldd	r25, Y+4	; 0x04
    1260:	83 30       	cpi	r24, 0x03	; 3
    1262:	91 05       	cpc	r25, r1
    1264:	e9 f1       	breq	.+122    	; 0x12e0 <DIO_voidTogglePinValue+0xc6>
    1266:	4f c0       	rjmp	.+158    	; 0x1306 <DIO_voidTogglePinValue+0xec>
	case 0:
		TOGGLE_BIT(PORTA,Pin);
    1268:	ab e3       	ldi	r26, 0x3B	; 59
    126a:	b0 e0       	ldi	r27, 0x00	; 0
    126c:	eb e3       	ldi	r30, 0x3B	; 59
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	80 81       	ld	r24, Z
    1272:	48 2f       	mov	r20, r24
    1274:	8a 81       	ldd	r24, Y+2	; 0x02
    1276:	28 2f       	mov	r18, r24
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	02 2e       	mov	r0, r18
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <DIO_voidTogglePinValue+0x6c>
    1282:	88 0f       	add	r24, r24
    1284:	99 1f       	adc	r25, r25
    1286:	0a 94       	dec	r0
    1288:	e2 f7       	brpl	.-8      	; 0x1282 <DIO_voidTogglePinValue+0x68>
    128a:	84 27       	eor	r24, r20
    128c:	8c 93       	st	X, r24
    128e:	3b c0       	rjmp	.+118    	; 0x1306 <DIO_voidTogglePinValue+0xec>

		break;
	case 1:
		TOGGLE_BIT(PORTB,Pin);
    1290:	a8 e3       	ldi	r26, 0x38	; 56
    1292:	b0 e0       	ldi	r27, 0x00	; 0
    1294:	e8 e3       	ldi	r30, 0x38	; 56
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	80 81       	ld	r24, Z
    129a:	48 2f       	mov	r20, r24
    129c:	8a 81       	ldd	r24, Y+2	; 0x02
    129e:	28 2f       	mov	r18, r24
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	02 2e       	mov	r0, r18
    12a8:	02 c0       	rjmp	.+4      	; 0x12ae <DIO_voidTogglePinValue+0x94>
    12aa:	88 0f       	add	r24, r24
    12ac:	99 1f       	adc	r25, r25
    12ae:	0a 94       	dec	r0
    12b0:	e2 f7       	brpl	.-8      	; 0x12aa <DIO_voidTogglePinValue+0x90>
    12b2:	84 27       	eor	r24, r20
    12b4:	8c 93       	st	X, r24
    12b6:	27 c0       	rjmp	.+78     	; 0x1306 <DIO_voidTogglePinValue+0xec>

		break;
	case 2:
		TOGGLE_BIT(PORTC,Pin);
    12b8:	a5 e3       	ldi	r26, 0x35	; 53
    12ba:	b0 e0       	ldi	r27, 0x00	; 0
    12bc:	e5 e3       	ldi	r30, 0x35	; 53
    12be:	f0 e0       	ldi	r31, 0x00	; 0
    12c0:	80 81       	ld	r24, Z
    12c2:	48 2f       	mov	r20, r24
    12c4:	8a 81       	ldd	r24, Y+2	; 0x02
    12c6:	28 2f       	mov	r18, r24
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	02 2e       	mov	r0, r18
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <DIO_voidTogglePinValue+0xbc>
    12d2:	88 0f       	add	r24, r24
    12d4:	99 1f       	adc	r25, r25
    12d6:	0a 94       	dec	r0
    12d8:	e2 f7       	brpl	.-8      	; 0x12d2 <DIO_voidTogglePinValue+0xb8>
    12da:	84 27       	eor	r24, r20
    12dc:	8c 93       	st	X, r24
    12de:	13 c0       	rjmp	.+38     	; 0x1306 <DIO_voidTogglePinValue+0xec>

		break;
	case 3:
		TOGGLE_BIT(PORTD,Pin);
    12e0:	a2 e3       	ldi	r26, 0x32	; 50
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	e2 e3       	ldi	r30, 0x32	; 50
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	80 81       	ld	r24, Z
    12ea:	48 2f       	mov	r20, r24
    12ec:	8a 81       	ldd	r24, Y+2	; 0x02
    12ee:	28 2f       	mov	r18, r24
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	81 e0       	ldi	r24, 0x01	; 1
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	02 2e       	mov	r0, r18
    12f8:	02 c0       	rjmp	.+4      	; 0x12fe <DIO_voidTogglePinValue+0xe4>
    12fa:	88 0f       	add	r24, r24
    12fc:	99 1f       	adc	r25, r25
    12fe:	0a 94       	dec	r0
    1300:	e2 f7       	brpl	.-8      	; 0x12fa <DIO_voidTogglePinValue+0xe0>
    1302:	84 27       	eor	r24, r20
    1304:	8c 93       	st	X, r24

		break;
	}

}
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	0f 90       	pop	r0
    130c:	0f 90       	pop	r0
    130e:	cf 91       	pop	r28
    1310:	df 91       	pop	r29
    1312:	08 95       	ret

00001314 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Port,u8 Pin)
{
    1314:	df 93       	push	r29
    1316:	cf 93       	push	r28
    1318:	00 d0       	rcall	.+0      	; 0x131a <DIO_u8GetPinValue+0x6>
    131a:	00 d0       	rcall	.+0      	; 0x131c <DIO_u8GetPinValue+0x8>
    131c:	00 d0       	rcall	.+0      	; 0x131e <DIO_u8GetPinValue+0xa>
    131e:	cd b7       	in	r28, 0x3d	; 61
    1320:	de b7       	in	r29, 0x3e	; 62
    1322:	89 83       	std	Y+1, r24	; 0x01
    1324:	6a 83       	std	Y+2, r22	; 0x02
	switch(Port)
    1326:	89 81       	ldd	r24, Y+1	; 0x01
    1328:	28 2f       	mov	r18, r24
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	3d 83       	std	Y+5, r19	; 0x05
    132e:	2c 83       	std	Y+4, r18	; 0x04
    1330:	4c 81       	ldd	r20, Y+4	; 0x04
    1332:	5d 81       	ldd	r21, Y+5	; 0x05
    1334:	41 30       	cpi	r20, 0x01	; 1
    1336:	51 05       	cpc	r21, r1
    1338:	49 f1       	breq	.+82     	; 0x138c <DIO_u8GetPinValue+0x78>
    133a:	8c 81       	ldd	r24, Y+4	; 0x04
    133c:	9d 81       	ldd	r25, Y+5	; 0x05
    133e:	82 30       	cpi	r24, 0x02	; 2
    1340:	91 05       	cpc	r25, r1
    1342:	34 f4       	brge	.+12     	; 0x1350 <DIO_u8GetPinValue+0x3c>
    1344:	2c 81       	ldd	r18, Y+4	; 0x04
    1346:	3d 81       	ldd	r19, Y+5	; 0x05
    1348:	21 15       	cp	r18, r1
    134a:	31 05       	cpc	r19, r1
    134c:	61 f0       	breq	.+24     	; 0x1366 <DIO_u8GetPinValue+0x52>
    134e:	57 c0       	rjmp	.+174    	; 0x13fe <DIO_u8GetPinValue+0xea>
    1350:	4c 81       	ldd	r20, Y+4	; 0x04
    1352:	5d 81       	ldd	r21, Y+5	; 0x05
    1354:	42 30       	cpi	r20, 0x02	; 2
    1356:	51 05       	cpc	r21, r1
    1358:	61 f1       	breq	.+88     	; 0x13b2 <DIO_u8GetPinValue+0x9e>
    135a:	8c 81       	ldd	r24, Y+4	; 0x04
    135c:	9d 81       	ldd	r25, Y+5	; 0x05
    135e:	83 30       	cpi	r24, 0x03	; 3
    1360:	91 05       	cpc	r25, r1
    1362:	d1 f1       	breq	.+116    	; 0x13d8 <DIO_u8GetPinValue+0xc4>
    1364:	4c c0       	rjmp	.+152    	; 0x13fe <DIO_u8GetPinValue+0xea>
	{
	case 0:
		return GET_BIT(PINA,Pin);
    1366:	e9 e3       	ldi	r30, 0x39	; 57
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	80 81       	ld	r24, Z
    136c:	28 2f       	mov	r18, r24
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	8a 81       	ldd	r24, Y+2	; 0x02
    1372:	88 2f       	mov	r24, r24
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	a9 01       	movw	r20, r18
    1378:	02 c0       	rjmp	.+4      	; 0x137e <DIO_u8GetPinValue+0x6a>
    137a:	55 95       	asr	r21
    137c:	47 95       	ror	r20
    137e:	8a 95       	dec	r24
    1380:	e2 f7       	brpl	.-8      	; 0x137a <DIO_u8GetPinValue+0x66>
    1382:	ca 01       	movw	r24, r20
    1384:	58 2f       	mov	r21, r24
    1386:	51 70       	andi	r21, 0x01	; 1
    1388:	5b 83       	std	Y+3, r21	; 0x03
    138a:	3a c0       	rjmp	.+116    	; 0x1400 <DIO_u8GetPinValue+0xec>
	case 1:
		return GET_BIT(PINB,Pin);
    138c:	e6 e3       	ldi	r30, 0x36	; 54
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	80 81       	ld	r24, Z
    1392:	28 2f       	mov	r18, r24
    1394:	30 e0       	ldi	r19, 0x00	; 0
    1396:	8a 81       	ldd	r24, Y+2	; 0x02
    1398:	88 2f       	mov	r24, r24
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	a9 01       	movw	r20, r18
    139e:	02 c0       	rjmp	.+4      	; 0x13a4 <DIO_u8GetPinValue+0x90>
    13a0:	55 95       	asr	r21
    13a2:	47 95       	ror	r20
    13a4:	8a 95       	dec	r24
    13a6:	e2 f7       	brpl	.-8      	; 0x13a0 <DIO_u8GetPinValue+0x8c>
    13a8:	ca 01       	movw	r24, r20
    13aa:	58 2f       	mov	r21, r24
    13ac:	51 70       	andi	r21, 0x01	; 1
    13ae:	5b 83       	std	Y+3, r21	; 0x03
    13b0:	27 c0       	rjmp	.+78     	; 0x1400 <DIO_u8GetPinValue+0xec>
	case 2:
		return GET_BIT(PINC,Pin);
    13b2:	e3 e3       	ldi	r30, 0x33	; 51
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	80 81       	ld	r24, Z
    13b8:	28 2f       	mov	r18, r24
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	8a 81       	ldd	r24, Y+2	; 0x02
    13be:	88 2f       	mov	r24, r24
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	a9 01       	movw	r20, r18
    13c4:	02 c0       	rjmp	.+4      	; 0x13ca <DIO_u8GetPinValue+0xb6>
    13c6:	55 95       	asr	r21
    13c8:	47 95       	ror	r20
    13ca:	8a 95       	dec	r24
    13cc:	e2 f7       	brpl	.-8      	; 0x13c6 <DIO_u8GetPinValue+0xb2>
    13ce:	ca 01       	movw	r24, r20
    13d0:	58 2f       	mov	r21, r24
    13d2:	51 70       	andi	r21, 0x01	; 1
    13d4:	5b 83       	std	Y+3, r21	; 0x03
    13d6:	14 c0       	rjmp	.+40     	; 0x1400 <DIO_u8GetPinValue+0xec>
	case 3:
		return GET_BIT(PIND,Pin);
    13d8:	e0 e3       	ldi	r30, 0x30	; 48
    13da:	f0 e0       	ldi	r31, 0x00	; 0
    13dc:	80 81       	ld	r24, Z
    13de:	28 2f       	mov	r18, r24
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	8a 81       	ldd	r24, Y+2	; 0x02
    13e4:	88 2f       	mov	r24, r24
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	a9 01       	movw	r20, r18
    13ea:	02 c0       	rjmp	.+4      	; 0x13f0 <DIO_u8GetPinValue+0xdc>
    13ec:	55 95       	asr	r21
    13ee:	47 95       	ror	r20
    13f0:	8a 95       	dec	r24
    13f2:	e2 f7       	brpl	.-8      	; 0x13ec <DIO_u8GetPinValue+0xd8>
    13f4:	ca 01       	movw	r24, r20
    13f6:	58 2f       	mov	r21, r24
    13f8:	51 70       	andi	r21, 0x01	; 1
    13fa:	5b 83       	std	Y+3, r21	; 0x03
    13fc:	01 c0       	rjmp	.+2      	; 0x1400 <DIO_u8GetPinValue+0xec>
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <DIO_u8GetPinValue+0xf0>
	}
}
    1400:	8b 81       	ldd	r24, Y+3	; 0x03
    1402:	8e 83       	std	Y+6, r24	; 0x06
    1404:	8e 81       	ldd	r24, Y+6	; 0x06
    1406:	26 96       	adiw	r28, 0x06	; 6
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	f8 94       	cli
    140c:	de bf       	out	0x3e, r29	; 62
    140e:	0f be       	out	0x3f, r0	; 63
    1410:	cd bf       	out	0x3d, r28	; 61
    1412:	cf 91       	pop	r28
    1414:	df 91       	pop	r29
    1416:	08 95       	ret

00001418 <Motor_voidBackword>:
int TimerOverflow = 0;



void Motor_voidBackword(void)
{
    1418:	df 93       	push	r29
    141a:	cf 93       	push	r28
    141c:	cd b7       	in	r28, 0x3d	; 61
    141e:	de b7       	in	r29, 0x3e	; 62
    1420:	2e 97       	sbiw	r28, 0x0e	; 14
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	f8 94       	cli
    1426:	de bf       	out	0x3e, r29	; 62
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	cd bf       	out	0x3d, r28	; 61
	DIO_voidSetPinValue(PORT_C,PIN_4,HIGH); /*Motor_1___pin1A*/
    142c:	82 e0       	ldi	r24, 0x02	; 2
    142e:	64 e0       	ldi	r22, 0x04	; 4
    1430:	41 e0       	ldi	r20, 0x01	; 1
    1432:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_5,LOW); /*Motor_1___pin2A*/
    1436:	82 e0       	ldi	r24, 0x02	; 2
    1438:	65 e0       	ldi	r22, 0x05	; 5
    143a:	40 e0       	ldi	r20, 0x00	; 0
    143c:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_6,LOW); /*Motor_2___pin1B*/
    1440:	82 e0       	ldi	r24, 0x02	; 2
    1442:	66 e0       	ldi	r22, 0x06	; 6
    1444:	40 e0       	ldi	r20, 0x00	; 0
    1446:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(PORT_C,PIN_7,HIGH);  /*Motor_2___pin2B*/
    144a:	82 e0       	ldi	r24, 0x02	; 2
    144c:	67 e0       	ldi	r22, 0x07	; 7
    144e:	41 e0       	ldi	r20, 0x01	; 1
    1450:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
    1454:	80 e0       	ldi	r24, 0x00	; 0
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	aa e7       	ldi	r26, 0x7A	; 122
    145a:	b4 e4       	ldi	r27, 0x44	; 68
    145c:	8b 87       	std	Y+11, r24	; 0x0b
    145e:	9c 87       	std	Y+12, r25	; 0x0c
    1460:	ad 87       	std	Y+13, r26	; 0x0d
    1462:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1464:	6b 85       	ldd	r22, Y+11	; 0x0b
    1466:	7c 85       	ldd	r23, Y+12	; 0x0c
    1468:	8d 85       	ldd	r24, Y+13	; 0x0d
    146a:	9e 85       	ldd	r25, Y+14	; 0x0e
    146c:	20 e0       	ldi	r18, 0x00	; 0
    146e:	30 e8       	ldi	r19, 0x80	; 128
    1470:	4b e3       	ldi	r20, 0x3B	; 59
    1472:	55 e4       	ldi	r21, 0x45	; 69
    1474:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22
    147c:	8f 83       	std	Y+7, r24	; 0x07
    147e:	98 87       	std	Y+8, r25	; 0x08
    1480:	a9 87       	std	Y+9, r26	; 0x09
    1482:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1484:	6f 81       	ldd	r22, Y+7	; 0x07
    1486:	78 85       	ldd	r23, Y+8	; 0x08
    1488:	89 85       	ldd	r24, Y+9	; 0x09
    148a:	9a 85       	ldd	r25, Y+10	; 0x0a
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	30 e0       	ldi	r19, 0x00	; 0
    1490:	40 e8       	ldi	r20, 0x80	; 128
    1492:	5f e3       	ldi	r21, 0x3F	; 63
    1494:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1498:	88 23       	and	r24, r24
    149a:	2c f4       	brge	.+10     	; 0x14a6 <Motor_voidBackword+0x8e>
		__ticks = 1;
    149c:	81 e0       	ldi	r24, 0x01	; 1
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	9e 83       	std	Y+6, r25	; 0x06
    14a2:	8d 83       	std	Y+5, r24	; 0x05
    14a4:	3f c0       	rjmp	.+126    	; 0x1524 <Motor_voidBackword+0x10c>
	else if (__tmp > 65535)
    14a6:	6f 81       	ldd	r22, Y+7	; 0x07
    14a8:	78 85       	ldd	r23, Y+8	; 0x08
    14aa:	89 85       	ldd	r24, Y+9	; 0x09
    14ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	3f ef       	ldi	r19, 0xFF	; 255
    14b2:	4f e7       	ldi	r20, 0x7F	; 127
    14b4:	57 e4       	ldi	r21, 0x47	; 71
    14b6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    14ba:	18 16       	cp	r1, r24
    14bc:	4c f5       	brge	.+82     	; 0x1510 <Motor_voidBackword+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14be:	6b 85       	ldd	r22, Y+11	; 0x0b
    14c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    14c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    14c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    14c6:	20 e0       	ldi	r18, 0x00	; 0
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	40 e2       	ldi	r20, 0x20	; 32
    14cc:	51 e4       	ldi	r21, 0x41	; 65
    14ce:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14d2:	dc 01       	movw	r26, r24
    14d4:	cb 01       	movw	r24, r22
    14d6:	bc 01       	movw	r22, r24
    14d8:	cd 01       	movw	r24, r26
    14da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	9e 83       	std	Y+6, r25	; 0x06
    14e4:	8d 83       	std	Y+5, r24	; 0x05
    14e6:	0f c0       	rjmp	.+30     	; 0x1506 <Motor_voidBackword+0xee>
    14e8:	8c e2       	ldi	r24, 0x2C	; 44
    14ea:	91 e0       	ldi	r25, 0x01	; 1
    14ec:	9c 83       	std	Y+4, r25	; 0x04
    14ee:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14f0:	8b 81       	ldd	r24, Y+3	; 0x03
    14f2:	9c 81       	ldd	r25, Y+4	; 0x04
    14f4:	01 97       	sbiw	r24, 0x01	; 1
    14f6:	f1 f7       	brne	.-4      	; 0x14f4 <Motor_voidBackword+0xdc>
    14f8:	9c 83       	std	Y+4, r25	; 0x04
    14fa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14fc:	8d 81       	ldd	r24, Y+5	; 0x05
    14fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1500:	01 97       	sbiw	r24, 0x01	; 1
    1502:	9e 83       	std	Y+6, r25	; 0x06
    1504:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1506:	8d 81       	ldd	r24, Y+5	; 0x05
    1508:	9e 81       	ldd	r25, Y+6	; 0x06
    150a:	00 97       	sbiw	r24, 0x00	; 0
    150c:	69 f7       	brne	.-38     	; 0x14e8 <Motor_voidBackword+0xd0>
    150e:	14 c0       	rjmp	.+40     	; 0x1538 <Motor_voidBackword+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1510:	6f 81       	ldd	r22, Y+7	; 0x07
    1512:	78 85       	ldd	r23, Y+8	; 0x08
    1514:	89 85       	ldd	r24, Y+9	; 0x09
    1516:	9a 85       	ldd	r25, Y+10	; 0x0a
    1518:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	9e 83       	std	Y+6, r25	; 0x06
    1522:	8d 83       	std	Y+5, r24	; 0x05
    1524:	8d 81       	ldd	r24, Y+5	; 0x05
    1526:	9e 81       	ldd	r25, Y+6	; 0x06
    1528:	9a 83       	std	Y+2, r25	; 0x02
    152a:	89 83       	std	Y+1, r24	; 0x01
    152c:	89 81       	ldd	r24, Y+1	; 0x01
    152e:	9a 81       	ldd	r25, Y+2	; 0x02
    1530:	01 97       	sbiw	r24, 0x01	; 1
    1532:	f1 f7       	brne	.-4      	; 0x1530 <Motor_voidBackword+0x118>
    1534:	9a 83       	std	Y+2, r25	; 0x02
    1536:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1000);

}
    1538:	2e 96       	adiw	r28, 0x0e	; 14
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	cf 91       	pop	r28
    1546:	df 91       	pop	r29
    1548:	08 95       	ret

0000154a <main>:




int main (void)
{
    154a:	ef 92       	push	r14
    154c:	ff 92       	push	r15
    154e:	0f 93       	push	r16
    1550:	1f 93       	push	r17
    1552:	df 93       	push	r29
    1554:	cf 93       	push	r28
    1556:	cd b7       	in	r28, 0x3d	; 61
    1558:	de b7       	in	r29, 0x3e	; 62
    155a:	c8 55       	subi	r28, 0x58	; 88
    155c:	d0 40       	sbci	r29, 0x00	; 0
    155e:	0f b6       	in	r0, 0x3f	; 63
    1560:	f8 94       	cli
    1562:	de bf       	out	0x3e, r29	; 62
    1564:	0f be       	out	0x3f, r0	; 63
    1566:	cd bf       	out	0x3d, r28	; 61
	f64 distance=0;
    1568:	fe 01       	movw	r30, r28
    156a:	eb 5a       	subi	r30, 0xAB	; 171
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	a0 e0       	ldi	r26, 0x00	; 0
    1574:	b0 e0       	ldi	r27, 0x00	; 0
    1576:	80 83       	st	Z, r24
    1578:	91 83       	std	Z+1, r25	; 0x01
    157a:	a2 83       	std	Z+2, r26	; 0x02
    157c:	b3 83       	std	Z+3, r27	; 0x03




	/*ULTRASONIC*/
	DIO_voidSetPinDir(PORT_D,PIN_1,OUTPUT); /*trigger as output */
    157e:	83 e0       	ldi	r24, 0x03	; 3
    1580:	61 e0       	ldi	r22, 0x01	; 1
    1582:	41 e0       	ldi	r20, 0x01	; 1
    1584:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_D,PIN_6,INPUT); /*echo as input*/
    1588:	83 e0       	ldi	r24, 0x03	; 3
    158a:	66 e0       	ldi	r22, 0x06	; 6
    158c:	40 e0       	ldi	r20, 0x00	; 0
    158e:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	DIO_voidSetPinValue(PORT_D,PIN_6,HIGH);/*PULL UP*/
    1592:	83 e0       	ldi	r24, 0x03	; 3
    1594:	66 e0       	ldi	r22, 0x06	; 6
    1596:	41 e0       	ldi	r20, 0x01	; 1
    1598:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>

	/*BOTH IR sensors pins are declared as input*/
	DIO_voidSetPinDir(PORT_D,PIN_3,INPUT); // RIGHT SENSOR
    159c:	83 e0       	ldi	r24, 0x03	; 3
    159e:	63 e0       	ldi	r22, 0x03	; 3
    15a0:	40 e0       	ldi	r20, 0x00	; 0
    15a2:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_D,PIN_4,INPUT);//LEFT SENSOR
    15a6:	83 e0       	ldi	r24, 0x03	; 3
    15a8:	64 e0       	ldi	r22, 0x04	; 4
    15aa:	40 e0       	ldi	r20, 0x00	; 0
    15ac:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>

	/*motor one*/
	DIO_voidSetPinDir(PORT_C,PIN_4,OUTPUT);
    15b0:	82 e0       	ldi	r24, 0x02	; 2
    15b2:	64 e0       	ldi	r22, 0x04	; 4
    15b4:	41 e0       	ldi	r20, 0x01	; 1
    15b6:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_5,OUTPUT);
    15ba:	82 e0       	ldi	r24, 0x02	; 2
    15bc:	65 e0       	ldi	r22, 0x05	; 5
    15be:	41 e0       	ldi	r20, 0x01	; 1
    15c0:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	/*motor two*/
	DIO_voidSetPinDir(PORT_C,PIN_6,OUTPUT);
    15c4:	82 e0       	ldi	r24, 0x02	; 2
    15c6:	66 e0       	ldi	r22, 0x06	; 6
    15c8:	41 e0       	ldi	r20, 0x01	; 1
    15ca:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(PORT_C,PIN_7,OUTPUT);
    15ce:	82 e0       	ldi	r24, 0x02	; 2
    15d0:	67 e0       	ldi	r22, 0x07	; 7
    15d2:	41 e0       	ldi	r20, 0x01	; 1
    15d4:	0e 94 47 07 	call	0xe8e	; 0xe8e <DIO_voidSetPinDir>

	sei();					/* Enable global interrupt SET_BIT(SREG,7) */
    15d8:	78 94       	sei
	TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
    15da:	e9 e5       	ldi	r30, 0x59	; 89
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	84 e0       	ldi	r24, 0x04	; 4
    15e0:	80 83       	st	Z, r24
	TCCR1A = 0;				/* Set all bit to zero Normal operation */
    15e2:	ef e4       	ldi	r30, 0x4F	; 79
    15e4:	f0 e0       	ldi	r31, 0x00	; 0
    15e6:	10 82       	st	Z, r1


while(1)
{

	PORTD |= (1 << 1);/* Give 10us trigger pulse on trig. pin to HC-SR04 */
    15e8:	a2 e3       	ldi	r26, 0x32	; 50
    15ea:	b0 e0       	ldi	r27, 0x00	; 0
    15ec:	e2 e3       	ldi	r30, 0x32	; 50
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	80 81       	ld	r24, Z
    15f2:	82 60       	ori	r24, 0x02	; 2
    15f4:	8c 93       	st	X, r24
    15f6:	fe 01       	movw	r30, r28
    15f8:	e3 5b       	subi	r30, 0xB3	; 179
    15fa:	ff 4f       	sbci	r31, 0xFF	; 255
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	a0 e2       	ldi	r26, 0x20	; 32
    1602:	b1 e4       	ldi	r27, 0x41	; 65
    1604:	80 83       	st	Z, r24
    1606:	91 83       	std	Z+1, r25	; 0x01
    1608:	a2 83       	std	Z+2, r26	; 0x02
    160a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    160c:	8e 01       	movw	r16, r28
    160e:	07 5b       	subi	r16, 0xB7	; 183
    1610:	1f 4f       	sbci	r17, 0xFF	; 255
    1612:	fe 01       	movw	r30, r28
    1614:	e3 5b       	subi	r30, 0xB3	; 179
    1616:	ff 4f       	sbci	r31, 0xFF	; 255
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	82 81       	ldd	r24, Z+2	; 0x02
    161e:	93 81       	ldd	r25, Z+3	; 0x03
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	40 e8       	ldi	r20, 0x80	; 128
    1626:	50 e4       	ldi	r21, 0x40	; 64
    1628:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	f8 01       	movw	r30, r16
    1632:	80 83       	st	Z, r24
    1634:	91 83       	std	Z+1, r25	; 0x01
    1636:	a2 83       	std	Z+2, r26	; 0x02
    1638:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    163a:	fe 01       	movw	r30, r28
    163c:	e7 5b       	subi	r30, 0xB7	; 183
    163e:	ff 4f       	sbci	r31, 0xFF	; 255
    1640:	60 81       	ld	r22, Z
    1642:	71 81       	ldd	r23, Z+1	; 0x01
    1644:	82 81       	ldd	r24, Z+2	; 0x02
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	40 e8       	ldi	r20, 0x80	; 128
    164e:	5f e3       	ldi	r21, 0x3F	; 63
    1650:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1654:	88 23       	and	r24, r24
    1656:	34 f4       	brge	.+12     	; 0x1664 <main+0x11a>
		__ticks = 1;
    1658:	fe 01       	movw	r30, r28
    165a:	e8 5b       	subi	r30, 0xB8	; 184
    165c:	ff 4f       	sbci	r31, 0xFF	; 255
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	80 83       	st	Z, r24
    1662:	b4 c0       	rjmp	.+360    	; 0x17cc <main+0x282>
	else if (__tmp > 255)
    1664:	fe 01       	movw	r30, r28
    1666:	e7 5b       	subi	r30, 0xB7	; 183
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	82 81       	ldd	r24, Z+2	; 0x02
    1670:	93 81       	ldd	r25, Z+3	; 0x03
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	4f e7       	ldi	r20, 0x7F	; 127
    1678:	53 e4       	ldi	r21, 0x43	; 67
    167a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    167e:	18 16       	cp	r1, r24
    1680:	0c f0       	brlt	.+2      	; 0x1684 <main+0x13a>
    1682:	94 c0       	rjmp	.+296    	; 0x17ac <main+0x262>
	{
		_delay_ms(__us / 1000.0);
    1684:	fe 01       	movw	r30, r28
    1686:	e3 5b       	subi	r30, 0xB3	; 179
    1688:	ff 4f       	sbci	r31, 0xFF	; 255
    168a:	60 81       	ld	r22, Z
    168c:	71 81       	ldd	r23, Z+1	; 0x01
    168e:	82 81       	ldd	r24, Z+2	; 0x02
    1690:	93 81       	ldd	r25, Z+3	; 0x03
    1692:	20 e0       	ldi	r18, 0x00	; 0
    1694:	30 e0       	ldi	r19, 0x00	; 0
    1696:	4a e7       	ldi	r20, 0x7A	; 122
    1698:	54 e4       	ldi	r21, 0x44	; 68
    169a:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    169e:	dc 01       	movw	r26, r24
    16a0:	cb 01       	movw	r24, r22
    16a2:	fe 01       	movw	r30, r28
    16a4:	ec 5b       	subi	r30, 0xBC	; 188
    16a6:	ff 4f       	sbci	r31, 0xFF	; 255
    16a8:	80 83       	st	Z, r24
    16aa:	91 83       	std	Z+1, r25	; 0x01
    16ac:	a2 83       	std	Z+2, r26	; 0x02
    16ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16b0:	8e 01       	movw	r16, r28
    16b2:	00 5c       	subi	r16, 0xC0	; 192
    16b4:	1f 4f       	sbci	r17, 0xFF	; 255
    16b6:	fe 01       	movw	r30, r28
    16b8:	ec 5b       	subi	r30, 0xBC	; 188
    16ba:	ff 4f       	sbci	r31, 0xFF	; 255
    16bc:	60 81       	ld	r22, Z
    16be:	71 81       	ldd	r23, Z+1	; 0x01
    16c0:	82 81       	ldd	r24, Z+2	; 0x02
    16c2:	93 81       	ldd	r25, Z+3	; 0x03
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e8       	ldi	r19, 0x80	; 128
    16c8:	4b e3       	ldi	r20, 0x3B	; 59
    16ca:	55 e4       	ldi	r21, 0x45	; 69
    16cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	f8 01       	movw	r30, r16
    16d6:	80 83       	st	Z, r24
    16d8:	91 83       	std	Z+1, r25	; 0x01
    16da:	a2 83       	std	Z+2, r26	; 0x02
    16dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16de:	fe 01       	movw	r30, r28
    16e0:	e0 5c       	subi	r30, 0xC0	; 192
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	60 81       	ld	r22, Z
    16e6:	71 81       	ldd	r23, Z+1	; 0x01
    16e8:	82 81       	ldd	r24, Z+2	; 0x02
    16ea:	93 81       	ldd	r25, Z+3	; 0x03
    16ec:	20 e0       	ldi	r18, 0x00	; 0
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	40 e8       	ldi	r20, 0x80	; 128
    16f2:	5f e3       	ldi	r21, 0x3F	; 63
    16f4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    16f8:	88 23       	and	r24, r24
    16fa:	2c f4       	brge	.+10     	; 0x1706 <main+0x1bc>
		__ticks = 1;
    16fc:	81 e0       	ldi	r24, 0x01	; 1
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	9f af       	std	Y+63, r25	; 0x3f
    1702:	8e af       	std	Y+62, r24	; 0x3e
    1704:	48 c0       	rjmp	.+144    	; 0x1796 <main+0x24c>
	else if (__tmp > 65535)
    1706:	fe 01       	movw	r30, r28
    1708:	e0 5c       	subi	r30, 0xC0	; 192
    170a:	ff 4f       	sbci	r31, 0xFF	; 255
    170c:	60 81       	ld	r22, Z
    170e:	71 81       	ldd	r23, Z+1	; 0x01
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	20 e0       	ldi	r18, 0x00	; 0
    1716:	3f ef       	ldi	r19, 0xFF	; 255
    1718:	4f e7       	ldi	r20, 0x7F	; 127
    171a:	57 e4       	ldi	r21, 0x47	; 71
    171c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1720:	18 16       	cp	r1, r24
    1722:	64 f5       	brge	.+88     	; 0x177c <main+0x232>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1724:	fe 01       	movw	r30, r28
    1726:	ec 5b       	subi	r30, 0xBC	; 188
    1728:	ff 4f       	sbci	r31, 0xFF	; 255
    172a:	60 81       	ld	r22, Z
    172c:	71 81       	ldd	r23, Z+1	; 0x01
    172e:	82 81       	ldd	r24, Z+2	; 0x02
    1730:	93 81       	ldd	r25, Z+3	; 0x03
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	40 e2       	ldi	r20, 0x20	; 32
    1738:	51 e4       	ldi	r21, 0x41	; 65
    173a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    173e:	dc 01       	movw	r26, r24
    1740:	cb 01       	movw	r24, r22
    1742:	bc 01       	movw	r22, r24
    1744:	cd 01       	movw	r24, r26
    1746:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    174a:	dc 01       	movw	r26, r24
    174c:	cb 01       	movw	r24, r22
    174e:	9f af       	std	Y+63, r25	; 0x3f
    1750:	8e af       	std	Y+62, r24	; 0x3e
    1752:	0f c0       	rjmp	.+30     	; 0x1772 <main+0x228>
    1754:	8c e2       	ldi	r24, 0x2C	; 44
    1756:	91 e0       	ldi	r25, 0x01	; 1
    1758:	9d af       	std	Y+61, r25	; 0x3d
    175a:	8c af       	std	Y+60, r24	; 0x3c
    175c:	8c ad       	ldd	r24, Y+60	; 0x3c
    175e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1760:	01 97       	sbiw	r24, 0x01	; 1
    1762:	f1 f7       	brne	.-4      	; 0x1760 <main+0x216>
    1764:	9d af       	std	Y+61, r25	; 0x3d
    1766:	8c af       	std	Y+60, r24	; 0x3c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1768:	8e ad       	ldd	r24, Y+62	; 0x3e
    176a:	9f ad       	ldd	r25, Y+63	; 0x3f
    176c:	01 97       	sbiw	r24, 0x01	; 1
    176e:	9f af       	std	Y+63, r25	; 0x3f
    1770:	8e af       	std	Y+62, r24	; 0x3e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1772:	8e ad       	ldd	r24, Y+62	; 0x3e
    1774:	9f ad       	ldd	r25, Y+63	; 0x3f
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	69 f7       	brne	.-38     	; 0x1754 <main+0x20a>
    177a:	31 c0       	rjmp	.+98     	; 0x17de <main+0x294>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    177c:	fe 01       	movw	r30, r28
    177e:	e0 5c       	subi	r30, 0xC0	; 192
    1780:	ff 4f       	sbci	r31, 0xFF	; 255
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    178e:	dc 01       	movw	r26, r24
    1790:	cb 01       	movw	r24, r22
    1792:	9f af       	std	Y+63, r25	; 0x3f
    1794:	8e af       	std	Y+62, r24	; 0x3e
    1796:	8e ad       	ldd	r24, Y+62	; 0x3e
    1798:	9f ad       	ldd	r25, Y+63	; 0x3f
    179a:	9b af       	std	Y+59, r25	; 0x3b
    179c:	8a af       	std	Y+58, r24	; 0x3a
    179e:	8a ad       	ldd	r24, Y+58	; 0x3a
    17a0:	9b ad       	ldd	r25, Y+59	; 0x3b
    17a2:	01 97       	sbiw	r24, 0x01	; 1
    17a4:	f1 f7       	brne	.-4      	; 0x17a2 <main+0x258>
    17a6:	9b af       	std	Y+59, r25	; 0x3b
    17a8:	8a af       	std	Y+58, r24	; 0x3a
    17aa:	19 c0       	rjmp	.+50     	; 0x17de <main+0x294>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    17ac:	8e 01       	movw	r16, r28
    17ae:	08 5b       	subi	r16, 0xB8	; 184
    17b0:	1f 4f       	sbci	r17, 0xFF	; 255
    17b2:	fe 01       	movw	r30, r28
    17b4:	e7 5b       	subi	r30, 0xB7	; 183
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	82 81       	ldd	r24, Z+2	; 0x02
    17be:	93 81       	ldd	r25, Z+3	; 0x03
    17c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17c4:	dc 01       	movw	r26, r24
    17c6:	cb 01       	movw	r24, r22
    17c8:	f8 01       	movw	r30, r16
    17ca:	80 83       	st	Z, r24
    17cc:	fe 01       	movw	r30, r28
    17ce:	e8 5b       	subi	r30, 0xB8	; 184
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	80 81       	ld	r24, Z
    17d4:	89 af       	std	Y+57, r24	; 0x39
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    17d6:	89 ad       	ldd	r24, Y+57	; 0x39
    17d8:	8a 95       	dec	r24
    17da:	f1 f7       	brne	.-4      	; 0x17d8 <main+0x28e>
    17dc:	89 af       	std	Y+57, r24	; 0x39
	_delay_us(10);
	PORTD &= (~(1 << 1));
    17de:	a2 e3       	ldi	r26, 0x32	; 50
    17e0:	b0 e0       	ldi	r27, 0x00	; 0
    17e2:	e2 e3       	ldi	r30, 0x32	; 50
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	80 81       	ld	r24, Z
    17e8:	8d 7f       	andi	r24, 0xFD	; 253
    17ea:	8c 93       	st	X, r24


	TCNT1 = 0;			/* Clear Timer counter */
    17ec:	ec e4       	ldi	r30, 0x4C	; 76
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	11 82       	std	Z+1, r1	; 0x01
    17f2:	10 82       	st	Z, r1
	TCCR1B = 0x41;		/* Setting for capture rising edge, No pre-scaler*/
    17f4:	ee e4       	ldi	r30, 0x4E	; 78
    17f6:	f0 e0       	ldi	r31, 0x00	; 0
    17f8:	81 e4       	ldi	r24, 0x41	; 65
    17fa:	80 83       	st	Z, r24
	TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
    17fc:	e8 e5       	ldi	r30, 0x58	; 88
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	80 e2       	ldi	r24, 0x20	; 32
    1802:	80 83       	st	Z, r24
	TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
    1804:	e8 e5       	ldi	r30, 0x58	; 88
    1806:	f0 e0       	ldi	r31, 0x00	; 0
    1808:	84 e0       	ldi	r24, 0x04	; 4
    180a:	80 83       	st	Z, r24

	/*Calculate width of Echo by Input Capture (ICP) on PortD PD6 */

	while ((TIFR & (1 << ICF1)) == 0);	/* Wait for rising edge */
    180c:	e8 e5       	ldi	r30, 0x58	; 88
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	80 81       	ld	r24, Z
    1812:	88 2f       	mov	r24, r24
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	80 72       	andi	r24, 0x20	; 32
    1818:	90 70       	andi	r25, 0x00	; 0
    181a:	00 97       	sbiw	r24, 0x00	; 0
    181c:	b9 f3       	breq	.-18     	; 0x180c <main+0x2c2>
	TCNT1 = 0;			/* Clear Timer counter */
    181e:	ec e4       	ldi	r30, 0x4C	; 76
    1820:	f0 e0       	ldi	r31, 0x00	; 0
    1822:	11 82       	std	Z+1, r1	; 0x01
    1824:	10 82       	st	Z, r1
	TCCR1B = 0x01;		/* Setting for capture falling edge, No pre-scaler */
    1826:	ee e4       	ldi	r30, 0x4E	; 78
    1828:	f0 e0       	ldi	r31, 0x00	; 0
    182a:	81 e0       	ldi	r24, 0x01	; 1
    182c:	80 83       	st	Z, r24
	TIFR = 1<<ICF1;		/* Clear ICP flag (Input Capture flag) */
    182e:	e8 e5       	ldi	r30, 0x58	; 88
    1830:	f0 e0       	ldi	r31, 0x00	; 0
    1832:	80 e2       	ldi	r24, 0x20	; 32
    1834:	80 83       	st	Z, r24
	TIFR = 1<<TOV1;		/* Clear Timer Overflow flag */
    1836:	e8 e5       	ldi	r30, 0x58	; 88
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	84 e0       	ldi	r24, 0x04	; 4
    183c:	80 83       	st	Z, r24
	TimerOverflow = 0;	/* Clear Timer overflow count */
    183e:	10 92 69 01 	sts	0x0169, r1
    1842:	10 92 68 01 	sts	0x0168, r1

	while ((TIFR & (1 << ICF1)) == 0); /* Wait for falling edge */
    1846:	e8 e5       	ldi	r30, 0x58	; 88
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	80 81       	ld	r24, Z
    184c:	88 2f       	mov	r24, r24
    184e:	90 e0       	ldi	r25, 0x00	; 0
    1850:	80 72       	andi	r24, 0x20	; 32
    1852:	90 70       	andi	r25, 0x00	; 0
    1854:	00 97       	sbiw	r24, 0x00	; 0
    1856:	b9 f3       	breq	.-18     	; 0x1846 <main+0x2fc>
	count = ICR1 + (65535 * TimerOverflow);	/* Take value of capture register */
    1858:	e6 e4       	ldi	r30, 0x46	; 70
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	80 81       	ld	r24, Z
    185e:	91 81       	ldd	r25, Z+1	; 0x01
    1860:	7c 01       	movw	r14, r24
    1862:	00 e0       	ldi	r16, 0x00	; 0
    1864:	10 e0       	ldi	r17, 0x00	; 0
    1866:	80 91 68 01 	lds	r24, 0x0168
    186a:	90 91 69 01 	lds	r25, 0x0169
    186e:	aa 27       	eor	r26, r26
    1870:	97 fd       	sbrc	r25, 7
    1872:	a0 95       	com	r26
    1874:	ba 2f       	mov	r27, r26
    1876:	2f ef       	ldi	r18, 0xFF	; 255
    1878:	3f ef       	ldi	r19, 0xFF	; 255
    187a:	40 e0       	ldi	r20, 0x00	; 0
    187c:	50 e0       	ldi	r21, 0x00	; 0
    187e:	bc 01       	movw	r22, r24
    1880:	cd 01       	movw	r24, r26
    1882:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__mulsi3>
    1886:	dc 01       	movw	r26, r24
    1888:	cb 01       	movw	r24, r22
    188a:	8e 0d       	add	r24, r14
    188c:	9f 1d       	adc	r25, r15
    188e:	a0 1f       	adc	r26, r16
    1890:	b1 1f       	adc	r27, r17
    1892:	fe 01       	movw	r30, r28
    1894:	ef 5a       	subi	r30, 0xAF	; 175
    1896:	ff 4f       	sbci	r31, 0xFF	; 255
    1898:	80 83       	st	Z, r24
    189a:	91 83       	std	Z+1, r25	; 0x01
    189c:	a2 83       	std	Z+2, r26	; 0x02
    189e:	b3 83       	std	Z+3, r27	; 0x03
	/* 12MHz Timer freq, sound speed =343 m/s, calculation mentioned in doc. */
	distance = (double)count / 466.47;
    18a0:	fe 01       	movw	r30, r28
    18a2:	ef 5a       	subi	r30, 0xAF	; 175
    18a4:	ff 4f       	sbci	r31, 0xFF	; 255
    18a6:	60 81       	ld	r22, Z
    18a8:	71 81       	ldd	r23, Z+1	; 0x01
    18aa:	82 81       	ldd	r24, Z+2	; 0x02
    18ac:	93 81       	ldd	r25, Z+3	; 0x03
    18ae:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__floatunsisf>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	8e 01       	movw	r16, r28
    18b8:	0b 5a       	subi	r16, 0xAB	; 171
    18ba:	1f 4f       	sbci	r17, 0xFF	; 255
    18bc:	bc 01       	movw	r22, r24
    18be:	cd 01       	movw	r24, r26
    18c0:	29 e2       	ldi	r18, 0x29	; 41
    18c2:	3c e3       	ldi	r19, 0x3C	; 60
    18c4:	49 ee       	ldi	r20, 0xE9	; 233
    18c6:	53 e4       	ldi	r21, 0x43	; 67
    18c8:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    18cc:	dc 01       	movw	r26, r24
    18ce:	cb 01       	movw	r24, r22
    18d0:	f8 01       	movw	r30, r16
    18d2:	80 83       	st	Z, r24
    18d4:	91 83       	std	Z+1, r25	; 0x01
    18d6:	a2 83       	std	Z+2, r26	; 0x02
    18d8:	b3 83       	std	Z+3, r27	; 0x03


	//ULTRASONIC_voidCalculateDistance();
	if(distance>5)/*FORWARD*/
    18da:	fe 01       	movw	r30, r28
    18dc:	eb 5a       	subi	r30, 0xAB	; 171
    18de:	ff 4f       	sbci	r31, 0xFF	; 255
    18e0:	60 81       	ld	r22, Z
    18e2:	71 81       	ldd	r23, Z+1	; 0x01
    18e4:	82 81       	ldd	r24, Z+2	; 0x02
    18e6:	93 81       	ldd	r25, Z+3	; 0x03
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	40 ea       	ldi	r20, 0xA0	; 160
    18ee:	50 e4       	ldi	r21, 0x40	; 64
    18f0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    18f4:	18 16       	cp	r1, r24
    18f6:	a4 f4       	brge	.+40     	; 0x1920 <main+0x3d6>
	{
		DIO_voidSetPinValue(PORT_C,PIN_4,LOW); 	/*Motor_1___pin1A*/ /*M1 & M2 RUNNING FORWARD*/
    18f8:	82 e0       	ldi	r24, 0x02	; 2
    18fa:	64 e0       	ldi	r22, 0x04	; 4
    18fc:	40 e0       	ldi	r20, 0x00	; 0
    18fe:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_5,HIGH); /*Motor_1___pin2A*/
    1902:	82 e0       	ldi	r24, 0x02	; 2
    1904:	65 e0       	ldi	r22, 0x05	; 5
    1906:	41 e0       	ldi	r20, 0x01	; 1
    1908:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_6,HIGH); /*Motor_2___pin1B*/
    190c:	82 e0       	ldi	r24, 0x02	; 2
    190e:	66 e0       	ldi	r22, 0x06	; 6
    1910:	41 e0       	ldi	r20, 0x01	; 1
    1912:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_7,LOW);  /*Motor_2___pin2B*/
    1916:	82 e0       	ldi	r24, 0x02	; 2
    1918:	67 e0       	ldi	r22, 0x07	; 7
    191a:	40 e0       	ldi	r20, 0x00	; 0
    191c:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
	}

	//ULTRASONIC_voidCalculateDistance();
	if((distance<=5) &&(GET_BIT(PIND,3)==0) &&(GET_BIT(PIND,4)==1))/*left sensor is blocked*/
    1920:	fe 01       	movw	r30, r28
    1922:	eb 5a       	subi	r30, 0xAB	; 171
    1924:	ff 4f       	sbci	r31, 0xFF	; 255
    1926:	60 81       	ld	r22, Z
    1928:	71 81       	ldd	r23, Z+1	; 0x01
    192a:	82 81       	ldd	r24, Z+2	; 0x02
    192c:	93 81       	ldd	r25, Z+3	; 0x03
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	40 ea       	ldi	r20, 0xA0	; 160
    1934:	50 e4       	ldi	r21, 0x40	; 64
    1936:	0e 94 55 04 	call	0x8aa	; 0x8aa <__lesf2>
    193a:	18 16       	cp	r1, r24
    193c:	0c f4       	brge	.+2      	; 0x1940 <main+0x3f6>
    193e:	a1 c0       	rjmp	.+322    	; 0x1a82 <main+0x538>
    1940:	e0 e3       	ldi	r30, 0x30	; 48
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	80 81       	ld	r24, Z
    1946:	86 95       	lsr	r24
    1948:	86 95       	lsr	r24
    194a:	86 95       	lsr	r24
    194c:	88 2f       	mov	r24, r24
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	81 70       	andi	r24, 0x01	; 1
    1952:	90 70       	andi	r25, 0x00	; 0
    1954:	00 97       	sbiw	r24, 0x00	; 0
    1956:	09 f0       	breq	.+2      	; 0x195a <main+0x410>
    1958:	94 c0       	rjmp	.+296    	; 0x1a82 <main+0x538>
    195a:	e0 e3       	ldi	r30, 0x30	; 48
    195c:	f0 e0       	ldi	r31, 0x00	; 0
    195e:	80 81       	ld	r24, Z
    1960:	82 95       	swap	r24
    1962:	8f 70       	andi	r24, 0x0F	; 15
    1964:	88 2f       	mov	r24, r24
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	81 70       	andi	r24, 0x01	; 1
    196a:	90 70       	andi	r25, 0x00	; 0
    196c:	88 23       	and	r24, r24
    196e:	09 f4       	brne	.+2      	; 0x1972 <main+0x428>
    1970:	88 c0       	rjmp	.+272    	; 0x1a82 <main+0x538>
	{
		/*MOTOR RIGHT*/
		Motor_voidBackword();
    1972:	0e 94 0c 0a 	call	0x1418	; 0x1418 <Motor_voidBackword>
		DIO_voidSetPinValue(PORT_C,PIN_4,HIGH); /*M1 STOP*/
    1976:	82 e0       	ldi	r24, 0x02	; 2
    1978:	64 e0       	ldi	r22, 0x04	; 4
    197a:	41 e0       	ldi	r20, 0x01	; 1
    197c:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_5,HIGH);
    1980:	82 e0       	ldi	r24, 0x02	; 2
    1982:	65 e0       	ldi	r22, 0x05	; 5
    1984:	41 e0       	ldi	r20, 0x01	; 1
    1986:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_6,HIGH); /*M2 FORWARD*/
    198a:	82 e0       	ldi	r24, 0x02	; 2
    198c:	66 e0       	ldi	r22, 0x06	; 6
    198e:	41 e0       	ldi	r20, 0x01	; 1
    1990:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_7,LOW);
    1994:	82 e0       	ldi	r24, 0x02	; 2
    1996:	67 e0       	ldi	r22, 0x07	; 7
    1998:	40 e0       	ldi	r20, 0x00	; 0
    199a:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	aa ef       	ldi	r26, 0xFA	; 250
    19a4:	b3 e4       	ldi	r27, 0x43	; 67
    19a6:	8d ab       	std	Y+53, r24	; 0x35
    19a8:	9e ab       	std	Y+54, r25	; 0x36
    19aa:	af ab       	std	Y+55, r26	; 0x37
    19ac:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19ae:	6d a9       	ldd	r22, Y+53	; 0x35
    19b0:	7e a9       	ldd	r23, Y+54	; 0x36
    19b2:	8f a9       	ldd	r24, Y+55	; 0x37
    19b4:	98 ad       	ldd	r25, Y+56	; 0x38
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	30 e8       	ldi	r19, 0x80	; 128
    19ba:	4b e3       	ldi	r20, 0x3B	; 59
    19bc:	55 e4       	ldi	r21, 0x45	; 69
    19be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19c2:	dc 01       	movw	r26, r24
    19c4:	cb 01       	movw	r24, r22
    19c6:	89 ab       	std	Y+49, r24	; 0x31
    19c8:	9a ab       	std	Y+50, r25	; 0x32
    19ca:	ab ab       	std	Y+51, r26	; 0x33
    19cc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    19ce:	69 a9       	ldd	r22, Y+49	; 0x31
    19d0:	7a a9       	ldd	r23, Y+50	; 0x32
    19d2:	8b a9       	ldd	r24, Y+51	; 0x33
    19d4:	9c a9       	ldd	r25, Y+52	; 0x34
    19d6:	20 e0       	ldi	r18, 0x00	; 0
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	40 e8       	ldi	r20, 0x80	; 128
    19dc:	5f e3       	ldi	r21, 0x3F	; 63
    19de:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    19e2:	88 23       	and	r24, r24
    19e4:	2c f4       	brge	.+10     	; 0x19f0 <main+0x4a6>
		__ticks = 1;
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	98 ab       	std	Y+48, r25	; 0x30
    19ec:	8f a7       	std	Y+47, r24	; 0x2f
    19ee:	3f c0       	rjmp	.+126    	; 0x1a6e <main+0x524>
	else if (__tmp > 65535)
    19f0:	69 a9       	ldd	r22, Y+49	; 0x31
    19f2:	7a a9       	ldd	r23, Y+50	; 0x32
    19f4:	8b a9       	ldd	r24, Y+51	; 0x33
    19f6:	9c a9       	ldd	r25, Y+52	; 0x34
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	3f ef       	ldi	r19, 0xFF	; 255
    19fc:	4f e7       	ldi	r20, 0x7F	; 127
    19fe:	57 e4       	ldi	r21, 0x47	; 71
    1a00:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a04:	18 16       	cp	r1, r24
    1a06:	4c f5       	brge	.+82     	; 0x1a5a <main+0x510>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a08:	6d a9       	ldd	r22, Y+53	; 0x35
    1a0a:	7e a9       	ldd	r23, Y+54	; 0x36
    1a0c:	8f a9       	ldd	r24, Y+55	; 0x37
    1a0e:	98 ad       	ldd	r25, Y+56	; 0x38
    1a10:	20 e0       	ldi	r18, 0x00	; 0
    1a12:	30 e0       	ldi	r19, 0x00	; 0
    1a14:	40 e2       	ldi	r20, 0x20	; 32
    1a16:	51 e4       	ldi	r21, 0x41	; 65
    1a18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a1c:	dc 01       	movw	r26, r24
    1a1e:	cb 01       	movw	r24, r22
    1a20:	bc 01       	movw	r22, r24
    1a22:	cd 01       	movw	r24, r26
    1a24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a28:	dc 01       	movw	r26, r24
    1a2a:	cb 01       	movw	r24, r22
    1a2c:	98 ab       	std	Y+48, r25	; 0x30
    1a2e:	8f a7       	std	Y+47, r24	; 0x2f
    1a30:	0f c0       	rjmp	.+30     	; 0x1a50 <main+0x506>
    1a32:	8c e2       	ldi	r24, 0x2C	; 44
    1a34:	91 e0       	ldi	r25, 0x01	; 1
    1a36:	9e a7       	std	Y+46, r25	; 0x2e
    1a38:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a3a:	8d a5       	ldd	r24, Y+45	; 0x2d
    1a3c:	9e a5       	ldd	r25, Y+46	; 0x2e
    1a3e:	01 97       	sbiw	r24, 0x01	; 1
    1a40:	f1 f7       	brne	.-4      	; 0x1a3e <main+0x4f4>
    1a42:	9e a7       	std	Y+46, r25	; 0x2e
    1a44:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a46:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a48:	98 a9       	ldd	r25, Y+48	; 0x30
    1a4a:	01 97       	sbiw	r24, 0x01	; 1
    1a4c:	98 ab       	std	Y+48, r25	; 0x30
    1a4e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a50:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a52:	98 a9       	ldd	r25, Y+48	; 0x30
    1a54:	00 97       	sbiw	r24, 0x00	; 0
    1a56:	69 f7       	brne	.-38     	; 0x1a32 <main+0x4e8>
    1a58:	14 c0       	rjmp	.+40     	; 0x1a82 <main+0x538>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a5a:	69 a9       	ldd	r22, Y+49	; 0x31
    1a5c:	7a a9       	ldd	r23, Y+50	; 0x32
    1a5e:	8b a9       	ldd	r24, Y+51	; 0x33
    1a60:	9c a9       	ldd	r25, Y+52	; 0x34
    1a62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a66:	dc 01       	movw	r26, r24
    1a68:	cb 01       	movw	r24, r22
    1a6a:	98 ab       	std	Y+48, r25	; 0x30
    1a6c:	8f a7       	std	Y+47, r24	; 0x2f
    1a6e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1a70:	98 a9       	ldd	r25, Y+48	; 0x30
    1a72:	9c a7       	std	Y+44, r25	; 0x2c
    1a74:	8b a7       	std	Y+43, r24	; 0x2b
    1a76:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a78:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a7a:	01 97       	sbiw	r24, 0x01	; 1
    1a7c:	f1 f7       	brne	.-4      	; 0x1a7a <main+0x530>
    1a7e:	9c a7       	std	Y+44, r25	; 0x2c
    1a80:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(500);
	}

	//ULTRASONIC_voidCalculateDistance();
	if((distance<=5) &&(GET_BIT(PIND,3)==1) &&(GET_BIT(PIND,4)==0))/*right sensor is blocked*/
    1a82:	fe 01       	movw	r30, r28
    1a84:	eb 5a       	subi	r30, 0xAB	; 171
    1a86:	ff 4f       	sbci	r31, 0xFF	; 255
    1a88:	60 81       	ld	r22, Z
    1a8a:	71 81       	ldd	r23, Z+1	; 0x01
    1a8c:	82 81       	ldd	r24, Z+2	; 0x02
    1a8e:	93 81       	ldd	r25, Z+3	; 0x03
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 ea       	ldi	r20, 0xA0	; 160
    1a96:	50 e4       	ldi	r21, 0x40	; 64
    1a98:	0e 94 55 04 	call	0x8aa	; 0x8aa <__lesf2>
    1a9c:	18 16       	cp	r1, r24
    1a9e:	0c f4       	brge	.+2      	; 0x1aa2 <main+0x558>
    1aa0:	a1 c0       	rjmp	.+322    	; 0x1be4 <main+0x69a>
    1aa2:	e0 e3       	ldi	r30, 0x30	; 48
    1aa4:	f0 e0       	ldi	r31, 0x00	; 0
    1aa6:	80 81       	ld	r24, Z
    1aa8:	86 95       	lsr	r24
    1aaa:	86 95       	lsr	r24
    1aac:	86 95       	lsr	r24
    1aae:	88 2f       	mov	r24, r24
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	81 70       	andi	r24, 0x01	; 1
    1ab4:	90 70       	andi	r25, 0x00	; 0
    1ab6:	88 23       	and	r24, r24
    1ab8:	09 f4       	brne	.+2      	; 0x1abc <main+0x572>
    1aba:	94 c0       	rjmp	.+296    	; 0x1be4 <main+0x69a>
    1abc:	e0 e3       	ldi	r30, 0x30	; 48
    1abe:	f0 e0       	ldi	r31, 0x00	; 0
    1ac0:	80 81       	ld	r24, Z
    1ac2:	82 95       	swap	r24
    1ac4:	8f 70       	andi	r24, 0x0F	; 15
    1ac6:	88 2f       	mov	r24, r24
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	81 70       	andi	r24, 0x01	; 1
    1acc:	90 70       	andi	r25, 0x00	; 0
    1ace:	00 97       	sbiw	r24, 0x00	; 0
    1ad0:	09 f0       	breq	.+2      	; 0x1ad4 <main+0x58a>
    1ad2:	88 c0       	rjmp	.+272    	; 0x1be4 <main+0x69a>
	{
		/*MOTOR LEFT*/
		Motor_voidBackword();
    1ad4:	0e 94 0c 0a 	call	0x1418	; 0x1418 <Motor_voidBackword>
		DIO_voidSetPinValue(PORT_C,PIN_4,LOW); /*M1 FORWARD*/
    1ad8:	82 e0       	ldi	r24, 0x02	; 2
    1ada:	64 e0       	ldi	r22, 0x04	; 4
    1adc:	40 e0       	ldi	r20, 0x00	; 0
    1ade:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_5,HIGH);
    1ae2:	82 e0       	ldi	r24, 0x02	; 2
    1ae4:	65 e0       	ldi	r22, 0x05	; 5
    1ae6:	41 e0       	ldi	r20, 0x01	; 1
    1ae8:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_6,HIGH); /*M2 STOP*/
    1aec:	82 e0       	ldi	r24, 0x02	; 2
    1aee:	66 e0       	ldi	r22, 0x06	; 6
    1af0:	41 e0       	ldi	r20, 0x01	; 1
    1af2:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_7,HIGH);
    1af6:	82 e0       	ldi	r24, 0x02	; 2
    1af8:	67 e0       	ldi	r22, 0x07	; 7
    1afa:	41 e0       	ldi	r20, 0x01	; 1
    1afc:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
    1b00:	80 e0       	ldi	r24, 0x00	; 0
    1b02:	90 e0       	ldi	r25, 0x00	; 0
    1b04:	aa ef       	ldi	r26, 0xFA	; 250
    1b06:	b3 e4       	ldi	r27, 0x43	; 67
    1b08:	8f a3       	std	Y+39, r24	; 0x27
    1b0a:	98 a7       	std	Y+40, r25	; 0x28
    1b0c:	a9 a7       	std	Y+41, r26	; 0x29
    1b0e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b10:	6f a1       	ldd	r22, Y+39	; 0x27
    1b12:	78 a5       	ldd	r23, Y+40	; 0x28
    1b14:	89 a5       	ldd	r24, Y+41	; 0x29
    1b16:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b18:	20 e0       	ldi	r18, 0x00	; 0
    1b1a:	30 e8       	ldi	r19, 0x80	; 128
    1b1c:	4b e3       	ldi	r20, 0x3B	; 59
    1b1e:	55 e4       	ldi	r21, 0x45	; 69
    1b20:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b24:	dc 01       	movw	r26, r24
    1b26:	cb 01       	movw	r24, r22
    1b28:	8b a3       	std	Y+35, r24	; 0x23
    1b2a:	9c a3       	std	Y+36, r25	; 0x24
    1b2c:	ad a3       	std	Y+37, r26	; 0x25
    1b2e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b30:	6b a1       	ldd	r22, Y+35	; 0x23
    1b32:	7c a1       	ldd	r23, Y+36	; 0x24
    1b34:	8d a1       	ldd	r24, Y+37	; 0x25
    1b36:	9e a1       	ldd	r25, Y+38	; 0x26
    1b38:	20 e0       	ldi	r18, 0x00	; 0
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	40 e8       	ldi	r20, 0x80	; 128
    1b3e:	5f e3       	ldi	r21, 0x3F	; 63
    1b40:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1b44:	88 23       	and	r24, r24
    1b46:	2c f4       	brge	.+10     	; 0x1b52 <main+0x608>
		__ticks = 1;
    1b48:	81 e0       	ldi	r24, 0x01	; 1
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	9a a3       	std	Y+34, r25	; 0x22
    1b4e:	89 a3       	std	Y+33, r24	; 0x21
    1b50:	3f c0       	rjmp	.+126    	; 0x1bd0 <main+0x686>
	else if (__tmp > 65535)
    1b52:	6b a1       	ldd	r22, Y+35	; 0x23
    1b54:	7c a1       	ldd	r23, Y+36	; 0x24
    1b56:	8d a1       	ldd	r24, Y+37	; 0x25
    1b58:	9e a1       	ldd	r25, Y+38	; 0x26
    1b5a:	20 e0       	ldi	r18, 0x00	; 0
    1b5c:	3f ef       	ldi	r19, 0xFF	; 255
    1b5e:	4f e7       	ldi	r20, 0x7F	; 127
    1b60:	57 e4       	ldi	r21, 0x47	; 71
    1b62:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1b66:	18 16       	cp	r1, r24
    1b68:	4c f5       	brge	.+82     	; 0x1bbc <main+0x672>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b6a:	6f a1       	ldd	r22, Y+39	; 0x27
    1b6c:	78 a5       	ldd	r23, Y+40	; 0x28
    1b6e:	89 a5       	ldd	r24, Y+41	; 0x29
    1b70:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b72:	20 e0       	ldi	r18, 0x00	; 0
    1b74:	30 e0       	ldi	r19, 0x00	; 0
    1b76:	40 e2       	ldi	r20, 0x20	; 32
    1b78:	51 e4       	ldi	r21, 0x41	; 65
    1b7a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b7e:	dc 01       	movw	r26, r24
    1b80:	cb 01       	movw	r24, r22
    1b82:	bc 01       	movw	r22, r24
    1b84:	cd 01       	movw	r24, r26
    1b86:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b8a:	dc 01       	movw	r26, r24
    1b8c:	cb 01       	movw	r24, r22
    1b8e:	9a a3       	std	Y+34, r25	; 0x22
    1b90:	89 a3       	std	Y+33, r24	; 0x21
    1b92:	0f c0       	rjmp	.+30     	; 0x1bb2 <main+0x668>
    1b94:	8c e2       	ldi	r24, 0x2C	; 44
    1b96:	91 e0       	ldi	r25, 0x01	; 1
    1b98:	98 a3       	std	Y+32, r25	; 0x20
    1b9a:	8f 8f       	std	Y+31, r24	; 0x1f
    1b9c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b9e:	98 a1       	ldd	r25, Y+32	; 0x20
    1ba0:	01 97       	sbiw	r24, 0x01	; 1
    1ba2:	f1 f7       	brne	.-4      	; 0x1ba0 <main+0x656>
    1ba4:	98 a3       	std	Y+32, r25	; 0x20
    1ba6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ba8:	89 a1       	ldd	r24, Y+33	; 0x21
    1baa:	9a a1       	ldd	r25, Y+34	; 0x22
    1bac:	01 97       	sbiw	r24, 0x01	; 1
    1bae:	9a a3       	std	Y+34, r25	; 0x22
    1bb0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bb2:	89 a1       	ldd	r24, Y+33	; 0x21
    1bb4:	9a a1       	ldd	r25, Y+34	; 0x22
    1bb6:	00 97       	sbiw	r24, 0x00	; 0
    1bb8:	69 f7       	brne	.-38     	; 0x1b94 <main+0x64a>
    1bba:	14 c0       	rjmp	.+40     	; 0x1be4 <main+0x69a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bbc:	6b a1       	ldd	r22, Y+35	; 0x23
    1bbe:	7c a1       	ldd	r23, Y+36	; 0x24
    1bc0:	8d a1       	ldd	r24, Y+37	; 0x25
    1bc2:	9e a1       	ldd	r25, Y+38	; 0x26
    1bc4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bc8:	dc 01       	movw	r26, r24
    1bca:	cb 01       	movw	r24, r22
    1bcc:	9a a3       	std	Y+34, r25	; 0x22
    1bce:	89 a3       	std	Y+33, r24	; 0x21
    1bd0:	89 a1       	ldd	r24, Y+33	; 0x21
    1bd2:	9a a1       	ldd	r25, Y+34	; 0x22
    1bd4:	9e 8f       	std	Y+30, r25	; 0x1e
    1bd6:	8d 8f       	std	Y+29, r24	; 0x1d
    1bd8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bda:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1bdc:	01 97       	sbiw	r24, 0x01	; 1
    1bde:	f1 f7       	brne	.-4      	; 0x1bdc <main+0x692>
    1be0:	9e 8f       	std	Y+30, r25	; 0x1e
    1be2:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(500);

	}

	//ULTRASONIC_voidCalculateDistance();
	if((distance<=5) &&(GET_BIT(PIND,3)==0) &&(GET_BIT(PIND,4)==0))/*both sensor is open*/
    1be4:	fe 01       	movw	r30, r28
    1be6:	eb 5a       	subi	r30, 0xAB	; 171
    1be8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bea:	60 81       	ld	r22, Z
    1bec:	71 81       	ldd	r23, Z+1	; 0x01
    1bee:	82 81       	ldd	r24, Z+2	; 0x02
    1bf0:	93 81       	ldd	r25, Z+3	; 0x03
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	40 ea       	ldi	r20, 0xA0	; 160
    1bf8:	50 e4       	ldi	r21, 0x40	; 64
    1bfa:	0e 94 55 04 	call	0x8aa	; 0x8aa <__lesf2>
    1bfe:	18 16       	cp	r1, r24
    1c00:	0c f4       	brge	.+2      	; 0x1c04 <main+0x6ba>
    1c02:	a1 c0       	rjmp	.+322    	; 0x1d46 <main+0x7fc>
    1c04:	e0 e3       	ldi	r30, 0x30	; 48
    1c06:	f0 e0       	ldi	r31, 0x00	; 0
    1c08:	80 81       	ld	r24, Z
    1c0a:	86 95       	lsr	r24
    1c0c:	86 95       	lsr	r24
    1c0e:	86 95       	lsr	r24
    1c10:	88 2f       	mov	r24, r24
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	81 70       	andi	r24, 0x01	; 1
    1c16:	90 70       	andi	r25, 0x00	; 0
    1c18:	00 97       	sbiw	r24, 0x00	; 0
    1c1a:	09 f0       	breq	.+2      	; 0x1c1e <main+0x6d4>
    1c1c:	94 c0       	rjmp	.+296    	; 0x1d46 <main+0x7fc>
    1c1e:	e0 e3       	ldi	r30, 0x30	; 48
    1c20:	f0 e0       	ldi	r31, 0x00	; 0
    1c22:	80 81       	ld	r24, Z
    1c24:	82 95       	swap	r24
    1c26:	8f 70       	andi	r24, 0x0F	; 15
    1c28:	88 2f       	mov	r24, r24
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	81 70       	andi	r24, 0x01	; 1
    1c2e:	90 70       	andi	r25, 0x00	; 0
    1c30:	00 97       	sbiw	r24, 0x00	; 0
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <main+0x6ec>
    1c34:	88 c0       	rjmp	.+272    	; 0x1d46 <main+0x7fc>
	{
		/*DEFAULT_1 MOTOR LEFT*/
		Motor_voidBackword();
    1c36:	0e 94 0c 0a 	call	0x1418	; 0x1418 <Motor_voidBackword>
		DIO_voidSetPinValue(PORT_C,PIN_4,LOW); /*M1 FORWARD*/
    1c3a:	82 e0       	ldi	r24, 0x02	; 2
    1c3c:	64 e0       	ldi	r22, 0x04	; 4
    1c3e:	40 e0       	ldi	r20, 0x00	; 0
    1c40:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_5,HIGH);
    1c44:	82 e0       	ldi	r24, 0x02	; 2
    1c46:	65 e0       	ldi	r22, 0x05	; 5
    1c48:	41 e0       	ldi	r20, 0x01	; 1
    1c4a:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_6,HIGH);/*M2 STOP*/
    1c4e:	82 e0       	ldi	r24, 0x02	; 2
    1c50:	66 e0       	ldi	r22, 0x06	; 6
    1c52:	41 e0       	ldi	r20, 0x01	; 1
    1c54:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_7,HIGH);
    1c58:	82 e0       	ldi	r24, 0x02	; 2
    1c5a:	67 e0       	ldi	r22, 0x07	; 7
    1c5c:	41 e0       	ldi	r20, 0x01	; 1
    1c5e:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
    1c62:	80 e0       	ldi	r24, 0x00	; 0
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	aa ef       	ldi	r26, 0xFA	; 250
    1c68:	b3 e4       	ldi	r27, 0x43	; 67
    1c6a:	89 8f       	std	Y+25, r24	; 0x19
    1c6c:	9a 8f       	std	Y+26, r25	; 0x1a
    1c6e:	ab 8f       	std	Y+27, r26	; 0x1b
    1c70:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c72:	69 8d       	ldd	r22, Y+25	; 0x19
    1c74:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c7a:	20 e0       	ldi	r18, 0x00	; 0
    1c7c:	30 e8       	ldi	r19, 0x80	; 128
    1c7e:	4b e3       	ldi	r20, 0x3B	; 59
    1c80:	55 e4       	ldi	r21, 0x45	; 69
    1c82:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c86:	dc 01       	movw	r26, r24
    1c88:	cb 01       	movw	r24, r22
    1c8a:	8d 8b       	std	Y+21, r24	; 0x15
    1c8c:	9e 8b       	std	Y+22, r25	; 0x16
    1c8e:	af 8b       	std	Y+23, r26	; 0x17
    1c90:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c92:	6d 89       	ldd	r22, Y+21	; 0x15
    1c94:	7e 89       	ldd	r23, Y+22	; 0x16
    1c96:	8f 89       	ldd	r24, Y+23	; 0x17
    1c98:	98 8d       	ldd	r25, Y+24	; 0x18
    1c9a:	20 e0       	ldi	r18, 0x00	; 0
    1c9c:	30 e0       	ldi	r19, 0x00	; 0
    1c9e:	40 e8       	ldi	r20, 0x80	; 128
    1ca0:	5f e3       	ldi	r21, 0x3F	; 63
    1ca2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ca6:	88 23       	and	r24, r24
    1ca8:	2c f4       	brge	.+10     	; 0x1cb4 <main+0x76a>
		__ticks = 1;
    1caa:	81 e0       	ldi	r24, 0x01	; 1
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	9c 8b       	std	Y+20, r25	; 0x14
    1cb0:	8b 8b       	std	Y+19, r24	; 0x13
    1cb2:	3f c0       	rjmp	.+126    	; 0x1d32 <main+0x7e8>
	else if (__tmp > 65535)
    1cb4:	6d 89       	ldd	r22, Y+21	; 0x15
    1cb6:	7e 89       	ldd	r23, Y+22	; 0x16
    1cb8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cba:	98 8d       	ldd	r25, Y+24	; 0x18
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	3f ef       	ldi	r19, 0xFF	; 255
    1cc0:	4f e7       	ldi	r20, 0x7F	; 127
    1cc2:	57 e4       	ldi	r21, 0x47	; 71
    1cc4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1cc8:	18 16       	cp	r1, r24
    1cca:	4c f5       	brge	.+82     	; 0x1d1e <main+0x7d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ccc:	69 8d       	ldd	r22, Y+25	; 0x19
    1cce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1cd0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1cd2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1cd4:	20 e0       	ldi	r18, 0x00	; 0
    1cd6:	30 e0       	ldi	r19, 0x00	; 0
    1cd8:	40 e2       	ldi	r20, 0x20	; 32
    1cda:	51 e4       	ldi	r21, 0x41	; 65
    1cdc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ce0:	dc 01       	movw	r26, r24
    1ce2:	cb 01       	movw	r24, r22
    1ce4:	bc 01       	movw	r22, r24
    1ce6:	cd 01       	movw	r24, r26
    1ce8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cec:	dc 01       	movw	r26, r24
    1cee:	cb 01       	movw	r24, r22
    1cf0:	9c 8b       	std	Y+20, r25	; 0x14
    1cf2:	8b 8b       	std	Y+19, r24	; 0x13
    1cf4:	0f c0       	rjmp	.+30     	; 0x1d14 <main+0x7ca>
    1cf6:	8c e2       	ldi	r24, 0x2C	; 44
    1cf8:	91 e0       	ldi	r25, 0x01	; 1
    1cfa:	9a 8b       	std	Y+18, r25	; 0x12
    1cfc:	89 8b       	std	Y+17, r24	; 0x11
    1cfe:	89 89       	ldd	r24, Y+17	; 0x11
    1d00:	9a 89       	ldd	r25, Y+18	; 0x12
    1d02:	01 97       	sbiw	r24, 0x01	; 1
    1d04:	f1 f7       	brne	.-4      	; 0x1d02 <main+0x7b8>
    1d06:	9a 8b       	std	Y+18, r25	; 0x12
    1d08:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d0a:	8b 89       	ldd	r24, Y+19	; 0x13
    1d0c:	9c 89       	ldd	r25, Y+20	; 0x14
    1d0e:	01 97       	sbiw	r24, 0x01	; 1
    1d10:	9c 8b       	std	Y+20, r25	; 0x14
    1d12:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d14:	8b 89       	ldd	r24, Y+19	; 0x13
    1d16:	9c 89       	ldd	r25, Y+20	; 0x14
    1d18:	00 97       	sbiw	r24, 0x00	; 0
    1d1a:	69 f7       	brne	.-38     	; 0x1cf6 <main+0x7ac>
    1d1c:	14 c0       	rjmp	.+40     	; 0x1d46 <main+0x7fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d1e:	6d 89       	ldd	r22, Y+21	; 0x15
    1d20:	7e 89       	ldd	r23, Y+22	; 0x16
    1d22:	8f 89       	ldd	r24, Y+23	; 0x17
    1d24:	98 8d       	ldd	r25, Y+24	; 0x18
    1d26:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d2a:	dc 01       	movw	r26, r24
    1d2c:	cb 01       	movw	r24, r22
    1d2e:	9c 8b       	std	Y+20, r25	; 0x14
    1d30:	8b 8b       	std	Y+19, r24	; 0x13
    1d32:	8b 89       	ldd	r24, Y+19	; 0x13
    1d34:	9c 89       	ldd	r25, Y+20	; 0x14
    1d36:	98 8b       	std	Y+16, r25	; 0x10
    1d38:	8f 87       	std	Y+15, r24	; 0x0f
    1d3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1d3c:	98 89       	ldd	r25, Y+16	; 0x10
    1d3e:	01 97       	sbiw	r24, 0x01	; 1
    1d40:	f1 f7       	brne	.-4      	; 0x1d3e <main+0x7f4>
    1d42:	98 8b       	std	Y+16, r25	; 0x10
    1d44:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(500);

	}

	//ULTRASONIC_voidCalculateDistance();
	if((distance<=5) &&(GET_BIT(PIND,3)==1) &&(GET_BIT(PIND,4)==1))/*both sensor is blocked*/
    1d46:	fe 01       	movw	r30, r28
    1d48:	eb 5a       	subi	r30, 0xAB	; 171
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	60 81       	ld	r22, Z
    1d4e:	71 81       	ldd	r23, Z+1	; 0x01
    1d50:	82 81       	ldd	r24, Z+2	; 0x02
    1d52:	93 81       	ldd	r25, Z+3	; 0x03
    1d54:	20 e0       	ldi	r18, 0x00	; 0
    1d56:	30 e0       	ldi	r19, 0x00	; 0
    1d58:	40 ea       	ldi	r20, 0xA0	; 160
    1d5a:	50 e4       	ldi	r21, 0x40	; 64
    1d5c:	0e 94 55 04 	call	0x8aa	; 0x8aa <__lesf2>
    1d60:	18 16       	cp	r1, r24
    1d62:	0c f4       	brge	.+2      	; 0x1d66 <main+0x81c>
    1d64:	41 cc       	rjmp	.-1918   	; 0x15e8 <main+0x9e>
    1d66:	e0 e3       	ldi	r30, 0x30	; 48
    1d68:	f0 e0       	ldi	r31, 0x00	; 0
    1d6a:	80 81       	ld	r24, Z
    1d6c:	86 95       	lsr	r24
    1d6e:	86 95       	lsr	r24
    1d70:	86 95       	lsr	r24
    1d72:	88 2f       	mov	r24, r24
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	81 70       	andi	r24, 0x01	; 1
    1d78:	90 70       	andi	r25, 0x00	; 0
    1d7a:	88 23       	and	r24, r24
    1d7c:	09 f4       	brne	.+2      	; 0x1d80 <main+0x836>
    1d7e:	34 cc       	rjmp	.-1944   	; 0x15e8 <main+0x9e>
    1d80:	e0 e3       	ldi	r30, 0x30	; 48
    1d82:	f0 e0       	ldi	r31, 0x00	; 0
    1d84:	80 81       	ld	r24, Z
    1d86:	82 95       	swap	r24
    1d88:	8f 70       	andi	r24, 0x0F	; 15
    1d8a:	88 2f       	mov	r24, r24
    1d8c:	90 e0       	ldi	r25, 0x00	; 0
    1d8e:	81 70       	andi	r24, 0x01	; 1
    1d90:	90 70       	andi	r25, 0x00	; 0
    1d92:	88 23       	and	r24, r24
    1d94:	09 f4       	brne	.+2      	; 0x1d98 <main+0x84e>
    1d96:	28 cc       	rjmp	.-1968   	; 0x15e8 <main+0x9e>
	{
		/*DEFAULT_1 REVERSE TO RIGHT*/
		Motor_voidBackword();
    1d98:	0e 94 0c 0a 	call	0x1418	; 0x1418 <Motor_voidBackword>
		DIO_voidSetPinValue(PORT_C,PIN_4,HIGH); /*M1 REVERSE*/
    1d9c:	82 e0       	ldi	r24, 0x02	; 2
    1d9e:	64 e0       	ldi	r22, 0x04	; 4
    1da0:	41 e0       	ldi	r20, 0x01	; 1
    1da2:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_5,LOW);
    1da6:	82 e0       	ldi	r24, 0x02	; 2
    1da8:	65 e0       	ldi	r22, 0x05	; 5
    1daa:	40 e0       	ldi	r20, 0x00	; 0
    1dac:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_6,HIGH); /*M2 STOP*/
    1db0:	82 e0       	ldi	r24, 0x02	; 2
    1db2:	66 e0       	ldi	r22, 0x06	; 6
    1db4:	41 e0       	ldi	r20, 0x01	; 1
    1db6:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
		DIO_voidSetPinValue(PORT_C,PIN_7,HIGH);
    1dba:	82 e0       	ldi	r24, 0x02	; 2
    1dbc:	67 e0       	ldi	r22, 0x07	; 7
    1dbe:	41 e0       	ldi	r20, 0x01	; 1
    1dc0:	0e 94 2a 08 	call	0x1054	; 0x1054 <DIO_voidSetPinValue>
    1dc4:	80 e0       	ldi	r24, 0x00	; 0
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	aa e7       	ldi	r26, 0x7A	; 122
    1dca:	b4 e4       	ldi	r27, 0x44	; 68
    1dcc:	8b 87       	std	Y+11, r24	; 0x0b
    1dce:	9c 87       	std	Y+12, r25	; 0x0c
    1dd0:	ad 87       	std	Y+13, r26	; 0x0d
    1dd2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dd4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1dd6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1dd8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dda:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e8       	ldi	r19, 0x80	; 128
    1de0:	4b e3       	ldi	r20, 0x3B	; 59
    1de2:	55 e4       	ldi	r21, 0x45	; 69
    1de4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1de8:	dc 01       	movw	r26, r24
    1dea:	cb 01       	movw	r24, r22
    1dec:	8f 83       	std	Y+7, r24	; 0x07
    1dee:	98 87       	std	Y+8, r25	; 0x08
    1df0:	a9 87       	std	Y+9, r26	; 0x09
    1df2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1df4:	6f 81       	ldd	r22, Y+7	; 0x07
    1df6:	78 85       	ldd	r23, Y+8	; 0x08
    1df8:	89 85       	ldd	r24, Y+9	; 0x09
    1dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dfc:	20 e0       	ldi	r18, 0x00	; 0
    1dfe:	30 e0       	ldi	r19, 0x00	; 0
    1e00:	40 e8       	ldi	r20, 0x80	; 128
    1e02:	5f e3       	ldi	r21, 0x3F	; 63
    1e04:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1e08:	88 23       	and	r24, r24
    1e0a:	2c f4       	brge	.+10     	; 0x1e16 <main+0x8cc>
		__ticks = 1;
    1e0c:	81 e0       	ldi	r24, 0x01	; 1
    1e0e:	90 e0       	ldi	r25, 0x00	; 0
    1e10:	9e 83       	std	Y+6, r25	; 0x06
    1e12:	8d 83       	std	Y+5, r24	; 0x05
    1e14:	3f c0       	rjmp	.+126    	; 0x1e94 <main+0x94a>
	else if (__tmp > 65535)
    1e16:	6f 81       	ldd	r22, Y+7	; 0x07
    1e18:	78 85       	ldd	r23, Y+8	; 0x08
    1e1a:	89 85       	ldd	r24, Y+9	; 0x09
    1e1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e1e:	20 e0       	ldi	r18, 0x00	; 0
    1e20:	3f ef       	ldi	r19, 0xFF	; 255
    1e22:	4f e7       	ldi	r20, 0x7F	; 127
    1e24:	57 e4       	ldi	r21, 0x47	; 71
    1e26:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1e2a:	18 16       	cp	r1, r24
    1e2c:	4c f5       	brge	.+82     	; 0x1e80 <main+0x936>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e30:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e32:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	40 e2       	ldi	r20, 0x20	; 32
    1e3c:	51 e4       	ldi	r21, 0x41	; 65
    1e3e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e42:	dc 01       	movw	r26, r24
    1e44:	cb 01       	movw	r24, r22
    1e46:	bc 01       	movw	r22, r24
    1e48:	cd 01       	movw	r24, r26
    1e4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e4e:	dc 01       	movw	r26, r24
    1e50:	cb 01       	movw	r24, r22
    1e52:	9e 83       	std	Y+6, r25	; 0x06
    1e54:	8d 83       	std	Y+5, r24	; 0x05
    1e56:	0f c0       	rjmp	.+30     	; 0x1e76 <main+0x92c>
    1e58:	8c e2       	ldi	r24, 0x2C	; 44
    1e5a:	91 e0       	ldi	r25, 0x01	; 1
    1e5c:	9c 83       	std	Y+4, r25	; 0x04
    1e5e:	8b 83       	std	Y+3, r24	; 0x03
    1e60:	8b 81       	ldd	r24, Y+3	; 0x03
    1e62:	9c 81       	ldd	r25, Y+4	; 0x04
    1e64:	01 97       	sbiw	r24, 0x01	; 1
    1e66:	f1 f7       	brne	.-4      	; 0x1e64 <main+0x91a>
    1e68:	9c 83       	std	Y+4, r25	; 0x04
    1e6a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1e6e:	9e 81       	ldd	r25, Y+6	; 0x06
    1e70:	01 97       	sbiw	r24, 0x01	; 1
    1e72:	9e 83       	std	Y+6, r25	; 0x06
    1e74:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e76:	8d 81       	ldd	r24, Y+5	; 0x05
    1e78:	9e 81       	ldd	r25, Y+6	; 0x06
    1e7a:	00 97       	sbiw	r24, 0x00	; 0
    1e7c:	69 f7       	brne	.-38     	; 0x1e58 <main+0x90e>
    1e7e:	b4 cb       	rjmp	.-2200   	; 0x15e8 <main+0x9e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e80:	6f 81       	ldd	r22, Y+7	; 0x07
    1e82:	78 85       	ldd	r23, Y+8	; 0x08
    1e84:	89 85       	ldd	r24, Y+9	; 0x09
    1e86:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e88:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e8c:	dc 01       	movw	r26, r24
    1e8e:	cb 01       	movw	r24, r22
    1e90:	9e 83       	std	Y+6, r25	; 0x06
    1e92:	8d 83       	std	Y+5, r24	; 0x05
    1e94:	8d 81       	ldd	r24, Y+5	; 0x05
    1e96:	9e 81       	ldd	r25, Y+6	; 0x06
    1e98:	9a 83       	std	Y+2, r25	; 0x02
    1e9a:	89 83       	std	Y+1, r24	; 0x01
    1e9c:	89 81       	ldd	r24, Y+1	; 0x01
    1e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1ea0:	01 97       	sbiw	r24, 0x01	; 1
    1ea2:	f1 f7       	brne	.-4      	; 0x1ea0 <main+0x956>
    1ea4:	9a 83       	std	Y+2, r25	; 0x02
    1ea6:	89 83       	std	Y+1, r24	; 0x01
    1ea8:	9f cb       	rjmp	.-2242   	; 0x15e8 <main+0x9e>

00001eaa <__vector_9>:
}



ISR(TIMER1_OVF_vect)
{
    1eaa:	1f 92       	push	r1
    1eac:	0f 92       	push	r0
    1eae:	0f b6       	in	r0, 0x3f	; 63
    1eb0:	0f 92       	push	r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	8f 93       	push	r24
    1eb6:	9f 93       	push	r25
    1eb8:	df 93       	push	r29
    1eba:	cf 93       	push	r28
    1ebc:	cd b7       	in	r28, 0x3d	; 61
    1ebe:	de b7       	in	r29, 0x3e	; 62
	TimerOverflow++;		/* Increment Timer Overflow count */
    1ec0:	80 91 68 01 	lds	r24, 0x0168
    1ec4:	90 91 69 01 	lds	r25, 0x0169
    1ec8:	01 96       	adiw	r24, 0x01	; 1
    1eca:	90 93 69 01 	sts	0x0169, r25
    1ece:	80 93 68 01 	sts	0x0168, r24
}
    1ed2:	cf 91       	pop	r28
    1ed4:	df 91       	pop	r29
    1ed6:	9f 91       	pop	r25
    1ed8:	8f 91       	pop	r24
    1eda:	0f 90       	pop	r0
    1edc:	0f be       	out	0x3f, r0	; 63
    1ede:	0f 90       	pop	r0
    1ee0:	1f 90       	pop	r1
    1ee2:	18 95       	reti

00001ee4 <__mulsi3>:
    1ee4:	62 9f       	mul	r22, r18
    1ee6:	d0 01       	movw	r26, r0
    1ee8:	73 9f       	mul	r23, r19
    1eea:	f0 01       	movw	r30, r0
    1eec:	82 9f       	mul	r24, r18
    1eee:	e0 0d       	add	r30, r0
    1ef0:	f1 1d       	adc	r31, r1
    1ef2:	64 9f       	mul	r22, r20
    1ef4:	e0 0d       	add	r30, r0
    1ef6:	f1 1d       	adc	r31, r1
    1ef8:	92 9f       	mul	r25, r18
    1efa:	f0 0d       	add	r31, r0
    1efc:	83 9f       	mul	r24, r19
    1efe:	f0 0d       	add	r31, r0
    1f00:	74 9f       	mul	r23, r20
    1f02:	f0 0d       	add	r31, r0
    1f04:	65 9f       	mul	r22, r21
    1f06:	f0 0d       	add	r31, r0
    1f08:	99 27       	eor	r25, r25
    1f0a:	72 9f       	mul	r23, r18
    1f0c:	b0 0d       	add	r27, r0
    1f0e:	e1 1d       	adc	r30, r1
    1f10:	f9 1f       	adc	r31, r25
    1f12:	63 9f       	mul	r22, r19
    1f14:	b0 0d       	add	r27, r0
    1f16:	e1 1d       	adc	r30, r1
    1f18:	f9 1f       	adc	r31, r25
    1f1a:	bd 01       	movw	r22, r26
    1f1c:	cf 01       	movw	r24, r30
    1f1e:	11 24       	eor	r1, r1
    1f20:	08 95       	ret

00001f22 <__prologue_saves__>:
    1f22:	2f 92       	push	r2
    1f24:	3f 92       	push	r3
    1f26:	4f 92       	push	r4
    1f28:	5f 92       	push	r5
    1f2a:	6f 92       	push	r6
    1f2c:	7f 92       	push	r7
    1f2e:	8f 92       	push	r8
    1f30:	9f 92       	push	r9
    1f32:	af 92       	push	r10
    1f34:	bf 92       	push	r11
    1f36:	cf 92       	push	r12
    1f38:	df 92       	push	r13
    1f3a:	ef 92       	push	r14
    1f3c:	ff 92       	push	r15
    1f3e:	0f 93       	push	r16
    1f40:	1f 93       	push	r17
    1f42:	cf 93       	push	r28
    1f44:	df 93       	push	r29
    1f46:	cd b7       	in	r28, 0x3d	; 61
    1f48:	de b7       	in	r29, 0x3e	; 62
    1f4a:	ca 1b       	sub	r28, r26
    1f4c:	db 0b       	sbc	r29, r27
    1f4e:	0f b6       	in	r0, 0x3f	; 63
    1f50:	f8 94       	cli
    1f52:	de bf       	out	0x3e, r29	; 62
    1f54:	0f be       	out	0x3f, r0	; 63
    1f56:	cd bf       	out	0x3d, r28	; 61
    1f58:	09 94       	ijmp

00001f5a <__epilogue_restores__>:
    1f5a:	2a 88       	ldd	r2, Y+18	; 0x12
    1f5c:	39 88       	ldd	r3, Y+17	; 0x11
    1f5e:	48 88       	ldd	r4, Y+16	; 0x10
    1f60:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f62:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f64:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f66:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f68:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f6a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f6c:	b9 84       	ldd	r11, Y+9	; 0x09
    1f6e:	c8 84       	ldd	r12, Y+8	; 0x08
    1f70:	df 80       	ldd	r13, Y+7	; 0x07
    1f72:	ee 80       	ldd	r14, Y+6	; 0x06
    1f74:	fd 80       	ldd	r15, Y+5	; 0x05
    1f76:	0c 81       	ldd	r16, Y+4	; 0x04
    1f78:	1b 81       	ldd	r17, Y+3	; 0x03
    1f7a:	aa 81       	ldd	r26, Y+2	; 0x02
    1f7c:	b9 81       	ldd	r27, Y+1	; 0x01
    1f7e:	ce 0f       	add	r28, r30
    1f80:	d1 1d       	adc	r29, r1
    1f82:	0f b6       	in	r0, 0x3f	; 63
    1f84:	f8 94       	cli
    1f86:	de bf       	out	0x3e, r29	; 62
    1f88:	0f be       	out	0x3f, r0	; 63
    1f8a:	cd bf       	out	0x3d, r28	; 61
    1f8c:	ed 01       	movw	r28, r26
    1f8e:	08 95       	ret

00001f90 <_exit>:
    1f90:	f8 94       	cli

00001f92 <__stop_program>:
    1f92:	ff cf       	rjmp	.-2      	; 0x1f92 <__stop_program>
